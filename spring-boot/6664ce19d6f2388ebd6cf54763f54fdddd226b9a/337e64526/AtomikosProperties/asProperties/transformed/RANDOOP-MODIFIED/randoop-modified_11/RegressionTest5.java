import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test02501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02501");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setConsoleFileLimit(97);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test02502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02502");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        int int7 = atomikosProperties0.getConsoleFileLimit();
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setMaxTimeout(0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test02503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02503");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.checkpointInterval = 300000L;
        long long12 = atomikosProperties0.maxTimeout;
        atomikosProperties0.logBaseDir = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNull(atomikosLoggingLevel15);
    }

    @Test
    public void test02504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02504");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = atomikosProperties0.consoleFileCount;
        atomikosProperties0.setDefaultJtaTimeout((long) 100);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test02505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02505");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties6.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long29 = atomikosProperties28.checkpointInterval;
        atomikosProperties28.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setDelay((long) (short) 0);
        recovery32.maxRetries = (short) -1;
        long long39 = recovery32.retryInterval;
        recovery32.setMaxRetries(0);
        boolean boolean42 = properties6.remove((java.lang.Object) "{}", (java.lang.Object) recovery32);
        properties6.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long45 = recovery44.getRetryInterval();
        long long46 = recovery44.getDelay();
        recovery44.setMaxRetries(35);
        long long49 = recovery44.getDelay();
        recovery44.delay = (-1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((-1L));
        int int55 = atomikosProperties52.getConsoleFileLimit();
        int int56 = atomikosProperties52.maxActives;
        java.util.Properties properties57 = atomikosProperties52.asProperties();
        java.lang.String str58 = atomikosProperties52.getConsoleFileName();
        java.lang.String str59 = atomikosProperties52.logBaseName;
        java.lang.Object obj60 = properties6.getOrDefault((java.lang.Object) (-1L), (java.lang.Object) str59);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tm.out" + "'", str58, "tm.out");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertEquals("'" + obj60 + "' != '" + "tmlog" + "'", obj60, "tmlog");
    }

    @Test
    public void test02506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02506");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        boolean boolean8 = properties1.isEmpty();
        boolean boolean9 = properties1.isEmpty();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        boolean boolean13 = properties11.isEmpty();
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.lang.String str16 = properties11.getProperty("");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = null;
        boolean boolean26 = properties17.equals(obj25);
        java.util.Set<java.lang.Object> objSet27 = properties17.keySet();
        boolean boolean28 = properties11.contains((java.lang.Object) properties17);
        java.lang.Object obj29 = properties1.remove((java.lang.Object) properties17);
        java.util.Properties properties30 = new java.util.Properties(properties17);
        java.lang.String str33 = properties30.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}", "");
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test02507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02507");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.transactionManagerUniqueName = "{true=10000}";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery5 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertNotNull(recovery5);
    }

    @Test
    public void test02508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02508");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        boolean boolean4 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setCheckpointInterval((long) 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test02509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02509");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseName;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str9 = atomikosProperties0.getOutputDir();
        boolean boolean10 = atomikosProperties0.allowSubTransactions;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test02510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02510");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = (short) -1;
        recovery0.setForgetOrphanedLogEntriesDelay(500L);
        long long9 = recovery0.delay;
        long long10 = recovery0.forgetOrphanedLogEntriesDelay;
        long long11 = recovery0.retryInterval;
        int int12 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test02511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02511");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.consoleFileCount = 0;
        long long10 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        boolean boolean13 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean14 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test02512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02512");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.service = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.getRecovery();
        atomikosProperties0.setConsoleFileLimit(0);
        atomikosProperties0.maxTimeout = 35;
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNotNull(recovery15);
        org.junit.Assert.assertNotNull(properties20);
    }

    @Test
    public void test02513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02513");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.get((java.lang.Object) 0.0d);
        java.lang.Object obj17 = properties14.clone();
        java.lang.String str18 = properties14.toString();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Collection<java.lang.Object> objCollection21 = properties19.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = null;
        atomikosProperties22.consoleLogLevel = atomikosLoggingLevel25;
        boolean boolean27 = atomikosProperties22.enableLogging;
        atomikosProperties22.logBaseDir = "{}";
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.Object obj33 = properties13.putIfAbsent((java.lang.Object) properties19, (java.lang.Object) atomikosProperties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        atomikosProperties34.service = "";
        java.lang.String str42 = atomikosProperties34.logBaseDir;
        boolean boolean43 = atomikosProperties34.threadedTwoPhaseCommit;
        java.lang.String str44 = atomikosProperties34.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties34.consoleLogLevel;
        boolean boolean46 = properties13.containsValue((java.lang.Object) atomikosLoggingLevel45);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties13.entrySet();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEntrySet47);
    }

    @Test
    public void test02514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02514");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        java.lang.String str14 = atomikosProperties0.getConsoleFileName();
        java.lang.String str15 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
    }

    @Test
    public void test02515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02515");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setMaxActives((int) (byte) -1);
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long19 = atomikosProperties0.maxTimeout;
        boolean boolean20 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.checkpointInterval = (short) 100;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test02516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02516");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.service = "";
        java.lang.String str19 = atomikosProperties11.logBaseDir;
        boolean boolean20 = atomikosProperties11.threadedTwoPhaseCommit;
        long long21 = atomikosProperties11.checkpointInterval;
        atomikosProperties11.setTransactionManagerUniqueName("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel24);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02517");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = atomikosProperties43.recovery;
        atomikosProperties43.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        long long63 = atomikosProperties43.maxTimeout;
        int int64 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.forceShutdownOnVmExit = true;
        boolean boolean67 = atomikosProperties43.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery60);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 300000L + "'", long63 == 300000L);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test02518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02518");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test02519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02519");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.util.Properties properties13 = new java.util.Properties(properties1);
        java.util.Set<java.lang.Object> objSet14 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery15.maxRetries = (-1);
        recovery15.setDelay((long) (short) 0);
        recovery15.maxRetries = 0;
        recovery15.setMaxRetries((int) '#');
        long long24 = recovery15.retryInterval;
        long long25 = recovery15.getForgetOrphanedLogEntriesDelay();
        recovery15.setMaxRetries(0);
        recovery15.forgetOrphanedLogEntriesDelay = 18;
        boolean boolean30 = properties1.contains((java.lang.Object) recovery15);
        recovery15.setRetryInterval((long) 1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test02520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02520");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "hi!";
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.maxActives = (-1);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.consoleLogLevel;
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02521");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj5 = properties0.clone();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Collection<java.lang.Object> objCollection8 = properties6.values();
        int int9 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties6.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.enableLogging = true;
        long long19 = atomikosProperties16.getCheckpointInterval();
        boolean boolean21 = properties14.remove((java.lang.Object) long19, (java.lang.Object) (byte) 100);
        java.lang.String str22 = properties14.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        long long28 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        atomikosProperties23.set(properties29, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.get((java.lang.Object) 0.0d);
        java.lang.Object obj37 = properties34.clone();
        java.lang.String str38 = properties34.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        long long44 = atomikosProperties39.getMaxTimeout();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet46 = properties45.keySet();
        atomikosProperties39.set(properties45, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj52 = properties45.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((-1L));
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.get((java.lang.Object) 0.0d);
        java.lang.Object obj59 = properties56.clone();
        boolean boolean61 = properties45.replace((java.lang.Object) (-1L), obj59, (java.lang.Object) 100.0d);
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Properties properties63 = new java.util.Properties(properties62);
        properties63.clear();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.logBaseDir = "";
        atomikosProperties66.setConsoleFileCount((int) (short) 10);
        long long71 = atomikosProperties66.getMaxTimeout();
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet73 = properties72.keySet();
        atomikosProperties66.set(properties72, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str77 = atomikosProperties66.logBaseDir;
        java.lang.String str78 = atomikosProperties66.logBaseDir;
        java.util.Properties properties79 = atomikosProperties66.asProperties();
        java.lang.Object obj80 = properties34.replace((java.lang.Object) properties63, (java.lang.Object) atomikosProperties66);
        boolean boolean81 = properties29.contains((java.lang.Object) atomikosProperties66);
        boolean boolean82 = properties14.containsValue((java.lang.Object) properties29);
        boolean boolean83 = properties6.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel12, (java.lang.Object) boolean82);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet84 = properties6.entrySet();
        java.lang.String str86 = properties6.getProperty("");
        java.util.Properties properties87 = new java.util.Properties();
        java.lang.Object obj89 = properties87.get((java.lang.Object) 0.0d);
        java.lang.Object obj90 = properties87.clone();
        java.lang.String str91 = properties87.toString();
        java.util.Properties properties92 = new java.util.Properties(properties87);
        java.util.Properties properties93 = new java.util.Properties(properties92);
        java.util.Properties properties94 = new java.util.Properties(properties93);
        boolean boolean95 = properties6.contains((java.lang.Object) properties93);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        java.util.Enumeration<?> wildcardEnumeration97 = properties6.propertyNames();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 500L + "'", long19 == 500L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "{}" + "'", str38, "{}");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEntrySet84);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(obj90);
        org.junit.Assert.assertEquals(obj90.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj90), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj90), "{}");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{}" + "'", str91, "{}");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration97);
    }

    @Test
    public void test02522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02522");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        java.lang.Object obj4 = properties1.clone();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "{}");
    }

    @Test
    public void test02523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02523");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream9, "hi!", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test02524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02524");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.maxTimeout = 100;
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.maxTimeout = ' ';
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties0.setConsoleFileLimit(5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02525");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        boolean boolean41 = atomikosProperties29.enableLogging;
        int int42 = atomikosProperties29.maxActives;
        boolean boolean43 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.maxActives = 35;
        java.lang.Object obj54 = properties24.getOrDefault((java.lang.Object) boolean43, (java.lang.Object) 35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        java.lang.String str60 = atomikosProperties55.logBaseName;
        java.lang.String str61 = atomikosProperties55.logBaseDir;
        java.lang.String str62 = atomikosProperties55.getOutputDir();
        java.util.Properties properties63 = atomikosProperties55.asProperties();
        java.util.Collection<java.lang.Object> objCollection64 = properties63.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties63.entrySet();
        java.lang.String str67 = properties63.getProperty("{com.atomikos.icatch.hi!=-1.0}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((-1L));
        int int71 = atomikosProperties68.getConsoleFileLimit();
        java.util.Properties properties72 = atomikosProperties68.asProperties();
        boolean boolean73 = atomikosProperties68.forceShutdownOnVmExit;
        boolean boolean74 = atomikosProperties68.forceShutdownOnVmExit;
        atomikosProperties68.setOutputDir("tmlog");
        atomikosProperties68.setCheckpointInterval((long) (-1));
        java.util.Properties properties79 = atomikosProperties68.asProperties();
        boolean boolean80 = properties24.remove((java.lang.Object) "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) atomikosProperties68);
        java.io.OutputStream outputStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.storeToXML(outputStream81, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 35 + "'", obj54, 35);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test02526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02526");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        int int18 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str19 = atomikosProperties0.getOutputDir();
        boolean boolean20 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str19, "{com.atomikos.icatch.hi!=-1.0}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test02527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02527");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        atomikosProperties0.logBaseName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        long long16 = atomikosProperties13.getCheckpointInterval();
        java.lang.String str17 = atomikosProperties13.getService();
        java.lang.String str18 = atomikosProperties13.logBaseDir;
        atomikosProperties13.setEnableLogging(false);
        atomikosProperties13.consoleFileCount = 0;
        long long23 = atomikosProperties13.getMaxTimeout();
        boolean boolean24 = atomikosProperties13.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties13.consoleLogLevel;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        java.util.Properties properties27 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties27.storeToXML(outputStream28, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties27);
    }

    @Test
    public void test02528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02528");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.lang.String str6 = properties1.getProperty("");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.get((java.lang.Object) 0.0d);
        java.lang.Object obj10 = properties7.clone();
        java.lang.String str11 = properties7.toString();
        boolean boolean14 = properties7.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj15 = null;
        boolean boolean16 = properties7.equals(obj15);
        java.util.Set<java.lang.Object> objSet17 = properties7.keySet();
        boolean boolean18 = properties1.contains((java.lang.Object) properties7);
        java.util.Properties properties19 = new java.util.Properties(properties7);
        java.io.Writer writer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(writer20, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02529");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        boolean boolean22 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.allowSubTransactions = false;
        boolean boolean25 = atomikosProperties19.serialJtaTransactions;
        boolean boolean26 = properties0.containsKey((java.lang.Object) boolean25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getConsoleFileCount();
        int int38 = atomikosProperties36.maxActives;
        atomikosProperties36.setConsoleFileName("");
        atomikosProperties36.transactionManagerUniqueName = "{}";
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        boolean boolean44 = atomikosProperties36.threadedTwoPhaseCommit;
        atomikosProperties36.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int48 = atomikosProperties47.getConsoleFileCount();
        int int49 = atomikosProperties47.maxActives;
        atomikosProperties47.setConsoleFileName("");
        atomikosProperties47.transactionManagerUniqueName = "{}";
        atomikosProperties47.setMaxActives(0);
        boolean boolean56 = atomikosProperties47.forceShutdownOnVmExit;
        java.lang.Object obj57 = properties34.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.logBaseDir = "";
        boolean boolean61 = atomikosProperties58.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = atomikosProperties58.getRecovery();
        boolean boolean63 = properties34.contains((java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int65 = atomikosProperties64.getConsoleFileCount();
        int int66 = atomikosProperties64.maxActives;
        int int67 = atomikosProperties64.getMaxActives();
        boolean boolean68 = properties0.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) int67);
        int int69 = atomikosProperties58.getConsoleFileLimit();
        atomikosProperties58.service = "hi!";
        atomikosProperties58.logBaseDir = "tmlog";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.logBaseDir = "";
        atomikosProperties74.setConsoleFileCount((int) (short) 10);
        java.lang.String str79 = atomikosProperties74.logBaseName;
        atomikosProperties74.outputDir = "";
        java.util.Properties properties82 = atomikosProperties74.asProperties();
        long long83 = atomikosProperties74.getDefaultJtaTimeout();
        atomikosProperties74.logBaseDir = "{true=10000}";
        atomikosProperties74.defaultJtaTimeout = 0L;
        java.lang.String str88 = atomikosProperties74.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel89 = atomikosProperties74.getConsoleLogLevel();
        atomikosProperties58.consoleLogLevel = atomikosLoggingLevel89;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(recovery62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10000L + "'", long83 == 10000L);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "tm.out" + "'", str88, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel89 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel89.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02530");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setConsoleFileCount(10);
        atomikosProperties0.maxTimeout = 50;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test02531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02531");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxActives((int) (short) 10);
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.tmlog=-1}";
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02532");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.logBaseDir = "{}";
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test02533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02533");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.lang.Object obj9 = properties1.clone();
        properties1.clear();
        java.util.Set<java.lang.String> strSet11 = properties1.stringPropertyNames();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test02534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02534");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        boolean boolean37 = properties1.isEmpty();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.get((java.lang.Object) 0.0d);
        java.lang.Object obj41 = properties38.clone();
        java.lang.String str42 = properties38.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        atomikosProperties43.setLogBaseDir("{}");
        boolean boolean50 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.Object obj52 = properties38.putIfAbsent((java.lang.Object) boolean50, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties38.entrySet();
        java.lang.String str54 = properties38.toString();
        boolean boolean55 = properties1.containsValue((java.lang.Object) str54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.logBaseDir = "";
        atomikosProperties56.setConsoleFileCount((int) (short) 10);
        atomikosProperties56.setLogBaseDir("{}");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.util.Set<java.lang.String> strSet64 = properties63.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int66 = atomikosProperties65.getConsoleFileCount();
        int int67 = atomikosProperties65.maxActives;
        atomikosProperties65.setConsoleFileName("");
        atomikosProperties65.transactionManagerUniqueName = "{}";
        java.util.Properties properties72 = atomikosProperties65.asProperties();
        boolean boolean73 = atomikosProperties65.threadedTwoPhaseCommit;
        atomikosProperties65.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int77 = atomikosProperties76.getConsoleFileCount();
        int int78 = atomikosProperties76.maxActives;
        atomikosProperties76.setConsoleFileName("");
        atomikosProperties76.transactionManagerUniqueName = "{}";
        atomikosProperties76.setMaxActives(0);
        boolean boolean85 = atomikosProperties76.forceShutdownOnVmExit;
        java.lang.Object obj86 = properties63.put((java.lang.Object) atomikosProperties65, (java.lang.Object) atomikosProperties76);
        atomikosProperties65.setConsoleFileCount((int) '4');
        boolean boolean89 = properties1.equals((java.lang.Object) '4');
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties1.elements();
        java.io.Reader reader91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{true=10000}" + "'", str54, "{true=10000}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objEnumeration90);
    }

    @Test
    public void test02535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02535");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        atomikosProperties0.consoleFileLimit = 50;
        int int10 = atomikosProperties0.consoleFileLimit;
        int int11 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
    }

    @Test
    public void test02536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02536");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.maxRetries;
        recovery0.setRetryInterval((long) (byte) 100);
        long long9 = recovery0.getDelay();
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.retryInterval = 300000L;
        long long13 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test02537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02537");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test02538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02538");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit(1);
        atomikosProperties0.forceShutdownOnVmExit = false;
        long long13 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
    }

    @Test
    public void test02539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02539");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery5 = atomikosProperties0.recovery;
        atomikosProperties0.checkpointInterval = 'a';
        java.lang.String str8 = atomikosProperties0.logBaseName;
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(recovery5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test02540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02540");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties0.outputDir = "{hi!={}}";
    }

    @Test
    public void test02541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02541");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        long long13 = atomikosProperties8.getMaxTimeout();
        atomikosProperties8.service = "";
        java.lang.String str16 = atomikosProperties8.logBaseDir;
        boolean boolean17 = atomikosProperties8.threadedTwoPhaseCommit;
        java.lang.String str18 = atomikosProperties8.getService();
        atomikosProperties8.setLogBaseDir("{}");
        atomikosProperties8.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj23 = properties7.get((java.lang.Object) atomikosProperties8);
        java.util.Properties properties24 = atomikosProperties8.asProperties();
        java.lang.Object obj25 = properties24.clone();
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.store(outputStream26, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(obj25);
// flaky:         org.junit.Assert.assertEquals(obj25.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test02542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02542");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Set<java.lang.String> strSet32 = properties30.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        atomikosProperties33.service = "";
        java.lang.String str41 = atomikosProperties33.logBaseDir;
        boolean boolean42 = atomikosProperties33.threadedTwoPhaseCommit;
        java.lang.String str43 = atomikosProperties33.getService();
        atomikosProperties33.setOutputDir("tmlog");
        atomikosProperties33.maxTimeout = (short) -1;
        java.lang.Object obj48 = properties30.get((java.lang.Object) atomikosProperties33);
        boolean boolean49 = atomikosProperties33.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test02543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02543");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.checkpointInterval = ' ';
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.lang.Object obj7 = properties6.clone();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(obj7);
// flaky:         org.junit.Assert.assertEquals(obj7.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=32, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test02544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02544");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.logBaseDir = "";
        atomikosProperties12.setConsoleFileCount((int) (short) 10);
        atomikosProperties12.setLogBaseDir("{}");
        java.util.Properties properties19 = atomikosProperties12.asProperties();
        atomikosProperties12.service = "";
        boolean boolean22 = atomikosProperties12.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.enableLogging = true;
        long long26 = atomikosProperties23.getCheckpointInterval();
        java.lang.String str27 = atomikosProperties23.getService();
        java.lang.String str28 = atomikosProperties23.logBaseDir;
        atomikosProperties23.setEnableLogging(false);
        atomikosProperties23.consoleFileCount = 0;
        long long33 = atomikosProperties23.getMaxTimeout();
        boolean boolean34 = atomikosProperties23.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties23.consoleLogLevel;
        atomikosProperties12.consoleLogLevel = atomikosLoggingLevel35;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel35);
        atomikosProperties0.consoleFileLimit = 5;
        boolean boolean40 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = atomikosProperties0.recovery;
        long long42 = recovery41.forgetOrphanedLogEntriesDelay;
        long long43 = recovery41.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(recovery41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 86400000L + "'", long42 == 86400000L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 86400000L + "'", long43 == 86400000L);
    }

    @Test
    public void test02545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02545");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str9 = atomikosProperties0.outputDir;
        long long10 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test02546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02546");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.lang.String str23 = properties1.getProperty("");
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream24, "{com.atomikos.icatch.tmlog=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test02547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02547");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel6;
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.logBaseDir = "{{}={}}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.consoleLogLevel;
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test02548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02548");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.service = "{}";
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test02549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02549");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.service;
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileCount((int) (byte) 1);
        atomikosProperties0.forceShutdownOnVmExit = false;
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        boolean boolean18 = atomikosProperties0.serialJtaTransactions;
        boolean boolean19 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test02550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02550");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties10.entrySet();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet11);
    }

    @Test
    public void test02551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02551");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.util.Enumeration<?> wildcardEnumeration22 = properties13.propertyNames();
        java.lang.Object obj23 = properties8.get((java.lang.Object) properties13);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream24, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test02552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02552");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((-1L));
        long long44 = atomikosProperties41.checkpointInterval;
        boolean boolean45 = atomikosProperties41.forceShutdownOnVmExit;
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setOutputDir("");
        java.lang.String str50 = atomikosProperties41.getService();
        long long51 = atomikosProperties41.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = atomikosProperties41.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel52;
        long long54 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 500L + "'", long54 == 500L);
    }

    @Test
    public void test02553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02553");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet14 = properties6.keySet();
        java.lang.String str15 = properties6.toString();
        java.lang.String str18 = properties6.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objSet14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.hi!=-1.0, =hi!}" + "'", str15, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02554");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setConsoleFileLimit((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test02555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02555");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.defaultJtaTimeout = (byte) -1;
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.recovery;
        int int10 = recovery9.maxRetries;
        int int11 = recovery9.getMaxRetries();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
    }

    @Test
    public void test02556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02556");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        long long6 = atomikosProperties0.defaultJtaTimeout;
        long long7 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
    }

    @Test
    public void test02557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02557");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        properties0.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties0.elements();
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
    }

    @Test
    public void test02558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02558");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.service = "{{}={}}";
        atomikosProperties0.serialJtaTransactions = false;
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        int int16 = atomikosProperties0.maxActives;
        java.lang.String str17 = atomikosProperties0.service;
        boolean boolean18 = atomikosProperties0.allowSubTransactions;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{{}={}}" + "'", str17, "{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test02559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02559");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        java.util.Set<java.lang.Object> objSet59 = properties6.keySet();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objSet59);
    }

    @Test
    public void test02560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02560");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.service = "{}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test02561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02561");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.Object obj15 = properties9.setProperty("{}", "{}");
        int int16 = properties9.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        atomikosProperties17.setLogBaseDir("{}");
        java.lang.String str24 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("hi!");
        boolean boolean27 = atomikosProperties17.isAllowSubTransactions();
        boolean boolean28 = atomikosProperties17.isThreadedTwoPhaseCommit();
        boolean boolean29 = atomikosProperties17.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties17.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties17.recovery;
        recovery31.setMaxRetries(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str45 = atomikosProperties34.logBaseDir;
        boolean boolean46 = atomikosProperties34.enableLogging;
        atomikosProperties34.setLogBaseDir("");
        atomikosProperties34.setAllowSubTransactions(true);
        java.lang.Object obj51 = properties9.put((java.lang.Object) 10, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties52 = new java.util.Properties(properties9);
        java.lang.String str53 = properties9.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.enableLogging = true;
        java.lang.String str58 = atomikosProperties55.logBaseDir;
        atomikosProperties0.set(properties9, "tm.out", (java.lang.Object) str58);
        java.lang.Object obj60 = properties9.clone();
        java.util.Set<java.lang.String> strSet61 = properties9.stringPropertyNames();
        java.lang.String str63 = properties9.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={true=10000}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.PrintWriter printWriter64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printWriter64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertNotNull(recovery31);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test02562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02562");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        boolean boolean11 = atomikosProperties8.isForceShutdownOnVmExit();
        int int12 = atomikosProperties8.consoleFileLimit;
        atomikosProperties8.consoleFileCount = 100;
        boolean boolean15 = atomikosProperties8.threadedTwoPhaseCommit;
        atomikosProperties8.enableLogging = true;
        java.lang.String str18 = atomikosProperties8.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        java.lang.String str24 = atomikosProperties19.logBaseName;
        atomikosProperties19.outputDir = "";
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.keys();
        int int41 = properties35.size();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties35.elements();
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery44.maxRetries = (-1);
        recovery44.setDelay((long) (short) 0);
        long long49 = recovery44.forgetOrphanedLogEntriesDelay;
        recovery44.retryInterval = 500L;
        recovery44.retryInterval = '4';
        long long54 = recovery44.getRetryInterval();
        long long55 = recovery44.getForgetOrphanedLogEntriesDelay();
        recovery44.retryInterval = 100L;
        recovery44.setDelay((long) ' ');
        long long60 = recovery44.delay;
        java.lang.Object obj61 = properties28.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) recovery44);
        java.util.Collection<java.lang.Object> objCollection62 = properties28.values();
        boolean boolean63 = properties7.remove((java.lang.Object) atomikosProperties8, (java.lang.Object) objCollection62);
        atomikosProperties8.consoleFileCount = (-1);
        atomikosProperties8.setConsoleFileLimit((int) '#');
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 86400000L + "'", long49 == 86400000L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 52L + "'", long54 == 52L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 86400000L + "'", long55 == 86400000L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 32L + "'", long60 == 32L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test02563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02563");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        int int14 = atomikosProperties0.getConsoleFileLimit();
        int int15 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test02564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02564");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        recovery0.delay = (-1);
        long long13 = recovery0.getDelay();
        int int14 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
    }

    @Test
    public void test02565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02565");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test02566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02566");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        long long8 = recovery0.delay;
        recovery0.setRetryInterval(10000L);
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long13 = recovery0.retryInterval;
        recovery0.delay = 86400000L;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test02567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02567");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.service;
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties0.setConsoleFileCount(0);
        atomikosProperties0.setConsoleFileCount(0);
        long long20 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 500L + "'", long20 == 500L);
    }

    @Test
    public void test02568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02568");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileLimit = 35;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test02569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02569");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = atomikosProperties0.consoleLogLevel;
        atomikosProperties0.maxActives = 5;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02570");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.allowSubTransactions = false;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        int int12 = atomikosProperties0.consoleFileLimit;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test02571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02571");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        recovery13.setForgetOrphanedLogEntriesDelay((long) 10);
        recovery13.setMaxRetries((int) (short) -1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
    }

    @Test
    public void test02572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02572");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        int int5 = recovery0.maxRetries;
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.delay = 52L;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 86400000L + "'", long6 == 86400000L);
    }

    @Test
    public void test02573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02573");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.logBaseName = "{}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test02574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02574");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Set<java.lang.Object> objSet19 = properties10.keySet();
        java.io.InputStream inputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(inputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(objSet19);
    }

    @Test
    public void test02575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02575");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((-1L));
        long long13 = atomikosProperties10.checkpointInterval;
        boolean boolean14 = atomikosProperties10.forceShutdownOnVmExit;
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setOutputDir("");
        long long19 = atomikosProperties10.getMaxTimeout();
        boolean boolean20 = properties1.containsKey((java.lang.Object) long19);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream21, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test02576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02576");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        java.lang.String str18 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str18, "{com.atomikos.icatch.hi!=-1.0}");
    }

    @Test
    public void test02577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02577");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.lang.Object obj47 = properties40.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long49 = atomikosProperties48.defaultJtaTimeout;
        atomikosProperties48.logBaseName = "tm.out";
        boolean boolean52 = properties40.containsKey((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setCheckpointInterval((long) 97);
        atomikosProperties48.serialJtaTransactions = true;
        long long57 = atomikosProperties48.checkpointInterval;
        int int58 = atomikosProperties48.consoleFileCount;
        boolean boolean59 = atomikosProperties48.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 97L + "'", long57 == 97L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test02578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02578");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        int int15 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties16 = atomikosProperties12.asProperties();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        java.util.Properties properties22 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.keys();
        java.util.Collection<java.lang.Object> objCollection24 = properties22.values();
        boolean boolean25 = properties16.contains((java.lang.Object) objCollection24);
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = null;
        atomikosProperties36.consoleLogLevel = atomikosLoggingLevel39;
        atomikosProperties36.outputDir = "";
        int int43 = atomikosProperties36.maxActives;
        boolean boolean44 = atomikosProperties36.isThreadedTwoPhaseCommit();
        atomikosProperties36.consoleFileLimit = (short) 10;
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.enableLogging = true;
        long long52 = atomikosProperties49.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties49.getService();
        atomikosProperties49.forceShutdownOnVmExit = false;
        java.lang.Object obj56 = properties34.replace((java.lang.Object) objEnumeration48, (java.lang.Object) atomikosProperties49);
        java.lang.Object obj57 = properties1.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.logBaseDir = "";
        atomikosProperties58.setConsoleFileCount((int) (short) 10);
        atomikosProperties58.setLogBaseDir("{}");
        java.util.Properties properties65 = atomikosProperties58.asProperties();
        atomikosProperties58.service = "";
        atomikosProperties58.forceShutdownOnVmExit = true;
        java.lang.Object obj70 = null;
        java.lang.Object obj71 = properties1.getOrDefault((java.lang.Object) true, obj70);
        java.io.OutputStream outputStream72 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream72, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test02579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02579");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.String str13 = properties9.toString();
        boolean boolean16 = properties9.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj17 = properties7.replace((java.lang.Object) 10.0d, (java.lang.Object) properties9);
        java.lang.String str18 = properties9.toString();
        java.util.Properties properties19 = new java.util.Properties(properties9);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.logBaseDir = "";
        boolean boolean24 = atomikosProperties21.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        long long30 = atomikosProperties25.getMaxTimeout();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet32 = properties31.keySet();
        atomikosProperties25.set(properties31, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj38 = properties31.setProperty("", "hi!");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Collection<java.lang.Object> objCollection41 = properties39.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean43 = properties31.remove((java.lang.Object) objCollection41, (java.lang.Object) atomikosLoggingLevel42);
        atomikosProperties21.setConsoleLogLevel(atomikosLoggingLevel42);
        boolean boolean45 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        int int46 = atomikosProperties21.consoleFileLimit;
        java.lang.String str47 = atomikosProperties21.consoleFileName;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
    }

    @Test
    public void test02580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02580");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        long long8 = recovery0.delay;
        recovery0.setRetryInterval(10000L);
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long13 = recovery0.getRetryInterval();
        recovery0.setMaxRetries((int) (short) 0);
        recovery0.setRetryInterval((long) 97);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test02581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02581");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = atomikosProperties0.getConsoleFileLimit();
        long long10 = atomikosProperties0.maxTimeout;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery12.maxRetries = (-1);
        recovery12.setDelay((long) (short) 0);
        long long17 = recovery12.forgetOrphanedLogEntriesDelay;
        recovery12.setDelay((long) 1);
        int int20 = recovery12.getMaxRetries();
        recovery12.setMaxRetries((int) '4');
        recovery12.delay = (-1);
        long long25 = recovery12.getDelay();
        int int26 = recovery12.maxRetries;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        long long32 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet34 = properties33.keySet();
        atomikosProperties27.set(properties33, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties33.keys();
        int int39 = properties33.size();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties33.elements();
        properties33.clear();
        java.util.Enumeration<?> wildcardEnumeration42 = properties33.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        boolean boolean46 = atomikosProperties43.isForceShutdownOnVmExit();
        int int47 = atomikosProperties43.consoleFileLimit;
        atomikosProperties43.setLogBaseDir("{}");
        java.lang.Object obj50 = properties33.get((java.lang.Object) atomikosProperties43);
        java.util.Properties properties51 = new java.util.Properties(properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.logBaseDir = "";
        atomikosProperties52.setConsoleFileCount((int) (short) 10);
        long long57 = atomikosProperties52.getMaxTimeout();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet59 = properties58.keySet();
        atomikosProperties52.set(properties58, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj65 = properties58.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setDefaultJtaTimeout((-1L));
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.get((java.lang.Object) 0.0d);
        java.lang.Object obj72 = properties69.clone();
        boolean boolean74 = properties58.replace((java.lang.Object) (-1L), obj72, (java.lang.Object) 100.0d);
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Properties properties76 = new java.util.Properties(properties75);
        properties76.clear();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties76.elements();
        java.lang.String str81 = properties76.getProperty("");
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.get((java.lang.Object) 0.0d);
        java.lang.Object obj85 = properties82.clone();
        java.lang.String str86 = properties82.toString();
        boolean boolean88 = properties76.remove((java.lang.Object) properties82, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration89 = properties76.propertyNames();
        java.util.Properties properties90 = new java.util.Properties(properties76);
        java.util.Properties properties91 = new java.util.Properties(properties76);
        boolean boolean92 = properties33.equals((java.lang.Object) properties91);
        java.lang.Object obj93 = properties11.put((java.lang.Object) recovery12, (java.lang.Object) properties33);
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.storeToXML(outputStream94, "{true=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 86400000L + "'", long17 == 86400000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 300000L + "'", long57 == 300000L);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{}");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{}" + "'", str86, "{}");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test02582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02582");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str7 = atomikosProperties0.service;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test02583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02583");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test02584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02584");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        atomikosProperties6.set(properties12, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str17 = atomikosProperties6.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery18.maxRetries = (-1);
        recovery18.setDelay((long) (short) 1);
        long long23 = recovery18.getForgetOrphanedLogEntriesDelay();
        long long24 = recovery18.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj25 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) long24);
        java.util.Properties properties26 = new java.util.Properties(properties0);
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.io.Writer writer28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.store(writer28, "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 86400000L + "'", long23 == 86400000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 86400000L + "'", long24 == 86400000L);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test02585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02585");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        long long29 = atomikosProperties24.getMaxTimeout();
        atomikosProperties24.service = "";
        java.lang.String str32 = atomikosProperties24.logBaseDir;
        boolean boolean33 = atomikosProperties24.threadedTwoPhaseCommit;
        java.lang.String str34 = atomikosProperties24.getService();
        java.lang.String str35 = atomikosProperties24.consoleFileName;
        boolean boolean36 = atomikosProperties24.serialJtaTransactions;
        long long37 = atomikosProperties24.getCheckpointInterval();
        atomikosProperties24.serialJtaTransactions = false;
        java.lang.Object obj40 = properties6.remove((java.lang.Object) false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test02586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02586");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        java.lang.String str29 = atomikosProperties24.logBaseName;
        java.lang.String str30 = atomikosProperties24.logBaseDir;
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties24.defaultJtaTimeout = 100L;
        int int34 = atomikosProperties24.maxActives;
        atomikosProperties24.enableLogging = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.enableLogging = true;
        int int40 = atomikosProperties37.consoleFileLimit;
        java.util.Properties properties41 = atomikosProperties37.asProperties();
        atomikosProperties37.setOutputDir("hi!");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.lang.Object obj45 = properties23.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) atomikosProperties37);
        java.lang.String str46 = atomikosProperties24.consoleFileName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
    }

    @Test
    public void test02587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02587");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02588");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setLogBaseName("hi!");
        java.lang.String str5 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
    }

    @Test
    public void test02589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02589");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        atomikosProperties5.setLogBaseDir("{}");
        java.util.Properties properties12 = atomikosProperties5.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setCheckpointInterval(10000L);
        long long21 = atomikosProperties14.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties14.getConsoleLogLevel();
        boolean boolean23 = properties13.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setConsoleFileName("hi!");
        boolean boolean26 = properties4.equals((java.lang.Object) "hi!");
        java.lang.Object obj27 = properties4.clone();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals(obj27.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test02590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02590");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties3.setProperty("", "");
        java.util.Properties properties17 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = null;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel21;
        atomikosProperties18.outputDir = "";
        int int25 = atomikosProperties18.maxActives;
        java.lang.String str26 = atomikosProperties18.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = atomikosProperties18.getRecovery();
        recovery27.setForgetOrphanedLogEntriesDelay(0L);
        long long30 = recovery27.delay;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        java.lang.String str36 = atomikosProperties31.logBaseName;
        java.lang.String str37 = atomikosProperties31.logBaseDir;
        long long38 = atomikosProperties31.defaultJtaTimeout;
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        long long45 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet47 = properties46.keySet();
        atomikosProperties40.set(properties46, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj53 = properties46.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet54 = properties46.stringPropertyNames();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        boolean boolean56 = properties3.remove((java.lang.Object) recovery27, (java.lang.Object) properties46);
        recovery27.setForgetOrphanedLogEntriesDelay(300000L);
        recovery27.maxRetries = 50;
        recovery27.forgetOrphanedLogEntriesDelay = 1L;
        recovery27.delay = (byte) -1;
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(recovery27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test02591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02591");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        recovery0.maxRetries = 'a';
        int int17 = recovery0.maxRetries;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 20);
        long long20 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test02592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02592");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.logBaseDir = "";
        int int12 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test02593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02593");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        atomikosProperties5.setCheckpointInterval(10000L);
        long long12 = atomikosProperties5.maxTimeout;
        int int13 = atomikosProperties5.maxActives;
        long long14 = atomikosProperties5.getCheckpointInterval();
        atomikosProperties5.setOutputDir("{com.atomikos.icatch.hi!=-1.0}");
        boolean boolean17 = properties0.contains((java.lang.Object) atomikosProperties5);
        atomikosProperties5.setMaxTimeout(32L);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test02594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02594");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.enableLogging = true;
        long long12 = atomikosProperties9.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties9.getService();
        java.lang.String str14 = atomikosProperties9.logBaseDir;
        atomikosProperties9.setEnableLogging(false);
        boolean boolean17 = atomikosProperties9.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.enableLogging = true;
        long long21 = atomikosProperties18.getCheckpointInterval();
        atomikosProperties18.setService("tmlog");
        atomikosProperties18.setConsoleFileName("{}");
        java.util.Properties properties26 = atomikosProperties18.asProperties();
        atomikosProperties18.setCheckpointInterval((long) (short) 10);
        atomikosProperties18.logBaseName = "";
        java.lang.Object obj31 = properties5.put((java.lang.Object) boolean17, (java.lang.Object) atomikosProperties18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long33 = atomikosProperties32.checkpointInterval;
        atomikosProperties32.service = "";
        java.lang.Object obj36 = properties1.putIfAbsent((java.lang.Object) atomikosProperties18, (java.lang.Object) "");
        java.lang.String str37 = atomikosProperties18.transactionManagerUniqueName;
        atomikosProperties18.consoleFileCount = 0;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test02595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02595");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        atomikosProperties15.setConsoleFileLimit((int) (short) 100);
        atomikosProperties15.setForceShutdownOnVmExit(false);
        java.lang.String str30 = atomikosProperties15.logBaseName;
        boolean boolean31 = properties14.contains((java.lang.Object) atomikosProperties15);
        java.lang.String str34 = properties14.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str34, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test02596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02596");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        int int10 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }

    @Test
    public void test02597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02597");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setService("{}");
        atomikosProperties0.setConsoleFileLimit(10);
        int int10 = atomikosProperties0.getMaxActives();
        boolean boolean11 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.tmlog=-1}";
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02598");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        properties9.clear();
        java.util.Properties properties11 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery12.maxRetries = (-1);
        recovery12.setDelay((long) (short) 0);
        long long17 = recovery12.forgetOrphanedLogEntriesDelay;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.enableLogging = true;
        int int21 = atomikosProperties18.consoleFileLimit;
        atomikosProperties18.logBaseName = "hi!";
        atomikosProperties18.setEnableLogging(false);
        atomikosProperties18.setTransactionManagerUniqueName("");
        atomikosProperties18.forceShutdownOnVmExit = true;
        atomikosProperties18.setLogBaseDir("tmlog");
        java.lang.Object obj32 = properties9.put((java.lang.Object) long17, (java.lang.Object) "tmlog");
        java.util.Properties properties33 = new java.util.Properties();
        int int34 = properties33.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long36 = recovery35.getRetryInterval();
        long long37 = recovery35.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((-1L));
        int int41 = atomikosProperties38.getConsoleFileLimit();
        java.util.Properties properties42 = atomikosProperties38.asProperties();
        boolean boolean43 = atomikosProperties38.forceShutdownOnVmExit;
        long long44 = atomikosProperties38.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long46 = atomikosProperties45.defaultJtaTimeout;
        atomikosProperties45.logBaseName = "tm.out";
        boolean boolean49 = properties33.replace((java.lang.Object) recovery35, (java.lang.Object) long44, (java.lang.Object) atomikosProperties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setDefaultJtaTimeout((-1L));
        int int53 = atomikosProperties50.getConsoleFileLimit();
        atomikosProperties50.checkpointInterval = 0L;
        atomikosProperties50.setLogBaseName("{com.atomikos.icatch.hi!=-1.0}");
        java.lang.String str58 = atomikosProperties50.consoleFileName;
        atomikosProperties50.setEnableLogging(true);
        int int61 = atomikosProperties50.consoleFileLimit;
        java.lang.Object obj62 = properties9.getOrDefault((java.lang.Object) recovery35, (java.lang.Object) int61);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 86400000L + "'", long17 == 86400000L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tm.out" + "'", str58, "tm.out");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertEquals("'" + obj62 + "' != '" + (-1) + "'", obj62, (-1));
    }

    @Test
    public void test02599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02599");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.logBaseDir = "";
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        java.lang.String str12 = atomikosProperties7.logBaseName;
        java.lang.String str13 = atomikosProperties7.logBaseDir;
        long long14 = atomikosProperties7.defaultJtaTimeout;
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet30 = properties22.stringPropertyNames();
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Set<java.lang.Object> objSet32 = properties15.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery33 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long34 = recovery33.getRetryInterval();
        recovery33.setForgetOrphanedLogEntriesDelay((-1L));
        boolean boolean37 = properties15.contains((java.lang.Object) (-1L));
        boolean boolean38 = properties5.containsValue((java.lang.Object) boolean37);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test02600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02600");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.logBaseDir = "{}";
        atomikosProperties0.setConsoleFileName("{{}={}}");
        boolean boolean10 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.setMaxTimeout((long) (-1));
        atomikosProperties0.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test02601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02601");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        long long6 = recovery0.getDelay();
        recovery0.forgetOrphanedLogEntriesDelay = 35;
        recovery0.retryInterval = (short) 0;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test02602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02602");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test02603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02603");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        java.lang.String str33 = atomikosProperties24.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.get((java.lang.Object) 0.0d);
        java.lang.Object obj48 = properties45.clone();
        java.lang.String str49 = properties45.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.logBaseDir = "";
        atomikosProperties50.setConsoleFileCount((int) (short) 10);
        long long55 = atomikosProperties50.getMaxTimeout();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet57 = properties56.keySet();
        atomikosProperties50.set(properties56, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj63 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((-1L));
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.get((java.lang.Object) 0.0d);
        java.lang.Object obj70 = properties67.clone();
        boolean boolean72 = properties56.replace((java.lang.Object) (-1L), obj70, (java.lang.Object) 100.0d);
        java.util.Properties properties73 = new java.util.Properties();
        java.util.Properties properties74 = new java.util.Properties(properties73);
        properties74.clear();
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.logBaseDir = "";
        atomikosProperties77.setConsoleFileCount((int) (short) 10);
        long long82 = atomikosProperties77.getMaxTimeout();
        java.util.Properties properties83 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet84 = properties83.keySet();
        atomikosProperties77.set(properties83, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str88 = atomikosProperties77.logBaseDir;
        java.lang.String str89 = atomikosProperties77.logBaseDir;
        java.util.Properties properties90 = atomikosProperties77.asProperties();
        java.lang.Object obj91 = properties45.replace((java.lang.Object) properties74, (java.lang.Object) atomikosProperties77);
        boolean boolean92 = properties40.contains((java.lang.Object) atomikosProperties77);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel93 = atomikosProperties77.consoleLogLevel;
        long long94 = atomikosProperties77.getMaxTimeout();
        boolean boolean95 = atomikosProperties77.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel96 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties77.setConsoleLogLevel(atomikosLoggingLevel96);
        atomikosProperties24.consoleLogLevel = atomikosLoggingLevel96;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery99 = atomikosProperties24.getRecovery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 300000L + "'", long82 == 300000L);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel93 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel93.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 300000L + "'", long94 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel96 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel96.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
        org.junit.Assert.assertNotNull(recovery99);
    }

    @Test
    public void test02604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02604");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.checkpointInterval;
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str21 = atomikosProperties10.logBaseDir;
        java.lang.String str22 = atomikosProperties10.logBaseDir;
        java.util.Properties properties23 = atomikosProperties10.asProperties();
        atomikosProperties10.consoleFileLimit = (byte) 10;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.logBaseDir = "";
        boolean boolean29 = atomikosProperties26.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties36.setProperty("", "hi!");
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Collection<java.lang.Object> objCollection46 = properties44.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean48 = properties36.remove((java.lang.Object) objCollection46, (java.lang.Object) atomikosLoggingLevel47);
        atomikosProperties26.setConsoleLogLevel(atomikosLoggingLevel47);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel47);
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel47;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test02605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02605");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.recovery;
        long long11 = recovery10.getDelay();
        int int12 = recovery10.maxRetries;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test02606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02606");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties(properties6);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.lang.String str36 = properties27.toString();
        java.util.Properties properties37 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.logBaseDir = "";
        atomikosProperties38.setConsoleFileCount((int) (short) 10);
        long long43 = atomikosProperties38.getMaxTimeout();
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet45 = properties44.keySet();
        atomikosProperties38.set(properties44, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj51 = properties44.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((-1L));
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.get((java.lang.Object) 0.0d);
        java.lang.Object obj58 = properties55.clone();
        boolean boolean60 = properties44.replace((java.lang.Object) (-1L), obj58, (java.lang.Object) 100.0d);
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        boolean boolean65 = properties27.equals((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel69 = null;
        atomikosProperties66.consoleLogLevel = atomikosLoggingLevel69;
        atomikosProperties66.outputDir = "";
        int int73 = atomikosProperties66.maxActives;
        boolean boolean74 = atomikosProperties66.isThreadedTwoPhaseCommit();
        atomikosProperties66.consoleFileLimit = (short) 10;
        java.util.Properties properties77 = atomikosProperties66.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.enableLogging = true;
        long long81 = atomikosProperties78.getCheckpointInterval();
        java.lang.String str82 = atomikosProperties78.getOutputDir();
        atomikosProperties78.defaultJtaTimeout = 'a';
        java.lang.Object obj85 = properties44.replace((java.lang.Object) properties77, (java.lang.Object) 'a');
        java.util.Properties properties86 = new java.util.Properties(properties77);
        java.lang.Object obj87 = properties6.get((java.lang.Object) properties86);
        java.util.Properties properties88 = new java.util.Properties(properties6);
        java.util.Set<java.lang.String> strSet89 = properties88.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 500L + "'", long81 == 500L);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strSet89);
    }

    @Test
    public void test02607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02607");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        long long9 = atomikosProperties0.checkpointInterval;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        int int11 = atomikosProperties0.consoleFileCount;
        atomikosProperties0.setConsoleFileCount(35);
        int int14 = atomikosProperties0.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.recovery;
        boolean boolean16 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNotNull(recovery15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02608");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        long long4 = recovery0.getDelay();
        long long5 = recovery0.delay;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 0);
        long long8 = recovery0.getDelay();
        recovery0.setRetryInterval(300000L);
        int int11 = recovery0.getMaxRetries();
        int int12 = recovery0.getMaxRetries();
        recovery0.maxRetries = (byte) 0;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test02609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02609");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.setDefaultJtaTimeout(10000L);
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test02610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02610");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.util.Set<java.lang.String> strSet9 = properties1.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Object obj26 = properties13.setProperty("", "");
        java.util.Properties properties27 = new java.util.Properties(properties13);
        java.util.Set<java.lang.Object> objSet28 = properties27.keySet();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties1.containsKey((java.lang.Object) properties29);
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Set<java.lang.String> strSet32 = properties31.stringPropertyNames();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test02611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02611");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "";
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        atomikosProperties0.outputDir = "hi!";
        java.lang.String str14 = atomikosProperties0.logBaseName;
        java.lang.String str15 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test02612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02612");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        int int7 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setLogBaseDir("{}");
        java.lang.String str15 = atomikosProperties8.getOutputDir();
        atomikosProperties8.setLogBaseName("hi!");
        boolean boolean18 = atomikosProperties8.isAllowSubTransactions();
        boolean boolean19 = atomikosProperties8.isThreadedTwoPhaseCommit();
        boolean boolean20 = atomikosProperties8.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties8.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties8.recovery;
        recovery22.setMaxRetries(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        long long30 = atomikosProperties25.getMaxTimeout();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet32 = properties31.keySet();
        atomikosProperties25.set(properties31, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str36 = atomikosProperties25.logBaseDir;
        boolean boolean37 = atomikosProperties25.enableLogging;
        atomikosProperties25.setLogBaseDir("");
        atomikosProperties25.setAllowSubTransactions(true);
        java.lang.Object obj42 = properties0.put((java.lang.Object) 10, (java.lang.Object) atomikosProperties25);
        java.util.Properties properties43 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection44 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(objCollection44);
    }

    @Test
    public void test02613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02613");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.checkpointInterval = 35;
        boolean boolean22 = atomikosProperties0.forceShutdownOnVmExit;
        long long23 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean24 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setDefaultJtaTimeout((long) 1);
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str29 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
    }

    @Test
    public void test02614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02614");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.logBaseName = "";
        int int18 = atomikosProperties0.maxActives;
        atomikosProperties0.maxActives = 1;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.logBaseDir = "";
        atomikosProperties21.setConsoleFileCount((int) (short) 10);
        java.lang.String str26 = atomikosProperties21.logBaseName;
        atomikosProperties21.outputDir = "";
        java.util.Properties properties29 = atomikosProperties21.asProperties();
        long long30 = atomikosProperties21.getDefaultJtaTimeout();
        atomikosProperties21.logBaseDir = "{true=10000}";
        atomikosProperties21.defaultJtaTimeout = 0L;
        java.lang.String str35 = atomikosProperties21.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel36);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02615");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.service = "";
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test02616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02616");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        int int9 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.consoleFileCount = (short) 1;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test02617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02617");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.checkpointInterval = (byte) 100;
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        long long11 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str12 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean13 = atomikosProperties0.allowSubTransactions;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test02618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02618");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        long long14 = recovery13.getForgetOrphanedLogEntriesDelay();
        long long15 = recovery13.getRetryInterval();
        recovery13.setMaxRetries(50);
        long long18 = recovery13.delay;
        recovery13.setMaxRetries(2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test02619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02619");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties11);
        properties13.clear();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test02620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02620");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.getConsoleLogLevel();
        long long6 = atomikosProperties0.defaultJtaTimeout;
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test02621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02621");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        java.lang.Object obj12 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.logBaseDir = "";
        atomikosProperties13.setConsoleFileCount((int) (short) 10);
        long long18 = atomikosProperties13.getMaxTimeout();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        atomikosProperties13.set(properties19, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str24 = atomikosProperties13.logBaseDir;
        boolean boolean25 = atomikosProperties13.enableLogging;
        int int26 = atomikosProperties13.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        java.lang.String str33 = atomikosProperties28.logBaseName;
        atomikosProperties28.outputDir = "";
        java.util.Properties properties36 = atomikosProperties28.asProperties();
        atomikosProperties28.setConsoleFileLimit(1);
        boolean boolean39 = properties1.replace((java.lang.Object) int26, (java.lang.Object) 100.0f, (java.lang.Object) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        atomikosProperties40.setLogBaseDir("{}");
        boolean boolean47 = atomikosProperties40.isSerialJtaTransactions();
        boolean boolean48 = atomikosProperties40.allowSubTransactions;
        atomikosProperties40.consoleFileLimit = 50;
        atomikosProperties40.maxActives = (-1);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties40.consoleLogLevel;
        boolean boolean54 = properties1.equals((java.lang.Object) atomikosProperties40);
        java.lang.String str55 = atomikosProperties40.consoleFileName;
        int int56 = atomikosProperties40.consoleFileLimit;
        atomikosProperties40.threadedTwoPhaseCommit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.logBaseDir = "";
        atomikosProperties59.setConsoleFileCount((int) (short) 10);
        atomikosProperties59.setService("");
        atomikosProperties59.service = "tmlog";
        java.util.Properties properties68 = atomikosProperties59.asProperties();
        java.util.Properties properties69 = atomikosProperties59.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel70 = atomikosProperties59.getConsoleLogLevel();
        atomikosProperties40.consoleLogLevel = atomikosLoggingLevel70;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel70 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel70.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02622");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        int int5 = properties0.size();
        java.lang.String str7 = properties0.getProperty("{{}={}}");
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) 0);
        atomikosProperties9.setMaxActives(35);
        boolean boolean21 = properties0.contains((java.lang.Object) atomikosProperties9);
        java.util.Properties properties22 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test02623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02623");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Collection<java.lang.Object> objCollection41 = properties39.values();
        int int42 = properties39.size();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties39.elements();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.enableLogging = true;
        long long52 = atomikosProperties49.getCheckpointInterval();
        boolean boolean54 = properties47.remove((java.lang.Object) long52, (java.lang.Object) (byte) 100);
        boolean boolean56 = properties47.equals((java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet57 = properties47.stringPropertyNames();
        java.lang.Object obj60 = properties47.setProperty("tmlog", "{true=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long62 = recovery61.getRetryInterval();
        recovery61.delay = 10L;
        recovery61.setForgetOrphanedLogEntriesDelay(0L);
        long long67 = recovery61.getRetryInterval();
        recovery61.retryInterval = 5;
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.get((java.lang.Object) 0.0d);
        java.lang.Object obj76 = properties73.clone();
        java.lang.String str77 = properties73.toString();
        boolean boolean80 = properties73.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj81 = properties71.replace((java.lang.Object) 10.0d, (java.lang.Object) properties73);
        java.lang.String str82 = properties73.toString();
        boolean boolean84 = properties73.containsKey((java.lang.Object) 100.0f);
        java.util.Properties properties85 = new java.util.Properties(properties73);
        java.util.Collection<java.lang.Object> objCollection86 = properties85.values();
        java.lang.Object obj87 = properties47.getOrDefault((java.lang.Object) recovery61, (java.lang.Object) objCollection86);
        java.lang.Object obj88 = properties44.remove((java.lang.Object) objCollection86);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 10000L + "'", long67 == 10000L);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{}" + "'", str77, "{}");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{}" + "'", str82, "{}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "[]");
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test02624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02624");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties(properties6);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.lang.String str36 = properties27.toString();
        java.util.Properties properties37 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.logBaseDir = "";
        atomikosProperties38.setConsoleFileCount((int) (short) 10);
        long long43 = atomikosProperties38.getMaxTimeout();
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet45 = properties44.keySet();
        atomikosProperties38.set(properties44, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj51 = properties44.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((-1L));
        java.util.Properties properties55 = new java.util.Properties();
        java.lang.Object obj57 = properties55.get((java.lang.Object) 0.0d);
        java.lang.Object obj58 = properties55.clone();
        boolean boolean60 = properties44.replace((java.lang.Object) (-1L), obj58, (java.lang.Object) 100.0d);
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        properties62.clear();
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        boolean boolean65 = properties27.equals((java.lang.Object) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel69 = null;
        atomikosProperties66.consoleLogLevel = atomikosLoggingLevel69;
        atomikosProperties66.outputDir = "";
        int int73 = atomikosProperties66.maxActives;
        boolean boolean74 = atomikosProperties66.isThreadedTwoPhaseCommit();
        atomikosProperties66.consoleFileLimit = (short) 10;
        java.util.Properties properties77 = atomikosProperties66.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.enableLogging = true;
        long long81 = atomikosProperties78.getCheckpointInterval();
        java.lang.String str82 = atomikosProperties78.getOutputDir();
        atomikosProperties78.defaultJtaTimeout = 'a';
        java.lang.Object obj85 = properties44.replace((java.lang.Object) properties77, (java.lang.Object) 'a');
        java.util.Properties properties86 = new java.util.Properties(properties77);
        java.lang.Object obj87 = properties6.get((java.lang.Object) properties86);
        java.io.InputStream inputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.loadFromXML(inputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 500L + "'", long81 == 500L);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test02625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02625");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(10L);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.logBaseDir = "";
        atomikosProperties13.setConsoleFileCount((int) (short) 10);
        long long18 = atomikosProperties13.getMaxTimeout();
        atomikosProperties13.service = "";
        java.lang.String str21 = atomikosProperties13.logBaseDir;
        atomikosProperties13.logBaseName = "tmlog";
        atomikosProperties13.transactionManagerUniqueName = "{}";
        boolean boolean26 = atomikosProperties13.isForceShutdownOnVmExit();
        long long27 = atomikosProperties13.getDefaultJtaTimeout();
        java.lang.String str28 = atomikosProperties13.transactionManagerUniqueName;
        atomikosProperties13.threadedTwoPhaseCommit = true;
        boolean boolean31 = properties12.equals((java.lang.Object) true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test02626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02626");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setService("");
        atomikosProperties0.service = "tmlog";
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test02627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02627");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.retryInterval = 5;
        long long9 = recovery0.getDelay();
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.maxRetries = 97;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test02628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02628");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.serialJtaTransactions = true;
        int int13 = atomikosProperties0.maxActives;
        int int14 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.tmlog=-1}";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test02629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02629");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties3.setProperty("", "");
        java.util.Properties properties17 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Enumeration<?> wildcardEnumeration20 = properties17.propertyNames();
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.save(outputStream21, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
    }

    @Test
    public void test02630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02630");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        int int9 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.enableLogging = true;
        long long18 = atomikosProperties15.getCheckpointInterval();
        boolean boolean20 = properties13.remove((java.lang.Object) long18, (java.lang.Object) (byte) 100);
        boolean boolean22 = properties13.equals((java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Class<?> wildcardClass24 = properties23.getClass();
        java.lang.Object obj25 = properties0.put((java.lang.Object) properties10, (java.lang.Object) wildcardClass24);
        java.util.Properties properties26 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int28 = atomikosProperties27.getConsoleFileCount();
        int int29 = atomikosProperties27.maxActives;
        java.lang.String str30 = atomikosProperties27.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        atomikosProperties31.setCheckpointInterval(10000L);
        long long38 = atomikosProperties31.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties31.getConsoleLogLevel();
        atomikosProperties27.consoleLogLevel = atomikosLoggingLevel39;
        java.lang.String str41 = atomikosProperties27.consoleFileName;
        atomikosProperties27.setCheckpointInterval((long) (short) 10);
        atomikosProperties27.consoleFileLimit = 35;
        boolean boolean46 = properties10.equals((java.lang.Object) atomikosProperties27);
        java.io.OutputStream outputStream47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.storeToXML(outputStream47, "{{}={}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test02631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02631");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((-1L));
        atomikosProperties19.allowSubTransactions = true;
        boolean boolean24 = properties13.containsValue((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        java.lang.String str30 = atomikosProperties25.logBaseName;
        atomikosProperties25.outputDir = "";
        java.util.Properties properties33 = atomikosProperties25.asProperties();
        java.util.Properties properties34 = atomikosProperties25.asProperties();
        long long35 = atomikosProperties25.defaultJtaTimeout;
        atomikosProperties25.serialJtaTransactions = true;
        atomikosProperties25.service = "";
        boolean boolean40 = properties13.equals((java.lang.Object) atomikosProperties25);
        boolean boolean41 = atomikosProperties25.isEnableLogging();
        atomikosProperties25.service = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties25.setConsoleFileName("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        boolean boolean46 = atomikosProperties25.serialJtaTransactions;
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test02632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02632");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        atomikosProperties6.set(properties12, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str17 = atomikosProperties6.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery18.maxRetries = (-1);
        recovery18.setDelay((long) (short) 1);
        long long23 = recovery18.getForgetOrphanedLogEntriesDelay();
        long long24 = recovery18.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj25 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) long24);
        long long26 = atomikosProperties6.getCheckpointInterval();
        atomikosProperties6.setLogBaseDir("tmlog");
        boolean boolean29 = atomikosProperties6.threadedTwoPhaseCommit;
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setConsoleFileLimit((int) (byte) 100);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 86400000L + "'", long23 == 86400000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 86400000L + "'", long24 == 86400000L);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test02633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02633");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.logBaseName;
        atomikosProperties9.outputDir = "";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        java.util.Properties properties18 = atomikosProperties9.asProperties();
        boolean boolean19 = properties1.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setLogBaseDir("");
        boolean boolean22 = atomikosProperties9.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        long long28 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        atomikosProperties23.set(properties29, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str34 = atomikosProperties23.logBaseDir;
        java.lang.String str35 = atomikosProperties23.logBaseDir;
        java.util.Properties properties36 = atomikosProperties23.asProperties();
        atomikosProperties23.consoleFileLimit = (byte) 10;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        boolean boolean42 = atomikosProperties39.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj56 = properties49.setProperty("", "hi!");
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Collection<java.lang.Object> objCollection59 = properties57.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean61 = properties49.remove((java.lang.Object) objCollection59, (java.lang.Object) atomikosLoggingLevel60);
        atomikosProperties39.setConsoleLogLevel(atomikosLoggingLevel60);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel60);
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel60;
        java.util.Properties properties65 = atomikosProperties9.asProperties();
        atomikosProperties9.setConsoleFileLimit(1);
        atomikosProperties9.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties65);
    }

    @Test
    public void test02634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02634");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = null;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel12;
        atomikosProperties9.outputDir = "";
        int int16 = atomikosProperties9.maxActives;
        boolean boolean17 = atomikosProperties9.isThreadedTwoPhaseCommit();
        atomikosProperties9.consoleFileLimit = (short) 10;
        java.util.Properties properties20 = atomikosProperties9.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.enableLogging = true;
        long long25 = atomikosProperties22.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.forceShutdownOnVmExit = false;
        java.lang.Object obj29 = properties7.replace((java.lang.Object) objEnumeration21, (java.lang.Object) atomikosProperties22);
        boolean boolean30 = atomikosProperties22.threadedTwoPhaseCommit;
        atomikosProperties22.outputDir = "";
        int int33 = atomikosProperties22.maxActives;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
    }

    @Test
    public void test02635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02635");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        properties6.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties6.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        boolean boolean19 = atomikosProperties16.isForceShutdownOnVmExit();
        int int20 = atomikosProperties16.consoleFileLimit;
        atomikosProperties16.setLogBaseDir("{}");
        java.lang.Object obj23 = properties6.get((java.lang.Object) atomikosProperties16);
        boolean boolean24 = atomikosProperties16.isEnableLogging();
        java.lang.String str25 = atomikosProperties16.outputDir;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test02636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02636");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration7 = properties6.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties6.entrySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
        org.junit.Assert.assertNotNull(objEntrySet8);
    }

    @Test
    public void test02637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02637");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((int) (short) -1);
        long long3 = recovery0.retryInterval;
        int int4 = recovery0.getMaxRetries();
        int int5 = recovery0.getMaxRetries();
        int int6 = recovery0.getMaxRetries();
        long long7 = recovery0.delay;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test02638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02638");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "hi!";
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str11 = atomikosProperties0.service;
        atomikosProperties0.setConsoleFileCount((int) (short) 0);
        boolean boolean14 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02639");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.recovery;
        java.lang.String str10 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
    }

    @Test
    public void test02640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02640");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream10, "{com.atomikos.icatch.hi!=-1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test02641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02641");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        atomikosProperties4.service = "";
        boolean boolean12 = atomikosProperties4.isSerialJtaTransactions();
        boolean boolean13 = properties0.equals((java.lang.Object) boolean12);
        java.lang.String str15 = properties0.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        java.io.InputStream inputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test02642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02642");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        java.lang.String str33 = atomikosProperties24.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.get((java.lang.Object) 0.0d);
        java.lang.Object obj48 = properties45.clone();
        java.lang.String str49 = properties45.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.logBaseDir = "";
        atomikosProperties50.setConsoleFileCount((int) (short) 10);
        long long55 = atomikosProperties50.getMaxTimeout();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet57 = properties56.keySet();
        atomikosProperties50.set(properties56, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj63 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((-1L));
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.get((java.lang.Object) 0.0d);
        java.lang.Object obj70 = properties67.clone();
        boolean boolean72 = properties56.replace((java.lang.Object) (-1L), obj70, (java.lang.Object) 100.0d);
        java.util.Properties properties73 = new java.util.Properties();
        java.util.Properties properties74 = new java.util.Properties(properties73);
        properties74.clear();
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.logBaseDir = "";
        atomikosProperties77.setConsoleFileCount((int) (short) 10);
        long long82 = atomikosProperties77.getMaxTimeout();
        java.util.Properties properties83 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet84 = properties83.keySet();
        atomikosProperties77.set(properties83, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str88 = atomikosProperties77.logBaseDir;
        java.lang.String str89 = atomikosProperties77.logBaseDir;
        java.util.Properties properties90 = atomikosProperties77.asProperties();
        java.lang.Object obj91 = properties45.replace((java.lang.Object) properties74, (java.lang.Object) atomikosProperties77);
        boolean boolean92 = properties40.contains((java.lang.Object) atomikosProperties77);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel93 = atomikosProperties77.consoleLogLevel;
        long long94 = atomikosProperties77.getMaxTimeout();
        boolean boolean95 = atomikosProperties77.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel96 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties77.setConsoleLogLevel(atomikosLoggingLevel96);
        atomikosProperties24.consoleLogLevel = atomikosLoggingLevel96;
        java.lang.String str99 = atomikosProperties24.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 300000L + "'", long82 == 300000L);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel93 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel93.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 300000L + "'", long94 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel96 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel96.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "tmlog" + "'", str99, "tmlog");
    }

    @Test
    public void test02643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02643");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        int int17 = atomikosProperties0.maxActives;
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        int int19 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseName("tmlog");
        int int22 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
    }

    @Test
    public void test02644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02644");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = (short) -1;
        recovery0.setForgetOrphanedLogEntriesDelay(500L);
        recovery0.retryInterval = 100;
        int int11 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test02645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02645");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean6 = atomikosProperties0.allowSubTransactions;
        long long7 = atomikosProperties0.checkpointInterval;
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
    }

    @Test
    public void test02646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02646");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.consoleFileLimit = 'a';
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setLogBaseDir("{}");
        boolean boolean21 = atomikosProperties14.isSerialJtaTransactions();
        boolean boolean22 = atomikosProperties14.allowSubTransactions;
        atomikosProperties14.consoleFileLimit = 50;
        atomikosProperties14.maxActives = (-1);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties14.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        java.lang.Class<?> wildcardClass29 = atomikosLoggingLevel27.getClass();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02647");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        int int7 = atomikosProperties0.getConsoleFileLimit();
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseName("");
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval(52L);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02648");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        boolean boolean13 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test02649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02649");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        int int2 = atomikosProperties0.getConsoleFileCount();
        long long3 = atomikosProperties0.getCheckpointInterval();
        long long4 = atomikosProperties0.getCheckpointInterval();
        boolean boolean5 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.enableLogging = true;
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        int int11 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test02650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02650");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long3 = recovery2.getRetryInterval();
        long long4 = recovery2.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setDefaultJtaTimeout((-1L));
        int int8 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties9 = atomikosProperties5.asProperties();
        boolean boolean10 = atomikosProperties5.forceShutdownOnVmExit;
        long long11 = atomikosProperties5.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long13 = atomikosProperties12.defaultJtaTimeout;
        atomikosProperties12.logBaseName = "tm.out";
        boolean boolean16 = properties0.replace((java.lang.Object) recovery2, (java.lang.Object) long11, (java.lang.Object) atomikosProperties12);
        java.lang.Object obj19 = properties0.setProperty("tm.out", "{{}={}}");
        java.util.Properties properties20 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream21, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test02651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02651");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        long long9 = atomikosProperties0.checkpointInterval;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        int int11 = atomikosProperties0.consoleFileCount;
        java.lang.String str12 = atomikosProperties0.consoleFileName;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.checkpointInterval = 0;
        boolean boolean19 = atomikosProperties14.isThreadedTwoPhaseCommit();
        atomikosProperties14.setSerialJtaTransactions(false);
        long long22 = atomikosProperties14.getMaxTimeout();
        atomikosProperties14.setSerialJtaTransactions(true);
        long long25 = atomikosProperties14.maxTimeout;
        boolean boolean26 = atomikosProperties14.serialJtaTransactions;
        atomikosProperties14.setService("hi!");
        atomikosProperties14.setForceShutdownOnVmExit(false);
        atomikosProperties14.setDefaultJtaTimeout((long) 2);
        java.lang.Object obj33 = properties13.remove((java.lang.Object) 2);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test02652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02652");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.enableLogging = true;
        long long11 = atomikosProperties8.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties8.getService();
        java.lang.String str13 = atomikosProperties8.logBaseDir;
        atomikosProperties8.setEnableLogging(false);
        atomikosProperties8.consoleFileCount = 0;
        long long18 = atomikosProperties8.getMaxTimeout();
        int int19 = atomikosProperties8.consoleFileLimit;
        java.util.Properties properties20 = atomikosProperties8.asProperties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        int int24 = atomikosProperties22.maxActives;
        atomikosProperties22.setConsoleFileName("");
        atomikosProperties22.transactionManagerUniqueName = "{}";
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties36.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((-1L));
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.get((java.lang.Object) 0.0d);
        java.lang.Object obj50 = properties47.clone();
        boolean boolean52 = properties36.replace((java.lang.Object) (-1L), obj50, (java.lang.Object) 100.0d);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        java.lang.String str59 = properties54.getProperty("");
        java.util.Properties properties60 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int63 = atomikosProperties62.getConsoleFileCount();
        int int64 = atomikosProperties62.maxActives;
        atomikosProperties62.setEnableLogging(true);
        boolean boolean67 = atomikosProperties62.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties62.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.logBaseDir = "";
        atomikosProperties69.setConsoleFileCount((int) (short) 10);
        long long74 = atomikosProperties69.getMaxTimeout();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet76 = properties75.keySet();
        atomikosProperties69.set(properties75, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str80 = atomikosProperties69.logBaseDir;
        boolean boolean81 = atomikosProperties69.enableLogging;
        java.lang.Object obj82 = properties60.putIfAbsent((java.lang.Object) atomikosLoggingLevel68, (java.lang.Object) atomikosProperties69);
        boolean boolean83 = properties3.replace((java.lang.Object) properties20, (java.lang.Object) atomikosProperties22, (java.lang.Object) atomikosLoggingLevel68);
        atomikosProperties22.threadedTwoPhaseCommit = true;
        boolean boolean86 = atomikosProperties22.isThreadedTwoPhaseCommit();
        long long87 = atomikosProperties22.maxTimeout;
        atomikosProperties22.service = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 300000L + "'", long87 == 300000L);
    }

    @Test
    public void test02653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02653");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        boolean boolean17 = properties15.isEmpty();
        boolean boolean18 = properties3.equals((java.lang.Object) boolean17);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.lang.Object obj20 = properties3.clone();
        java.lang.String str21 = properties3.toString();
        java.io.PrintStream printStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.list(printStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
    }

    @Test
    public void test02654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02654");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        int int12 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test02655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02655");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.checkpointInterval = 500L;
        atomikosProperties0.consoleFileName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.recovery;
        long long8 = recovery7.getForgetOrphanedLogEntriesDelay();
        recovery7.maxRetries = 18;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
    }

    @Test
    public void test02656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02656");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setService("");
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.consoleLogLevel;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02657");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        long long10 = atomikosProperties5.getMaxTimeout();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet12 = properties11.keySet();
        atomikosProperties5.set(properties11, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj18 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((-1L));
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.get((java.lang.Object) 0.0d);
        java.lang.Object obj25 = properties22.clone();
        boolean boolean27 = properties11.replace((java.lang.Object) (-1L), obj25, (java.lang.Object) 100.0d);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        long long37 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet39 = properties38.keySet();
        atomikosProperties32.set(properties38, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str43 = atomikosProperties32.logBaseDir;
        java.lang.String str44 = atomikosProperties32.logBaseDir;
        java.util.Properties properties45 = atomikosProperties32.asProperties();
        java.lang.Object obj46 = properties0.replace((java.lang.Object) properties29, (java.lang.Object) atomikosProperties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        int int50 = atomikosProperties47.getConsoleFileLimit();
        java.util.Properties properties51 = atomikosProperties47.asProperties();
        boolean boolean53 = properties0.remove((java.lang.Object) atomikosProperties47, (java.lang.Object) 32L);
        atomikosProperties47.setEnableLogging(true);
        atomikosProperties47.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test02658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02658");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        long long13 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.serialJtaTransactions = false;
        long long16 = atomikosProperties0.maxTimeout;
        atomikosProperties0.consoleFileCount = (short) 0;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
    }

    @Test
    public void test02659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02659");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.maxActives = 50;
        atomikosProperties0.setEnableLogging(false);
        int int12 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test02660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02660");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        int int21 = atomikosProperties19.getConsoleFileCount();
        long long22 = atomikosProperties19.getCheckpointInterval();
        long long23 = atomikosProperties19.getCheckpointInterval();
        boolean boolean24 = atomikosProperties19.serialJtaTransactions;
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int27 = atomikosProperties26.getConsoleFileCount();
        int int28 = atomikosProperties26.maxActives;
        java.lang.String str29 = atomikosProperties26.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        atomikosProperties30.setCheckpointInterval(10000L);
        long long37 = atomikosProperties30.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel38 = atomikosProperties30.getConsoleLogLevel();
        atomikosProperties26.consoleLogLevel = atomikosLoggingLevel38;
        java.util.Properties properties40 = atomikosProperties26.asProperties();
        atomikosProperties26.allowSubTransactions = false;
        java.lang.Object obj43 = properties8.getOrDefault((java.lang.Object) properties25, (java.lang.Object) false);
        java.util.Enumeration<?> wildcardEnumeration44 = properties8.propertyNames();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel38 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel38.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
        org.junit.Assert.assertNotNull(wildcardEnumeration44);
    }

    @Test
    public void test02661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02661");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        long long7 = atomikosProperties0.checkpointInterval;
        java.lang.String str8 = atomikosProperties0.consoleFileName;
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setCheckpointInterval(97L);
        java.lang.String str13 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
    }

    @Test
    public void test02662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02662");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        long long9 = recovery0.retryInterval;
        long long10 = recovery0.forgetOrphanedLogEntriesDelay;
        long long11 = recovery0.getRetryInterval();
        recovery0.setDelay(50L);
        long long14 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long15 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (short) 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 86400000L + "'", long15 == 86400000L);
    }

    @Test
    public void test02663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02663");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Collection<java.lang.Object> objCollection49 = properties48.values();
        boolean boolean50 = properties48.isEmpty();
        boolean boolean51 = properties48.isEmpty();
        java.util.Set<java.lang.String> strSet52 = properties48.stringPropertyNames();
        boolean boolean53 = properties40.containsValue((java.lang.Object) properties48);
        properties40.clear();
        java.io.Reader reader55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.load(reader55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test02664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02664");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long5 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        atomikosProperties0.maxTimeout = (short) 10;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test02665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02665");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        atomikosProperties9.setConsoleFileCount((int) '4');
        int int33 = atomikosProperties9.getConsoleFileLimit();
        boolean boolean34 = atomikosProperties9.allowSubTransactions;
        long long35 = atomikosProperties9.getDefaultJtaTimeout();
        java.lang.String str36 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.threadedTwoPhaseCommit = false;
        java.lang.String str39 = atomikosProperties9.getLogBaseName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
    }

    @Test
    public void test02666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02666");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties6.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long29 = atomikosProperties28.checkpointInterval;
        atomikosProperties28.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setDelay((long) (short) 0);
        recovery32.maxRetries = (short) -1;
        long long39 = recovery32.retryInterval;
        recovery32.setMaxRetries(0);
        boolean boolean42 = properties6.remove((java.lang.Object) "{}", (java.lang.Object) recovery32);
        java.util.Properties properties43 = new java.util.Properties(properties6);
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.get((java.lang.Object) 0.0d);
        java.lang.Object obj47 = properties44.clone();
        java.lang.String str48 = properties44.toString();
        boolean boolean51 = properties44.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties44.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int54 = atomikosProperties53.getConsoleFileCount();
        int int55 = atomikosProperties53.maxActives;
        atomikosProperties53.maxActives = 50;
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Collection<java.lang.Object> objCollection60 = properties58.values();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Collection<java.lang.Object> objCollection63 = properties62.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.enableLogging = true;
        long long67 = atomikosProperties64.getCheckpointInterval();
        boolean boolean69 = properties62.remove((java.lang.Object) long67, (java.lang.Object) (byte) 100);
        boolean boolean71 = properties62.equals((java.lang.Object) (short) 1);
        java.lang.Object obj74 = properties62.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties62.keys();
        java.util.Properties properties76 = new java.util.Properties();
        java.util.Properties properties77 = new java.util.Properties(properties76);
        boolean boolean78 = properties76.isEmpty();
        boolean boolean79 = properties58.remove((java.lang.Object) objEnumeration75, (java.lang.Object) properties76);
        boolean boolean80 = properties44.remove((java.lang.Object) 50, (java.lang.Object) properties76);
        boolean boolean81 = properties6.containsValue((java.lang.Object) properties76);
        properties76.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{}" + "'", str48, "{}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 500L + "'", long67 == 500L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test02667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02667");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        recovery17.maxRetries = (byte) 100;
        int int42 = recovery17.maxRetries;
        long long43 = recovery17.retryInterval;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
    }

    @Test
    public void test02668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02668");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.logBaseDir = "{}";
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.logBaseName = "hi!";
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test02669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02669");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        long long13 = atomikosProperties0.getCheckpointInterval();
        int int14 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test02670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02670");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) 0.0d);
        java.lang.Object obj33 = properties30.clone();
        java.lang.String str34 = properties30.toString();
        boolean boolean36 = properties24.remove((java.lang.Object) properties30, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration37 = properties24.propertyNames();
        java.util.Properties properties38 = new java.util.Properties(properties24);
        java.util.Properties properties39 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        long long45 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet47 = properties46.keySet();
        atomikosProperties40.set(properties46, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str51 = atomikosProperties40.service;
        atomikosProperties40.setSerialJtaTransactions(false);
        int int54 = atomikosProperties40.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        java.lang.String str60 = atomikosProperties55.transactionManagerUniqueName;
        long long61 = atomikosProperties55.getDefaultJtaTimeout();
        long long62 = atomikosProperties55.checkpointInterval;
        int int63 = atomikosProperties55.getConsoleFileCount();
        java.lang.Object obj64 = properties39.put((java.lang.Object) atomikosProperties40, (java.lang.Object) atomikosProperties55);
        java.lang.String str65 = atomikosProperties40.logBaseName;
        long long66 = atomikosProperties40.getMaxTimeout();
        java.lang.String str67 = atomikosProperties40.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 500L + "'", long62 == 500L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tmlog" + "'", str67, "tmlog");
    }

    @Test
    public void test02671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02671");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        java.lang.String str11 = atomikosProperties6.logBaseName;
        atomikosProperties6.outputDir = "";
        java.util.Properties properties14 = atomikosProperties6.asProperties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Collection<java.lang.Object> objCollection18 = properties16.values();
        int int19 = properties16.size();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties16.elements();
        java.util.Properties properties21 = new java.util.Properties(properties16);
        boolean boolean22 = properties14.containsKey((java.lang.Object) properties16);
        java.util.Collection<java.lang.Object> objCollection23 = properties14.values();
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.get((java.lang.Object) 0.0d);
        java.lang.Object obj27 = properties24.clone();
        java.lang.String str28 = properties24.toString();
        boolean boolean31 = properties24.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj32 = null;
        boolean boolean33 = properties24.equals(obj32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.enableLogging = true;
        long long37 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str38 = atomikosProperties34.getService();
        java.lang.String str39 = atomikosProperties34.logBaseDir;
        atomikosProperties34.setEnableLogging(false);
        boolean boolean42 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties34.getConsoleLogLevel();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection51 = properties49.values();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.keys();
        boolean boolean53 = properties47.contains((java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        java.lang.String str60 = atomikosProperties55.logBaseName;
        atomikosProperties55.outputDir = "";
        java.util.Properties properties63 = atomikosProperties55.asProperties();
        java.util.Properties properties64 = atomikosProperties55.asProperties();
        boolean boolean65 = properties47.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties55);
        java.lang.Object obj66 = properties24.getOrDefault((java.lang.Object) atomikosProperties34, (java.lang.Object) properties47);
        atomikosProperties34.setConsoleFileCount((int) '#');
        boolean boolean69 = properties0.remove((java.lang.Object) objCollection23, (java.lang.Object) atomikosProperties34);
        boolean boolean70 = atomikosProperties34.enableLogging;
        long long71 = atomikosProperties34.getMaxTimeout();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
    }

    @Test
    public void test02672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02672");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        recovery17.setForgetOrphanedLogEntriesDelay((long) '4');
        long long42 = recovery17.getDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
    }

    @Test
    public void test02673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02673");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.maxActives = 50;
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        java.lang.String str6 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test02674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02674");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test02675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02675");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        java.lang.String str5 = atomikosProperties0.getService();
        atomikosProperties0.checkpointInterval = (short) 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test02676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02676");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.String> strSet31 = properties30.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(objEnumeration32);
    }

    @Test
    public void test02677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02677");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        recovery0.setDelay((long) (short) 1);
        recovery0.setRetryInterval((long) '4');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
    }

    @Test
    public void test02678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02678");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        long long8 = recovery0.getDelay();
        long long9 = recovery0.getRetryInterval();
        long long10 = recovery0.getRetryInterval();
        long long11 = recovery0.forgetOrphanedLogEntriesDelay;
        long long12 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test02679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02679");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        long long4 = recovery0.getDelay();
        long long5 = recovery0.delay;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 0);
        long long8 = recovery0.getDelay();
        recovery0.setRetryInterval(300000L);
        int int11 = recovery0.getMaxRetries();
        long long12 = recovery0.retryInterval;
        long long13 = recovery0.getDelay();
        recovery0.delay = (byte) -1;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
    }

    @Test
    public void test02680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02680");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.storeToXML(outputStream5, "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
    }

    @Test
    public void test02681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02681");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.consoleFileLimit = 50;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        atomikosProperties11.set(properties17, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str22 = atomikosProperties11.logBaseDir;
        java.lang.String str23 = atomikosProperties11.logBaseDir;
        java.lang.String str24 = atomikosProperties11.logBaseDir;
        boolean boolean25 = atomikosProperties11.isEnableLogging();
        boolean boolean26 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((-1L));
        long long32 = atomikosProperties29.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int34 = atomikosProperties33.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        atomikosProperties35.setCheckpointInterval(10000L);
        long long42 = atomikosProperties35.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties35.consoleLogLevel = atomikosLoggingLevel43;
        atomikosProperties33.consoleLogLevel = atomikosLoggingLevel43;
        atomikosProperties29.consoleLogLevel = atomikosLoggingLevel43;
        atomikosProperties11.consoleLogLevel = atomikosLoggingLevel43;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel43;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 500L + "'", long32 == 500L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
    }

    @Test
    public void test02682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02682");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        boolean boolean38 = properties8.contains((java.lang.Object) properties23);
        boolean boolean39 = properties23.isEmpty();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.lang.Object obj45 = properties41.setProperty("hi!", "{}");
        java.lang.String str47 = properties41.getProperty("tmlog");
        properties41.clear();
        java.util.Set<java.lang.String> strSet49 = properties41.stringPropertyNames();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.enableLogging = true;
        int int55 = atomikosProperties52.consoleFileLimit;
        atomikosProperties52.logBaseName = "hi!";
        atomikosProperties52.enableLogging = false;
        atomikosProperties52.setMaxTimeout((long) '4');
        atomikosProperties52.setMaxTimeout((long) 1);
        atomikosProperties0.set(properties23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setDefaultJtaTimeout((-1L));
        long long68 = atomikosProperties65.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int70 = atomikosProperties69.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.logBaseDir = "";
        atomikosProperties71.setConsoleFileCount((int) (short) 10);
        atomikosProperties71.setCheckpointInterval(10000L);
        long long78 = atomikosProperties71.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel79 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties71.consoleLogLevel = atomikosLoggingLevel79;
        atomikosProperties69.consoleLogLevel = atomikosLoggingLevel79;
        atomikosProperties65.consoleLogLevel = atomikosLoggingLevel79;
        atomikosProperties65.forceShutdownOnVmExit = false;
        atomikosProperties65.checkpointInterval = (short) 1;
        atomikosProperties65.consoleFileCount = 0;
        atomikosProperties65.maxActives = (short) 1;
        atomikosProperties65.setTransactionManagerUniqueName("");
        java.lang.Object obj93 = properties23.remove((java.lang.Object) atomikosProperties65);
        atomikosProperties65.setEnableLogging(false);
        java.util.Properties properties96 = atomikosProperties65.asProperties();
        java.util.Set<java.lang.String> strSet97 = properties96.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel79 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel79.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertNotNull(properties96);
        org.junit.Assert.assertNotNull(strSet97);
    }

    @Test
    public void test02683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02683");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery25.maxRetries = (-1);
        recovery25.setDelay((long) (short) 0);
        long long30 = recovery25.forgetOrphanedLogEntriesDelay;
        recovery25.retryInterval = 500L;
        recovery25.retryInterval = '4';
        long long35 = recovery25.getRetryInterval();
        long long36 = recovery25.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj37 = null;
        java.lang.Object obj38 = properties15.getOrDefault((java.lang.Object) long36, obj37);
        boolean boolean39 = properties15.isEmpty();
        java.util.Properties properties40 = new java.util.Properties(properties15);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Collection<java.lang.Object> objCollection43 = properties42.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.enableLogging = true;
        long long47 = atomikosProperties44.getCheckpointInterval();
        boolean boolean49 = properties42.remove((java.lang.Object) long47, (java.lang.Object) (byte) 100);
        boolean boolean51 = properties42.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet52 = properties42.entrySet();
        java.lang.Object obj53 = properties42.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.logBaseDir = "";
        atomikosProperties54.setConsoleFileCount((int) (short) 10);
        long long59 = atomikosProperties54.getMaxTimeout();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet61 = properties60.keySet();
        atomikosProperties54.set(properties60, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str65 = atomikosProperties54.logBaseDir;
        boolean boolean66 = atomikosProperties54.enableLogging;
        int int67 = atomikosProperties54.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.logBaseDir = "";
        atomikosProperties69.setConsoleFileCount((int) (short) 10);
        java.lang.String str74 = atomikosProperties69.logBaseName;
        atomikosProperties69.outputDir = "";
        java.util.Properties properties77 = atomikosProperties69.asProperties();
        atomikosProperties69.setConsoleFileLimit(1);
        boolean boolean80 = properties42.replace((java.lang.Object) int67, (java.lang.Object) 100.0f, (java.lang.Object) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.logBaseDir = "";
        atomikosProperties81.setConsoleFileCount((int) (short) 10);
        atomikosProperties81.setLogBaseDir("{}");
        boolean boolean88 = atomikosProperties81.isSerialJtaTransactions();
        boolean boolean89 = atomikosProperties81.allowSubTransactions;
        atomikosProperties81.consoleFileLimit = 50;
        atomikosProperties81.maxActives = (-1);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel94 = atomikosProperties81.consoleLogLevel;
        boolean boolean95 = properties42.equals((java.lang.Object) atomikosProperties81);
        java.lang.Object obj96 = properties40.remove((java.lang.Object) atomikosProperties81);
        java.lang.String str97 = atomikosProperties81.logBaseDir;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 86400000L + "'", long30 == 86400000L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 52L + "'", long35 == 52L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 86400000L + "'", long36 == 86400000L);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 500L + "'", long47 == 500L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEntrySet52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel94 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel94.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "{}" + "'", str97, "{}");
    }

    @Test
    public void test02684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02684");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        atomikosProperties10.setService("tmlog");
        atomikosProperties10.setCheckpointInterval((long) (short) 0);
        long long18 = atomikosProperties10.getCheckpointInterval();
        java.lang.String str19 = atomikosProperties10.getService();
        atomikosProperties10.setMaxActives((int) (short) 100);
        java.lang.Object obj22 = properties9.remove((java.lang.Object) atomikosProperties10);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection27 = properties25.values();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        java.lang.Object obj30 = properties23.put((java.lang.Object) objEnumeration28, (java.lang.Object) (-1.0d));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        long long36 = atomikosProperties31.getMaxTimeout();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet38 = properties37.keySet();
        atomikosProperties31.set(properties37, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str42 = atomikosProperties31.logBaseDir;
        java.lang.String str43 = atomikosProperties31.logBaseDir;
        java.util.Properties properties44 = atomikosProperties31.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int46 = atomikosProperties45.getConsoleFileCount();
        int int47 = atomikosProperties45.maxActives;
        atomikosProperties45.setConsoleFileName("");
        atomikosProperties45.transactionManagerUniqueName = "{}";
        java.util.Properties properties52 = atomikosProperties45.asProperties();
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        java.lang.String str60 = atomikosProperties55.transactionManagerUniqueName;
        long long61 = atomikosProperties55.getDefaultJtaTimeout();
        long long62 = atomikosProperties55.checkpointInterval;
        java.lang.String str63 = atomikosProperties55.consoleFileName;
        atomikosProperties55.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj66 = properties23.putIfAbsent((java.lang.Object) properties53, (java.lang.Object) atomikosProperties55);
        boolean boolean67 = properties9.equals((java.lang.Object) atomikosProperties55);
        atomikosProperties55.service = "{com.atomikos.icatch.hi!=-1.0, =hi!}";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 50 + "'", int47 == 50);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 500L + "'", long62 == 500L);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test02685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02685");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        int int9 = recovery0.maxRetries;
        int int10 = recovery0.getMaxRetries();
        int int11 = recovery0.getMaxRetries();
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 86400000L + "'", long12 == 86400000L);
    }

    @Test
    public void test02686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02686");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet9 = properties8.stringPropertyNames();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test02687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02687");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet9 = properties8.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.elements();
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.lang.Object obj14 = properties11.setProperty("{com.atomikos.icatch.tmlog=-1}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test02688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02688");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        atomikosProperties5.setLogBaseDir("{}");
        int int12 = atomikosProperties5.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        int int16 = atomikosProperties13.consoleFileLimit;
        atomikosProperties13.logBaseName = "hi!";
        boolean boolean19 = atomikosProperties13.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery20.maxRetries = (-1);
        recovery20.retryInterval = 10000L;
        boolean boolean25 = properties0.replace((java.lang.Object) int12, (java.lang.Object) boolean19, (java.lang.Object) 10000L);
        int int26 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        java.lang.String str32 = atomikosProperties27.logBaseName;
        atomikosProperties27.outputDir = "";
        java.util.Properties properties35 = atomikosProperties27.asProperties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Collection<java.lang.Object> objCollection39 = properties37.values();
        int int40 = properties37.size();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties37.elements();
        java.util.Properties properties42 = new java.util.Properties(properties37);
        boolean boolean43 = properties35.containsKey((java.lang.Object) properties37);
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.enableLogging = true;
        long long48 = atomikosProperties45.getCheckpointInterval();
        atomikosProperties45.setService("tmlog");
        atomikosProperties45.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Collection<java.lang.Object> objCollection55 = properties54.values();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Collection<java.lang.Object> objCollection58 = properties56.values();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties56.keys();
        boolean boolean60 = properties54.contains((java.lang.Object) properties56);
        boolean boolean61 = properties54.isEmpty();
        boolean boolean62 = properties54.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery64 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery64.maxRetries = (-1);
        recovery64.setDelay((long) (short) 0);
        recovery64.maxRetries = (short) -1;
        long long71 = recovery64.retryInterval;
        int int72 = recovery64.getMaxRetries();
        atomikosProperties45.set(properties54, "tmlog", (java.lang.Object) int72);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties54.elements();
        boolean boolean75 = properties35.containsValue((java.lang.Object) properties54);
        boolean boolean76 = properties0.equals((java.lang.Object) boolean75);
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream77, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 500L + "'", long48 == 500L);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 10000L + "'", long71 == 10000L);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test02689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02689");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean10 = atomikosProperties0.serialJtaTransactions;
        java.lang.String str11 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test02690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02690");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties8.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        java.util.Set<java.lang.String> strSet11 = properties8.stringPropertyNames();
        properties8.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.logBaseDir = "";
        atomikosProperties13.setConsoleFileCount((int) (short) 10);
        java.lang.String str18 = atomikosProperties13.transactionManagerUniqueName;
        atomikosProperties13.defaultJtaTimeout = (byte) -1;
        boolean boolean21 = atomikosProperties13.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties13.recovery;
        int int23 = recovery22.maxRetries;
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Collection<java.lang.Object> objCollection26 = properties24.values();
        int int27 = properties24.size();
        int int28 = properties24.size();
        java.util.Set<java.lang.Object> objSet29 = properties24.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str41 = atomikosProperties30.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery42.maxRetries = (-1);
        recovery42.setDelay((long) (short) 1);
        long long47 = recovery42.getForgetOrphanedLogEntriesDelay();
        long long48 = recovery42.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj49 = properties24.put((java.lang.Object) atomikosProperties30, (java.lang.Object) long48);
        atomikosProperties30.setForceShutdownOnVmExit(false);
        java.lang.String str52 = atomikosProperties30.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int54 = atomikosProperties53.getConsoleFileCount();
        int int55 = atomikosProperties53.maxActives;
        atomikosProperties53.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        atomikosProperties53.consoleLogLevel = atomikosLoggingLevel58;
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel58);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.get((java.lang.Object) 0.0d);
        java.lang.Object obj64 = properties61.clone();
        java.lang.String str65 = properties61.toString();
        java.util.Properties properties66 = new java.util.Properties(properties61);
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Collection<java.lang.Object> objCollection69 = properties67.values();
        int int70 = properties67.size();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties67.elements();
        boolean boolean72 = properties66.equals((java.lang.Object) objEnumeration71);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery73 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long74 = recovery73.getRetryInterval();
        long long75 = recovery73.delay;
        boolean boolean76 = properties66.containsValue((java.lang.Object) recovery73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int78 = atomikosProperties77.getConsoleFileCount();
        int int79 = atomikosProperties77.maxActives;
        atomikosProperties77.setConsoleFileName("");
        boolean boolean82 = atomikosProperties77.forceShutdownOnVmExit;
        long long83 = atomikosProperties77.maxTimeout;
        int int84 = atomikosProperties77.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int86 = atomikosProperties85.getConsoleFileCount();
        int int87 = atomikosProperties85.maxActives;
        atomikosProperties85.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel90 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        atomikosProperties85.consoleLogLevel = atomikosLoggingLevel90;
        atomikosProperties77.setConsoleLogLevel(atomikosLoggingLevel90);
        java.lang.Object obj93 = properties66.get((java.lang.Object) atomikosLoggingLevel90);
        boolean boolean94 = properties8.replace((java.lang.Object) recovery22, (java.lang.Object) atomikosLoggingLevel58, (java.lang.Object) properties66);
        recovery22.setMaxRetries((-1));
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 86400000L + "'", long47 == 86400000L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 86400000L + "'", long48 == 86400000L);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{}" + "'", str65, "{}");
        org.junit.Assert.assertNotNull(objCollection69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 10000L + "'", long74 == 10000L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 300000L + "'", long83 == 300000L);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel90 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel90.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test02691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02691");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        atomikosProperties0.logBaseDir = "hi!";
        atomikosProperties0.allowSubTransactions = false;
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.consoleFileName = "";
        atomikosProperties0.serialJtaTransactions = false;
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test02692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02692");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean18 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.forceShutdownOnVmExit = false;
        boolean boolean21 = atomikosProperties0.enableLogging;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test02693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02693");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        boolean boolean11 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.save(outputStream13, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test02694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02694");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        int int10 = atomikosProperties0.maxActives;
        boolean boolean11 = atomikosProperties0.enableLogging;
        atomikosProperties0.maxTimeout = 5;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test02695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02695");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        recovery0.setMaxRetries((int) 'a');
        long long7 = recovery0.forgetOrphanedLogEntriesDelay;
        long long8 = recovery0.getRetryInterval();
        recovery0.setDelay((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test02696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02696");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.String str13 = properties9.toString();
        boolean boolean16 = properties9.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj17 = properties7.replace((java.lang.Object) 10.0d, (java.lang.Object) properties9);
        java.lang.String str18 = properties9.toString();
        java.util.Properties properties19 = new java.util.Properties(properties9);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.logBaseDir = "";
        boolean boolean24 = atomikosProperties21.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        long long30 = atomikosProperties25.getMaxTimeout();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet32 = properties31.keySet();
        atomikosProperties25.set(properties31, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj38 = properties31.setProperty("", "hi!");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Collection<java.lang.Object> objCollection41 = properties39.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean43 = properties31.remove((java.lang.Object) objCollection41, (java.lang.Object) atomikosLoggingLevel42);
        atomikosProperties21.setConsoleLogLevel(atomikosLoggingLevel42);
        boolean boolean45 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        int int46 = atomikosProperties21.consoleFileLimit;
        atomikosProperties21.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test02697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02697");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        long long60 = atomikosProperties43.defaultJtaTimeout;
        atomikosProperties43.setLogBaseName("{}");
        java.lang.String str63 = atomikosProperties43.consoleFileName;
        atomikosProperties43.maxTimeout = 10000L;
        atomikosProperties43.setMaxTimeout((long) (short) 10);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
    }

    @Test
    public void test02698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02698");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) (short) 100);
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
    }

    @Test
    public void test02699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02699");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        boolean boolean34 = atomikosProperties31.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = atomikosProperties31.getRecovery();
        boolean boolean36 = properties7.contains((java.lang.Object) atomikosProperties31);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration37 = properties7.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.springframework.boot.jta.atomikos.AtomikosProperties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(recovery35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test02700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02700");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        atomikosProperties9.setConsoleFileCount((int) '4');
        java.util.Properties properties33 = atomikosProperties9.asProperties();
        java.io.OutputStream outputStream34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties33.store(outputStream34, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(properties33);
    }

    @Test
    public void test02701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02701");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        atomikosProperties0.defaultJtaTimeout = 'a';
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.enableLogging;
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
    }

    @Test
    public void test02702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02702");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.maxTimeout = ' ';
        atomikosProperties0.logBaseName = "tm.out";
        int int10 = atomikosProperties0.maxActives;
        atomikosProperties0.setService("hi!");
        java.lang.String str13 = atomikosProperties0.service;
        boolean boolean14 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test02703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02703");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.allowSubTransactions = false;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test02704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02704");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.maxActives = (short) 100;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setDefaultJtaTimeout((-1L));
        long long14 = atomikosProperties11.checkpointInterval;
        boolean boolean15 = atomikosProperties11.forceShutdownOnVmExit;
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setOutputDir("");
        atomikosProperties11.setConsoleFileName("hi!");
        atomikosProperties11.setDefaultJtaTimeout((long) (byte) 1);
        int int24 = atomikosProperties11.consoleFileCount;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02705");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.storeToXML(outputStream12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={true=10000}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test02706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02706");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Collection<java.lang.Object> objCollection4 = properties2.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.lang.Object obj7 = properties0.put((java.lang.Object) objEnumeration5, (java.lang.Object) (-1.0d));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        long long13 = atomikosProperties8.getMaxTimeout();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        atomikosProperties8.set(properties14, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str19 = atomikosProperties8.logBaseDir;
        java.lang.String str20 = atomikosProperties8.logBaseDir;
        java.util.Properties properties21 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        int int24 = atomikosProperties22.maxActives;
        atomikosProperties22.setConsoleFileName("");
        atomikosProperties22.transactionManagerUniqueName = "{}";
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        java.lang.String str37 = atomikosProperties32.transactionManagerUniqueName;
        long long38 = atomikosProperties32.getDefaultJtaTimeout();
        long long39 = atomikosProperties32.checkpointInterval;
        java.lang.String str40 = atomikosProperties32.consoleFileName;
        atomikosProperties32.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj43 = properties0.putIfAbsent((java.lang.Object) properties30, (java.lang.Object) atomikosProperties32);
        atomikosProperties32.setOutputDir("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        atomikosProperties32.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test02707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02707");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.consoleFileLimit = ' ';
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test02708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02708");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.enableLogging = false;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        boolean boolean38 = properties8.contains((java.lang.Object) properties23);
        boolean boolean39 = properties23.isEmpty();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.lang.Object obj45 = properties41.setProperty("hi!", "{}");
        java.lang.String str47 = properties41.getProperty("tmlog");
        properties41.clear();
        java.util.Set<java.lang.String> strSet49 = properties41.stringPropertyNames();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.enableLogging = true;
        int int55 = atomikosProperties52.consoleFileLimit;
        atomikosProperties52.logBaseName = "hi!";
        atomikosProperties52.enableLogging = false;
        atomikosProperties52.setMaxTimeout((long) '4');
        atomikosProperties52.setMaxTimeout((long) 1);
        atomikosProperties0.set(properties23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) 1);
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.lang.String str67 = atomikosProperties0.getService();
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.consoleFileLimit = 1;
        java.lang.String str72 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.hi!=-1.0}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test02710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02710");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties15.keys();
        int int21 = properties15.size();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties15.elements();
        properties15.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        long long30 = atomikosProperties25.getMaxTimeout();
        boolean boolean31 = atomikosProperties25.enableLogging;
        java.lang.String str32 = atomikosProperties25.logBaseDir;
        atomikosProperties0.set(properties15, "", (java.lang.Object) str32);
        java.lang.String str34 = atomikosProperties0.service;
        java.lang.String str35 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
    }

    @Test
    public void test02711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02711");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.maxRetries;
        recovery0.setRetryInterval((long) (byte) 100);
        long long9 = recovery0.getDelay();
        recovery0.setRetryInterval((long) 5);
        recovery0.setRetryInterval((long) (-1));
        long long14 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
    }

    @Test
    public void test02712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02712");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.checkpointInterval = (byte) 100;
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.transactionManagerUniqueName = "tm.out";
        java.lang.String str15 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test02713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02713");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        boolean boolean37 = properties1.isEmpty();
        java.util.Properties properties38 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration39 = properties1.propertyNames();
        java.lang.Class<?> wildcardClass40 = wildcardEnumeration39.getClass();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test02714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02714");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = properties15.replace((java.lang.Object) 10.0d, (java.lang.Object) properties17);
        java.util.Properties properties26 = new java.util.Properties(properties15);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        int int31 = atomikosProperties28.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties28.asProperties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        atomikosProperties34.setLogBaseDir("{}");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.util.Set<java.lang.String> strSet42 = properties41.stringPropertyNames();
        boolean boolean43 = properties32.containsValue((java.lang.Object) properties41);
        java.lang.Object obj44 = properties26.get((java.lang.Object) boolean43);
        java.lang.Object obj47 = properties26.setProperty("{{}={}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        java.lang.String str48 = properties26.toString();
        java.io.InputStream inputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.loadFromXML(inputStream49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}" + "'", str48, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}");
    }

    @Test
    public void test02715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02715");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Properties properties47 = new java.util.Properties(properties40);
        java.util.Properties properties48 = new java.util.Properties(properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.enableLogging = true;
        long long52 = atomikosProperties49.getCheckpointInterval();
        atomikosProperties49.setService("tmlog");
        atomikosProperties49.setCheckpointInterval((long) (short) 0);
        long long57 = atomikosProperties49.getCheckpointInterval();
        java.lang.String str58 = atomikosProperties49.getService();
        atomikosProperties49.setMaxActives((int) (short) 100);
        java.util.Properties properties61 = new java.util.Properties();
        java.lang.Object obj63 = properties61.get((java.lang.Object) 0.0d);
        java.lang.Object obj64 = properties61.clone();
        java.lang.Object obj67 = properties61.setProperty("{}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.logBaseDir = "";
        atomikosProperties68.setConsoleFileCount((int) (short) 10);
        java.lang.String str73 = atomikosProperties68.logBaseName;
        atomikosProperties68.outputDir = "";
        java.util.Properties properties76 = atomikosProperties68.asProperties();
        java.util.Set<java.lang.String> strSet77 = properties76.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties76.elements();
        java.util.Set<java.lang.Object> objSet79 = properties76.keySet();
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        boolean boolean81 = properties48.remove((java.lang.Object) (short) 100, (java.lang.Object) properties61);
        java.util.Properties properties82 = new java.util.Properties(properties61);
        java.io.OutputStream outputStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties61.storeToXML(outputStream83, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test02716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02716");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties(properties6);
        java.util.Properties properties12 = new java.util.Properties(properties6);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
    }

    @Test
    public void test02717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02717");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        int int10 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02718");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        java.util.Set<java.lang.String> strSet14 = properties6.stringPropertyNames();
        java.util.Properties properties15 = new java.util.Properties(properties6);
        java.io.PrintWriter printWriter16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.list(printWriter16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test02719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02719");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        java.lang.String str14 = atomikosProperties10.getService();
        java.lang.String str15 = atomikosProperties10.logBaseDir;
        atomikosProperties10.setEnableLogging(false);
        boolean boolean18 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties10.getConsoleLogLevel();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection27 = properties25.values();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        boolean boolean29 = properties23.contains((java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        java.lang.String str36 = atomikosProperties31.logBaseName;
        atomikosProperties31.outputDir = "";
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        boolean boolean41 = properties23.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties31);
        java.lang.Object obj42 = properties0.getOrDefault((java.lang.Object) atomikosProperties10, (java.lang.Object) properties23);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Collection<java.lang.Object> objCollection45 = properties43.values();
        int int46 = properties43.size();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties43.elements();
        java.util.Properties properties48 = new java.util.Properties(properties43);
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.lang.Object obj50 = properties23.remove((java.lang.Object) properties48);
        java.util.Properties properties51 = new java.util.Properties(properties48);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test02720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02720");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = null;
        boolean boolean14 = properties5.equals(obj13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) 0.0d);
        java.lang.Object obj18 = properties15.clone();
        java.lang.Object obj21 = properties15.setProperty("{}", "{}");
        int int22 = properties15.size();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        boolean boolean27 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.allowSubTransactions = false;
        boolean boolean30 = atomikosProperties24.serialJtaTransactions;
        boolean boolean31 = properties5.containsKey((java.lang.Object) boolean30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        atomikosProperties32.setLogBaseDir("{}");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.util.Set<java.lang.String> strSet40 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int42 = atomikosProperties41.getConsoleFileCount();
        int int43 = atomikosProperties41.maxActives;
        atomikosProperties41.setConsoleFileName("");
        atomikosProperties41.transactionManagerUniqueName = "{}";
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        boolean boolean49 = atomikosProperties41.threadedTwoPhaseCommit;
        atomikosProperties41.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int53 = atomikosProperties52.getConsoleFileCount();
        int int54 = atomikosProperties52.maxActives;
        atomikosProperties52.setConsoleFileName("");
        atomikosProperties52.transactionManagerUniqueName = "{}";
        atomikosProperties52.setMaxActives(0);
        boolean boolean61 = atomikosProperties52.forceShutdownOnVmExit;
        java.lang.Object obj62 = properties39.put((java.lang.Object) atomikosProperties41, (java.lang.Object) atomikosProperties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.logBaseDir = "";
        boolean boolean66 = atomikosProperties63.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = atomikosProperties63.getRecovery();
        boolean boolean68 = properties39.contains((java.lang.Object) atomikosProperties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int70 = atomikosProperties69.getConsoleFileCount();
        int int71 = atomikosProperties69.maxActives;
        int int72 = atomikosProperties69.getMaxActives();
        boolean boolean73 = properties5.remove((java.lang.Object) atomikosProperties63, (java.lang.Object) int72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = null;
        atomikosProperties74.consoleLogLevel = atomikosLoggingLevel77;
        atomikosProperties74.outputDir = "";
        java.lang.String str81 = atomikosProperties74.logBaseDir;
        java.lang.String str82 = atomikosProperties74.logBaseDir;
        java.lang.Class<?> wildcardClass83 = atomikosProperties74.getClass();
        java.lang.Object obj84 = properties0.replace((java.lang.Object) atomikosProperties63, (java.lang.Object) atomikosProperties74);
        java.lang.String str87 = properties0.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={true=10000}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(recovery67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 50 + "'", int72 == 50);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{tmlog={com.atomikos.icatch.hi!=-1.0}}" + "'", str87, "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
    }

    @Test
    public void test02721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02721");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.util.Set<java.lang.String> strSet9 = properties1.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) 0.0d);
        java.lang.Object obj18 = properties15.clone();
        java.lang.String str19 = properties15.toString();
        boolean boolean22 = properties15.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj23 = properties13.replace((java.lang.Object) 10.0d, (java.lang.Object) properties15);
        java.lang.String str24 = properties15.toString();
        java.util.Properties properties25 = new java.util.Properties(properties15);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.get((java.lang.Object) 0.0d);
        java.lang.Object obj32 = properties29.clone();
        java.lang.String str33 = properties29.toString();
        boolean boolean36 = properties29.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj37 = properties27.replace((java.lang.Object) 10.0d, (java.lang.Object) properties29);
        java.util.Properties properties38 = new java.util.Properties(properties27);
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean40 = properties10.contains((java.lang.Object) properties25);
        boolean boolean41 = properties25.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery42.maxRetries = (-1);
        recovery42.setRetryInterval((long) (-1));
        java.lang.Object obj48 = properties25.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = null;
        atomikosProperties49.consoleLogLevel = atomikosLoggingLevel52;
        atomikosProperties49.outputDir = "";
        int int56 = atomikosProperties49.maxActives;
        boolean boolean57 = atomikosProperties49.isThreadedTwoPhaseCommit();
        atomikosProperties49.consoleFileLimit = (short) 10;
        java.util.Properties properties60 = atomikosProperties49.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.keys();
        boolean boolean62 = properties25.contains((java.lang.Object) properties60);
        java.lang.Object obj63 = properties1.get((java.lang.Object) properties60);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test02722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02722");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj5 = properties0.clone();
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream6, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
    }

    @Test
    public void test02723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02723");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        long long7 = recovery6.getDelay();
        int int8 = recovery6.getMaxRetries();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test02724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02724");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Properties properties47 = new java.util.Properties(properties40);
        java.io.OutputStream outputStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.storeToXML(outputStream48, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
    }

    @Test
    public void test02725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02725");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.logBaseName;
        atomikosProperties9.outputDir = "";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        java.util.Properties properties18 = atomikosProperties9.asProperties();
        boolean boolean19 = properties1.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setOutputDir("{{}={}}");
        atomikosProperties9.setConsoleFileCount(1);
        atomikosProperties9.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test02726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02726");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay(10000L);
        recovery0.delay = '#';
        recovery0.setForgetOrphanedLogEntriesDelay(1L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
    }

    @Test
    public void test02727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02727");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        boolean boolean41 = atomikosProperties29.enableLogging;
        int int42 = atomikosProperties29.maxActives;
        boolean boolean43 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.maxActives = 35;
        java.lang.Object obj54 = properties24.getOrDefault((java.lang.Object) boolean43, (java.lang.Object) 35);
        java.lang.Object obj57 = properties24.setProperty("tm.out", "{com.atomikos.icatch.hi!=-1.0}");
        java.util.Properties properties58 = new java.util.Properties(properties24);
        java.lang.Object obj59 = properties58.clone();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 35 + "'", obj54, 35);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
    }

    @Test
    public void test02728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02728");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit(1);
        atomikosProperties0.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.consoleLogLevel;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02729");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        boolean boolean17 = properties15.isEmpty();
        boolean boolean18 = properties3.equals((java.lang.Object) boolean17);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.enableLogging = true;
        long long23 = atomikosProperties20.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties20.getService();
        java.lang.String str25 = atomikosProperties20.logBaseDir;
        atomikosProperties20.setEnableLogging(false);
        boolean boolean28 = atomikosProperties20.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.enableLogging = true;
        long long32 = atomikosProperties29.getCheckpointInterval();
        java.lang.String str33 = atomikosProperties29.getService();
        java.lang.String str34 = atomikosProperties29.logBaseDir;
        atomikosProperties29.setEnableLogging(false);
        atomikosProperties29.consoleFileCount = 0;
        long long39 = atomikosProperties29.getMaxTimeout();
        boolean boolean40 = atomikosProperties29.isEnableLogging();
        atomikosProperties29.service = "tmlog";
        atomikosProperties29.setLogBaseName("{}");
        java.lang.Object obj45 = properties3.putIfAbsent((java.lang.Object) boolean28, (java.lang.Object) atomikosProperties29);
        java.util.Properties properties46 = atomikosProperties29.asProperties();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 500L + "'", long32 == 500L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(properties46);
    }

    @Test
    public void test02730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02730");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        int int5 = properties0.size();
        java.lang.String str7 = properties0.getProperty("{{}={}}");
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        java.util.Properties properties9 = new java.util.Properties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.get((java.lang.Object) 0.0d);
        java.lang.Object obj15 = properties12.clone();
        java.lang.String str16 = properties12.toString();
        boolean boolean19 = properties12.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj20 = properties10.replace((java.lang.Object) 10.0d, (java.lang.Object) properties12);
        java.lang.String str21 = properties12.toString();
        java.util.Properties properties22 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((-1L));
        int int26 = atomikosProperties23.getConsoleFileLimit();
        atomikosProperties23.checkpointInterval = 0L;
        java.lang.Object obj29 = properties12.remove((java.lang.Object) 0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.get((java.lang.Object) 0.0d);
        java.lang.Object obj44 = properties41.clone();
        java.lang.String str45 = properties41.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.logBaseDir = "";
        atomikosProperties46.setConsoleFileCount((int) (short) 10);
        long long51 = atomikosProperties46.getMaxTimeout();
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet53 = properties52.keySet();
        atomikosProperties46.set(properties52, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj59 = properties52.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setDefaultJtaTimeout((-1L));
        java.util.Properties properties63 = new java.util.Properties();
        java.lang.Object obj65 = properties63.get((java.lang.Object) 0.0d);
        java.lang.Object obj66 = properties63.clone();
        boolean boolean68 = properties52.replace((java.lang.Object) (-1L), obj66, (java.lang.Object) 100.0d);
        java.util.Properties properties69 = new java.util.Properties();
        java.util.Properties properties70 = new java.util.Properties(properties69);
        properties70.clear();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.logBaseDir = "";
        atomikosProperties73.setConsoleFileCount((int) (short) 10);
        long long78 = atomikosProperties73.getMaxTimeout();
        java.util.Properties properties79 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet80 = properties79.keySet();
        atomikosProperties73.set(properties79, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str84 = atomikosProperties73.logBaseDir;
        java.lang.String str85 = atomikosProperties73.logBaseDir;
        java.util.Properties properties86 = atomikosProperties73.asProperties();
        java.lang.Object obj87 = properties41.replace((java.lang.Object) properties70, (java.lang.Object) atomikosProperties73);
        boolean boolean88 = properties36.contains((java.lang.Object) atomikosProperties73);
        atomikosProperties73.consoleFileName = "";
        long long91 = atomikosProperties73.getMaxTimeout();
        long long92 = atomikosProperties73.defaultJtaTimeout;
        atomikosProperties73.transactionManagerUniqueName = "tm.out";
        boolean boolean95 = properties12.containsValue((java.lang.Object) atomikosProperties73);
        java.util.Properties properties96 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration97 = properties12.keys();
        java.lang.Object obj98 = properties0.remove((java.lang.Object) properties12);
        java.util.Properties properties99 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{}" + "'", str45, "{}");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertNotNull(objSet80);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 300000L + "'", long91 == 300000L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 10000L + "'", long92 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objEnumeration97);
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test02731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02731");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        int int2 = atomikosProperties0.getConsoleFileCount();
        long long3 = atomikosProperties0.getCheckpointInterval();
        boolean boolean4 = atomikosProperties0.allowSubTransactions;
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02732");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        long long60 = atomikosProperties43.defaultJtaTimeout;
        boolean boolean61 = atomikosProperties43.allowSubTransactions;
        java.lang.String str62 = atomikosProperties43.service;
        boolean boolean63 = atomikosProperties43.serialJtaTransactions;
        long long64 = atomikosProperties43.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 500L + "'", long64 == 500L);
    }

    @Test
    public void test02733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02733");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        int int9 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.enableLogging = true;
        long long18 = atomikosProperties15.getCheckpointInterval();
        boolean boolean20 = properties13.remove((java.lang.Object) long18, (java.lang.Object) (byte) 100);
        boolean boolean22 = properties13.equals((java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Class<?> wildcardClass24 = properties23.getClass();
        java.lang.Object obj25 = properties0.put((java.lang.Object) properties10, (java.lang.Object) wildcardClass24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((-1L));
        int int29 = atomikosProperties26.getConsoleFileLimit();
        java.util.Properties properties30 = atomikosProperties26.asProperties();
        boolean boolean31 = atomikosProperties26.forceShutdownOnVmExit;
        atomikosProperties26.setCheckpointInterval(10000L);
        atomikosProperties26.maxActives = 50;
        java.util.Properties properties36 = new java.util.Properties();
        int int37 = properties36.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.logBaseDir = "";
        atomikosProperties38.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getConsoleFileCount();
        int int45 = atomikosProperties43.maxActives;
        java.lang.String str46 = atomikosProperties43.getService();
        boolean boolean47 = properties36.remove((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties43);
        java.lang.String str48 = atomikosProperties38.getLogBaseName();
        java.lang.Object obj49 = properties10.replace((java.lang.Object) atomikosProperties26, (java.lang.Object) str48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.logBaseDir = "";
        atomikosProperties50.setConsoleFileCount((int) (short) 10);
        long long55 = atomikosProperties50.getMaxTimeout();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet57 = properties56.keySet();
        atomikosProperties50.set(properties56, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str61 = atomikosProperties50.logBaseDir;
        java.lang.String str62 = atomikosProperties50.logBaseDir;
        java.lang.String str63 = atomikosProperties50.logBaseDir;
        java.lang.String str64 = atomikosProperties50.getService();
        java.lang.String str65 = atomikosProperties50.outputDir;
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setConsoleFileName("");
        long long70 = atomikosProperties50.getCheckpointInterval();
        java.lang.Object obj71 = properties10.get((java.lang.Object) atomikosProperties50);
        java.lang.String str72 = atomikosProperties50.getLogBaseName();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
    }

    @Test
    public void test02734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02734");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj27 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        boolean boolean36 = properties20.replace((java.lang.Object) (-1L), obj34, (java.lang.Object) 100.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean41 = properties3.equals((java.lang.Object) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = null;
        atomikosProperties42.consoleLogLevel = atomikosLoggingLevel45;
        atomikosProperties42.outputDir = "";
        int int49 = atomikosProperties42.maxActives;
        boolean boolean50 = atomikosProperties42.isThreadedTwoPhaseCommit();
        atomikosProperties42.consoleFileLimit = (short) 10;
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.enableLogging = true;
        long long57 = atomikosProperties54.getCheckpointInterval();
        java.lang.String str58 = atomikosProperties54.getOutputDir();
        atomikosProperties54.defaultJtaTimeout = 'a';
        java.lang.Object obj61 = properties20.replace((java.lang.Object) properties53, (java.lang.Object) 'a');
        java.lang.Object obj62 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = properties20.contains(obj62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test02735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02735");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.consoleFileName = "tmlog";
        java.lang.String str12 = atomikosProperties0.outputDir;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test02736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02736");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long13 = atomikosProperties12.defaultJtaTimeout;
        java.lang.String str14 = atomikosProperties12.getLogBaseName();
        java.util.Properties properties15 = atomikosProperties12.asProperties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.lang.Object obj17 = properties11.remove((java.lang.Object) properties16);
        java.io.InputStream inputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(inputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test02737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02737");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties3.setProperty("", "");
        java.util.Properties properties17 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.util.Collection<java.lang.Object> objCollection20 = properties17.values();
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.store(outputStream21, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objCollection20);
    }

    @Test
    public void test02738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02738");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        long long5 = atomikosProperties0.checkpointInterval;
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printWriter13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test02739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02739");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.logBaseName = "";
        int int18 = atomikosProperties0.maxActives;
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
    }

    @Test
    public void test02740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02740");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Set<java.lang.String> strSet32 = properties30.stringPropertyNames();
        boolean boolean33 = properties30.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int36 = atomikosProperties35.getConsoleFileCount();
        int int37 = atomikosProperties35.maxActives;
        java.lang.String str38 = atomikosProperties35.getService();
        atomikosProperties35.setConsoleFileLimit((int) (short) 0);
        atomikosProperties35.setEnableLogging(false);
        boolean boolean43 = atomikosProperties35.isThreadedTwoPhaseCommit();
        atomikosProperties35.setEnableLogging(false);
        atomikosProperties35.service = "{{}={}}";
        atomikosProperties35.serialJtaTransactions = false;
        boolean boolean50 = properties30.contains((java.lang.Object) false);
        java.io.OutputStream outputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.store(outputStream51, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 50 + "'", int37 == 50);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test02741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02741");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        java.lang.String str5 = atomikosProperties0.service;
        atomikosProperties0.maxTimeout = 100;
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test02742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02742");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        java.lang.String str31 = atomikosProperties9.getOutputDir();
        int int32 = atomikosProperties9.getConsoleFileCount();
        long long33 = atomikosProperties9.getMaxTimeout();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
    }

    @Test
    public void test02743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02743");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        java.lang.String str12 = atomikosProperties0.service;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02744");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Properties properties47 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = null;
        atomikosProperties48.consoleLogLevel = atomikosLoggingLevel51;
        atomikosProperties48.outputDir = "";
        java.lang.String str55 = atomikosProperties48.logBaseDir;
        java.lang.String str56 = atomikosProperties48.logBaseDir;
        java.lang.Class<?> wildcardClass57 = atomikosProperties48.getClass();
        boolean boolean58 = properties47.contains((java.lang.Object) atomikosProperties48);
        properties47.clear();
        boolean boolean60 = properties47.isEmpty();
        java.util.Properties properties61 = new java.util.Properties(properties47);
        java.lang.Object obj62 = properties61.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setDefaultJtaTimeout((-1L));
        int int66 = atomikosProperties63.getConsoleFileLimit();
        atomikosProperties63.setConsoleFileName("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery69 = atomikosProperties63.recovery;
        boolean boolean70 = atomikosProperties63.serialJtaTransactions;
        java.lang.Object obj71 = properties61.get((java.lang.Object) atomikosProperties63);
        boolean boolean72 = atomikosProperties63.serialJtaTransactions;
        boolean boolean73 = atomikosProperties63.forceShutdownOnVmExit;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(recovery69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test02745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02745");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        int int40 = recovery17.maxRetries;
        recovery17.setForgetOrphanedLogEntriesDelay(0L);
        long long43 = recovery17.getRetryInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 35 + "'", int40 == 35);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
    }

    @Test
    public void test02746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02746");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        int int18 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str19 = atomikosProperties0.getOutputDir();
        atomikosProperties0.consoleFileName = "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str19, "{com.atomikos.icatch.hi!=-1.0}");
    }

    @Test
    public void test02747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02747");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.logBaseDir = "";
        atomikosProperties12.setConsoleFileCount((int) (short) 10);
        java.lang.String str17 = atomikosProperties12.logBaseName;
        java.lang.String str18 = atomikosProperties12.logBaseDir;
        long long19 = atomikosProperties12.defaultJtaTimeout;
        java.util.Properties properties20 = atomikosProperties12.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties12.getRecovery();
        recovery21.maxRetries = (short) 10;
        long long24 = recovery21.retryInterval;
        boolean boolean25 = properties11.containsValue((java.lang.Object) long24);
        java.lang.Object obj28 = properties11.setProperty("{{}=tmlog}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj42 = properties35.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((-1L));
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.get((java.lang.Object) 0.0d);
        java.lang.Object obj49 = properties46.clone();
        boolean boolean51 = properties35.replace((java.lang.Object) (-1L), obj49, (java.lang.Object) 100.0d);
        java.util.Properties properties52 = new java.util.Properties();
        java.util.Properties properties53 = new java.util.Properties(properties52);
        properties53.clear();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.elements();
        java.lang.String str58 = properties53.getProperty("");
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.get((java.lang.Object) 0.0d);
        java.lang.Object obj62 = properties59.clone();
        java.lang.String str63 = properties59.toString();
        boolean boolean65 = properties53.remove((java.lang.Object) properties59, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration66 = properties53.propertyNames();
        java.util.Properties properties67 = new java.util.Properties(properties53);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.io.InputStream inputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(inputStream69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration66);
    }

    @Test
    public void test02748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02748");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(10L);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.enableLogging = true;
        long long19 = atomikosProperties16.getCheckpointInterval();
        boolean boolean21 = properties14.remove((java.lang.Object) long19, (java.lang.Object) (byte) 100);
        boolean boolean23 = properties14.equals((java.lang.Object) (short) 1);
        java.util.Properties properties24 = new java.util.Properties(properties14);
        java.lang.Class<?> wildcardClass25 = properties24.getClass();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.enableLogging = true;
        long long29 = atomikosProperties26.getCheckpointInterval();
        atomikosProperties26.setService("tmlog");
        atomikosProperties26.setConsoleFileName("{}");
        java.util.Properties properties34 = atomikosProperties26.asProperties();
        atomikosProperties26.setCheckpointInterval((long) (short) 10);
        atomikosProperties26.logBaseName = "";
        int int39 = atomikosProperties26.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long41 = atomikosProperties40.defaultJtaTimeout;
        atomikosProperties40.logBaseName = "tm.out";
        java.lang.String str44 = atomikosProperties40.consoleFileName;
        java.lang.String str45 = atomikosProperties40.logBaseName;
        long long46 = atomikosProperties40.getMaxTimeout();
        boolean boolean47 = properties12.replace((java.lang.Object) properties24, (java.lang.Object) atomikosProperties26, (java.lang.Object) long46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties12.keys();
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream49, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 500L + "'", long19 == 500L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 300000L + "'", long46 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
    }

    @Test
    public void test02749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02749");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        boolean boolean11 = atomikosProperties8.isForceShutdownOnVmExit();
        int int12 = atomikosProperties8.consoleFileLimit;
        atomikosProperties8.consoleFileCount = 100;
        boolean boolean15 = atomikosProperties8.threadedTwoPhaseCommit;
        atomikosProperties8.enableLogging = true;
        java.lang.String str18 = atomikosProperties8.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        java.lang.String str24 = atomikosProperties19.logBaseName;
        atomikosProperties19.outputDir = "";
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.keys();
        int int41 = properties35.size();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties35.elements();
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery44.maxRetries = (-1);
        recovery44.setDelay((long) (short) 0);
        long long49 = recovery44.forgetOrphanedLogEntriesDelay;
        recovery44.retryInterval = 500L;
        recovery44.retryInterval = '4';
        long long54 = recovery44.getRetryInterval();
        long long55 = recovery44.getForgetOrphanedLogEntriesDelay();
        recovery44.retryInterval = 100L;
        recovery44.setDelay((long) ' ');
        long long60 = recovery44.delay;
        java.lang.Object obj61 = properties28.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) recovery44);
        java.util.Collection<java.lang.Object> objCollection62 = properties28.values();
        boolean boolean63 = properties7.remove((java.lang.Object) atomikosProperties8, (java.lang.Object) objCollection62);
        java.lang.String str64 = properties7.toString();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 86400000L + "'", long49 == 86400000L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 52L + "'", long54 == 52L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 86400000L + "'", long55 == 86400000L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 32L + "'", long60 == 32L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str64, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test02750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02750");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
    }

    @Test
    public void test02751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02751");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.logBaseName = "{{}={}}";
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test02752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02752");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        int int4 = atomikosProperties0.maxActives;
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.io.PrintWriter printWriter6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.list(printWriter6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertNotNull(properties5);
    }

    @Test
    public void test02753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02753");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.Object obj15 = properties9.setProperty("{}", "{}");
        int int16 = properties9.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        atomikosProperties17.setLogBaseDir("{}");
        java.lang.String str24 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("hi!");
        boolean boolean27 = atomikosProperties17.isAllowSubTransactions();
        boolean boolean28 = atomikosProperties17.isThreadedTwoPhaseCommit();
        boolean boolean29 = atomikosProperties17.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties17.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties17.recovery;
        recovery31.setMaxRetries(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str45 = atomikosProperties34.logBaseDir;
        boolean boolean46 = atomikosProperties34.enableLogging;
        atomikosProperties34.setLogBaseDir("");
        atomikosProperties34.setAllowSubTransactions(true);
        java.lang.Object obj51 = properties9.put((java.lang.Object) 10, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties52 = new java.util.Properties(properties9);
        java.lang.String str53 = properties9.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.enableLogging = true;
        java.lang.String str58 = atomikosProperties55.logBaseDir;
        atomikosProperties0.set(properties9, "tm.out", (java.lang.Object) str58);
        java.io.InputStream inputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertNotNull(recovery31);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test02754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02754");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.outputDir = "hi!";
        long long14 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.lang.String str18 = properties15.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}", "{com.atomikos.icatch.tmlog=-1}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{com.atomikos.icatch.tmlog=-1}" + "'", str18, "{com.atomikos.icatch.tmlog=-1}");
    }

    @Test
    public void test02755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02755");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        java.lang.String str13 = atomikosProperties8.logBaseName;
        java.lang.String str14 = atomikosProperties8.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.enableLogging = true;
        int int18 = atomikosProperties15.consoleFileLimit;
        atomikosProperties15.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int22 = atomikosProperties21.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        atomikosProperties23.setCheckpointInterval(10000L);
        long long30 = atomikosProperties23.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel31 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties23.consoleLogLevel = atomikosLoggingLevel31;
        atomikosProperties21.consoleLogLevel = atomikosLoggingLevel31;
        atomikosProperties15.consoleLogLevel = atomikosLoggingLevel31;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel31;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel31);
        java.util.Properties properties37 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel31 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel31.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties37);
    }

    @Test
    public void test02756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02756");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        int int4 = atomikosProperties0.maxActives;
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
    }

    @Test
    public void test02757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02757");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(10L);
        long long12 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.threadedTwoPhaseCommit = false;
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        long long18 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.allowSubTransactions = true;
        java.lang.String str21 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
    }

    @Test
    public void test02758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02758");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        recovery11.setDelay((long) 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(recovery11);
    }

    @Test
    public void test02759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02759");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties3.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.checkpointInterval = 0;
        boolean boolean11 = atomikosProperties6.isThreadedTwoPhaseCommit();
        atomikosProperties6.setSerialJtaTransactions(false);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.lang.String str28 = properties19.toString();
        java.util.Properties properties29 = new java.util.Properties(properties19);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        java.lang.String str37 = properties33.toString();
        boolean boolean40 = properties33.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj41 = properties31.replace((java.lang.Object) 10.0d, (java.lang.Object) properties33);
        java.util.Properties properties42 = new java.util.Properties(properties31);
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        boolean boolean44 = properties14.contains((java.lang.Object) properties29);
        boolean boolean45 = properties29.isEmpty();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        java.lang.Object obj51 = properties47.setProperty("hi!", "{}");
        java.lang.String str53 = properties47.getProperty("tmlog");
        properties47.clear();
        java.util.Set<java.lang.String> strSet55 = properties47.stringPropertyNames();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.enableLogging = true;
        int int61 = atomikosProperties58.consoleFileLimit;
        atomikosProperties58.logBaseName = "hi!";
        atomikosProperties58.enableLogging = false;
        atomikosProperties58.setMaxTimeout((long) '4');
        atomikosProperties58.setMaxTimeout((long) 1);
        atomikosProperties6.set(properties29, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) 1);
        atomikosProperties6.setConsoleFileLimit(10);
        boolean boolean73 = properties3.containsValue((java.lang.Object) atomikosProperties6);
        java.lang.String str75 = properties3.getProperty("{tmlog={com.atomikos.icatch.hi!=-1.0}}");
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test02760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02760");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        long long10 = atomikosProperties5.getMaxTimeout();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet12 = properties11.keySet();
        atomikosProperties5.set(properties11, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj18 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((-1L));
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.get((java.lang.Object) 0.0d);
        java.lang.Object obj25 = properties22.clone();
        boolean boolean27 = properties11.replace((java.lang.Object) (-1L), obj25, (java.lang.Object) 100.0d);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        long long37 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet39 = properties38.keySet();
        atomikosProperties32.set(properties38, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str43 = atomikosProperties32.logBaseDir;
        java.lang.String str44 = atomikosProperties32.logBaseDir;
        java.util.Properties properties45 = atomikosProperties32.asProperties();
        java.lang.Object obj46 = properties0.replace((java.lang.Object) properties29, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties47 = new java.util.Properties(properties0);
        java.io.Reader reader48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties47.load(reader48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test02761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02761");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        recovery0.maxRetries = 'a';
        int int17 = recovery0.maxRetries;
        recovery0.delay = (byte) 0;
        long long20 = recovery0.retryInterval;
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 52L + "'", long20 == 52L);
    }

    @Test
    public void test02762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02762");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties3.clear();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertNotNull(properties3);
    }

    @Test
    public void test02763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02763");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.setConsoleFileName("{hi!={}}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02764");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str9 = atomikosProperties0.outputDir;
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test02765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02765");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.Object> objSet31 = properties24.keySet();
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        java.lang.String str38 = atomikosProperties33.logBaseName;
        atomikosProperties33.outputDir = "";
        java.util.Properties properties41 = atomikosProperties33.asProperties();
        java.util.Properties properties42 = atomikosProperties33.asProperties();
        properties42.clear();
        java.lang.Object obj44 = properties24.remove((java.lang.Object) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.enableLogging = true;
        long long48 = atomikosProperties45.getCheckpointInterval();
        atomikosProperties45.setSerialJtaTransactions(false);
        boolean boolean51 = atomikosProperties45.enableLogging;
        atomikosProperties45.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.logBaseDir = "";
        atomikosProperties54.setConsoleFileCount((int) (short) 10);
        long long59 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.service = "";
        java.lang.String str62 = atomikosProperties54.logBaseDir;
        boolean boolean63 = atomikosProperties54.threadedTwoPhaseCommit;
        java.lang.String str64 = atomikosProperties54.getService();
        java.lang.String str65 = atomikosProperties54.consoleFileName;
        boolean boolean66 = atomikosProperties54.serialJtaTransactions;
        atomikosProperties54.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int69 = atomikosProperties54.getConsoleFileCount();
        atomikosProperties54.logBaseName = "";
        int int72 = atomikosProperties54.maxActives;
        boolean boolean73 = properties42.remove((java.lang.Object) atomikosProperties45, (java.lang.Object) int72);
        java.lang.String str75 = properties42.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 500L + "'", long48 == 500L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tm.out" + "'", str65, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 50 + "'", int72 == 50);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test02766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02766");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean13 = atomikosProperties0.allowSubTransactions;
        java.lang.String str14 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.enableLogging = true;
        atomikosProperties0.setSerialJtaTransactions(true);
        long long19 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
    }

    @Test
    public void test02767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02767");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        long long18 = atomikosProperties0.maxTimeout;
        java.lang.String str19 = atomikosProperties0.logBaseName;
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet21 = properties20.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        long long27 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        atomikosProperties22.set(properties28, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str33 = atomikosProperties22.logBaseDir;
        java.lang.String str34 = atomikosProperties22.logBaseDir;
        java.lang.String str35 = atomikosProperties22.logBaseDir;
        boolean boolean36 = atomikosProperties22.isEnableLogging();
        long long37 = atomikosProperties22.checkpointInterval;
        atomikosProperties22.setOutputDir("hi!");
        java.lang.String str40 = atomikosProperties22.outputDir;
        atomikosProperties22.transactionManagerUniqueName = "{}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        atomikosProperties43.setLogBaseDir("{}");
        java.lang.String str50 = atomikosProperties43.getOutputDir();
        atomikosProperties43.setLogBaseName("hi!");
        boolean boolean53 = atomikosProperties43.isAllowSubTransactions();
        boolean boolean54 = atomikosProperties43.isThreadedTwoPhaseCommit();
        boolean boolean55 = atomikosProperties43.forceShutdownOnVmExit;
        boolean boolean56 = atomikosProperties43.enableLogging;
        java.lang.String str57 = atomikosProperties43.logBaseName;
        int int58 = atomikosProperties43.maxActives;
        boolean boolean59 = properties20.remove((java.lang.Object) atomikosProperties22, (java.lang.Object) int58);
        atomikosProperties22.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0, =hi!}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test02768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02768");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        int int9 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.enableLogging = true;
        long long18 = atomikosProperties15.getCheckpointInterval();
        boolean boolean20 = properties13.remove((java.lang.Object) long18, (java.lang.Object) (byte) 100);
        boolean boolean22 = properties13.equals((java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Class<?> wildcardClass24 = properties23.getClass();
        java.lang.Object obj25 = properties0.put((java.lang.Object) properties10, (java.lang.Object) wildcardClass24);
        java.util.Properties properties26 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties10.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        boolean boolean31 = atomikosProperties28.isForceShutdownOnVmExit();
        atomikosProperties28.outputDir = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties28.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        atomikosProperties35.setLogBaseDir("{}");
        boolean boolean42 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str43 = atomikosProperties35.getTransactionManagerUniqueName();
        atomikosProperties35.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj46 = properties10.putIfAbsent((java.lang.Object) atomikosProperties28, (java.lang.Object) atomikosProperties35);
        java.lang.String str48 = properties10.getProperty("tmlog");
        java.util.Set<java.lang.Object> objSet49 = properties10.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(objSet49);
    }

    @Test
    public void test02769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02769");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties3.setProperty("", "");
        java.util.Properties properties17 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = null;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel21;
        atomikosProperties18.outputDir = "";
        int int25 = atomikosProperties18.maxActives;
        java.lang.String str26 = atomikosProperties18.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = atomikosProperties18.getRecovery();
        recovery27.setForgetOrphanedLogEntriesDelay(0L);
        long long30 = recovery27.delay;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        java.lang.String str36 = atomikosProperties31.logBaseName;
        java.lang.String str37 = atomikosProperties31.logBaseDir;
        long long38 = atomikosProperties31.defaultJtaTimeout;
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        long long45 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet47 = properties46.keySet();
        atomikosProperties40.set(properties46, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj53 = properties46.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet54 = properties46.stringPropertyNames();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        boolean boolean56 = properties3.remove((java.lang.Object) recovery27, (java.lang.Object) properties46);
        recovery27.setForgetOrphanedLogEntriesDelay(300000L);
        recovery27.retryInterval = (short) 0;
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(recovery27);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test02770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02770");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.maxRetries = (short) -1;
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.delay = 20;
        recovery0.forgetOrphanedLogEntriesDelay = 32L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test02771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02771");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        boolean boolean7 = atomikosProperties0.forceShutdownOnVmExit;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.String str13 = properties9.toString();
        java.util.Properties properties14 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.keys();
        int int16 = properties14.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = (short) -1;
        boolean boolean24 = properties8.remove((java.lang.Object) properties14, (java.lang.Object) (short) -1);
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection27 = properties25.values();
        int int28 = properties25.size();
        int int29 = properties25.size();
        int int30 = properties25.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        boolean boolean34 = atomikosProperties31.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        long long40 = atomikosProperties35.getMaxTimeout();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet42 = properties41.keySet();
        atomikosProperties35.set(properties41, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj48 = properties41.setProperty("", "hi!");
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection51 = properties49.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean53 = properties41.remove((java.lang.Object) objCollection51, (java.lang.Object) atomikosLoggingLevel52);
        atomikosProperties31.setConsoleLogLevel(atomikosLoggingLevel52);
        java.lang.Object obj55 = properties8.replace((java.lang.Object) properties25, (java.lang.Object) atomikosProperties31);
        boolean boolean56 = atomikosProperties31.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery57 = atomikosProperties31.getRecovery();
        long long58 = recovery57.getForgetOrphanedLogEntriesDelay();
        recovery57.setMaxRetries((int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(recovery57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 86400000L + "'", long58 == 86400000L);
    }

    @Test
    public void test02772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02772");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        java.util.Set<java.lang.String> strSet8 = properties1.stringPropertyNames();
        int int9 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.elements();
        boolean boolean11 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02773");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Set<java.lang.Object> objSet10 = properties0.keySet();
        java.util.Properties properties11 = new java.util.Properties(properties0);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection17 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.keys();
        boolean boolean19 = properties13.contains((java.lang.Object) properties15);
        boolean boolean20 = properties13.isEmpty();
        boolean boolean21 = properties13.isEmpty();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        boolean boolean25 = properties23.isEmpty();
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        java.lang.String str28 = properties23.getProperty("");
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.get((java.lang.Object) 0.0d);
        java.lang.Object obj32 = properties29.clone();
        java.lang.String str33 = properties29.toString();
        boolean boolean36 = properties29.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj37 = null;
        boolean boolean38 = properties29.equals(obj37);
        java.util.Set<java.lang.Object> objSet39 = properties29.keySet();
        boolean boolean40 = properties23.contains((java.lang.Object) properties29);
        java.lang.Object obj41 = properties13.remove((java.lang.Object) properties29);
        java.util.Properties properties42 = new java.util.Properties(properties29);
        java.util.Properties properties43 = new java.util.Properties(properties29);
        java.util.Properties properties44 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.logBaseDir = "";
        boolean boolean48 = atomikosProperties45.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = atomikosProperties45.getRecovery();
        int int50 = recovery49.getMaxRetries();
        int int51 = recovery49.maxRetries;
        recovery49.delay = '4';
        java.lang.Object obj54 = properties0.getOrDefault((java.lang.Object) properties44, (java.lang.Object) recovery49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        long long60 = atomikosProperties55.getMaxTimeout();
        atomikosProperties55.service = "";
        java.lang.String str63 = atomikosProperties55.logBaseDir;
        atomikosProperties55.logBaseName = "tmlog";
        atomikosProperties55.setForceShutdownOnVmExit(false);
        java.lang.String str68 = atomikosProperties55.logBaseDir;
        long long69 = atomikosProperties55.maxTimeout;
        boolean boolean70 = atomikosProperties55.serialJtaTransactions;
        java.lang.Object obj71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj72 = properties0.putIfAbsent((java.lang.Object) atomikosProperties55, obj71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(recovery49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test02774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02774");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int16 = atomikosProperties15.getConsoleFileCount();
        int int17 = atomikosProperties15.maxActives;
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        int int21 = atomikosProperties15.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties15.getRecovery();
        boolean boolean23 = properties12.containsKey((java.lang.Object) recovery22);
        java.util.Collection<java.lang.Object> objCollection24 = properties12.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery25.maxRetries = (-1);
        recovery25.retryInterval = 10000L;
        long long30 = recovery25.getRetryInterval();
        boolean boolean31 = properties12.equals((java.lang.Object) long30);
        java.lang.String str33 = properties12.getProperty("tm.out");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test02775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02775");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        java.lang.String str10 = atomikosProperties5.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        atomikosProperties5.consoleLogLevel = atomikosLoggingLevel11;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel11);
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        boolean boolean17 = atomikosProperties0.enableLogging;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        int int20 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
    }

    @Test
    public void test02776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02776");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        properties6.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties6.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        boolean boolean19 = atomikosProperties16.isForceShutdownOnVmExit();
        int int20 = atomikosProperties16.consoleFileLimit;
        atomikosProperties16.setLogBaseDir("{}");
        java.lang.Object obj23 = properties6.get((java.lang.Object) atomikosProperties16);
        int int24 = properties6.size();
        java.util.Properties properties25 = new java.util.Properties(properties6);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test02777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02777");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.logBaseDir = "";
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        java.lang.String str12 = atomikosProperties7.logBaseName;
        atomikosProperties7.outputDir = "";
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.String> strSet16 = properties15.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.elements();
        java.util.Set<java.lang.Object> objSet18 = properties15.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj20 = properties0.clone();
        java.util.Properties properties21 = new java.util.Properties(properties0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(obj20);
// flaky:         org.junit.Assert.assertEquals(obj20.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test02778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02778");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Set<java.lang.Object> objSet10 = properties8.keySet();
        java.lang.String str11 = properties8.toString();
        java.io.PrintWriter printWriter12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printWriter12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objSet10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str11, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test02779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02779");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties();
        java.lang.Object obj16 = properties14.get((java.lang.Object) 0.0d);
        java.lang.Object obj17 = properties14.clone();
        java.lang.String str18 = properties14.toString();
        java.util.Properties properties19 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.keys();
        java.util.Collection<java.lang.Object> objCollection21 = properties19.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = null;
        atomikosProperties22.consoleLogLevel = atomikosLoggingLevel25;
        boolean boolean27 = atomikosProperties22.enableLogging;
        atomikosProperties22.logBaseDir = "{}";
        atomikosProperties22.setSerialJtaTransactions(false);
        boolean boolean32 = atomikosProperties22.isSerialJtaTransactions();
        java.lang.Object obj33 = properties13.putIfAbsent((java.lang.Object) properties19, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setSerialJtaTransactions(true);
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 1);
        atomikosProperties22.setConsoleFileCount(19);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(obj33);
    }

    @Test
    public void test02780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02780");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties27 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long29 = atomikosProperties28.defaultJtaTimeout;
        java.lang.String str30 = atomikosProperties28.getLogBaseName();
        atomikosProperties28.allowSubTransactions = true;
        boolean boolean33 = atomikosProperties28.enableLogging;
        atomikosProperties28.service = "";
        atomikosProperties28.logBaseDir = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long39 = recovery38.getRetryInterval();
        recovery38.delay = 10L;
        recovery38.setForgetOrphanedLogEntriesDelay(0L);
        long long44 = recovery38.getRetryInterval();
        recovery38.maxRetries = 1;
        long long47 = recovery38.forgetOrphanedLogEntriesDelay;
        recovery38.retryInterval = 5;
        recovery38.delay = 50;
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.get((java.lang.Object) 0.0d);
        java.lang.Object obj55 = properties52.clone();
        java.lang.String str56 = properties52.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.logBaseDir = "";
        atomikosProperties57.setConsoleFileCount((int) (short) 10);
        atomikosProperties57.setLogBaseDir("{}");
        boolean boolean64 = atomikosProperties57.isSerialJtaTransactions();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) boolean64, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties52.entrySet();
        java.lang.String str68 = properties52.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = null;
        atomikosProperties69.consoleLogLevel = atomikosLoggingLevel72;
        atomikosProperties69.outputDir = "";
        java.lang.String str76 = atomikosProperties69.logBaseDir;
        java.lang.String str77 = atomikosProperties69.logBaseDir;
        java.lang.Class<?> wildcardClass78 = atomikosProperties69.getClass();
        boolean boolean79 = properties52.containsValue((java.lang.Object) atomikosProperties69);
        boolean boolean80 = properties6.replace((java.lang.Object) atomikosProperties28, (java.lang.Object) recovery38, (java.lang.Object) atomikosProperties69);
        long long81 = atomikosProperties28.checkpointInterval;
        atomikosProperties28.logBaseName = "{{}={}}";
        java.lang.String str84 = atomikosProperties28.logBaseName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{true=10000}" + "'", str68, "{true=10000}");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 500L + "'", long81 == 500L);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{{}={}}" + "'", str84, "{{}={}}");
    }

    @Test
    public void test02781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02781");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        boolean boolean31 = atomikosProperties24.isSerialJtaTransactions();
        java.lang.Object obj33 = properties19.putIfAbsent((java.lang.Object) boolean31, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet34 = properties19.entrySet();
        boolean boolean35 = properties10.equals((java.lang.Object) objEntrySet34);
        java.lang.Object obj36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = properties10.contains(obj36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEntrySet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test02782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02782");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.enableLogging = true;
        long long5 = atomikosProperties2.getCheckpointInterval();
        atomikosProperties2.checkpointInterval = ' ';
        java.lang.String str8 = atomikosProperties2.service;
        atomikosProperties2.consoleFileCount = (short) 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        atomikosProperties11.set(properties17, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str22 = atomikosProperties11.service;
        java.lang.String str23 = atomikosProperties11.getService();
        java.util.Properties properties24 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.enableLogging = true;
        long long28 = atomikosProperties25.getCheckpointInterval();
        java.lang.String str29 = atomikosProperties25.getService();
        java.lang.String str30 = atomikosProperties25.logBaseDir;
        atomikosProperties25.setEnableLogging(false);
        atomikosProperties25.consoleFileCount = 0;
        long long35 = atomikosProperties25.getMaxTimeout();
        int int36 = atomikosProperties25.consoleFileLimit;
        atomikosProperties25.maxActives = 100;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        atomikosProperties39.setLogBaseDir("{}");
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        atomikosProperties39.service = "";
        boolean boolean49 = atomikosProperties39.isEnableLogging();
        java.lang.Object obj50 = properties24.putIfAbsent((java.lang.Object) 100, (java.lang.Object) boolean49);
        boolean boolean51 = properties0.remove((java.lang.Object) atomikosProperties2, (java.lang.Object) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.logBaseDir = "";
        atomikosProperties52.setConsoleFileCount((int) (short) 10);
        atomikosProperties52.setLogBaseDir("{}");
        java.lang.String str59 = atomikosProperties52.getOutputDir();
        atomikosProperties52.setLogBaseName("hi!");
        atomikosProperties52.setThreadedTwoPhaseCommit(false);
        int int64 = atomikosProperties52.maxActives;
        boolean boolean65 = properties0.equals((java.lang.Object) int64);
        java.util.Set<java.lang.Object> objSet66 = properties0.keySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objSet66);
    }

    @Test
    public void test02783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02783");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        java.lang.String str8 = atomikosProperties0.service;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.defaultJtaTimeout = (byte) 100;
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        java.lang.String str14 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
    }

    @Test
    public void test02784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02784");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        long long10 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 0);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties0.consoleFileLimit = 100;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02785");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        atomikosProperties9.setConsoleFileName("hi!");
        java.lang.String str21 = atomikosProperties9.outputDir;
        atomikosProperties9.consoleFileCount = 18;
        atomikosProperties9.setOutputDir("{com.atomikos.icatch.hi!=-1.0}");
        long long26 = atomikosProperties9.defaultJtaTimeout;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
    }

    @Test
    public void test02786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02786");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        java.lang.Class<?> wildcardClass13 = atomikosProperties0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02787");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        java.lang.String str19 = atomikosProperties0.service;
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str22 = atomikosProperties0.service;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test02788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02788");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int15 = atomikosProperties14.getConsoleFileCount();
        int int16 = atomikosProperties14.maxActives;
        atomikosProperties14.setConsoleFileName("");
        atomikosProperties14.transactionManagerUniqueName = "{}";
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        long long28 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        atomikosProperties23.set(properties29, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj36 = properties29.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((-1L));
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.get((java.lang.Object) 0.0d);
        java.lang.Object obj43 = properties40.clone();
        boolean boolean45 = properties29.replace((java.lang.Object) (-1L), obj43, (java.lang.Object) 100.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        java.lang.String str52 = properties47.getProperty("");
        atomikosProperties0.set(properties21, "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = null;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel54);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(recovery56);
    }

    @Test
    public void test02789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02789");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getDefaultJtaTimeout();
        atomikosProperties33.logBaseName = "tmlog";
        boolean boolean41 = properties15.contains((java.lang.Object) atomikosProperties33);
        atomikosProperties33.setService("{true=10000}");
        java.util.Properties properties44 = atomikosProperties33.asProperties();
        boolean boolean45 = atomikosProperties33.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test02790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02790");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        int int7 = properties5.size();
        java.lang.Object obj8 = properties5.clone();
        java.util.Set<java.lang.Object> objSet9 = properties5.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        int int13 = atomikosProperties10.consoleFileLimit;
        atomikosProperties10.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int17 = atomikosProperties16.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.logBaseDir = "";
        atomikosProperties18.setConsoleFileCount((int) (short) 10);
        atomikosProperties18.setCheckpointInterval(10000L);
        long long25 = atomikosProperties18.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel26;
        atomikosProperties16.consoleLogLevel = atomikosLoggingLevel26;
        atomikosProperties10.consoleLogLevel = atomikosLoggingLevel26;
        atomikosProperties10.checkpointInterval = 35;
        boolean boolean32 = atomikosProperties10.forceShutdownOnVmExit;
        atomikosProperties10.setAllowSubTransactions(true);
        int int35 = atomikosProperties10.consoleFileCount;
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        java.lang.Object obj41 = properties37.setProperty("hi!", "{}");
        java.lang.String str43 = properties37.getProperty("tmlog");
        properties37.clear();
        java.util.Set<java.lang.String> strSet45 = properties37.stringPropertyNames();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.get((java.lang.Object) 0.0d);
        java.lang.Object obj52 = properties49.clone();
        java.lang.String str53 = properties49.toString();
        boolean boolean56 = properties49.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj57 = properties47.replace((java.lang.Object) 10.0d, (java.lang.Object) properties49);
        java.lang.String str58 = properties49.toString();
        java.util.Properties properties59 = new java.util.Properties(properties49);
        java.lang.Object obj62 = properties49.setProperty("", "");
        java.util.Properties properties63 = new java.util.Properties(properties49);
        java.util.Set<java.lang.Object> objSet64 = properties63.keySet();
        java.util.Properties properties65 = new java.util.Properties(properties63);
        boolean boolean66 = properties37.containsKey((java.lang.Object) properties65);
        boolean boolean67 = properties37.isEmpty();
        java.lang.String str69 = properties37.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        java.util.Set<java.lang.String> strSet70 = properties37.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.enableLogging = true;
        int int74 = atomikosProperties71.consoleFileLimit;
        atomikosProperties71.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int78 = atomikosProperties77.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.logBaseDir = "";
        atomikosProperties79.setConsoleFileCount((int) (short) 10);
        atomikosProperties79.setCheckpointInterval(10000L);
        long long86 = atomikosProperties79.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel87 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties79.consoleLogLevel = atomikosLoggingLevel87;
        atomikosProperties77.consoleLogLevel = atomikosLoggingLevel87;
        atomikosProperties71.consoleLogLevel = atomikosLoggingLevel87;
        atomikosProperties71.checkpointInterval = 35;
        boolean boolean93 = atomikosProperties71.forceShutdownOnVmExit;
        long long94 = atomikosProperties71.defaultJtaTimeout;
        boolean boolean95 = atomikosProperties71.threadedTwoPhaseCommit;
        atomikosProperties71.setDefaultJtaTimeout((long) 1);
        boolean boolean98 = properties5.replace((java.lang.Object) int35, (java.lang.Object) properties37, (java.lang.Object) atomikosProperties71);
        properties5.clear();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "{}" + "'", str58, "{}");
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 300000L + "'", long86 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel87 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel87.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10000L + "'", long94 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test02791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02791");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        boolean boolean15 = atomikosProperties0.allowSubTransactions;
        boolean boolean16 = atomikosProperties0.enableLogging;
        long long17 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
    }

    @Test
    public void test02792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02792");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.checkpointInterval = 100;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
    }

    @Test
    public void test02793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02793");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = null;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel21;
        long long23 = atomikosProperties18.checkpointInterval;
        atomikosProperties18.setOutputDir("");
        atomikosProperties18.setCheckpointInterval((long) ' ');
        long long28 = atomikosProperties18.checkpointInterval;
        atomikosProperties18.setMaxActives(50);
        atomikosProperties18.logBaseName = "";
        java.lang.Object obj33 = properties16.remove((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj47 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((-1L));
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.get((java.lang.Object) 0.0d);
        java.lang.Object obj54 = properties51.clone();
        boolean boolean56 = properties40.replace((java.lang.Object) (-1L), obj54, (java.lang.Object) 100.0d);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.util.Properties properties61 = new java.util.Properties(properties40);
        java.lang.Object obj62 = properties7.getOrDefault((java.lang.Object) "", (java.lang.Object) properties61);
        java.lang.String str63 = properties61.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}");
    }

    @Test
    public void test02794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02794");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        atomikosProperties0.logBaseDir = "hi!";
        atomikosProperties0.allowSubTransactions = false;
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.consoleFileCount = '4';
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test02795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02795");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.enableLogging = true;
        long long7 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties4.getService();
        java.lang.String str9 = atomikosProperties4.logBaseDir;
        atomikosProperties4.setEnableLogging(false);
        boolean boolean12 = atomikosProperties4.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        long long16 = atomikosProperties13.getCheckpointInterval();
        atomikosProperties13.setService("tmlog");
        atomikosProperties13.setConsoleFileName("{}");
        java.util.Properties properties21 = atomikosProperties13.asProperties();
        atomikosProperties13.setCheckpointInterval((long) (short) 10);
        atomikosProperties13.logBaseName = "";
        java.lang.Object obj26 = properties0.put((java.lang.Object) boolean12, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.consoleFileCount = (short) 0;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test02796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02796");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        atomikosProperties10.setService("tmlog");
        atomikosProperties10.setCheckpointInterval((long) (short) 0);
        long long18 = atomikosProperties10.getCheckpointInterval();
        java.lang.String str19 = atomikosProperties10.getService();
        atomikosProperties10.setMaxActives((int) (short) 100);
        java.lang.Object obj22 = properties9.remove((java.lang.Object) atomikosProperties10);
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(outputStream23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test02797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02797");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        long long8 = recovery0.delay;
        recovery0.setRetryInterval(10000L);
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long13 = recovery0.retryInterval;
        recovery0.forgetOrphanedLogEntriesDelay = ' ';
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test02798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02798");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        atomikosProperties4.set(properties10, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        boolean boolean26 = properties10.replace((java.lang.Object) (-1L), obj24, (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        long long33 = atomikosProperties28.getMaxTimeout();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        atomikosProperties28.set(properties34, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj41 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.get((java.lang.Object) 0.0d);
        java.lang.Object obj48 = properties45.clone();
        boolean boolean50 = properties34.replace((java.lang.Object) (-1L), obj48, (java.lang.Object) 100.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        java.lang.String str57 = properties52.getProperty("");
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.get((java.lang.Object) 0.0d);
        java.lang.Object obj61 = properties58.clone();
        java.lang.String str62 = properties58.toString();
        boolean boolean64 = properties52.remove((java.lang.Object) properties58, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration65 = properties52.propertyNames();
        atomikosProperties0.set(properties10, "hi!", (java.lang.Object) wildcardEnumeration65);
        java.lang.String str67 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean68 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str69 = atomikosProperties0.logBaseName;
        java.lang.String str70 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tm.out" + "'", str70, "tm.out");
    }

    @Test
    public void test02799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02799");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        long long9 = recovery0.retryInterval;
        long long10 = recovery0.forgetOrphanedLogEntriesDelay;
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long12 = recovery0.retryInterval;
        recovery0.delay = 86400000L;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test02800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02800");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        recovery0.delay = (-1);
        long long13 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 'a');
        recovery0.setDelay(50L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 86400000L + "'", long13 == 86400000L);
    }

    @Test
    public void test02801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02801");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj27 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        boolean boolean36 = properties20.replace((java.lang.Object) (-1L), obj34, (java.lang.Object) 100.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean41 = properties3.equals((java.lang.Object) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = null;
        atomikosProperties42.consoleLogLevel = atomikosLoggingLevel45;
        atomikosProperties42.outputDir = "";
        int int49 = atomikosProperties42.maxActives;
        boolean boolean50 = atomikosProperties42.isThreadedTwoPhaseCommit();
        atomikosProperties42.consoleFileLimit = (short) 10;
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.enableLogging = true;
        long long57 = atomikosProperties54.getCheckpointInterval();
        java.lang.String str58 = atomikosProperties54.getOutputDir();
        atomikosProperties54.defaultJtaTimeout = 'a';
        java.lang.Object obj61 = properties20.replace((java.lang.Object) properties53, (java.lang.Object) 'a');
        java.lang.String str62 = properties20.toString();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj61);
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{com.atomikos.icatch.hi!=-1.0, =hi!}" + "'", str62, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
    }

    @Test
    public void test02802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02802");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.checkpointInterval = (byte) 1;
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setService("tm.out");
        atomikosProperties0.consoleFileLimit = (short) 1;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.recovery;
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        atomikosProperties0.checkpointInterval = 1L;
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test02803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02803");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.lang.Object obj18 = properties14.setProperty("hi!", "{}");
        java.lang.String str20 = properties14.getProperty("tmlog");
        properties14.clear();
        boolean boolean22 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = null;
        atomikosProperties23.consoleLogLevel = atomikosLoggingLevel26;
        boolean boolean28 = atomikosProperties23.isSerialJtaTransactions();
        long long29 = atomikosProperties23.getCheckpointInterval();
        int int30 = atomikosProperties23.getConsoleFileCount();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.enableLogging = true;
        long long37 = atomikosProperties34.getCheckpointInterval();
        boolean boolean39 = properties32.remove((java.lang.Object) long37, (java.lang.Object) (byte) 100);
        boolean boolean41 = properties32.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties32.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((-1L));
        long long46 = atomikosProperties43.checkpointInterval;
        boolean boolean47 = atomikosProperties43.forceShutdownOnVmExit;
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean50 = properties32.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.logBaseDir = "";
        atomikosProperties51.setConsoleFileCount((int) (short) 10);
        long long56 = atomikosProperties51.getMaxTimeout();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet58 = properties57.keySet();
        atomikosProperties51.set(properties57, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str62 = atomikosProperties51.logBaseDir;
        java.lang.String str63 = atomikosProperties51.logBaseDir;
        java.lang.String str64 = atomikosProperties51.logBaseDir;
        boolean boolean65 = atomikosProperties51.isEnableLogging();
        boolean boolean66 = atomikosProperties51.forceShutdownOnVmExit;
        boolean boolean67 = properties32.containsValue((java.lang.Object) atomikosProperties51);
        atomikosProperties51.consoleFileName = "";
        java.lang.Object obj70 = properties14.put((java.lang.Object) atomikosProperties23, (java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.logBaseDir = "";
        atomikosProperties71.setConsoleFileCount((int) (short) 10);
        long long76 = atomikosProperties71.getMaxTimeout();
        java.util.Properties properties77 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet78 = properties77.keySet();
        atomikosProperties71.set(properties77, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str82 = atomikosProperties71.logBaseDir;
        java.lang.String str83 = atomikosProperties71.logBaseDir;
        java.lang.String str84 = atomikosProperties71.logBaseDir;
        boolean boolean85 = atomikosProperties71.isEnableLogging();
        long long86 = atomikosProperties71.checkpointInterval;
        atomikosProperties71.setOutputDir("hi!");
        long long89 = atomikosProperties71.maxTimeout;
        java.lang.String str90 = atomikosProperties71.logBaseName;
        java.util.Properties properties91 = atomikosProperties71.asProperties();
        java.util.Enumeration<?> wildcardEnumeration92 = properties91.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration93 = properties91.propertyNames();
        boolean boolean94 = properties12.remove((java.lang.Object) atomikosProperties51, (java.lang.Object) wildcardEnumeration93);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel95 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties51.setAllowSubTransactions(false);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 500L + "'", long86 == 500L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 300000L + "'", long89 == 300000L);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertNotNull(wildcardEnumeration92);
        org.junit.Assert.assertNotNull(wildcardEnumeration93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel95 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel95.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02804");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        recovery0.maxRetries = 'a';
        int int17 = recovery0.maxRetries;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 20);
        long long20 = recovery0.retryInterval;
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 52L + "'", long20 == 52L);
    }

    @Test
    public void test02805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02805");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj27 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        boolean boolean36 = properties20.replace((java.lang.Object) (-1L), obj34, (java.lang.Object) 100.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean41 = properties3.equals((java.lang.Object) properties20);
        java.util.Properties properties42 = new java.util.Properties(properties20);
        java.lang.String str44 = properties20.getProperty("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test02806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02806");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        atomikosProperties0.logBaseName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        long long16 = atomikosProperties13.getCheckpointInterval();
        java.lang.String str17 = atomikosProperties13.getService();
        java.lang.String str18 = atomikosProperties13.logBaseDir;
        atomikosProperties13.setEnableLogging(false);
        atomikosProperties13.consoleFileCount = 0;
        long long23 = atomikosProperties13.getMaxTimeout();
        boolean boolean24 = atomikosProperties13.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties13.consoleLogLevel;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        java.util.Properties properties27 = atomikosProperties0.asProperties();
        int int28 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
    }

    @Test
    public void test02807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02807");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.enableLogging = true;
        long long11 = atomikosProperties8.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties8.getService();
        java.lang.String str13 = atomikosProperties8.logBaseDir;
        atomikosProperties8.setEnableLogging(false);
        atomikosProperties8.consoleFileCount = 0;
        long long18 = atomikosProperties8.getMaxTimeout();
        int int19 = atomikosProperties8.consoleFileLimit;
        java.util.Properties properties20 = atomikosProperties8.asProperties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        int int24 = atomikosProperties22.maxActives;
        atomikosProperties22.setConsoleFileName("");
        atomikosProperties22.transactionManagerUniqueName = "{}";
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties36.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((-1L));
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.get((java.lang.Object) 0.0d);
        java.lang.Object obj50 = properties47.clone();
        boolean boolean52 = properties36.replace((java.lang.Object) (-1L), obj50, (java.lang.Object) 100.0d);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        java.lang.String str59 = properties54.getProperty("");
        java.util.Properties properties60 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int63 = atomikosProperties62.getConsoleFileCount();
        int int64 = atomikosProperties62.maxActives;
        atomikosProperties62.setEnableLogging(true);
        boolean boolean67 = atomikosProperties62.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties62.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.logBaseDir = "";
        atomikosProperties69.setConsoleFileCount((int) (short) 10);
        long long74 = atomikosProperties69.getMaxTimeout();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet76 = properties75.keySet();
        atomikosProperties69.set(properties75, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str80 = atomikosProperties69.logBaseDir;
        boolean boolean81 = atomikosProperties69.enableLogging;
        java.lang.Object obj82 = properties60.putIfAbsent((java.lang.Object) atomikosLoggingLevel68, (java.lang.Object) atomikosProperties69);
        boolean boolean83 = properties3.replace((java.lang.Object) properties20, (java.lang.Object) atomikosProperties22, (java.lang.Object) atomikosLoggingLevel68);
        atomikosProperties22.threadedTwoPhaseCommit = true;
        boolean boolean86 = atomikosProperties22.isThreadedTwoPhaseCommit();
        atomikosProperties22.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties22.setDefaultJtaTimeout((long) 52);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test02808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02808");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = (short) -1;
        long long7 = recovery0.retryInterval;
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test02809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02809");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.allowSubTransactions = false;
        boolean boolean6 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.consoleFileName = "{true=10000}";
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test02810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02810");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str9 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test02811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02811");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        long long7 = atomikosProperties0.checkpointInterval;
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.logBaseName = "{hi!={}}";
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test02812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02812");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test02813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02813");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.serialJtaTransactions;
        boolean boolean10 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.serialJtaTransactions = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int14 = atomikosProperties13.getConsoleFileCount();
        int int15 = atomikosProperties13.maxActives;
        int int16 = atomikosProperties13.getMaxActives();
        java.lang.String str17 = atomikosProperties13.getLogBaseName();
        java.lang.String str18 = atomikosProperties13.getService();
        atomikosProperties13.allowSubTransactions = false;
        atomikosProperties13.consoleFileCount = 50;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.enableLogging = true;
        long long26 = atomikosProperties23.getCheckpointInterval();
        java.lang.String str27 = atomikosProperties23.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties13.consoleLogLevel = atomikosLoggingLevel28;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel28);
        atomikosProperties0.enableLogging = false;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02814");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties9.entrySet();
        java.lang.Object obj11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = properties9.contains(obj11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEntrySet10);
    }

    @Test
    public void test02815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02815");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        java.util.Properties properties12 = new java.util.Properties(properties6);
        java.lang.Class<?> wildcardClass13 = properties6.getClass();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02816");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.recovery;
        recovery14.setMaxRetries(10);
        recovery14.setMaxRetries(50);
        recovery14.setMaxRetries((int) ' ');
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNotNull(recovery14);
    }

    @Test
    public void test02817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02817");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit(1);
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.setCheckpointInterval((long) 35);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileLimit = 2;
        long long18 = atomikosProperties0.maxTimeout;
        java.lang.String str19 = atomikosProperties0.getService();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test02818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02818");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream9, "{}", "{com.atomikos.icatch.hi!=-1.0, =hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test02819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02819");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        boolean boolean22 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.allowSubTransactions = false;
        boolean boolean25 = atomikosProperties19.serialJtaTransactions;
        boolean boolean26 = properties0.containsKey((java.lang.Object) boolean25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getConsoleFileCount();
        int int38 = atomikosProperties36.maxActives;
        atomikosProperties36.setConsoleFileName("");
        atomikosProperties36.transactionManagerUniqueName = "{}";
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        boolean boolean44 = atomikosProperties36.threadedTwoPhaseCommit;
        atomikosProperties36.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int48 = atomikosProperties47.getConsoleFileCount();
        int int49 = atomikosProperties47.maxActives;
        atomikosProperties47.setConsoleFileName("");
        atomikosProperties47.transactionManagerUniqueName = "{}";
        atomikosProperties47.setMaxActives(0);
        boolean boolean56 = atomikosProperties47.forceShutdownOnVmExit;
        java.lang.Object obj57 = properties34.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.logBaseDir = "";
        boolean boolean61 = atomikosProperties58.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = atomikosProperties58.getRecovery();
        boolean boolean63 = properties34.contains((java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int65 = atomikosProperties64.getConsoleFileCount();
        int int66 = atomikosProperties64.maxActives;
        int int67 = atomikosProperties64.getMaxActives();
        boolean boolean68 = properties0.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) int67);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel69 = atomikosProperties58.consoleLogLevel;
        int int70 = atomikosProperties58.consoleFileLimit;
        boolean boolean71 = atomikosProperties58.forceShutdownOnVmExit;
        java.lang.String str72 = atomikosProperties58.getService();
        atomikosProperties58.maxActives = 35;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(recovery62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel69 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel69.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test02820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02820");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getService();
        java.lang.String str10 = atomikosProperties0.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        recovery11.delay = 5L;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(recovery11);
    }

    @Test
    public void test02821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02821");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.io.PrintStream printStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.list(printStream5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
    }

    @Test
    public void test02822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02822");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        long long7 = recovery0.delay;
        recovery0.setRetryInterval((long) '4');
        int int10 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test02823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02823");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        long long4 = recovery0.getDelay();
        long long5 = recovery0.delay;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery0.maxRetries = '4';
        long long10 = recovery0.getDelay();
        long long11 = recovery0.getDelay();
        int int12 = recovery0.maxRetries;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test02824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02824");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.maxActives = 50;
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties14.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.enableLogging = true;
        long long23 = atomikosProperties20.getCheckpointInterval();
        boolean boolean25 = properties18.remove((java.lang.Object) long23, (java.lang.Object) (byte) 100);
        boolean boolean27 = properties18.equals((java.lang.Object) (short) 1);
        java.lang.Object obj30 = properties18.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties18.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties32.isEmpty();
        boolean boolean35 = properties14.remove((java.lang.Object) objEnumeration31, (java.lang.Object) properties32);
        boolean boolean36 = properties0.remove((java.lang.Object) 50, (java.lang.Object) properties32);
        java.util.Properties properties37 = new java.util.Properties(properties0);
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test02825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02825");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        int int2 = atomikosProperties0.getConsoleFileCount();
        long long3 = atomikosProperties0.getCheckpointInterval();
        long long4 = atomikosProperties0.getCheckpointInterval();
        boolean boolean5 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.enableLogging = true;
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test02826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02826");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        long long13 = atomikosProperties8.getMaxTimeout();
        atomikosProperties8.service = "";
        java.lang.String str16 = atomikosProperties8.logBaseDir;
        boolean boolean17 = atomikosProperties8.threadedTwoPhaseCommit;
        java.lang.String str18 = atomikosProperties8.getService();
        atomikosProperties8.setLogBaseDir("{}");
        atomikosProperties8.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj23 = properties7.get((java.lang.Object) atomikosProperties8);
        atomikosProperties8.outputDir = "{{}={}}";
        atomikosProperties8.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test02827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02827");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long12 = recovery11.getRetryInterval();
        recovery11.delay = 10L;
        recovery11.setForgetOrphanedLogEntriesDelay(0L);
        long long17 = recovery11.getDelay();
        long long18 = recovery11.delay;
        boolean boolean19 = properties8.equals((java.lang.Object) long18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties8.keys();
        java.io.InputStream inputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10L + "'", long18 == 10L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test02828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02828");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Set<java.lang.String> strSet32 = properties30.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        java.lang.String str38 = atomikosProperties33.logBaseName;
        atomikosProperties33.outputDir = "";
        java.util.Properties properties41 = atomikosProperties33.asProperties();
        java.util.Set<java.lang.String> strSet42 = properties41.stringPropertyNames();
        boolean boolean43 = properties30.containsKey((java.lang.Object) properties41);
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.storeToXML(outputStream44, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test02829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02829");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        int int4 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) (byte) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
    }

    @Test
    public void test02830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02830");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties21.keys();
        int int27 = properties21.size();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties21.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery30.maxRetries = (-1);
        recovery30.setDelay((long) (short) 0);
        recovery30.maxRetries = 0;
        atomikosProperties0.set(properties21, "tmlog", (java.lang.Object) recovery30);
        recovery30.setDelay((-1L));
        recovery30.setForgetOrphanedLogEntriesDelay((long) 2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(objEnumeration28);
    }

    @Test
    public void test02831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02831");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties0.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties0.consoleLogLevel;
        java.lang.String str35 = atomikosProperties0.getTransactionManagerUniqueName();
        long long36 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 500L + "'", long36 == 500L);
    }

    @Test
    public void test02832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02832");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Properties properties47 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = null;
        atomikosProperties48.consoleLogLevel = atomikosLoggingLevel51;
        atomikosProperties48.outputDir = "";
        java.lang.String str55 = atomikosProperties48.logBaseDir;
        java.lang.String str56 = atomikosProperties48.logBaseDir;
        java.lang.Class<?> wildcardClass57 = atomikosProperties48.getClass();
        boolean boolean58 = properties47.contains((java.lang.Object) atomikosProperties48);
        int int59 = properties47.size();
        java.io.OutputStream outputStream60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties47.storeToXML(outputStream60, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test02833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02833");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.String str13 = properties9.toString();
        boolean boolean16 = properties9.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj17 = properties7.replace((java.lang.Object) 10.0d, (java.lang.Object) properties9);
        java.lang.String str18 = properties9.toString();
        java.util.Properties properties19 = new java.util.Properties(properties9);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.lang.String str21 = properties9.toString();
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.get((java.lang.Object) 0.0d);
        java.lang.Object obj25 = properties22.clone();
        java.lang.String str26 = properties22.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        long long32 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet34 = properties33.keySet();
        atomikosProperties27.set(properties33, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj40 = properties33.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((-1L));
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.get((java.lang.Object) 0.0d);
        java.lang.Object obj47 = properties44.clone();
        boolean boolean49 = properties33.replace((java.lang.Object) (-1L), obj47, (java.lang.Object) 100.0d);
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties(properties50);
        properties51.clear();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.logBaseDir = "";
        atomikosProperties54.setConsoleFileCount((int) (short) 10);
        long long59 = atomikosProperties54.getMaxTimeout();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet61 = properties60.keySet();
        atomikosProperties54.set(properties60, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str65 = atomikosProperties54.logBaseDir;
        java.lang.String str66 = atomikosProperties54.logBaseDir;
        java.util.Properties properties67 = atomikosProperties54.asProperties();
        java.lang.Object obj68 = properties22.replace((java.lang.Object) properties51, (java.lang.Object) atomikosProperties54);
        atomikosProperties54.serialJtaTransactions = true;
        atomikosProperties54.setMaxTimeout((long) 100);
        atomikosProperties54.consoleFileName = "{com.atomikos.icatch.hi!=-1.0, =hi!}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.logBaseDir = "";
        atomikosProperties75.setConsoleFileCount((int) (short) 10);
        java.lang.String str80 = atomikosProperties75.logBaseName;
        atomikosProperties75.outputDir = "";
        java.util.Properties properties83 = atomikosProperties75.asProperties();
        java.util.Set<java.lang.String> strSet84 = properties83.stringPropertyNames();
        boolean boolean86 = properties83.contains((java.lang.Object) false);
        properties83.clear();
        java.util.Properties properties88 = new java.util.Properties(properties83);
        boolean boolean89 = properties9.remove((java.lang.Object) atomikosProperties54, (java.lang.Object) properties88);
        java.io.OutputStream outputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.store(outputStream90, "{hi!={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "tmlog" + "'", str80, "tmlog");
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test02834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02834");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        int int8 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test02835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02835");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        boolean boolean33 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test02836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02836");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        int int4 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileLimit(52);
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setService("{}");
        long long11 = atomikosProperties0.checkpointInterval;
        java.lang.String str12 = atomikosProperties0.service;
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
    }

    @Test
    public void test02837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02837");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.maxActives = 10;
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test02838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02838");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        boolean boolean17 = properties15.isEmpty();
        boolean boolean18 = properties3.equals((java.lang.Object) boolean17);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Enumeration<?> wildcardEnumeration20 = properties19.propertyNames();
        java.io.PrintStream printStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.list(printStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
    }

    @Test
    public void test02839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02839");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.consoleFileLimit = 50;
        atomikosProperties0.setMaxActives(10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test02840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02840");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        java.lang.String str7 = properties0.toString();
        java.lang.String str9 = properties0.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{{}={}}" + "'", str7, "{{}={}}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test02841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02841");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties27 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long29 = atomikosProperties28.defaultJtaTimeout;
        java.lang.String str30 = atomikosProperties28.getLogBaseName();
        atomikosProperties28.allowSubTransactions = true;
        boolean boolean33 = atomikosProperties28.enableLogging;
        atomikosProperties28.service = "";
        atomikosProperties28.logBaseDir = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long39 = recovery38.getRetryInterval();
        recovery38.delay = 10L;
        recovery38.setForgetOrphanedLogEntriesDelay(0L);
        long long44 = recovery38.getRetryInterval();
        recovery38.maxRetries = 1;
        long long47 = recovery38.forgetOrphanedLogEntriesDelay;
        recovery38.retryInterval = 5;
        recovery38.delay = 50;
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.get((java.lang.Object) 0.0d);
        java.lang.Object obj55 = properties52.clone();
        java.lang.String str56 = properties52.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.logBaseDir = "";
        atomikosProperties57.setConsoleFileCount((int) (short) 10);
        atomikosProperties57.setLogBaseDir("{}");
        boolean boolean64 = atomikosProperties57.isSerialJtaTransactions();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) boolean64, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties52.entrySet();
        java.lang.String str68 = properties52.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = null;
        atomikosProperties69.consoleLogLevel = atomikosLoggingLevel72;
        atomikosProperties69.outputDir = "";
        java.lang.String str76 = atomikosProperties69.logBaseDir;
        java.lang.String str77 = atomikosProperties69.logBaseDir;
        java.lang.Class<?> wildcardClass78 = atomikosProperties69.getClass();
        boolean boolean79 = properties52.containsValue((java.lang.Object) atomikosProperties69);
        boolean boolean80 = properties6.replace((java.lang.Object) atomikosProperties28, (java.lang.Object) recovery38, (java.lang.Object) atomikosProperties69);
        java.io.PrintStream printStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.list(printStream81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{true=10000}" + "'", str68, "{true=10000}");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test02842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02842");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.util.Set<java.lang.String> strSet9 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        atomikosProperties10.setService("tmlog");
        atomikosProperties10.setCheckpointInterval((long) (short) 0);
        java.lang.String str18 = atomikosProperties10.service;
        boolean boolean19 = atomikosProperties10.threadedTwoPhaseCommit;
        atomikosProperties10.setService("");
        boolean boolean22 = properties1.equals((java.lang.Object) "");
        java.util.Set<java.lang.String> strSet23 = properties1.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection24 = properties1.values();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objCollection24);
    }

    @Test
    public void test02843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02843");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setService("{}");
        atomikosProperties0.setConsoleFileLimit(10);
        int int10 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
    }

    @Test
    public void test02844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02844");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "";
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        long long12 = atomikosProperties0.getMaxTimeout();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxTimeout((long) (short) 1);
        int int19 = atomikosProperties0.maxActives;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
    }

    @Test
    public void test02845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02845");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        atomikosProperties15.setConsoleFileLimit((int) (short) 100);
        atomikosProperties15.setForceShutdownOnVmExit(false);
        java.lang.String str30 = atomikosProperties15.logBaseName;
        boolean boolean31 = properties14.contains((java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setDelay((long) (short) 0);
        recovery32.maxRetries = 0;
        recovery32.forgetOrphanedLogEntriesDelay = 100;
        recovery32.setMaxRetries((int) (byte) -1);
        recovery32.retryInterval = '4';
        recovery32.setForgetOrphanedLogEntriesDelay((long) '4');
        long long47 = recovery32.forgetOrphanedLogEntriesDelay;
        recovery32.setMaxRetries(5);
        recovery32.forgetOrphanedLogEntriesDelay = 5L;
        java.lang.Object obj52 = properties14.remove((java.lang.Object) 5L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.logBaseDir = "";
        boolean boolean56 = atomikosProperties53.isForceShutdownOnVmExit();
        atomikosProperties53.outputDir = "hi!";
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.get((java.lang.Object) 0.0d);
        java.lang.Object obj62 = properties59.clone();
        java.lang.String str63 = properties59.toString();
        boolean boolean66 = properties59.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.util.Properties properties67 = new java.util.Properties(properties59);
        java.lang.Object obj68 = properties14.put((java.lang.Object) atomikosProperties53, (java.lang.Object) properties59);
        atomikosProperties53.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 52L + "'", long47 == 52L);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj68);
    }

    @Test
    public void test02846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02846");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long16 = atomikosProperties15.defaultJtaTimeout;
        atomikosProperties15.logBaseName = "tm.out";
        java.lang.String str19 = atomikosProperties15.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties15.consoleLogLevel;
        java.lang.String str21 = atomikosProperties15.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        long long27 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        atomikosProperties22.set(properties28, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str33 = atomikosProperties22.logBaseDir;
        java.lang.String str34 = atomikosProperties22.logBaseDir;
        java.lang.String str35 = atomikosProperties22.logBaseDir;
        java.lang.String str36 = atomikosProperties22.getService();
        java.lang.String str37 = atomikosProperties22.outputDir;
        atomikosProperties22.setSerialJtaTransactions(true);
        java.lang.Object obj40 = properties14.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) atomikosProperties22);
        java.lang.String str41 = atomikosProperties22.logBaseDir;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test02847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02847");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        boolean boolean20 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str21 = atomikosProperties0.consoleFileName;
        atomikosProperties0.forceShutdownOnVmExit = true;
        java.lang.String str24 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test02848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02848");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 50);
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
    }

    @Test
    public void test02849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02849");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Set<java.lang.Object> objSet10 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.logBaseDir = "";
        atomikosProperties13.serialJtaTransactions = false;
        atomikosProperties13.consoleFileName = "{com.atomikos.icatch.hi!=-1.0}";
        java.lang.Object obj20 = properties0.getOrDefault((java.lang.Object) int12, (java.lang.Object) "{com.atomikos.icatch.hi!=-1.0}");
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream21, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + obj20 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", obj20, "{com.atomikos.icatch.hi!=-1.0}");
    }

    @Test
    public void test02850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02850");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        boolean boolean17 = properties13.isEmpty();
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        int int35 = atomikosProperties20.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties20.getConsoleLogLevel();
        atomikosProperties20.threadedTwoPhaseCommit = true;
        boolean boolean39 = properties19.contains((java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel40 = atomikosProperties20.getConsoleLogLevel();
        boolean boolean41 = atomikosProperties20.isAllowSubTransactions();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel40 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel40.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test02851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02851");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.enableLogging = true;
        long long14 = atomikosProperties11.getCheckpointInterval();
        boolean boolean16 = properties9.remove((java.lang.Object) long14, (java.lang.Object) (byte) 100);
        boolean boolean18 = properties9.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties9.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((-1L));
        long long23 = atomikosProperties20.checkpointInterval;
        boolean boolean24 = atomikosProperties20.forceShutdownOnVmExit;
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        boolean boolean27 = properties9.contains((java.lang.Object) true);
        java.util.Properties properties28 = new java.util.Properties(properties9);
        boolean boolean30 = properties28.containsValue((java.lang.Object) (short) -1);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.get((java.lang.Object) 0.0d);
        java.lang.Object obj38 = properties35.clone();
        java.lang.String str39 = properties35.toString();
        boolean boolean42 = properties35.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj43 = properties33.replace((java.lang.Object) 10.0d, (java.lang.Object) properties35);
        java.lang.String str44 = properties35.toString();
        java.util.Properties properties45 = new java.util.Properties(properties35);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.get((java.lang.Object) 0.0d);
        java.lang.Object obj52 = properties49.clone();
        java.lang.String str53 = properties49.toString();
        boolean boolean56 = properties49.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj57 = properties47.replace((java.lang.Object) 10.0d, (java.lang.Object) properties49);
        java.util.Properties properties58 = new java.util.Properties(properties47);
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        atomikosProperties0.set(properties28, "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) properties45);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setAllowSubTransactions(false);
        int int67 = atomikosProperties0.consoleFileCount;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEntrySet19);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "{}" + "'", str39, "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "{}" + "'", str53, "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
    }

    @Test
    public void test02852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02852");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        long long2 = recovery0.getDelay();
        recovery0.setMaxRetries(35);
        long long5 = recovery0.getDelay();
        recovery0.retryInterval = 500L;
        recovery0.maxRetries = 100;
        long long10 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test02853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02853");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.logBaseDir = "";
        atomikosProperties26.setConsoleFileCount((int) (short) 10);
        long long31 = atomikosProperties26.getMaxTimeout();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet33 = properties32.keySet();
        atomikosProperties26.set(properties32, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj39 = properties32.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((-1L));
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.get((java.lang.Object) 0.0d);
        java.lang.Object obj46 = properties43.clone();
        boolean boolean48 = properties32.replace((java.lang.Object) (-1L), obj46, (java.lang.Object) 100.0d);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.logBaseDir = "";
        atomikosProperties53.setConsoleFileCount((int) (short) 10);
        long long58 = atomikosProperties53.getMaxTimeout();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet60 = properties59.keySet();
        atomikosProperties53.set(properties59, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str64 = atomikosProperties53.logBaseDir;
        java.lang.String str65 = atomikosProperties53.logBaseDir;
        java.util.Properties properties66 = atomikosProperties53.asProperties();
        java.lang.Object obj67 = properties21.replace((java.lang.Object) properties50, (java.lang.Object) atomikosProperties53);
        boolean boolean68 = properties16.contains((java.lang.Object) atomikosProperties53);
        boolean boolean69 = properties1.containsValue((java.lang.Object) properties16);
        java.util.Enumeration<?> wildcardEnumeration70 = properties1.propertyNames();
        java.util.Properties properties71 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.logBaseDir = "";
        atomikosProperties72.setConsoleFileCount((int) (short) 10);
        long long77 = atomikosProperties72.getMaxTimeout();
        java.util.Properties properties78 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet79 = properties78.keySet();
        atomikosProperties72.set(properties78, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str83 = atomikosProperties72.logBaseDir;
        java.lang.String str84 = atomikosProperties72.logBaseDir;
        java.lang.String str85 = atomikosProperties72.logBaseDir;
        boolean boolean86 = atomikosProperties72.isEnableLogging();
        long long87 = atomikosProperties72.checkpointInterval;
        atomikosProperties72.setOutputDir("hi!");
        boolean boolean90 = properties1.contains((java.lang.Object) atomikosProperties72);
        atomikosProperties72.serialJtaTransactions = false;
        int int93 = atomikosProperties72.maxActives;
        long long94 = atomikosProperties72.checkpointInterval;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 300000L + "'", long77 == 300000L);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 500L + "'", long87 == 500L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 50 + "'", int93 == 50);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 500L + "'", long94 == 500L);
    }

    @Test
    public void test02854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02854");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.maxTimeout = ' ';
        atomikosProperties0.transactionManagerUniqueName = "{{}={}}";
        java.lang.String str10 = atomikosProperties0.getConsoleFileName();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test02855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02855");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        atomikosProperties43.checkpointInterval = 500L;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02856");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.store(outputStream21, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02857");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Set<java.lang.String> strSet32 = properties30.stringPropertyNames();
        boolean boolean33 = properties30.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties30);
        java.lang.Object obj37 = properties34.setProperty("hi!", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.PrintWriter printWriter38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.list(printWriter38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test02858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02858");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int16 = atomikosProperties15.getConsoleFileCount();
        int int17 = atomikosProperties15.maxActives;
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setAllowSubTransactions(false);
        java.lang.Object obj23 = properties13.get((java.lang.Object) atomikosProperties15);
        atomikosProperties15.consoleFileCount = (-1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test02859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02859");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection18 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        atomikosProperties19.setLogBaseDir("{}");
        java.lang.String str26 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("hi!");
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        boolean boolean34 = atomikosProperties31.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        long long40 = atomikosProperties35.getMaxTimeout();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet42 = properties41.keySet();
        atomikosProperties35.set(properties41, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj48 = properties41.setProperty("", "hi!");
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection51 = properties49.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean53 = properties41.remove((java.lang.Object) objCollection51, (java.lang.Object) atomikosLoggingLevel52);
        atomikosProperties31.setConsoleLogLevel(atomikosLoggingLevel52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((-1L));
        int int58 = atomikosProperties55.getConsoleFileLimit();
        atomikosProperties55.serialJtaTransactions = false;
        atomikosProperties55.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel63 = atomikosProperties55.consoleLogLevel;
        atomikosProperties31.consoleLogLevel = atomikosLoggingLevel63;
        java.lang.String str65 = atomikosProperties31.getTransactionManagerUniqueName();
        java.lang.String str66 = atomikosProperties31.getService();
        java.util.Properties properties67 = atomikosProperties31.asProperties();
        boolean boolean68 = properties13.remove((java.lang.Object) false, (java.lang.Object) properties67);
        java.lang.Object obj71 = properties13.setProperty("{{}={}}", "tmlog");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel63 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel63.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test02860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02860");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((int) (short) -1);
        long long3 = recovery0.retryInterval;
        recovery0.setRetryInterval(0L);
        recovery0.setRetryInterval(10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
    }

    @Test
    public void test02861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02861");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        java.lang.Object obj9 = properties0.setProperty("{com.atomikos.icatch.hi!=-1.0}", "");
        java.util.Properties properties10 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        atomikosProperties11.set(properties17, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str22 = atomikosProperties11.logBaseDir;
        java.lang.String str23 = atomikosProperties11.logBaseDir;
        java.lang.String str24 = atomikosProperties11.logBaseDir;
        boolean boolean25 = atomikosProperties11.isEnableLogging();
        long long26 = atomikosProperties11.checkpointInterval;
        atomikosProperties11.setOutputDir("hi!");
        long long29 = atomikosProperties11.maxTimeout;
        java.lang.String str30 = atomikosProperties11.logBaseName;
        java.util.Properties properties31 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Properties properties33 = new java.util.Properties(properties31);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNotNull(properties31);
    }

    @Test
    public void test02862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02862");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = null;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel12;
        atomikosProperties9.outputDir = "";
        int int16 = atomikosProperties9.maxActives;
        boolean boolean17 = atomikosProperties9.isThreadedTwoPhaseCommit();
        atomikosProperties9.consoleFileLimit = (short) 10;
        java.util.Properties properties20 = atomikosProperties9.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.enableLogging = true;
        long long25 = atomikosProperties22.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.forceShutdownOnVmExit = false;
        java.lang.Object obj29 = properties7.replace((java.lang.Object) objEnumeration21, (java.lang.Object) atomikosProperties22);
        long long30 = atomikosProperties22.getMaxTimeout();
        long long31 = atomikosProperties22.defaultJtaTimeout;
        int int32 = atomikosProperties22.maxActives;
        atomikosProperties22.setDefaultJtaTimeout((long) 0);
        atomikosProperties22.outputDir = "{hi!={}}";
        atomikosProperties22.setService("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
    }

    @Test
    public void test02863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02863");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.allowSubTransactions = false;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test02864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02864");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        atomikosProperties0.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.enableLogging = true;
        int int9 = atomikosProperties6.consoleFileLimit;
        atomikosProperties6.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int13 = atomikosProperties12.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setCheckpointInterval(10000L);
        long long21 = atomikosProperties14.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties14.consoleLogLevel = atomikosLoggingLevel22;
        atomikosProperties12.consoleLogLevel = atomikosLoggingLevel22;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel22;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel22;
        boolean boolean27 = atomikosProperties0.isAllowSubTransactions();
        long long28 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
    }

    @Test
    public void test02865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02865");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean14 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.allowSubTransactions = true;
        atomikosProperties0.maxTimeout = (byte) 100;
        atomikosProperties0.threadedTwoPhaseCommit = true;
        long long21 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
    }

    @Test
    public void test02866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02866");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) 0.0d);
        java.lang.Object obj33 = properties30.clone();
        java.lang.String str34 = properties30.toString();
        boolean boolean36 = properties24.remove((java.lang.Object) properties30, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration37 = properties24.propertyNames();
        java.util.Properties properties38 = new java.util.Properties(properties24);
        java.util.Properties properties39 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        long long45 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet47 = properties46.keySet();
        atomikosProperties40.set(properties46, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str51 = atomikosProperties40.service;
        atomikosProperties40.setSerialJtaTransactions(false);
        int int54 = atomikosProperties40.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        java.lang.String str60 = atomikosProperties55.transactionManagerUniqueName;
        long long61 = atomikosProperties55.getDefaultJtaTimeout();
        long long62 = atomikosProperties55.checkpointInterval;
        int int63 = atomikosProperties55.getConsoleFileCount();
        java.lang.Object obj64 = properties39.put((java.lang.Object) atomikosProperties40, (java.lang.Object) atomikosProperties55);
        boolean boolean65 = atomikosProperties55.enableLogging;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 500L + "'", long62 == 500L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test02867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02867");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        long long9 = atomikosProperties0.maxTimeout;
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test02868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02868");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Properties properties16 = new java.util.Properties(properties14);
        int int17 = properties16.size();
        java.util.Set<java.lang.Object> objSet18 = properties16.keySet();
        java.lang.String str21 = properties16.getProperty("", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}" + "'", str21, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
    }

    @Test
    public void test02869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02869");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.service;
        atomikosProperties0.logBaseName = "{}";
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02870");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        boolean boolean22 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test02871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02871");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        boolean boolean11 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02872");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        long long10 = atomikosProperties5.getMaxTimeout();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet12 = properties11.keySet();
        atomikosProperties5.set(properties11, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str16 = atomikosProperties5.logBaseDir;
        java.lang.String str17 = atomikosProperties5.logBaseDir;
        java.lang.String str18 = atomikosProperties5.logBaseDir;
        java.lang.String str19 = atomikosProperties5.getService();
        java.lang.String str20 = atomikosProperties5.outputDir;
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        int int23 = atomikosProperties5.maxActives;
        atomikosProperties5.setForceShutdownOnVmExit(false);
        atomikosProperties5.setOutputDir("hi!");
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        java.lang.String str35 = properties31.toString();
        boolean boolean38 = properties31.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj39 = properties29.replace((java.lang.Object) 10.0d, (java.lang.Object) properties31);
        java.lang.String str40 = properties31.toString();
        java.util.Properties properties41 = new java.util.Properties(properties31);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Collection<java.lang.Object> objCollection44 = properties43.values();
        boolean boolean45 = properties43.isEmpty();
        boolean boolean46 = properties31.equals((java.lang.Object) boolean45);
        java.util.Properties properties47 = new java.util.Properties(properties31);
        java.lang.Object obj48 = properties31.clone();
        java.util.Set<java.lang.Object> objSet49 = properties31.keySet();
        boolean boolean50 = properties0.remove((java.lang.Object) "hi!", (java.lang.Object) objSet49);
        java.io.OutputStream outputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(outputStream51, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test02873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02873");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties13.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        int int24 = atomikosProperties22.maxActives;
        atomikosProperties22.maxActives = 50;
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Collection<java.lang.Object> objCollection29 = properties27.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection32 = properties31.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.enableLogging = true;
        long long36 = atomikosProperties33.getCheckpointInterval();
        boolean boolean38 = properties31.remove((java.lang.Object) long36, (java.lang.Object) (byte) 100);
        boolean boolean40 = properties31.equals((java.lang.Object) (short) 1);
        java.lang.Object obj43 = properties31.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties31.keys();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties45.isEmpty();
        boolean boolean48 = properties27.remove((java.lang.Object) objEnumeration44, (java.lang.Object) properties45);
        boolean boolean49 = properties13.remove((java.lang.Object) 50, (java.lang.Object) properties45);
        java.lang.String str50 = properties45.toString();
        java.util.Properties properties51 = new java.util.Properties(properties45);
        boolean boolean52 = properties1.contains((java.lang.Object) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((-1L));
        long long56 = atomikosProperties53.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int58 = atomikosProperties57.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.logBaseDir = "";
        atomikosProperties59.setConsoleFileCount((int) (short) 10);
        atomikosProperties59.setCheckpointInterval(10000L);
        long long66 = atomikosProperties59.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties59.consoleLogLevel = atomikosLoggingLevel67;
        atomikosProperties57.consoleLogLevel = atomikosLoggingLevel67;
        atomikosProperties53.consoleLogLevel = atomikosLoggingLevel67;
        atomikosProperties53.forceShutdownOnVmExit = false;
        atomikosProperties53.checkpointInterval = (short) 1;
        atomikosProperties53.consoleFileCount = 0;
        atomikosProperties53.maxActives = (short) 1;
        atomikosProperties53.setTransactionManagerUniqueName("");
        java.util.Properties properties81 = atomikosProperties53.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties81.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery83 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long84 = recovery83.getRetryInterval();
        recovery83.setForgetOrphanedLogEntriesDelay((-1L));
        int int87 = recovery83.getMaxRetries();
        long long88 = recovery83.forgetOrphanedLogEntriesDelay;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties89.setDefaultJtaTimeout((-1L));
        long long92 = atomikosProperties89.checkpointInterval;
        java.lang.String str93 = atomikosProperties89.getLogBaseName();
        atomikosProperties89.consoleFileLimit = (short) 10;
        boolean boolean96 = atomikosProperties89.isThreadedTwoPhaseCommit();
        boolean boolean97 = properties81.remove((java.lang.Object) long88, (java.lang.Object) atomikosProperties89);
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties81);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 500L + "'", long36 == 500L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 500L + "'", long56 == 500L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10000L + "'", long84 == 10000L);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 5 + "'", int87 == 5);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-1L) + "'", long88 == (-1L));
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 500L + "'", long92 == 500L);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "tmlog" + "'", str93, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test02874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02874");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.consoleFileCount = 0;
        long long10 = atomikosProperties0.getMaxTimeout();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setOutputDir("tm.out");
        atomikosProperties0.consoleFileLimit = 50;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02875");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        int int9 = atomikosProperties0.getConsoleFileCount();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test02876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02876");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        long long13 = atomikosProperties8.getMaxTimeout();
        atomikosProperties8.service = "";
        java.lang.String str16 = atomikosProperties8.logBaseDir;
        boolean boolean17 = atomikosProperties8.threadedTwoPhaseCommit;
        java.lang.String str18 = atomikosProperties8.getService();
        atomikosProperties8.setLogBaseDir("{}");
        atomikosProperties8.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj23 = properties7.get((java.lang.Object) atomikosProperties8);
        java.util.Properties properties24 = atomikosProperties8.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.io.PrintStream printStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(objEnumeration25);
    }

    @Test
    public void test02877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02877");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.lang.Object obj6 = properties0.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", "{{}={}}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream9, "{}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertNotNull(objEnumeration8);
    }

    @Test
    public void test02878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02878");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        boolean boolean37 = properties1.isEmpty();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.get((java.lang.Object) 0.0d);
        java.lang.Object obj41 = properties38.clone();
        java.lang.String str42 = properties38.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        atomikosProperties43.setLogBaseDir("{}");
        boolean boolean50 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.Object obj52 = properties38.putIfAbsent((java.lang.Object) boolean50, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties38.entrySet();
        java.lang.String str54 = properties38.toString();
        boolean boolean55 = properties1.containsValue((java.lang.Object) str54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.logBaseDir = "";
        atomikosProperties56.setConsoleFileCount((int) (short) 10);
        atomikosProperties56.setLogBaseDir("{}");
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.util.Set<java.lang.String> strSet64 = properties63.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int66 = atomikosProperties65.getConsoleFileCount();
        int int67 = atomikosProperties65.maxActives;
        atomikosProperties65.setConsoleFileName("");
        atomikosProperties65.transactionManagerUniqueName = "{}";
        java.util.Properties properties72 = atomikosProperties65.asProperties();
        boolean boolean73 = atomikosProperties65.threadedTwoPhaseCommit;
        atomikosProperties65.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int77 = atomikosProperties76.getConsoleFileCount();
        int int78 = atomikosProperties76.maxActives;
        atomikosProperties76.setConsoleFileName("");
        atomikosProperties76.transactionManagerUniqueName = "{}";
        atomikosProperties76.setMaxActives(0);
        boolean boolean85 = atomikosProperties76.forceShutdownOnVmExit;
        java.lang.Object obj86 = properties63.put((java.lang.Object) atomikosProperties65, (java.lang.Object) atomikosProperties76);
        atomikosProperties65.setConsoleFileCount((int) '4');
        boolean boolean89 = properties1.equals((java.lang.Object) '4');
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties1.elements();
        int int91 = properties1.size();
        properties1.clear();
        java.io.InputStream inputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{true=10000}" + "'", str54, "{true=10000}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 50 + "'", int78 == 50);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test02879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02879");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        atomikosProperties0.maxActives = (short) 100;
        atomikosProperties0.maxActives = 100;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        int int12 = properties11.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.get((java.lang.Object) 0.0d);
        java.lang.Object obj19 = properties16.clone();
        java.lang.String str20 = properties16.toString();
        boolean boolean23 = properties16.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj24 = properties14.replace((java.lang.Object) 10.0d, (java.lang.Object) properties16);
        java.util.Properties properties25 = new java.util.Properties(properties16);
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int29 = atomikosProperties28.getConsoleFileCount();
        int int30 = atomikosProperties28.maxActives;
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getOutputDir();
        int int34 = atomikosProperties28.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = atomikosProperties28.getRecovery();
        boolean boolean36 = properties25.containsKey((java.lang.Object) recovery35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel40 = null;
        atomikosProperties37.consoleLogLevel = atomikosLoggingLevel40;
        atomikosProperties37.outputDir = "";
        int int44 = atomikosProperties37.maxActives;
        boolean boolean45 = atomikosProperties37.isThreadedTwoPhaseCommit();
        java.util.Properties properties46 = atomikosProperties37.asProperties();
        java.lang.Object obj47 = properties11.putIfAbsent((java.lang.Object) recovery35, (java.lang.Object) atomikosProperties37);
        int int48 = recovery35.maxRetries;
        long long49 = recovery35.delay;
        int int50 = recovery35.getMaxRetries();
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 18 + "'", int12 == 18);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(recovery35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
    }

    @Test
    public void test02880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02880");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Collection<java.lang.Object> objCollection41 = properties39.values();
        int int42 = properties39.size();
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties39.elements();
        java.util.Properties properties44 = new java.util.Properties(properties39);
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties30.keys();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
    }

    @Test
    public void test02881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02881");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        long long13 = recovery12.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 86400000L + "'", long13 == 86400000L);
    }

    @Test
    public void test02882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02882");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        long long10 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 0);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        boolean boolean16 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.forceShutdownOnVmExit = true;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02883");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str9 = atomikosProperties0.outputDir;
        atomikosProperties0.consoleFileLimit = (byte) 1;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test02884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02884");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.get((java.lang.Object) 0.0d);
        java.lang.Object obj11 = properties8.clone();
        java.lang.String str12 = properties8.toString();
        boolean boolean15 = properties8.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj16 = properties6.replace((java.lang.Object) 10.0d, (java.lang.Object) properties8);
        java.lang.String str17 = properties8.toString();
        java.util.Properties properties18 = new java.util.Properties(properties8);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        boolean boolean22 = properties20.isEmpty();
        boolean boolean23 = properties8.equals((java.lang.Object) boolean22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Collection<java.lang.Object> objCollection26 = properties25.values();
        boolean boolean27 = properties25.isEmpty();
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        java.lang.String str30 = properties25.getProperty("");
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        java.lang.String str35 = properties31.toString();
        boolean boolean38 = properties31.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj39 = null;
        boolean boolean40 = properties31.equals(obj39);
        java.util.Set<java.lang.Object> objSet41 = properties31.keySet();
        boolean boolean42 = properties25.contains((java.lang.Object) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        atomikosProperties43.setCheckpointInterval(10000L);
        long long50 = atomikosProperties43.maxTimeout;
        int int51 = atomikosProperties43.maxActives;
        boolean boolean52 = properties0.replace((java.lang.Object) boolean22, (java.lang.Object) properties31, (java.lang.Object) int51);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Collection<java.lang.Object> objCollection55 = properties53.values();
        int int56 = properties53.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery57 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery57.maxRetries = (-1);
        recovery57.setDelay((long) (short) 0);
        recovery57.maxRetries = 0;
        boolean boolean65 = properties53.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        boolean boolean66 = properties31.contains((java.lang.Object) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.logBaseDir = "";
        atomikosProperties67.setConsoleFileCount((int) (short) 10);
        long long72 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties73 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet74 = properties73.keySet();
        atomikosProperties67.set(properties73, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str78 = atomikosProperties67.service;
        java.lang.String str79 = atomikosProperties67.outputDir;
        java.util.Properties properties80 = atomikosProperties67.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.enableLogging = true;
        boolean boolean84 = atomikosProperties81.forceShutdownOnVmExit;
        java.lang.Object obj85 = properties53.getOrDefault((java.lang.Object) properties80, (java.lang.Object) boolean84);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties86 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties86.setDefaultJtaTimeout((-1L));
        java.lang.String str89 = atomikosProperties86.getTransactionManagerUniqueName();
        java.util.Properties properties90 = atomikosProperties86.asProperties();
        java.lang.String str91 = atomikosProperties86.getService();
        java.lang.String str92 = atomikosProperties86.logBaseDir;
        java.lang.Object obj93 = properties53.get((java.lang.Object) atomikosProperties86);
        atomikosProperties86.setThreadedTwoPhaseCommit(true);
        boolean boolean96 = atomikosProperties86.isAllowSubTransactions();
        boolean boolean97 = atomikosProperties86.serialJtaTransactions;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 300000L + "'", long50 == 300000L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 300000L + "'", long72 == 300000L);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + obj85 + "' != '" + false + "'", obj85, false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(properties90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test02885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02885");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.consoleFileLimit = (byte) 1;
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        boolean boolean14 = atomikosProperties0.serialJtaTransactions;
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval(52L);
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str19 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test02886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02886");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        atomikosProperties0.setConsoleFileLimit((int) (short) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str15 = atomikosProperties0.logBaseName;
        atomikosProperties0.checkpointInterval = 50;
        atomikosProperties0.consoleFileLimit = (byte) -1;
        long long20 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 50L + "'", long20 == 50L);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test02887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02887");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.serialJtaTransactions;
        int int10 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.logBaseName = "{{}=tmlog}";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test02888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02888");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long3 = recovery2.getRetryInterval();
        long long4 = recovery2.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setDefaultJtaTimeout((-1L));
        int int8 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties9 = atomikosProperties5.asProperties();
        boolean boolean10 = atomikosProperties5.forceShutdownOnVmExit;
        long long11 = atomikosProperties5.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long13 = atomikosProperties12.defaultJtaTimeout;
        atomikosProperties12.logBaseName = "tm.out";
        boolean boolean16 = properties0.replace((java.lang.Object) recovery2, (java.lang.Object) long11, (java.lang.Object) atomikosProperties12);
        java.util.Properties properties17 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = null;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel21;
        atomikosProperties18.outputDir = "";
        int int25 = atomikosProperties18.maxActives;
        boolean boolean26 = atomikosProperties18.isThreadedTwoPhaseCommit();
        java.lang.String str27 = atomikosProperties18.outputDir;
        java.lang.String str28 = atomikosProperties18.getConsoleFileName();
        boolean boolean29 = properties17.equals((java.lang.Object) atomikosProperties18);
        java.io.Reader reader30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.load(reader30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test02889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02889");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.consoleFileLimit = 10;
        boolean boolean13 = atomikosProperties0.allowSubTransactions;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test02890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02890");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean1 = atomikosProperties0.allowSubTransactions;
        long long2 = atomikosProperties0.defaultJtaTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + true + "'", boolean1 == true);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test02891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02891");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.service;
        java.lang.String str12 = atomikosProperties0.outputDir;
        atomikosProperties0.setConsoleFileLimit(35);
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str17 = atomikosProperties0.getConsoleFileName();
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test02892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02892");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseDir = "{true=10000}";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(recovery12);
    }

    @Test
    public void test02893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02893");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        int int13 = atomikosProperties0.maxActives;
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.consoleFileLimit = (short) 0;
        atomikosProperties0.setOutputDir("");
        boolean boolean20 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str21 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test02894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02894");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setOutputDir("tmlog");
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test02895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02895");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties21.keys();
        int int27 = properties21.size();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties21.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery30.maxRetries = (-1);
        recovery30.setDelay((long) (short) 0);
        recovery30.maxRetries = 0;
        atomikosProperties0.set(properties21, "tmlog", (java.lang.Object) recovery30);
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = null;
        atomikosProperties43.consoleLogLevel = atomikosLoggingLevel46;
        atomikosProperties43.outputDir = "";
        java.lang.String str50 = atomikosProperties43.logBaseName;
        java.util.Properties properties51 = atomikosProperties43.asProperties();
        atomikosProperties0.set(properties40, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) atomikosProperties43);
        int int53 = atomikosProperties0.getConsoleFileLimit();
        long long54 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
    }

    @Test
    public void test02896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02896");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.setOutputDir("{}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test02897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02897");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.lang.String str5 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.defaultJtaTimeout = 35L;
        atomikosProperties0.enableLogging = false;
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test02898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02898");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Properties properties47 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = null;
        atomikosProperties48.consoleLogLevel = atomikosLoggingLevel51;
        atomikosProperties48.outputDir = "";
        java.lang.String str55 = atomikosProperties48.logBaseDir;
        java.lang.String str56 = atomikosProperties48.logBaseDir;
        java.lang.Class<?> wildcardClass57 = atomikosProperties48.getClass();
        boolean boolean58 = properties47.contains((java.lang.Object) atomikosProperties48);
        properties47.clear();
        boolean boolean60 = properties47.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.logBaseDir = "";
        atomikosProperties61.setConsoleFileCount((int) (short) 10);
        java.lang.String str66 = atomikosProperties61.logBaseName;
        atomikosProperties61.outputDir = "";
        java.util.Properties properties69 = atomikosProperties61.asProperties();
        java.util.Set<java.lang.String> strSet70 = properties69.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties69.elements();
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        java.lang.Object obj73 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.logBaseDir = "";
        atomikosProperties74.setConsoleFileCount((int) (short) 10);
        long long79 = atomikosProperties74.getMaxTimeout();
        java.util.Properties properties80 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet81 = properties80.keySet();
        atomikosProperties74.set(properties80, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str85 = atomikosProperties74.logBaseDir;
        atomikosProperties74.outputDir = "hi!";
        long long88 = atomikosProperties74.getMaxTimeout();
        java.util.Properties properties89 = atomikosProperties74.asProperties();
        atomikosProperties74.logBaseName = "";
        boolean boolean92 = atomikosProperties74.isAllowSubTransactions();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean93 = properties47.remove(obj73, (java.lang.Object) atomikosProperties74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 300000L + "'", long79 == 300000L);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 300000L + "'", long88 == 300000L);
        org.junit.Assert.assertNotNull(properties89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test02899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02899");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        boolean boolean18 = properties11.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj19 = properties9.replace((java.lang.Object) 10.0d, (java.lang.Object) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((-1L));
        int int23 = atomikosProperties20.getConsoleFileLimit();
        java.util.Properties properties24 = atomikosProperties20.asProperties();
        java.util.Properties properties25 = new java.util.Properties();
        java.lang.Object obj27 = properties25.get((java.lang.Object) 0.0d);
        java.lang.Object obj28 = properties25.clone();
        java.lang.String str29 = properties25.toString();
        java.util.Properties properties30 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.keys();
        java.util.Collection<java.lang.Object> objCollection32 = properties30.values();
        boolean boolean33 = properties24.contains((java.lang.Object) objCollection32);
        properties24.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        atomikosProperties35.setLogBaseDir("{}");
        java.util.Properties properties42 = atomikosProperties35.asProperties();
        java.util.Set<java.lang.String> strSet43 = properties42.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = null;
        atomikosProperties44.consoleLogLevel = atomikosLoggingLevel47;
        atomikosProperties44.outputDir = "";
        int int51 = atomikosProperties44.maxActives;
        boolean boolean52 = atomikosProperties44.isThreadedTwoPhaseCommit();
        atomikosProperties44.consoleFileLimit = (short) 10;
        java.util.Properties properties55 = atomikosProperties44.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.enableLogging = true;
        long long60 = atomikosProperties57.getCheckpointInterval();
        java.lang.String str61 = atomikosProperties57.getService();
        atomikosProperties57.forceShutdownOnVmExit = false;
        java.lang.Object obj64 = properties42.replace((java.lang.Object) objEnumeration56, (java.lang.Object) atomikosProperties57);
        java.lang.Object obj65 = properties9.putIfAbsent((java.lang.Object) properties24, (java.lang.Object) atomikosProperties57);
        boolean boolean66 = properties0.equals(obj65);
        java.lang.String str68 = properties0.getProperty("hi!");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 500L + "'", long60 == 500L);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test02900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02900");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.serialJtaTransactions = true;
        boolean boolean13 = atomikosProperties0.isAllowSubTransactions();
        int int14 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test02901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02901");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.util.Enumeration<?> wildcardEnumeration22 = properties13.propertyNames();
        java.lang.Object obj23 = properties8.get((java.lang.Object) properties13);
        java.util.Properties properties24 = new java.util.Properties(properties8);
        java.io.PrintStream printStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test02902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02902");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        int int10 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test02903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02903");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.service;
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileCount((int) (byte) 1);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objCollection16);
    }

    @Test
    public void test02904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02904");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setConsoleFileName("{true=10000}");
        int int12 = atomikosProperties0.maxActives;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        java.lang.String str15 = atomikosProperties0.service;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test02905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02905");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Properties properties21 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        atomikosProperties22.setLogBaseDir("{}");
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.util.Set<java.lang.String> strSet30 = properties29.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int32 = atomikosProperties31.getConsoleFileCount();
        int int33 = atomikosProperties31.maxActives;
        atomikosProperties31.setConsoleFileName("");
        atomikosProperties31.transactionManagerUniqueName = "{}";
        java.util.Properties properties38 = atomikosProperties31.asProperties();
        boolean boolean39 = atomikosProperties31.threadedTwoPhaseCommit;
        atomikosProperties31.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int43 = atomikosProperties42.getConsoleFileCount();
        int int44 = atomikosProperties42.maxActives;
        atomikosProperties42.setConsoleFileName("");
        atomikosProperties42.transactionManagerUniqueName = "{}";
        atomikosProperties42.setMaxActives(0);
        boolean boolean51 = atomikosProperties42.forceShutdownOnVmExit;
        java.lang.Object obj52 = properties29.put((java.lang.Object) atomikosProperties31, (java.lang.Object) atomikosProperties42);
        atomikosProperties42.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties42.serialJtaTransactions = true;
        atomikosProperties42.setConsoleFileLimit((int) (short) 10);
        atomikosProperties42.setConsoleFileCount((int) '4');
        java.lang.String str61 = atomikosProperties42.getLogBaseName();
        java.lang.String str62 = atomikosProperties42.getConsoleFileName();
        java.lang.Object obj63 = properties1.remove((java.lang.Object) str62);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNotNull(properties38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str61, "{com.atomikos.icatch.hi!=-1.0}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test02906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02906");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.maxTimeout = 300000L;
        java.lang.String str10 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        boolean boolean12 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02907");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        long long12 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("");
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj30 = properties23.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setDefaultJtaTimeout((-1L));
        java.util.Properties properties34 = new java.util.Properties();
        java.lang.Object obj36 = properties34.get((java.lang.Object) 0.0d);
        java.lang.Object obj37 = properties34.clone();
        boolean boolean39 = properties23.replace((java.lang.Object) (-1L), obj37, (java.lang.Object) 100.0d);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties23.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties23.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.logBaseDir = "";
        atomikosProperties46.setConsoleFileCount((int) (short) 10);
        atomikosProperties46.setLogBaseDir("{}");
        java.util.Properties properties53 = atomikosProperties46.asProperties();
        atomikosProperties46.service = "";
        boolean boolean56 = atomikosProperties46.isEnableLogging();
        atomikosProperties46.maxActives = (byte) 1;
        atomikosProperties46.consoleFileCount = (short) 100;
        boolean boolean61 = properties16.remove((java.lang.Object) properties23, (java.lang.Object) atomikosProperties46);
        java.util.Set<java.lang.Object> objSet62 = properties16.keySet();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objSet62);
    }

    @Test
    public void test02908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02908");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        atomikosProperties0.allowSubTransactions = true;
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test02909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02909");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.checkpointInterval = 100L;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int20 = atomikosProperties19.getConsoleFileCount();
        int int21 = atomikosProperties19.maxActives;
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        atomikosProperties19.service = "tmlog";
        java.lang.String str27 = atomikosProperties19.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        long long31 = atomikosProperties28.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        atomikosProperties34.setCheckpointInterval(10000L);
        long long41 = atomikosProperties34.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties34.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties32.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties28.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel42;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 500L + "'", long31 == 500L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
    }

    @Test
    public void test02910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02910");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        atomikosProperties5.setLogBaseDir("{}");
        java.util.Properties properties12 = atomikosProperties5.asProperties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setCheckpointInterval(10000L);
        long long21 = atomikosProperties14.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties14.getConsoleLogLevel();
        boolean boolean23 = properties13.containsValue((java.lang.Object) atomikosProperties14);
        atomikosProperties14.setConsoleFileName("hi!");
        boolean boolean26 = properties4.equals((java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        long long32 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet34 = properties33.keySet();
        atomikosProperties27.set(properties33, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj40 = properties33.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((-1L));
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.get((java.lang.Object) 0.0d);
        java.lang.Object obj47 = properties44.clone();
        boolean boolean49 = properties33.replace((java.lang.Object) (-1L), obj47, (java.lang.Object) 100.0d);
        java.util.Properties properties50 = new java.util.Properties();
        java.util.Properties properties51 = new java.util.Properties(properties50);
        properties51.clear();
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties51.elements();
        java.lang.String str56 = properties51.getProperty("");
        java.util.Properties properties57 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.util.Set<java.lang.String> strSet59 = properties57.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        java.lang.String str65 = atomikosProperties60.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel66 = atomikosProperties60.getConsoleLogLevel();
        java.lang.String str67 = atomikosProperties60.transactionManagerUniqueName;
        atomikosProperties60.consoleFileLimit = (byte) 100;
        java.lang.Object obj70 = properties4.replace((java.lang.Object) properties57, (java.lang.Object) (byte) 100);
        java.util.Properties properties71 = new java.util.Properties(properties57);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel66 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel66.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(obj70);
    }

    @Test
    public void test02911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02911");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        atomikosProperties15.setConsoleFileLimit((int) (short) 100);
        atomikosProperties15.setForceShutdownOnVmExit(false);
        java.lang.String str30 = atomikosProperties15.logBaseName;
        boolean boolean31 = properties14.contains((java.lang.Object) atomikosProperties15);
        java.io.PrintWriter printWriter32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printWriter32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test02912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02912");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        atomikosProperties0.consoleFileLimit = 50;
        boolean boolean10 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.serialJtaTransactions = false;
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.outputDir = "tmlog";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test02913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02913");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.checkpointInterval = 100L;
        atomikosProperties0.setService("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties0.maxTimeout = 10000L;
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.load(inputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test02914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02914");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileName("tmlog");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.storeToXML(outputStream10, "tmlog", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test02915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02915");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str10 = properties8.getProperty("{{}=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getConsoleFileCount();
        atomikosProperties11.outputDir = "";
        int int15 = atomikosProperties11.getMaxActives();
        boolean boolean16 = properties8.containsValue((java.lang.Object) atomikosProperties11);
        java.io.InputStream inputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test02916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02916");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        recovery9.retryInterval = (byte) 10;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(recovery9);
    }

    @Test
    public void test02917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02917");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties0.enableLogging;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setConsoleFileCount(1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test02918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02918");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        int int17 = atomikosProperties0.maxActives;
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.checkpointInterval = 21;
        java.lang.String str23 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
    }

    @Test
    public void test02919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02919");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02920");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        long long12 = atomikosProperties0.checkpointInterval;
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test02921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02921");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        boolean boolean15 = properties8.remove((java.lang.Object) long13, (java.lang.Object) (byte) 100);
        java.lang.String str16 = properties8.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        atomikosProperties33.set(properties39, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj46 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) 0.0d);
        java.lang.Object obj53 = properties50.clone();
        boolean boolean55 = properties39.replace((java.lang.Object) (-1L), obj53, (java.lang.Object) 100.0d);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        long long65 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet67 = properties66.keySet();
        atomikosProperties60.set(properties66, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str71 = atomikosProperties60.logBaseDir;
        java.lang.String str72 = atomikosProperties60.logBaseDir;
        java.util.Properties properties73 = atomikosProperties60.asProperties();
        java.lang.Object obj74 = properties28.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60);
        boolean boolean75 = properties23.contains((java.lang.Object) atomikosProperties60);
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties23);
        boolean boolean77 = properties0.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel6, (java.lang.Object) boolean76);
        java.util.Properties properties78 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = properties0.entrySet();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntrySet79);
    }

    @Test
    public void test02922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02922");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((-1L));
        long long13 = atomikosProperties10.checkpointInterval;
        boolean boolean14 = atomikosProperties10.forceShutdownOnVmExit;
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setOutputDir("");
        long long19 = atomikosProperties10.getMaxTimeout();
        boolean boolean20 = properties1.containsKey((java.lang.Object) long19);
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration22 = properties21.propertyNames();
        java.util.Set<java.lang.String> strSet23 = properties21.stringPropertyNames();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test02923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02923");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = (short) -1;
        long long7 = recovery0.retryInterval;
        int int8 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) 35);
        recovery0.forgetOrphanedLogEntriesDelay = 18;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test02924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02924");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        boolean boolean8 = properties1.isEmpty();
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties1.keys();
        java.io.PrintStream printStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test02925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02925");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        long long10 = atomikosProperties5.getMaxTimeout();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet12 = properties11.keySet();
        atomikosProperties5.set(properties11, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj18 = properties11.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((-1L));
        java.util.Properties properties22 = new java.util.Properties();
        java.lang.Object obj24 = properties22.get((java.lang.Object) 0.0d);
        java.lang.Object obj25 = properties22.clone();
        boolean boolean27 = properties11.replace((java.lang.Object) (-1L), obj25, (java.lang.Object) 100.0d);
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        properties29.clear();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        long long37 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet39 = properties38.keySet();
        atomikosProperties32.set(properties38, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str43 = atomikosProperties32.logBaseDir;
        java.lang.String str44 = atomikosProperties32.logBaseDir;
        java.util.Properties properties45 = atomikosProperties32.asProperties();
        java.lang.Object obj46 = properties0.replace((java.lang.Object) properties29, (java.lang.Object) atomikosProperties32);
        java.util.Set<java.lang.String> strSet47 = properties29.stringPropertyNames();
        java.util.Properties properties48 = new java.util.Properties(properties29);
        java.util.Set<java.lang.String> strSet49 = properties48.stringPropertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertEquals(obj25.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj25), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj25), "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(strSet49);
    }

    @Test
    public void test02926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02926");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.outputDir;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setConsoleFileName("");
        boolean boolean20 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.defaultJtaTimeout = (short) -1;
        long long23 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
    }

    @Test
    public void test02927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02927");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj27 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        boolean boolean36 = properties20.replace((java.lang.Object) (-1L), obj34, (java.lang.Object) 100.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean41 = properties3.equals((java.lang.Object) properties20);
        java.util.Properties properties42 = new java.util.Properties(properties20);
        java.util.Collection<java.lang.Object> objCollection43 = properties20.values();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.get((java.lang.Object) 0.0d);
        java.lang.Object obj47 = properties44.clone();
        java.lang.String str48 = properties44.toString();
        boolean boolean51 = properties44.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj52 = null;
        boolean boolean53 = properties44.equals(obj52);
        java.util.Set<java.lang.Object> objSet54 = properties44.keySet();
        java.util.Properties properties55 = new java.util.Properties(properties44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties55.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.logBaseDir = "";
        atomikosProperties57.setConsoleFileCount((int) (short) 10);
        long long62 = atomikosProperties57.getMaxTimeout();
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet64 = properties63.keySet();
        atomikosProperties57.set(properties63, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str68 = atomikosProperties57.logBaseDir;
        java.lang.String str69 = atomikosProperties57.logBaseDir;
        java.lang.String str70 = atomikosProperties57.logBaseDir;
        boolean boolean71 = atomikosProperties57.isEnableLogging();
        long long72 = atomikosProperties57.checkpointInterval;
        boolean boolean73 = atomikosProperties57.serialJtaTransactions;
        atomikosProperties57.maxActives = (short) 100;
        atomikosProperties57.transactionManagerUniqueName = "{}";
        boolean boolean78 = properties20.remove((java.lang.Object) properties55, (java.lang.Object) atomikosProperties57);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties20.keys();
        java.io.InputStream inputStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.loadFromXML(inputStream80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{}" + "'", str48, "{}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objEnumeration79);
    }

    @Test
    public void test02928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02928");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        long long7 = recovery0.getRetryInterval();
        int int8 = recovery0.getMaxRetries();
        recovery0.retryInterval = 10;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test02929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02929");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.setOutputDir("tm.out");
        long long11 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test02930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02930");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties3.setProperty("", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int18 = atomikosProperties17.getConsoleFileCount();
        int int19 = atomikosProperties17.maxActives;
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getOutputDir();
        atomikosProperties17.service = "tmlog";
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection27 = properties26.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.enableLogging = true;
        long long31 = atomikosProperties28.getCheckpointInterval();
        boolean boolean33 = properties26.remove((java.lang.Object) long31, (java.lang.Object) (byte) 100);
        boolean boolean35 = properties26.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties26.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((-1L));
        long long40 = atomikosProperties37.checkpointInterval;
        boolean boolean41 = atomikosProperties37.forceShutdownOnVmExit;
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        boolean boolean44 = properties26.contains((java.lang.Object) true);
        java.util.Properties properties45 = new java.util.Properties(properties26);
        boolean boolean47 = properties45.containsValue((java.lang.Object) (short) -1);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.get((java.lang.Object) 0.0d);
        java.lang.Object obj55 = properties52.clone();
        java.lang.String str56 = properties52.toString();
        boolean boolean59 = properties52.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj60 = properties50.replace((java.lang.Object) 10.0d, (java.lang.Object) properties52);
        java.lang.String str61 = properties52.toString();
        java.util.Properties properties62 = new java.util.Properties(properties52);
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.get((java.lang.Object) 0.0d);
        java.lang.Object obj69 = properties66.clone();
        java.lang.String str70 = properties66.toString();
        boolean boolean73 = properties66.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj74 = properties64.replace((java.lang.Object) 10.0d, (java.lang.Object) properties66);
        java.util.Properties properties75 = new java.util.Properties(properties64);
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        atomikosProperties17.set(properties45, "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) properties62);
        atomikosProperties17.setForceShutdownOnVmExit(false);
        java.lang.Object obj80 = properties3.get((java.lang.Object) atomikosProperties17);
        int int81 = atomikosProperties17.getConsoleFileCount();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 500L + "'", long31 == 500L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 500L + "'", long40 == 500L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "{}" + "'", str61, "{}");
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{}" + "'", str70, "{}");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
    }

    @Test
    public void test02931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02931");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test02932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02932");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str18 = atomikosProperties0.outputDir;
        atomikosProperties0.allowSubTransactions = true;
        long long21 = atomikosProperties0.getCheckpointInterval();
        boolean boolean22 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.defaultJtaTimeout = 0L;
        java.lang.String str25 = atomikosProperties0.getService();
        int int26 = atomikosProperties0.maxActives;
        java.lang.String str27 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
    }

    @Test
    public void test02933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02933");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Enumeration<?> wildcardEnumeration6 = properties5.propertyNames();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
    }

    @Test
    public void test02934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02934");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test02935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02935");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.checkpointInterval = 500L;
        atomikosProperties0.consoleFileName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.recovery;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(recovery7);
    }

    @Test
    public void test02936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02936");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties6.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties6.elements();
        java.io.PrintWriter printWriter29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.list(printWriter29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
    }

    @Test
    public void test02937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02937");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery5 = atomikosProperties0.recovery;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(recovery5);
    }

    @Test
    public void test02938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02938");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        int int13 = atomikosProperties10.consoleFileLimit;
        atomikosProperties10.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int17 = atomikosProperties16.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.logBaseDir = "";
        atomikosProperties18.setConsoleFileCount((int) (short) 10);
        atomikosProperties18.setCheckpointInterval(10000L);
        long long25 = atomikosProperties18.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel26;
        atomikosProperties16.consoleLogLevel = atomikosLoggingLevel26;
        atomikosProperties10.consoleLogLevel = atomikosLoggingLevel26;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel26);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel31 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel31 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel31.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
    }

    @Test
    public void test02939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02939");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.String str19 = properties0.toString();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.enableLogging = true;
        long long26 = atomikosProperties23.getCheckpointInterval();
        boolean boolean28 = properties21.remove((java.lang.Object) long26, (java.lang.Object) (byte) 100);
        java.lang.String str29 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties36.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((-1L));
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.get((java.lang.Object) 0.0d);
        java.lang.Object obj50 = properties47.clone();
        boolean boolean52 = properties36.replace((java.lang.Object) (-1L), obj50, (java.lang.Object) 100.0d);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        java.lang.String str59 = properties54.getProperty("");
        java.util.Properties properties60 = new java.util.Properties(properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long62 = recovery61.getRetryInterval();
        recovery61.delay = 10L;
        boolean boolean65 = properties21.remove((java.lang.Object) properties60, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties60.keys();
        java.util.Properties properties67 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = null;
        atomikosProperties68.consoleLogLevel = atomikosLoggingLevel71;
        atomikosProperties68.outputDir = "";
        java.lang.String str75 = atomikosProperties68.logBaseDir;
        java.lang.String str76 = atomikosProperties68.logBaseDir;
        java.lang.Class<?> wildcardClass77 = atomikosProperties68.getClass();
        boolean boolean78 = properties67.contains((java.lang.Object) atomikosProperties68);
        boolean boolean79 = properties67.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery80 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long81 = recovery80.getRetryInterval();
        recovery80.delay = 10L;
        long long84 = recovery80.getDelay();
        long long85 = recovery80.delay;
        recovery80.setForgetOrphanedLogEntriesDelay((long) 0);
        long long88 = recovery80.getDelay();
        recovery80.setRetryInterval(300000L);
        int int91 = recovery80.getMaxRetries();
        java.lang.Object obj92 = properties0.getOrDefault((java.lang.Object) boolean79, (java.lang.Object) recovery80);
        long long93 = recovery80.forgetOrphanedLogEntriesDelay;
        recovery80.setMaxRetries(100);
        recovery80.maxRetries = 19;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{{}={}}" + "'", str19, "{{}={}}");
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10000L + "'", long81 == 10000L);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10L + "'", long84 == 10L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 10L + "'", long85 == 10L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10L + "'", long88 == 10L);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 5 + "'", int91 == 5);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
    }

    @Test
    public void test02940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02940");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        atomikosProperties0.setService("{true=10000}");
        atomikosProperties0.service = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        boolean boolean37 = atomikosProperties0.allowSubTransactions;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test02941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02941");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        java.util.Properties properties59 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties6.elements();
        java.util.Properties properties61 = new java.util.Properties(properties6);
        java.lang.String str64 = properties6.getProperty("", "hi!");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
    }

    @Test
    public void test02942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02942");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        boolean boolean31 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setRetryInterval((long) (-1));
        java.lang.Object obj38 = properties15.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = null;
        atomikosProperties39.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties39.outputDir = "";
        int int46 = atomikosProperties39.maxActives;
        boolean boolean47 = atomikosProperties39.isThreadedTwoPhaseCommit();
        atomikosProperties39.consoleFileLimit = (short) 10;
        java.util.Properties properties50 = atomikosProperties39.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.keys();
        boolean boolean52 = properties15.contains((java.lang.Object) properties50);
        java.util.Properties properties53 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.enableLogging = true;
        int int57 = atomikosProperties54.consoleFileLimit;
        atomikosProperties54.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int61 = atomikosProperties60.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.logBaseDir = "";
        atomikosProperties62.setConsoleFileCount((int) (short) 10);
        atomikosProperties62.setCheckpointInterval(10000L);
        long long69 = atomikosProperties62.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel70 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties62.consoleLogLevel = atomikosLoggingLevel70;
        atomikosProperties60.consoleLogLevel = atomikosLoggingLevel70;
        atomikosProperties54.consoleLogLevel = atomikosLoggingLevel70;
        boolean boolean74 = properties15.containsValue((java.lang.Object) atomikosLoggingLevel70);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel70 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel70.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test02943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02943");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test02944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02944");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = (short) -1;
        recovery0.setForgetOrphanedLogEntriesDelay(500L);
        recovery0.retryInterval = 100;
        recovery0.setRetryInterval(52L);
        recovery0.setDelay(5L);
    }

    @Test
    public void test02945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02945");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        int int11 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.setDelay((long) (short) 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test02946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02946");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = null;
        atomikosProperties14.consoleLogLevel = atomikosLoggingLevel17;
        atomikosProperties14.outputDir = "";
        int int21 = atomikosProperties14.maxActives;
        boolean boolean22 = atomikosProperties14.isThreadedTwoPhaseCommit();
        atomikosProperties14.consoleFileLimit = (short) 10;
        java.util.Properties properties25 = atomikosProperties14.asProperties();
        java.lang.Object obj26 = properties12.get((java.lang.Object) properties25);
        int int27 = properties12.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        long long33 = atomikosProperties28.getMaxTimeout();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        atomikosProperties28.set(properties34, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str39 = atomikosProperties28.logBaseDir;
        java.lang.String str40 = atomikosProperties28.logBaseDir;
        java.util.Properties properties41 = atomikosProperties28.asProperties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Collection<java.lang.Object> objCollection45 = properties44.values();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Collection<java.lang.Object> objCollection48 = properties46.values();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.keys();
        boolean boolean50 = properties44.contains((java.lang.Object) properties46);
        java.util.Properties properties51 = new java.util.Properties(properties46);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.util.Properties properties53 = new java.util.Properties(properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setDefaultJtaTimeout((-1L));
        long long57 = atomikosProperties54.checkpointInterval;
        boolean boolean58 = atomikosProperties54.forceShutdownOnVmExit;
        java.lang.String str59 = atomikosProperties54.logBaseName;
        java.lang.Object obj60 = properties12.getOrDefault((java.lang.Object) properties42, (java.lang.Object) atomikosProperties54);
        java.io.InputStream inputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.load(inputStream61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertNotNull(obj60);
    }

    @Test
    public void test02947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02947");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        int int10 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test02948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02948");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        atomikosProperties0.forceShutdownOnVmExit = true;
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str18 = atomikosProperties0.logBaseDir;
        long long19 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
    }

    @Test
    public void test02949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02949");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Properties properties16 = new java.util.Properties(properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        atomikosProperties17.setLogBaseDir("{}");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.util.Set<java.lang.String> strSet25 = properties24.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int27 = atomikosProperties26.getConsoleFileCount();
        int int28 = atomikosProperties26.maxActives;
        atomikosProperties26.setConsoleFileName("");
        atomikosProperties26.transactionManagerUniqueName = "{}";
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        boolean boolean34 = atomikosProperties26.threadedTwoPhaseCommit;
        atomikosProperties26.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getConsoleFileCount();
        int int39 = atomikosProperties37.maxActives;
        atomikosProperties37.setConsoleFileName("");
        atomikosProperties37.transactionManagerUniqueName = "{}";
        atomikosProperties37.setMaxActives(0);
        boolean boolean46 = atomikosProperties37.forceShutdownOnVmExit;
        java.lang.Object obj47 = properties24.put((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties37);
        atomikosProperties26.setConsoleFileCount((int) '4');
        java.util.Properties properties50 = atomikosProperties26.asProperties();
        boolean boolean51 = properties16.containsValue((java.lang.Object) properties50);
        java.lang.String str53 = properties16.getProperty("{{}=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery54.maxRetries = (-1);
        recovery54.setDelay((long) (short) 0);
        long long59 = recovery54.forgetOrphanedLogEntriesDelay;
        recovery54.retryInterval = 500L;
        recovery54.retryInterval = '4';
        long long64 = recovery54.getRetryInterval();
        boolean boolean65 = properties16.contains((java.lang.Object) recovery54);
        recovery54.delay = 2;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 86400000L + "'", long59 == 86400000L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 52L + "'", long64 == 52L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test02950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02950");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.checkpointInterval = 100L;
        atomikosProperties0.setService("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties0.maxTimeout = 10000L;
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass22 = properties21.getClass();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test02951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02951");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = null;
        boolean boolean14 = properties5.equals(obj13);
        java.util.Properties properties15 = new java.util.Properties();
        java.lang.Object obj17 = properties15.get((java.lang.Object) 0.0d);
        java.lang.Object obj18 = properties15.clone();
        java.lang.Object obj21 = properties15.setProperty("{}", "{}");
        int int22 = properties15.size();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        boolean boolean27 = atomikosProperties24.isForceShutdownOnVmExit();
        atomikosProperties24.allowSubTransactions = false;
        boolean boolean30 = atomikosProperties24.serialJtaTransactions;
        boolean boolean31 = properties5.containsKey((java.lang.Object) boolean30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        atomikosProperties32.setLogBaseDir("{}");
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        java.util.Set<java.lang.String> strSet40 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int42 = atomikosProperties41.getConsoleFileCount();
        int int43 = atomikosProperties41.maxActives;
        atomikosProperties41.setConsoleFileName("");
        atomikosProperties41.transactionManagerUniqueName = "{}";
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        boolean boolean49 = atomikosProperties41.threadedTwoPhaseCommit;
        atomikosProperties41.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int53 = atomikosProperties52.getConsoleFileCount();
        int int54 = atomikosProperties52.maxActives;
        atomikosProperties52.setConsoleFileName("");
        atomikosProperties52.transactionManagerUniqueName = "{}";
        atomikosProperties52.setMaxActives(0);
        boolean boolean61 = atomikosProperties52.forceShutdownOnVmExit;
        java.lang.Object obj62 = properties39.put((java.lang.Object) atomikosProperties41, (java.lang.Object) atomikosProperties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.logBaseDir = "";
        boolean boolean66 = atomikosProperties63.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = atomikosProperties63.getRecovery();
        boolean boolean68 = properties39.contains((java.lang.Object) atomikosProperties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int70 = atomikosProperties69.getConsoleFileCount();
        int int71 = atomikosProperties69.maxActives;
        int int72 = atomikosProperties69.getMaxActives();
        boolean boolean73 = properties5.remove((java.lang.Object) atomikosProperties63, (java.lang.Object) int72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = null;
        atomikosProperties74.consoleLogLevel = atomikosLoggingLevel77;
        atomikosProperties74.outputDir = "";
        java.lang.String str81 = atomikosProperties74.logBaseDir;
        java.lang.String str82 = atomikosProperties74.logBaseDir;
        java.lang.Class<?> wildcardClass83 = atomikosProperties74.getClass();
        java.lang.Object obj84 = properties0.replace((java.lang.Object) atomikosProperties63, (java.lang.Object) atomikosProperties74);
        java.io.Writer writer85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer85, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(recovery67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 50 + "'", int72 == 50);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test02952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02952");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties6.entrySet();
        java.lang.String str28 = properties6.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        atomikosProperties29.service = "";
        java.lang.String str37 = atomikosProperties29.logBaseDir;
        boolean boolean38 = atomikosProperties29.threadedTwoPhaseCommit;
        java.lang.String str39 = atomikosProperties29.getService();
        java.lang.String str40 = atomikosProperties29.consoleFileName;
        int int41 = atomikosProperties29.getConsoleFileLimit();
        java.lang.Object obj42 = properties6.get((java.lang.Object) int41);
        java.lang.Object obj43 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj44 = properties6.remove(obj43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntrySet27);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{com.atomikos.icatch.hi!=-1.0, =hi!}" + "'", str28, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test02953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02953");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        int int9 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.enableLogging = true;
        long long18 = atomikosProperties15.getCheckpointInterval();
        boolean boolean20 = properties13.remove((java.lang.Object) long18, (java.lang.Object) (byte) 100);
        boolean boolean22 = properties13.equals((java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Class<?> wildcardClass24 = properties23.getClass();
        java.lang.Object obj25 = properties0.put((java.lang.Object) properties10, (java.lang.Object) wildcardClass24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((-1L));
        int int29 = atomikosProperties26.getConsoleFileLimit();
        java.util.Properties properties30 = atomikosProperties26.asProperties();
        boolean boolean31 = atomikosProperties26.forceShutdownOnVmExit;
        atomikosProperties26.setCheckpointInterval(10000L);
        atomikosProperties26.maxActives = 50;
        java.util.Properties properties36 = new java.util.Properties();
        int int37 = properties36.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.logBaseDir = "";
        atomikosProperties38.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getConsoleFileCount();
        int int45 = atomikosProperties43.maxActives;
        java.lang.String str46 = atomikosProperties43.getService();
        boolean boolean47 = properties36.remove((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties43);
        java.lang.String str48 = atomikosProperties38.getLogBaseName();
        java.lang.Object obj49 = properties10.replace((java.lang.Object) atomikosProperties26, (java.lang.Object) str48);
        boolean boolean50 = properties10.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test02954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02954");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection18 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        atomikosProperties19.setLogBaseDir("{}");
        java.lang.String str26 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("hi!");
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        boolean boolean34 = atomikosProperties31.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        long long40 = atomikosProperties35.getMaxTimeout();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet42 = properties41.keySet();
        atomikosProperties35.set(properties41, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj48 = properties41.setProperty("", "hi!");
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection51 = properties49.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean53 = properties41.remove((java.lang.Object) objCollection51, (java.lang.Object) atomikosLoggingLevel52);
        atomikosProperties31.setConsoleLogLevel(atomikosLoggingLevel52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setDefaultJtaTimeout((-1L));
        int int58 = atomikosProperties55.getConsoleFileLimit();
        atomikosProperties55.serialJtaTransactions = false;
        atomikosProperties55.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel63 = atomikosProperties55.consoleLogLevel;
        atomikosProperties31.consoleLogLevel = atomikosLoggingLevel63;
        java.lang.String str65 = atomikosProperties31.getTransactionManagerUniqueName();
        java.lang.String str66 = atomikosProperties31.getService();
        java.util.Properties properties67 = atomikosProperties31.asProperties();
        boolean boolean68 = properties13.remove((java.lang.Object) false, (java.lang.Object) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.enableLogging = true;
        int int72 = atomikosProperties69.consoleFileLimit;
        atomikosProperties69.logBaseName = "hi!";
        boolean boolean75 = atomikosProperties69.isThreadedTwoPhaseCommit();
        boolean boolean76 = atomikosProperties69.enableLogging;
        java.util.Properties properties77 = atomikosProperties69.asProperties();
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean80 = properties78.containsValue((java.lang.Object) 100.0f);
        java.util.Properties properties81 = new java.util.Properties(properties78);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery82 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery82.maxRetries = (-1);
        recovery82.setDelay((long) (short) 0);
        long long87 = recovery82.forgetOrphanedLogEntriesDelay;
        recovery82.setDelay((long) 1);
        int int90 = recovery82.getMaxRetries();
        recovery82.setMaxRetries((int) '4');
        long long93 = recovery82.forgetOrphanedLogEntriesDelay;
        boolean boolean94 = properties67.remove((java.lang.Object) properties78, (java.lang.Object) long93);
        java.util.Collection<java.lang.Object> objCollection95 = properties78.values();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel63 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel63.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(properties67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 86400000L + "'", long87 == 86400000L);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 86400000L + "'", long93 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objCollection95);
    }

    @Test
    public void test02955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02955");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int8 = atomikosProperties7.getConsoleFileCount();
        int int9 = atomikosProperties7.maxActives;
        java.lang.String str10 = atomikosProperties7.getService();
        boolean boolean11 = properties0.remove((java.lang.Object) atomikosProperties2, (java.lang.Object) atomikosProperties7);
        int int12 = atomikosProperties2.consoleFileLimit;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test02956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02956");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties4.values();
        java.lang.Object obj8 = properties4.setProperty("hi!", "{}");
        java.lang.String str10 = properties4.getProperty("tmlog");
        properties4.clear();
        java.lang.Object obj12 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setLogBaseDir("{}");
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        atomikosProperties14.service = "";
        atomikosProperties14.setTransactionManagerUniqueName("{}");
        atomikosProperties14.enableLogging = false;
        atomikosProperties0.set(properties4, "", (java.lang.Object) atomikosProperties14);
        long long29 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties0.recovery;
        long long31 = recovery30.getDelay();
        recovery30.forgetOrphanedLogEntriesDelay = 2L;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
    }

    @Test
    public void test02957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02957");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean18 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.lang.String str22 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        java.lang.String str28 = atomikosProperties23.logBaseName;
        atomikosProperties23.outputDir = "";
        java.util.Properties properties31 = atomikosProperties23.asProperties();
        int int32 = atomikosProperties23.getConsoleFileLimit();
        java.util.Properties properties33 = atomikosProperties23.asProperties();
        int int34 = properties33.size();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.logBaseDir = "";
        atomikosProperties36.setConsoleFileCount((int) (short) 10);
        java.lang.String str41 = atomikosProperties36.logBaseName;
        atomikosProperties36.outputDir = "";
        java.util.Properties properties44 = atomikosProperties36.asProperties();
        java.util.Set<java.lang.String> strSet45 = properties44.stringPropertyNames();
        boolean boolean47 = properties44.contains((java.lang.Object) false);
        properties44.clear();
        java.util.Properties properties49 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.logBaseDir = "";
        atomikosProperties50.setConsoleFileCount((int) (short) 10);
        long long55 = atomikosProperties50.getMaxTimeout();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet57 = properties56.keySet();
        atomikosProperties50.set(properties56, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str61 = atomikosProperties50.logBaseDir;
        java.lang.String str62 = atomikosProperties50.logBaseDir;
        java.util.Properties properties63 = atomikosProperties50.asProperties();
        java.util.Enumeration<?> wildcardEnumeration64 = properties63.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.logBaseDir = "";
        atomikosProperties65.setConsoleFileCount((int) (short) 10);
        java.lang.String str70 = atomikosProperties65.logBaseName;
        atomikosProperties65.outputDir = "";
        java.util.Properties properties73 = atomikosProperties65.asProperties();
        java.util.Properties properties74 = atomikosProperties65.asProperties();
        atomikosProperties65.setEnableLogging(true);
        boolean boolean77 = properties63.containsKey((java.lang.Object) atomikosProperties65);
        atomikosProperties65.setEnableLogging(true);
        atomikosProperties65.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel82 = atomikosProperties65.getConsoleLogLevel();
        java.lang.Object obj83 = properties21.put((java.lang.Object) properties49, (java.lang.Object) atomikosProperties65);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str22, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 20 + "'", int34 == 20);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel82 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel82.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test02958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02958");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        boolean boolean22 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.allowSubTransactions = false;
        boolean boolean25 = atomikosProperties19.serialJtaTransactions;
        boolean boolean26 = properties0.containsKey((java.lang.Object) boolean25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getConsoleFileCount();
        int int38 = atomikosProperties36.maxActives;
        atomikosProperties36.setConsoleFileName("");
        atomikosProperties36.transactionManagerUniqueName = "{}";
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        boolean boolean44 = atomikosProperties36.threadedTwoPhaseCommit;
        atomikosProperties36.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int48 = atomikosProperties47.getConsoleFileCount();
        int int49 = atomikosProperties47.maxActives;
        atomikosProperties47.setConsoleFileName("");
        atomikosProperties47.transactionManagerUniqueName = "{}";
        atomikosProperties47.setMaxActives(0);
        boolean boolean56 = atomikosProperties47.forceShutdownOnVmExit;
        java.lang.Object obj57 = properties34.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.logBaseDir = "";
        boolean boolean61 = atomikosProperties58.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = atomikosProperties58.getRecovery();
        boolean boolean63 = properties34.contains((java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int65 = atomikosProperties64.getConsoleFileCount();
        int int66 = atomikosProperties64.maxActives;
        int int67 = atomikosProperties64.getMaxActives();
        boolean boolean68 = properties0.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) int67);
        java.io.InputStream inputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(recovery62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test02959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02959");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.enableLogging = true;
        int int22 = atomikosProperties19.consoleFileLimit;
        atomikosProperties19.logBaseName = "hi!";
        boolean boolean25 = atomikosProperties19.isThreadedTwoPhaseCommit();
        boolean boolean26 = atomikosProperties19.enableLogging;
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int29 = atomikosProperties28.getConsoleFileCount();
        int int30 = atomikosProperties28.maxActives;
        java.lang.String str31 = atomikosProperties28.getService();
        int int32 = atomikosProperties28.getConsoleFileCount();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.lang.Object obj38 = properties34.setProperty("hi!", "{}");
        java.lang.String str40 = properties34.getProperty("tmlog");
        properties34.clear();
        java.lang.Object obj42 = properties34.clone();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Collection<java.lang.Object> objCollection45 = properties43.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.logBaseDir = "";
        atomikosProperties46.setConsoleFileCount((int) (short) 10);
        atomikosProperties46.setLogBaseDir("{}");
        java.util.Properties properties53 = atomikosProperties46.asProperties();
        atomikosProperties46.service = "";
        atomikosProperties46.setTransactionManagerUniqueName("{}");
        boolean boolean58 = properties43.equals((java.lang.Object) "{}");
        boolean boolean59 = properties27.replace((java.lang.Object) atomikosProperties28, obj42, (java.lang.Object) boolean58);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery60.maxRetries = (-1);
        recovery60.setDelay((long) (short) 0);
        long long65 = recovery60.forgetOrphanedLogEntriesDelay;
        recovery60.retryInterval = 500L;
        recovery60.retryInterval = '4';
        long long70 = recovery60.getRetryInterval();
        boolean boolean72 = properties13.replace(obj42, (java.lang.Object) long70, (java.lang.Object) (byte) 1);
        boolean boolean73 = properties13.isEmpty();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 86400000L + "'", long65 == 86400000L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 52L + "'", long70 == 52L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test02960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02960");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Set<java.lang.Object> objSet10 = properties0.keySet();
        java.io.PrintWriter printWriter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objSet10);
    }

    @Test
    public void test02961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02961");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int13 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test02962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02962");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 19);
        int int10 = atomikosProperties0.getConsoleFileCount();
        boolean boolean11 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.defaultJtaTimeout = 0L;
        atomikosProperties0.forceShutdownOnVmExit = true;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test02963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02963");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.checkpointInterval = 35;
        atomikosProperties0.setMaxTimeout(0L);
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.transactionManagerUniqueName = "{{}={}}";
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test02964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02964");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.serialJtaTransactions = true;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test02965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02965");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        int int7 = atomikosProperties0.consoleFileLimit;
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.lang.Object obj13 = properties9.setProperty("hi!", "{}");
        java.lang.String str15 = properties9.getProperty("tmlog");
        properties9.clear();
        java.lang.Object obj17 = properties9.clone();
        int int18 = properties9.size();
        java.util.Properties properties19 = new java.util.Properties(properties9);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.enableLogging = true;
        long long26 = atomikosProperties23.getCheckpointInterval();
        boolean boolean28 = properties21.remove((java.lang.Object) long26, (java.lang.Object) (byte) 100);
        boolean boolean30 = properties21.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties21.entrySet();
        java.lang.Object obj32 = properties21.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.checkpointInterval = 0;
        boolean boolean38 = atomikosProperties33.isThreadedTwoPhaseCommit();
        atomikosProperties33.setSerialJtaTransactions(false);
        long long41 = atomikosProperties33.getMaxTimeout();
        atomikosProperties33.setSerialJtaTransactions(true);
        long long44 = atomikosProperties33.maxTimeout;
        boolean boolean45 = atomikosProperties33.serialJtaTransactions;
        boolean boolean46 = properties21.containsValue((java.lang.Object) boolean45);
        boolean boolean47 = properties9.contains((java.lang.Object) properties21);
        java.util.Properties properties48 = new java.util.Properties(properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.logBaseDir = "";
        atomikosProperties50.setConsoleFileCount((int) (short) 10);
        long long55 = atomikosProperties50.getMaxTimeout();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet57 = properties56.keySet();
        atomikosProperties50.set(properties56, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj63 = properties56.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setDefaultJtaTimeout((-1L));
        java.util.Properties properties67 = new java.util.Properties();
        java.lang.Object obj69 = properties67.get((java.lang.Object) 0.0d);
        java.lang.Object obj70 = properties67.clone();
        boolean boolean72 = properties56.replace((java.lang.Object) (-1L), obj70, (java.lang.Object) 100.0d);
        java.util.Properties properties73 = new java.util.Properties();
        java.util.Properties properties74 = new java.util.Properties(properties73);
        properties74.clear();
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet77 = properties56.entrySet();
        java.util.Properties properties78 = new java.util.Properties(properties56);
        java.util.Collection<java.lang.Object> objCollection79 = properties78.values();
        atomikosProperties0.set(properties21, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) properties78);
        java.io.Writer writer81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.store(writer81, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEntrySet77);
        org.junit.Assert.assertNotNull(objCollection79);
    }

    @Test
    public void test02966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02966");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        java.lang.String str8 = atomikosProperties0.service;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setService("");
        atomikosProperties0.enableLogging = true;
        boolean boolean14 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test02967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02967");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        boolean boolean34 = atomikosProperties31.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = atomikosProperties31.getRecovery();
        boolean boolean36 = properties7.contains((java.lang.Object) atomikosProperties31);
        java.lang.String str38 = properties7.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long40 = recovery39.getRetryInterval();
        recovery39.delay = 10L;
        java.lang.Object obj43 = properties7.get((java.lang.Object) recovery39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        java.lang.String str49 = atomikosProperties44.logBaseName;
        atomikosProperties44.outputDir = "";
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.util.Properties properties53 = atomikosProperties44.asProperties();
        properties53.clear();
        java.lang.Object obj55 = properties7.remove((java.lang.Object) properties53);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Collection<java.lang.Object> objCollection58 = properties56.values();
        int int59 = properties56.size();
        boolean boolean60 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.logBaseDir = "";
        atomikosProperties61.setConsoleFileCount((int) (short) 10);
        atomikosProperties61.setCheckpointInterval(10000L);
        long long68 = atomikosProperties61.maxTimeout;
        int int69 = atomikosProperties61.maxActives;
        long long70 = atomikosProperties61.getCheckpointInterval();
        atomikosProperties61.setOutputDir("{com.atomikos.icatch.hi!=-1.0}");
        boolean boolean73 = properties56.contains((java.lang.Object) atomikosProperties61);
        java.util.Properties properties74 = new java.util.Properties();
        java.lang.Object obj76 = properties74.get((java.lang.Object) 0.0d);
        java.lang.Object obj77 = properties74.clone();
        java.lang.String str78 = properties74.toString();
        boolean boolean81 = properties74.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj82 = null;
        boolean boolean83 = properties74.equals(obj82);
        java.util.Set<java.lang.Object> objSet84 = properties74.keySet();
        java.util.Properties properties85 = new java.util.Properties(properties74);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet86 = properties85.entrySet();
        java.lang.Object obj87 = properties7.put((java.lang.Object) boolean73, (java.lang.Object) properties85);
        java.util.Set<java.lang.String> strSet88 = properties7.stringPropertyNames();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(recovery35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "{}");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "{}" + "'", str78, "{}");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertNotNull(objEntrySet86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(strSet88);
    }

    @Test
    public void test02968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02968");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.recovery;
        long long11 = recovery10.getDelay();
        recovery10.setDelay(19L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test02969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02969");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.transactionManagerUniqueName = "{}";
        atomikosProperties0.setCheckpointInterval(52L);
        java.lang.String str10 = atomikosProperties0.getConsoleFileName();
        long long11 = atomikosProperties0.checkpointInterval;
        int int12 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setMaxActives((-1));
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 52L + "'", long11 == 52L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test02970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02970");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        properties8.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.enableLogging = true;
        long long21 = atomikosProperties18.getCheckpointInterval();
        atomikosProperties18.setService("tmlog");
        atomikosProperties18.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection31 = properties29.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        boolean boolean33 = properties27.contains((java.lang.Object) properties29);
        boolean boolean34 = properties27.isEmpty();
        boolean boolean35 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.maxRetries = (-1);
        recovery37.setDelay((long) (short) 0);
        recovery37.maxRetries = (short) -1;
        long long44 = recovery37.retryInterval;
        int int45 = recovery37.getMaxRetries();
        atomikosProperties18.set(properties27, "tmlog", (java.lang.Object) int45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties27.elements();
        boolean boolean48 = properties8.containsValue((java.lang.Object) properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties8.keys();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
    }

    @Test
    public void test02971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02971");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        atomikosProperties4.service = "";
        boolean boolean12 = atomikosProperties4.isSerialJtaTransactions();
        boolean boolean13 = properties0.equals((java.lang.Object) boolean12);
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream14, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test02972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02972");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet9 = properties8.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties8.elements();
        java.util.Properties properties11 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = null;
        atomikosProperties12.consoleLogLevel = atomikosLoggingLevel15;
        atomikosProperties12.outputDir = "";
        int int19 = atomikosProperties12.maxActives;
        boolean boolean20 = atomikosProperties12.isThreadedTwoPhaseCommit();
        long long21 = atomikosProperties12.defaultJtaTimeout;
        java.lang.String str22 = atomikosProperties12.logBaseName;
        java.lang.String str23 = atomikosProperties12.getTransactionManagerUniqueName();
        boolean boolean24 = properties11.containsValue((java.lang.Object) atomikosProperties12);
        java.util.Properties properties25 = new java.util.Properties(properties11);
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.save(outputStream26, "{true=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test02973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02973");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.lang.Object obj18 = properties14.setProperty("hi!", "{}");
        java.lang.String str20 = properties14.getProperty("tmlog");
        properties14.clear();
        boolean boolean22 = properties14.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = null;
        atomikosProperties23.consoleLogLevel = atomikosLoggingLevel26;
        boolean boolean28 = atomikosProperties23.isSerialJtaTransactions();
        long long29 = atomikosProperties23.getCheckpointInterval();
        int int30 = atomikosProperties23.getConsoleFileCount();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.enableLogging = true;
        long long37 = atomikosProperties34.getCheckpointInterval();
        boolean boolean39 = properties32.remove((java.lang.Object) long37, (java.lang.Object) (byte) 100);
        boolean boolean41 = properties32.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties32.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((-1L));
        long long46 = atomikosProperties43.checkpointInterval;
        boolean boolean47 = atomikosProperties43.forceShutdownOnVmExit;
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        boolean boolean50 = properties32.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.logBaseDir = "";
        atomikosProperties51.setConsoleFileCount((int) (short) 10);
        long long56 = atomikosProperties51.getMaxTimeout();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet58 = properties57.keySet();
        atomikosProperties51.set(properties57, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str62 = atomikosProperties51.logBaseDir;
        java.lang.String str63 = atomikosProperties51.logBaseDir;
        java.lang.String str64 = atomikosProperties51.logBaseDir;
        boolean boolean65 = atomikosProperties51.isEnableLogging();
        boolean boolean66 = atomikosProperties51.forceShutdownOnVmExit;
        boolean boolean67 = properties32.containsValue((java.lang.Object) atomikosProperties51);
        atomikosProperties51.consoleFileName = "";
        java.lang.Object obj70 = properties14.put((java.lang.Object) atomikosProperties23, (java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.logBaseDir = "";
        atomikosProperties71.setConsoleFileCount((int) (short) 10);
        long long76 = atomikosProperties71.getMaxTimeout();
        java.util.Properties properties77 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet78 = properties77.keySet();
        atomikosProperties71.set(properties77, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str82 = atomikosProperties71.logBaseDir;
        java.lang.String str83 = atomikosProperties71.logBaseDir;
        java.lang.String str84 = atomikosProperties71.logBaseDir;
        boolean boolean85 = atomikosProperties71.isEnableLogging();
        long long86 = atomikosProperties71.checkpointInterval;
        atomikosProperties71.setOutputDir("hi!");
        long long89 = atomikosProperties71.maxTimeout;
        java.lang.String str90 = atomikosProperties71.logBaseName;
        java.util.Properties properties91 = atomikosProperties71.asProperties();
        java.util.Enumeration<?> wildcardEnumeration92 = properties91.propertyNames();
        java.util.Enumeration<?> wildcardEnumeration93 = properties91.propertyNames();
        boolean boolean94 = properties12.remove((java.lang.Object) atomikosProperties51, (java.lang.Object) wildcardEnumeration93);
        atomikosProperties51.consoleFileLimit = 100;
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertNotNull(objSet78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 500L + "'", long86 == 500L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 300000L + "'", long89 == 300000L);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
        org.junit.Assert.assertNotNull(properties91);
        org.junit.Assert.assertNotNull(wildcardEnumeration92);
        org.junit.Assert.assertNotNull(wildcardEnumeration93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test02974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02974");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.consoleFileName = "{{}={}}";
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties0.getConsoleLogLevel();
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
    }

    @Test
    public void test02975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02975");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.enableLogging = false;
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
    }

    @Test
    public void test02976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02976");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "";
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.maxActives = (byte) 1;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        boolean boolean14 = atomikosProperties0.enableLogging;
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection17 = properties15.values();
        int int18 = properties15.size();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.enableLogging = true;
        long long28 = atomikosProperties25.getCheckpointInterval();
        boolean boolean30 = properties23.remove((java.lang.Object) long28, (java.lang.Object) (byte) 100);
        java.lang.String str31 = properties23.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        long long37 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet39 = properties38.keySet();
        atomikosProperties32.set(properties38, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.get((java.lang.Object) 0.0d);
        java.lang.Object obj46 = properties43.clone();
        java.lang.String str47 = properties43.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.logBaseDir = "";
        atomikosProperties48.setConsoleFileCount((int) (short) 10);
        long long53 = atomikosProperties48.getMaxTimeout();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet55 = properties54.keySet();
        atomikosProperties48.set(properties54, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj61 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((-1L));
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.get((java.lang.Object) 0.0d);
        java.lang.Object obj68 = properties65.clone();
        boolean boolean70 = properties54.replace((java.lang.Object) (-1L), obj68, (java.lang.Object) 100.0d);
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        properties72.clear();
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.logBaseDir = "";
        atomikosProperties75.setConsoleFileCount((int) (short) 10);
        long long80 = atomikosProperties75.getMaxTimeout();
        java.util.Properties properties81 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet82 = properties81.keySet();
        atomikosProperties75.set(properties81, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str86 = atomikosProperties75.logBaseDir;
        java.lang.String str87 = atomikosProperties75.logBaseDir;
        java.util.Properties properties88 = atomikosProperties75.asProperties();
        java.lang.Object obj89 = properties43.replace((java.lang.Object) properties72, (java.lang.Object) atomikosProperties75);
        boolean boolean90 = properties38.contains((java.lang.Object) atomikosProperties75);
        boolean boolean91 = properties23.containsValue((java.lang.Object) properties38);
        boolean boolean92 = properties15.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel21, (java.lang.Object) boolean91);
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel21;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 300000L + "'", long80 == 300000L);
        org.junit.Assert.assertNotNull(objSet82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test02977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02977");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        long long7 = recovery6.getDelay();
        long long8 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.delay = 'a';
        long long11 = recovery6.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test02978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02978");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.service = "";
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.hi!=-1.0}";
        int int10 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test02979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02979");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.hi!=-1.0}");
        java.lang.String str21 = atomikosProperties0.logBaseDir;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test02980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02980");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.String str19 = properties0.toString();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.enableLogging = true;
        long long26 = atomikosProperties23.getCheckpointInterval();
        boolean boolean28 = properties21.remove((java.lang.Object) long26, (java.lang.Object) (byte) 100);
        java.lang.String str29 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties36.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((-1L));
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.get((java.lang.Object) 0.0d);
        java.lang.Object obj50 = properties47.clone();
        boolean boolean52 = properties36.replace((java.lang.Object) (-1L), obj50, (java.lang.Object) 100.0d);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        java.lang.String str59 = properties54.getProperty("");
        java.util.Properties properties60 = new java.util.Properties(properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long62 = recovery61.getRetryInterval();
        recovery61.delay = 10L;
        boolean boolean65 = properties21.remove((java.lang.Object) properties60, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties60.keys();
        java.util.Properties properties67 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = null;
        atomikosProperties68.consoleLogLevel = atomikosLoggingLevel71;
        atomikosProperties68.outputDir = "";
        java.lang.String str75 = atomikosProperties68.logBaseDir;
        java.lang.String str76 = atomikosProperties68.logBaseDir;
        java.lang.Class<?> wildcardClass77 = atomikosProperties68.getClass();
        boolean boolean78 = properties67.contains((java.lang.Object) atomikosProperties68);
        boolean boolean79 = properties67.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery80 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long81 = recovery80.getRetryInterval();
        recovery80.delay = 10L;
        long long84 = recovery80.getDelay();
        long long85 = recovery80.delay;
        recovery80.setForgetOrphanedLogEntriesDelay((long) 0);
        long long88 = recovery80.getDelay();
        recovery80.setRetryInterval(300000L);
        int int91 = recovery80.getMaxRetries();
        java.lang.Object obj92 = properties0.getOrDefault((java.lang.Object) boolean79, (java.lang.Object) recovery80);
        java.util.Properties properties93 = new java.util.Properties(properties0);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{{}={}}" + "'", str19, "{{}={}}");
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10000L + "'", long81 == 10000L);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10L + "'", long84 == 10L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 10L + "'", long85 == 10L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10L + "'", long88 == 10L);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 5 + "'", int91 == 5);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test02981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02981");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        long long9 = atomikosProperties0.maxTimeout;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
    }

    @Test
    public void test02982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02982");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel4);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int8 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.consoleFileCount = (-1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 500L + "'", long1 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test02983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02983");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        int int10 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileLimit((int) (short) -1);
        long long13 = atomikosProperties0.getMaxTimeout();
        int int14 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test02984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02984");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.consoleFileCount = 0;
        long long10 = atomikosProperties0.getMaxTimeout();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.consoleLogLevel;
        atomikosProperties0.setLogBaseDir("{true=10000}");
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setMaxTimeout((long) 2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        java.lang.String str24 = atomikosProperties19.logBaseName;
        atomikosProperties19.outputDir = "";
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection31 = properties29.values();
        int int32 = properties29.size();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties29.elements();
        java.util.Properties properties34 = new java.util.Properties(properties29);
        boolean boolean35 = properties27.containsKey((java.lang.Object) properties29);
        java.util.Set<java.lang.String> strSet36 = properties29.stringPropertyNames();
        java.lang.Object obj38 = null;
        atomikosProperties0.set(properties29, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", obj38);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test02985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02985");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.maxTimeout = 10L;
        atomikosProperties0.maxActives = 19;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test02986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02986");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        int int2 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.consoleFileName;
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test02987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02987");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.logBaseDir = "";
        atomikosProperties26.setConsoleFileCount((int) (short) 10);
        long long31 = atomikosProperties26.getMaxTimeout();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet33 = properties32.keySet();
        atomikosProperties26.set(properties32, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj39 = properties32.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((-1L));
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.get((java.lang.Object) 0.0d);
        java.lang.Object obj46 = properties43.clone();
        boolean boolean48 = properties32.replace((java.lang.Object) (-1L), obj46, (java.lang.Object) 100.0d);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.logBaseDir = "";
        atomikosProperties53.setConsoleFileCount((int) (short) 10);
        long long58 = atomikosProperties53.getMaxTimeout();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet60 = properties59.keySet();
        atomikosProperties53.set(properties59, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str64 = atomikosProperties53.logBaseDir;
        java.lang.String str65 = atomikosProperties53.logBaseDir;
        java.util.Properties properties66 = atomikosProperties53.asProperties();
        java.lang.Object obj67 = properties21.replace((java.lang.Object) properties50, (java.lang.Object) atomikosProperties53);
        boolean boolean68 = properties16.contains((java.lang.Object) atomikosProperties53);
        boolean boolean69 = properties1.containsValue((java.lang.Object) properties16);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.get((java.lang.Object) 0.0d);
        java.lang.Object obj76 = properties73.clone();
        java.lang.String str77 = properties73.toString();
        boolean boolean80 = properties73.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj81 = properties71.replace((java.lang.Object) 10.0d, (java.lang.Object) properties73);
        java.util.Properties properties82 = new java.util.Properties();
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.util.Collection<java.lang.Object> objCollection84 = properties83.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.enableLogging = true;
        long long88 = atomikosProperties85.getCheckpointInterval();
        boolean boolean90 = properties83.remove((java.lang.Object) long88, (java.lang.Object) (byte) 100);
        boolean boolean92 = properties83.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet93 = properties83.entrySet();
        java.lang.Object obj94 = properties1.put((java.lang.Object) properties71, (java.lang.Object) properties83);
        java.lang.Object obj95 = properties1.clone();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{}" + "'", str77, "{}");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objCollection84);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 500L + "'", long88 == 500L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objEntrySet93);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "{{}={}}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "{{}={}}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "{{}={}}");
    }

    @Test
    public void test02988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02988");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        java.util.Properties properties17 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection18 = properties13.values();
        java.io.PrintStream printStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.list(printStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertNotNull(objCollection18);
    }

    @Test
    public void test02989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02989");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        long long8 = recovery0.delay;
        recovery0.setRetryInterval(10000L);
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long13 = recovery0.getRetryInterval();
        recovery0.setMaxRetries((int) (short) 0);
        recovery0.setMaxRetries(35);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test02990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02990");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit((int) (short) -1);
        atomikosProperties0.setOutputDir("{tmlog={com.atomikos.icatch.hi!=-1.0}}");
        int int12 = atomikosProperties0.consoleFileLimit;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test02991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02991");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        atomikosProperties0.maxTimeout = (short) 1;
        atomikosProperties0.checkpointInterval = 52L;
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test02992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02992");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        boolean boolean6 = atomikosProperties0.enableLogging;
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        boolean boolean8 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test02993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02993");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        atomikosProperties0.maxActives = (short) 100;
        atomikosProperties0.maxActives = 100;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        atomikosProperties0.service = "tmlog";
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test02994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02994");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        long long15 = recovery0.forgetOrphanedLogEntriesDelay;
        long long16 = recovery0.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 52L + "'", long16 == 52L);
    }

    @Test
    public void test02995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02995");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        int int40 = recovery17.maxRetries;
        long long41 = recovery17.forgetOrphanedLogEntriesDelay;
        long long42 = recovery17.getRetryInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 35 + "'", int40 == 35);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 86400000L + "'", long41 == 86400000L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
    }

    @Test
    public void test02996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02996");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.lang.Object obj9 = properties1.clone();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        java.util.Properties properties13 = new java.util.Properties(properties10);
        java.lang.Object obj14 = properties1.remove((java.lang.Object) properties10);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection17 = properties16.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.enableLogging = true;
        long long21 = atomikosProperties18.getCheckpointInterval();
        boolean boolean23 = properties16.remove((java.lang.Object) long21, (java.lang.Object) (byte) 100);
        boolean boolean25 = properties16.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties16.entrySet();
        java.lang.Object obj27 = properties16.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        long long33 = atomikosProperties28.getMaxTimeout();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        atomikosProperties28.set(properties34, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str39 = atomikosProperties28.logBaseDir;
        boolean boolean40 = atomikosProperties28.enableLogging;
        int int41 = atomikosProperties28.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        java.lang.String str48 = atomikosProperties43.logBaseName;
        atomikosProperties43.outputDir = "";
        java.util.Properties properties51 = atomikosProperties43.asProperties();
        atomikosProperties43.setConsoleFileLimit(1);
        boolean boolean54 = properties16.replace((java.lang.Object) int41, (java.lang.Object) 100.0f, (java.lang.Object) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long56 = recovery55.getRetryInterval();
        recovery55.delay = 10L;
        long long59 = recovery55.getDelay();
        long long60 = recovery55.delay;
        java.lang.Object obj61 = properties1.replace((java.lang.Object) boolean54, (java.lang.Object) long60);
        java.util.Enumeration<?> wildcardEnumeration62 = properties1.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.enableLogging = true;
        int int66 = atomikosProperties63.consoleFileLimit;
        atomikosProperties63.logBaseName = "hi!";
        atomikosProperties63.setEnableLogging(false);
        atomikosProperties63.setTransactionManagerUniqueName("");
        atomikosProperties63.forceShutdownOnVmExit = true;
        atomikosProperties63.setLogBaseName("hi!");
        java.util.Properties properties77 = atomikosProperties63.asProperties();
        java.util.Collection<java.lang.Object> objCollection78 = properties77.values();
        java.util.Properties properties79 = new java.util.Properties(properties77);
        int int80 = properties79.size();
        boolean boolean81 = properties79.isEmpty();
        java.lang.Object obj82 = properties1.get((java.lang.Object) properties79);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10L + "'", long59 == 10L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10L + "'", long60 == 10L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(objCollection78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test02997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02997");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties7.entrySet();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEntrySet8);
    }

    @Test
    public void test02998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02998");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties13.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        int int24 = atomikosProperties22.maxActives;
        atomikosProperties22.maxActives = 50;
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Collection<java.lang.Object> objCollection29 = properties27.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection32 = properties31.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.enableLogging = true;
        long long36 = atomikosProperties33.getCheckpointInterval();
        boolean boolean38 = properties31.remove((java.lang.Object) long36, (java.lang.Object) (byte) 100);
        boolean boolean40 = properties31.equals((java.lang.Object) (short) 1);
        java.lang.Object obj43 = properties31.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties31.keys();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties45.isEmpty();
        boolean boolean48 = properties27.remove((java.lang.Object) objEnumeration44, (java.lang.Object) properties45);
        boolean boolean49 = properties13.remove((java.lang.Object) 50, (java.lang.Object) properties45);
        java.lang.String str50 = properties45.toString();
        java.util.Properties properties51 = new java.util.Properties(properties45);
        boolean boolean52 = properties1.contains((java.lang.Object) properties51);
        boolean boolean54 = properties1.containsKey((java.lang.Object) 0);
        java.io.InputStream inputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 500L + "'", long36 == 500L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test02999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test02999");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        atomikosProperties0.outputDir = "{}";
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test03000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test03000");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        java.util.Collection<java.lang.Object> objCollection17 = properties8.values();
        java.util.Properties properties18 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long20 = recovery19.getRetryInterval();
        recovery19.delay = 10L;
        recovery19.setForgetOrphanedLogEntriesDelay(0L);
        long long25 = recovery19.getRetryInterval();
        recovery19.maxRetries = 1;
        long long28 = recovery19.getRetryInterval();
        recovery19.setForgetOrphanedLogEntriesDelay(500L);
        recovery19.setDelay(86400000L);
        recovery19.setRetryInterval((long) (-1));
        recovery19.setMaxRetries((int) '4');
        java.lang.Object obj37 = properties18.get((java.lang.Object) '4');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj37);
    }
}
