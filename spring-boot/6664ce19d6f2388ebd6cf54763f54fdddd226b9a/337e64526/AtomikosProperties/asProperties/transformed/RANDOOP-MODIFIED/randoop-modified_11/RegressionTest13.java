import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest13 {

    public static boolean debug = false;

    @Test
    public void test06501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06501");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.logBaseDir = "";
        atomikosProperties3.setConsoleFileCount((int) (short) 10);
        atomikosProperties3.setLogBaseDir("{}");
        java.util.Properties properties10 = atomikosProperties3.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.service = "";
        java.lang.String str19 = atomikosProperties11.logBaseDir;
        boolean boolean20 = atomikosProperties11.threadedTwoPhaseCommit;
        java.lang.String str21 = atomikosProperties11.getService();
        atomikosProperties11.setLogBaseDir("{}");
        atomikosProperties11.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj26 = properties10.get((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        long long32 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet34 = properties33.keySet();
        atomikosProperties27.set(properties33, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj40 = properties33.setProperty("", "hi!");
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Collection<java.lang.Object> objCollection43 = properties41.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean45 = properties33.remove((java.lang.Object) objCollection43, (java.lang.Object) atomikosLoggingLevel44);
        atomikosProperties11.consoleLogLevel = atomikosLoggingLevel44;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.logBaseDir = "";
        atomikosProperties47.setConsoleFileCount((int) (short) 10);
        long long52 = atomikosProperties47.getMaxTimeout();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet54 = properties53.keySet();
        atomikosProperties47.set(properties53, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str58 = atomikosProperties47.logBaseDir;
        java.lang.String str59 = atomikosProperties47.logBaseDir;
        java.lang.String str60 = atomikosProperties47.logBaseDir;
        boolean boolean61 = atomikosProperties47.isEnableLogging();
        long long62 = atomikosProperties47.checkpointInterval;
        atomikosProperties47.setOutputDir("hi!");
        java.lang.String str65 = atomikosProperties47.outputDir;
        atomikosProperties47.allowSubTransactions = true;
        long long68 = atomikosProperties47.getCheckpointInterval();
        boolean boolean69 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.defaultJtaTimeout = 0L;
        java.lang.String str72 = atomikosProperties47.getService();
        java.util.Properties properties73 = atomikosProperties47.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.logBaseDir = "";
        atomikosProperties74.setConsoleFileCount((int) (short) 10);
        atomikosProperties74.setCheckpointInterval(10000L);
        atomikosProperties74.checkpointInterval = 100;
        atomikosProperties74.allowSubTransactions = true;
        java.lang.String str85 = atomikosProperties74.transactionManagerUniqueName;
        java.util.Properties properties86 = atomikosProperties74.asProperties();
        boolean boolean87 = atomikosProperties74.isThreadedTwoPhaseCommit();
        long long88 = atomikosProperties74.maxTimeout;
        boolean boolean89 = properties0.replace((java.lang.Object) atomikosProperties11, (java.lang.Object) properties73, (java.lang.Object) atomikosProperties74);
        java.lang.String str90 = atomikosProperties74.getLogBaseName();
        java.util.Properties properties91 = atomikosProperties74.asProperties();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 500L + "'", long62 == 500L);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 300000L + "'", long88 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
        org.junit.Assert.assertNotNull(properties91);
    }

    @Test
    public void test06502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06502");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int8 = atomikosProperties7.getConsoleFileCount();
        int int9 = atomikosProperties7.maxActives;
        java.lang.String str10 = atomikosProperties7.getService();
        boolean boolean11 = properties0.remove((java.lang.Object) atomikosProperties2, (java.lang.Object) atomikosProperties7);
        int int12 = atomikosProperties2.getMaxActives();
        boolean boolean13 = atomikosProperties2.threadedTwoPhaseCommit;
        atomikosProperties2.defaultJtaTimeout = 20;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        java.lang.String str21 = atomikosProperties16.logBaseName;
        atomikosProperties16.outputDir = "";
        java.util.Properties properties24 = atomikosProperties16.asProperties();
        java.util.Set<java.lang.String> strSet25 = properties24.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties24.elements();
        java.util.Set<java.lang.Object> objSet27 = properties24.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        java.lang.String str34 = atomikosProperties29.logBaseName;
        java.lang.String str35 = atomikosProperties29.logBaseDir;
        java.lang.String str36 = atomikosProperties29.getOutputDir();
        java.util.Properties properties37 = atomikosProperties29.asProperties();
        atomikosProperties2.set(properties24, "{{}={}}", (java.lang.Object) properties37);
        boolean boolean39 = atomikosProperties2.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06503");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.consoleFileCount = 35;
        atomikosProperties0.consoleFileLimit = 'a';
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test06504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06504");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection8);
    }

    @Test
    public void test06505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06505");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.maxRetries = (short) -1;
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.delay = 20;
        recovery0.setMaxRetries(10);
        int int17 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
    }

    @Test
    public void test06506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06506");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.Object> objSet31 = properties24.keySet();
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        java.lang.String str37 = properties33.toString();
        boolean boolean40 = properties33.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj41 = null;
        boolean boolean42 = properties33.equals(obj41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.enableLogging = true;
        long long46 = atomikosProperties43.getCheckpointInterval();
        java.lang.String str47 = atomikosProperties43.getService();
        java.lang.String str48 = atomikosProperties43.logBaseDir;
        atomikosProperties43.setEnableLogging(false);
        boolean boolean51 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Collection<java.lang.Object> objCollection57 = properties56.values();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Collection<java.lang.Object> objCollection60 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.keys();
        boolean boolean62 = properties56.contains((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.logBaseDir = "";
        atomikosProperties64.setConsoleFileCount((int) (short) 10);
        java.lang.String str69 = atomikosProperties64.logBaseName;
        atomikosProperties64.outputDir = "";
        java.util.Properties properties72 = atomikosProperties64.asProperties();
        java.util.Properties properties73 = atomikosProperties64.asProperties();
        boolean boolean74 = properties56.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties64);
        java.lang.Object obj75 = properties33.getOrDefault((java.lang.Object) atomikosProperties43, (java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.logBaseDir = "";
        atomikosProperties76.setConsoleFileCount((int) (short) 10);
        atomikosProperties76.setLogBaseDir("{}");
        boolean boolean83 = atomikosProperties76.isSerialJtaTransactions();
        boolean boolean84 = atomikosProperties76.allowSubTransactions;
        atomikosProperties76.consoleFileLimit = 50;
        atomikosProperties76.maxActives = (-1);
        java.lang.Object obj89 = properties24.replace(obj75, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.consoleFileLimit = 'a';
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test06507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06507");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.setDefaultJtaTimeout((long) 50);
        long long8 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
    }

    @Test
    public void test06508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06508");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties(properties0);
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.get((java.lang.Object) 0.0d);
        java.lang.Object obj10 = properties7.clone();
        java.lang.String str11 = properties7.toString();
        java.util.Properties properties12 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.keys();
        java.util.Collection<java.lang.Object> objCollection14 = properties12.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.get((java.lang.Object) 0.0d);
        java.lang.Object obj21 = properties18.clone();
        java.lang.String str22 = properties18.toString();
        boolean boolean25 = properties18.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj26 = properties16.replace((java.lang.Object) 10.0d, (java.lang.Object) properties18);
        java.util.Properties properties27 = new java.util.Properties(properties16);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        boolean boolean35 = properties28.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getConsoleFileCount();
        int int39 = atomikosProperties37.maxActives;
        atomikosProperties37.maxActives = 50;
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Collection<java.lang.Object> objCollection44 = properties42.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.enableLogging = true;
        long long51 = atomikosProperties48.getCheckpointInterval();
        boolean boolean53 = properties46.remove((java.lang.Object) long51, (java.lang.Object) (byte) 100);
        boolean boolean55 = properties46.equals((java.lang.Object) (short) 1);
        java.lang.Object obj58 = properties46.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties46.keys();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties60.isEmpty();
        boolean boolean63 = properties42.remove((java.lang.Object) objEnumeration59, (java.lang.Object) properties60);
        boolean boolean64 = properties28.remove((java.lang.Object) 50, (java.lang.Object) properties60);
        java.lang.String str65 = properties60.toString();
        java.util.Properties properties66 = new java.util.Properties(properties60);
        boolean boolean67 = properties16.contains((java.lang.Object) properties66);
        boolean boolean69 = properties16.containsKey((java.lang.Object) 0);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Collection<java.lang.Object> objCollection72 = properties71.values();
        java.lang.Object obj75 = properties71.setProperty("hi!", "{}");
        java.lang.String str77 = properties71.getProperty("tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties71.elements();
        java.lang.Object obj79 = properties12.put((java.lang.Object) boolean69, (java.lang.Object) properties71);
        boolean boolean80 = properties0.containsKey((java.lang.Object) properties12);
        boolean boolean81 = properties0.isEmpty();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 500L + "'", long51 == 500L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{}" + "'", str65, "{}");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test06509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06509");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.checkpointInterval = (byte) 100;
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        boolean boolean16 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06510");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        java.util.Set<java.lang.String> strSet14 = properties6.stringPropertyNames();
        java.util.Properties properties15 = new java.util.Properties(properties6);
        properties6.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test06511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06511");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        int int13 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties20.keys();
        int int26 = properties20.size();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getConsoleFileCount();
        int int31 = atomikosProperties29.maxActives;
        java.lang.String str32 = atomikosProperties29.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setCheckpointInterval(10000L);
        long long40 = atomikosProperties33.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties29.consoleLogLevel = atomikosLoggingLevel41;
        atomikosProperties0.set(properties20, "tmlog", (java.lang.Object) atomikosLoggingLevel41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        java.lang.String str49 = atomikosProperties44.logBaseName;
        atomikosProperties44.outputDir = "";
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.util.Properties properties53 = atomikosProperties44.asProperties();
        long long54 = atomikosProperties44.defaultJtaTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        long long60 = atomikosProperties55.getMaxTimeout();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet62 = properties61.keySet();
        atomikosProperties55.set(properties61, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str66 = atomikosProperties55.logBaseDir;
        java.lang.String str67 = atomikosProperties55.logBaseDir;
        java.lang.String str68 = atomikosProperties55.logBaseDir;
        boolean boolean69 = atomikosProperties55.isEnableLogging();
        long long70 = atomikosProperties55.checkpointInterval;
        atomikosProperties55.setOutputDir("hi!");
        long long73 = atomikosProperties55.maxTimeout;
        java.lang.String str74 = atomikosProperties55.logBaseName;
        java.util.Properties properties75 = atomikosProperties55.asProperties();
        java.lang.Object obj76 = properties20.putIfAbsent((java.lang.Object) atomikosProperties44, (java.lang.Object) properties75);
        java.util.Enumeration<?> wildcardEnumeration77 = properties75.propertyNames();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(wildcardEnumeration77);
    }

    @Test
    public void test06512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06512");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        java.util.Collection<java.lang.Object> objCollection13 = properties11.values();
        java.util.Enumeration<?> wildcardEnumeration14 = properties11.propertyNames();
        java.util.Collection<java.lang.Object> objCollection15 = properties11.values();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objCollection15);
    }

    @Test
    public void test06513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06513");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean9 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.checkpointInterval = '4';
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.maxTimeout = 50;
        atomikosProperties0.setConsoleFileLimit(2);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06514");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties0.isEmpty();
        java.lang.String str3 = properties0.toString();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.get((java.lang.Object) 0.0d);
        java.lang.Object obj7 = properties4.clone();
        java.lang.String str8 = properties4.toString();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties4.entrySet();
        java.util.Set<java.lang.String> strSet11 = properties4.stringPropertyNames();
        boolean boolean12 = properties0.containsKey((java.lang.Object) strSet11);
        java.util.Properties properties13 = new java.util.Properties(properties0);
        int int14 = properties13.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj28 = properties21.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((-1L));
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.get((java.lang.Object) 0.0d);
        java.lang.Object obj35 = properties32.clone();
        boolean boolean37 = properties21.replace((java.lang.Object) (-1L), obj35, (java.lang.Object) 100.0d);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet42 = properties21.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long44 = atomikosProperties43.checkpointInterval;
        atomikosProperties43.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery47.maxRetries = (-1);
        recovery47.setDelay((long) (short) 0);
        recovery47.maxRetries = (short) -1;
        long long54 = recovery47.retryInterval;
        recovery47.setMaxRetries(0);
        boolean boolean57 = properties21.remove((java.lang.Object) "{}", (java.lang.Object) recovery47);
        java.util.Properties properties58 = new java.util.Properties(properties21);
        java.lang.String str59 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long61 = atomikosProperties60.defaultJtaTimeout;
        java.lang.String str62 = atomikosProperties60.getLogBaseName();
        java.util.Properties properties63 = atomikosProperties60.asProperties();
        java.lang.Object obj64 = properties13.replace((java.lang.Object) str59, (java.lang.Object) properties63);
        java.io.PrintWriter printWriter65 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties63.list(printWriter65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEntrySet42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "{com.atomikos.icatch.hi!=-1.0, =hi!}" + "'", str59, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNull(obj64);
    }

    @Test
    public void test06515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06515");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long20 = atomikosProperties19.defaultJtaTimeout;
        int int21 = atomikosProperties19.getConsoleFileCount();
        long long22 = atomikosProperties19.getCheckpointInterval();
        long long23 = atomikosProperties19.getCheckpointInterval();
        boolean boolean24 = atomikosProperties19.serialJtaTransactions;
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int27 = atomikosProperties26.getConsoleFileCount();
        int int28 = atomikosProperties26.maxActives;
        java.lang.String str29 = atomikosProperties26.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        atomikosProperties30.setCheckpointInterval(10000L);
        long long37 = atomikosProperties30.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel38 = atomikosProperties30.getConsoleLogLevel();
        atomikosProperties26.consoleLogLevel = atomikosLoggingLevel38;
        java.util.Properties properties40 = atomikosProperties26.asProperties();
        atomikosProperties26.allowSubTransactions = false;
        java.lang.Object obj43 = properties8.getOrDefault((java.lang.Object) properties25, (java.lang.Object) false);
        java.io.Reader reader44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(reader44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel38 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel38.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertEquals("'" + obj43 + "' != '" + false + "'", obj43, false);
    }

    @Test
    public void test06516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06516");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.String str11 = properties8.getProperty("hi!");
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06517");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        int int4 = atomikosProperties0.maxActives;
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.enableLogging = false;
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("{}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test06518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06518");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        atomikosProperties0.serialJtaTransactions = false;
    }

    @Test
    public void test06519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06519");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.maxRetries = (short) -1;
        recovery0.setDelay((long) (short) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test06520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06520");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "";
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        long long12 = atomikosProperties0.getMaxTimeout();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        java.lang.String str17 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.logBaseDir = "";
        atomikosProperties18.setConsoleFileCount((int) (short) 10);
        atomikosProperties18.setLogBaseDir("{}");
        java.util.Properties properties25 = atomikosProperties18.asProperties();
        java.util.Set<java.lang.String> strSet26 = properties25.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int28 = atomikosProperties27.getConsoleFileCount();
        int int29 = atomikosProperties27.maxActives;
        atomikosProperties27.setConsoleFileName("");
        atomikosProperties27.transactionManagerUniqueName = "{}";
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        boolean boolean35 = atomikosProperties27.threadedTwoPhaseCommit;
        atomikosProperties27.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int39 = atomikosProperties38.getConsoleFileCount();
        int int40 = atomikosProperties38.maxActives;
        atomikosProperties38.setConsoleFileName("");
        atomikosProperties38.transactionManagerUniqueName = "{}";
        atomikosProperties38.setMaxActives(0);
        boolean boolean47 = atomikosProperties38.forceShutdownOnVmExit;
        java.lang.Object obj48 = properties25.put((java.lang.Object) atomikosProperties27, (java.lang.Object) atomikosProperties38);
        atomikosProperties27.setConsoleFileCount((int) '4');
        int int51 = atomikosProperties27.getConsoleFileLimit();
        java.util.Properties properties52 = atomikosProperties27.asProperties();
        boolean boolean53 = atomikosProperties27.enableLogging;
        atomikosProperties27.consoleFileLimit = 20;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.enableLogging = true;
        long long59 = atomikosProperties56.getCheckpointInterval();
        atomikosProperties56.setService("tmlog");
        atomikosProperties56.setConsoleFileName("{}");
        java.util.Properties properties64 = atomikosProperties56.asProperties();
        atomikosProperties56.setCheckpointInterval((long) (short) 10);
        atomikosProperties56.logBaseName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.enableLogging = true;
        long long72 = atomikosProperties69.getCheckpointInterval();
        java.lang.String str73 = atomikosProperties69.getService();
        java.lang.String str74 = atomikosProperties69.logBaseDir;
        atomikosProperties69.setEnableLogging(false);
        atomikosProperties69.consoleFileCount = 0;
        long long79 = atomikosProperties69.getMaxTimeout();
        boolean boolean80 = atomikosProperties69.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel81 = atomikosProperties69.consoleLogLevel;
        atomikosProperties56.setConsoleLogLevel(atomikosLoggingLevel81);
        atomikosProperties27.consoleLogLevel = atomikosLoggingLevel81;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel81;
        long long85 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 500L + "'", long59 == 500L);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 300000L + "'", long79 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel81 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel81.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 300000L + "'", long85 == 300000L);
    }

    @Test
    public void test06521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06521");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        java.lang.String str14 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.recovery;
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(recovery15);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test06522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06522");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties13.values();
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.enableLogging = true;
        long long23 = atomikosProperties20.getCheckpointInterval();
        boolean boolean25 = properties18.remove((java.lang.Object) long23, (java.lang.Object) (byte) 100);
        boolean boolean27 = properties18.equals((java.lang.Object) (short) 1);
        java.util.Properties properties28 = new java.util.Properties(properties18);
        java.util.Set<java.lang.String> strSet29 = properties28.stringPropertyNames();
        java.lang.Object obj30 = properties16.remove((java.lang.Object) strSet29);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj34 = properties16.setProperty("hi!", "{com.atomikos.icatch.hi!=-1.0}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        java.lang.String str40 = atomikosProperties35.logBaseName;
        java.lang.String str41 = atomikosProperties35.logBaseDir;
        long long42 = atomikosProperties35.defaultJtaTimeout;
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = atomikosProperties35.getRecovery();
        boolean boolean45 = atomikosProperties35.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = atomikosProperties35.getRecovery();
        java.lang.Object obj47 = properties16.get((java.lang.Object) atomikosProperties35);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(recovery44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(recovery46);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test06523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06523");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        int int4 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str5 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test06524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06524");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.String> strSet31 = properties30.stringPropertyNames();
        properties30.clear();
        java.lang.String str33 = properties30.toString();
        java.util.Properties properties34 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection35 = properties30.values();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertNotNull(objCollection35);
    }

    @Test
    public void test06525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06525");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean11 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06526");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        java.util.Properties properties59 = new java.util.Properties(properties6);
        java.lang.Object obj62 = properties6.setProperty("tm.out", "{com.atomikos.icatch.hi!=-1.0}");
        java.io.Writer writer63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.store(writer63, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test06527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06527");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        atomikosProperties11.setService("");
        boolean boolean18 = properties10.equals((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setConsoleFileCount(5);
        atomikosProperties11.maxTimeout = 50L;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06528");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        atomikosProperties0.setLogBaseName("tm.out");
        int int19 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseDir = "";
        int int22 = atomikosProperties0.maxActives;
        long long23 = atomikosProperties0.checkpointInterval;
        java.util.Properties properties24 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
        org.junit.Assert.assertNotNull(properties24);
    }

    @Test
    public void test06529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06529");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        boolean boolean41 = atomikosProperties29.enableLogging;
        int int42 = atomikosProperties29.maxActives;
        boolean boolean43 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.maxActives = 35;
        java.lang.Object obj54 = properties24.getOrDefault((java.lang.Object) boolean43, (java.lang.Object) 35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.enableLogging = true;
        int int58 = atomikosProperties55.consoleFileLimit;
        atomikosProperties55.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = atomikosProperties55.getRecovery();
        long long62 = recovery61.getDelay();
        recovery61.setForgetOrphanedLogEntriesDelay(0L);
        boolean boolean65 = properties24.equals((java.lang.Object) recovery61);
        long long66 = recovery61.getForgetOrphanedLogEntriesDelay();
        recovery61.setMaxRetries((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 35 + "'", obj54, 35);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(recovery61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
    }

    @Test
    public void test06530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06530");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.recovery;
        recovery14.setDelay((long) 2);
        java.lang.Class<?> wildcardClass17 = recovery14.getClass();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test06531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06531");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        long long2 = recovery0.getDelay();
        recovery0.setMaxRetries(35);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long6 = recovery0.getDelay();
        int int7 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 35 + "'", int7 == 35);
    }

    @Test
    public void test06532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06532");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str10 = properties8.getProperty("");
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06533");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        java.lang.String str11 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test06534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06534");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.checkpointInterval = 100L;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int20 = atomikosProperties19.getConsoleFileCount();
        int int21 = atomikosProperties19.maxActives;
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        atomikosProperties19.service = "tmlog";
        java.lang.String str27 = atomikosProperties19.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        long long31 = atomikosProperties28.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        atomikosProperties34.setCheckpointInterval(10000L);
        long long41 = atomikosProperties34.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties34.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties32.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties28.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties0.setEnableLogging(true);
        boolean boolean50 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean51 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 500L + "'", long31 == 500L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test06535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06535");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        atomikosProperties0.consoleFileLimit = (short) 0;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        atomikosProperties0.setService("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        java.lang.String str11 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06536");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.consoleFileCount = 0;
        long long10 = atomikosProperties0.getMaxTimeout();
        int int11 = atomikosProperties0.consoleFileLimit;
        int int12 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06537");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.consoleFileCount = 0;
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test06538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06538");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        int int5 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.setLogBaseName("tm.out");
        boolean boolean8 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06539");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int32 = atomikosProperties31.getConsoleFileCount();
        int int33 = atomikosProperties31.maxActives;
        java.lang.String str34 = atomikosProperties31.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        atomikosProperties35.setCheckpointInterval(10000L);
        long long42 = atomikosProperties35.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties35.getConsoleLogLevel();
        atomikosProperties31.consoleLogLevel = atomikosLoggingLevel43;
        java.lang.String str45 = atomikosProperties31.consoleFileName;
        atomikosProperties31.setCheckpointInterval((long) (short) 10);
        boolean boolean48 = properties15.contains((java.lang.Object) atomikosProperties31);
        java.util.Properties properties49 = atomikosProperties31.asProperties();
        java.lang.String str50 = atomikosProperties31.getService();
        java.lang.String str51 = atomikosProperties31.getOutputDir();
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tm.out" + "'", str45, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test06540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06540");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        atomikosProperties20.consoleFileName = "";
        int int39 = atomikosProperties20.maxActives;
        java.util.Properties properties40 = atomikosProperties20.asProperties();
        int int41 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("{com.atomikos.icatch.tmlog=-1}");
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
    }

    @Test
    public void test06541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06541");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
    }

    @Test
    public void test06542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06542");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        atomikosProperties20.consoleFileName = "";
        atomikosProperties20.consoleFileLimit = (-1);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06543");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.checkpointInterval = 0L;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.hi!=-1.0}");
        java.lang.String str8 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setEnableLogging(true);
        int int11 = atomikosProperties0.consoleFileLimit;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test06544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06544");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        boolean boolean7 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06545");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setService("");
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.Writer writer12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.store(writer12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06546");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((int) (short) -1);
        long long3 = recovery0.retryInterval;
        int int4 = recovery0.getMaxRetries();
        int int5 = recovery0.getMaxRetries();
        recovery0.maxRetries = (byte) -1;
        recovery0.setRetryInterval((-1L));
        recovery0.setMaxRetries((int) (short) 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test06547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06547");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.consoleFileName = "";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
    }

    @Test
    public void test06548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06548");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setMaxActives((int) (byte) -1);
        java.lang.String str18 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
    }

    @Test
    public void test06549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06549");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.logBaseName = "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06550");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.transactionManagerUniqueName = "{}";
        atomikosProperties0.setCheckpointInterval(52L);
        java.lang.String str10 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        java.lang.String str16 = atomikosProperties11.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        boolean boolean19 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06551");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean18 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06552");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean13 = atomikosProperties0.allowSubTransactions;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.io.Writer writer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.store(writer15, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test06553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06553");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        int int6 = recovery0.maxRetries;
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setRetryInterval((long) (short) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test06554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06554");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        atomikosProperties5.setLogBaseDir("{}");
        int int12 = atomikosProperties5.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        int int16 = atomikosProperties13.consoleFileLimit;
        atomikosProperties13.logBaseName = "hi!";
        boolean boolean19 = atomikosProperties13.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery20.maxRetries = (-1);
        recovery20.retryInterval = 10000L;
        boolean boolean25 = properties0.replace((java.lang.Object) int12, (java.lang.Object) boolean19, (java.lang.Object) 10000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.logBaseDir = "";
        atomikosProperties26.setConsoleFileCount((int) (short) 10);
        java.lang.String str31 = atomikosProperties26.logBaseName;
        atomikosProperties26.outputDir = "";
        java.util.Properties properties34 = atomikosProperties26.asProperties();
        java.util.Properties properties35 = atomikosProperties26.asProperties();
        properties35.clear();
        java.util.Properties properties37 = new java.util.Properties(properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery38.maxRetries = (-1);
        recovery38.setDelay((long) (short) 0);
        long long43 = recovery38.forgetOrphanedLogEntriesDelay;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.enableLogging = true;
        int int47 = atomikosProperties44.consoleFileLimit;
        atomikosProperties44.logBaseName = "hi!";
        atomikosProperties44.setEnableLogging(false);
        atomikosProperties44.setTransactionManagerUniqueName("");
        atomikosProperties44.forceShutdownOnVmExit = true;
        atomikosProperties44.setLogBaseDir("tmlog");
        java.lang.Object obj58 = properties35.put((java.lang.Object) long43, (java.lang.Object) "tmlog");
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties0.keys();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 86400000L + "'", long43 == 86400000L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration60);
    }

    @Test
    public void test06555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06555");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.maxActives = 35;
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test06556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06556");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.consoleFileLimit = (short) 1;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test06557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06557");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj27 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        boolean boolean36 = properties20.replace((java.lang.Object) (-1L), obj34, (java.lang.Object) 100.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean41 = properties3.equals((java.lang.Object) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = null;
        atomikosProperties42.consoleLogLevel = atomikosLoggingLevel45;
        atomikosProperties42.outputDir = "";
        int int49 = atomikosProperties42.maxActives;
        boolean boolean50 = atomikosProperties42.isThreadedTwoPhaseCommit();
        atomikosProperties42.consoleFileLimit = (short) 10;
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.enableLogging = true;
        long long57 = atomikosProperties54.getCheckpointInterval();
        java.lang.String str58 = atomikosProperties54.getOutputDir();
        atomikosProperties54.defaultJtaTimeout = 'a';
        java.lang.Object obj61 = properties20.replace((java.lang.Object) properties53, (java.lang.Object) 'a');
        java.util.Properties properties62 = new java.util.Properties(properties53);
        java.util.Properties properties63 = new java.util.Properties(properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.enableLogging = true;
        int int67 = atomikosProperties64.consoleFileLimit;
        atomikosProperties64.logBaseName = "hi!";
        boolean boolean70 = atomikosProperties64.isThreadedTwoPhaseCommit();
        boolean boolean71 = atomikosProperties64.enableLogging;
        java.util.Properties properties72 = atomikosProperties64.asProperties();
        java.util.Properties properties73 = new java.util.Properties(properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setDefaultJtaTimeout((-1L));
        int int77 = atomikosProperties74.getConsoleFileLimit();
        atomikosProperties74.checkpointInterval = 0L;
        atomikosProperties74.setLogBaseName("{com.atomikos.icatch.hi!=-1.0}");
        java.lang.String str82 = atomikosProperties74.getConsoleFileName();
        java.lang.Object obj83 = properties53.put((java.lang.Object) properties73, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setEnableLogging(true);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tm.out" + "'", str82, "tm.out");
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test06558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06558");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        long long11 = recovery0.getDelay();
        int int12 = recovery0.getMaxRetries();
        long long13 = recovery0.getDelay();
        long long14 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.delay = '#';
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
    }

    @Test
    public void test06559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06559");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.defaultJtaTimeout = 500L;
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        int int11 = atomikosProperties0.consoleFileLimit;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test06560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06560");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        int int11 = atomikosProperties0.getMaxActives();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.logBaseDir = "";
        atomikosProperties18.setConsoleFileCount((int) (short) 10);
        long long23 = atomikosProperties18.getMaxTimeout();
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet25 = properties24.keySet();
        atomikosProperties18.set(properties24, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties24.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        java.util.Properties properties35 = new java.util.Properties();
        java.lang.Object obj37 = properties35.get((java.lang.Object) 0.0d);
        java.lang.Object obj38 = properties35.clone();
        boolean boolean40 = properties24.replace((java.lang.Object) (-1L), obj38, (java.lang.Object) 100.0d);
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        properties42.clear();
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.logBaseDir = "";
        atomikosProperties45.setConsoleFileCount((int) (short) 10);
        long long50 = atomikosProperties45.getMaxTimeout();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet52 = properties51.keySet();
        atomikosProperties45.set(properties51, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str56 = atomikosProperties45.logBaseDir;
        java.lang.String str57 = atomikosProperties45.logBaseDir;
        java.util.Properties properties58 = atomikosProperties45.asProperties();
        java.lang.Object obj59 = properties13.replace((java.lang.Object) properties42, (java.lang.Object) atomikosProperties45);
        long long60 = atomikosProperties45.getDefaultJtaTimeout();
        boolean boolean61 = atomikosProperties45.threadedTwoPhaseCommit;
        atomikosProperties45.checkpointInterval = (short) -1;
        boolean boolean64 = atomikosProperties45.serialJtaTransactions;
        atomikosProperties45.setTransactionManagerUniqueName("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.logBaseDir = "";
        atomikosProperties67.setConsoleFileCount((int) (short) 10);
        long long72 = atomikosProperties67.getMaxTimeout();
        atomikosProperties67.service = "";
        java.lang.String str75 = atomikosProperties67.logBaseDir;
        boolean boolean76 = atomikosProperties67.threadedTwoPhaseCommit;
        java.lang.String str77 = atomikosProperties67.getService();
        java.lang.String str78 = atomikosProperties67.consoleFileName;
        boolean boolean79 = atomikosProperties67.serialJtaTransactions;
        atomikosProperties67.setLogBaseName("{}");
        java.lang.String str82 = atomikosProperties67.getLogBaseDir();
        java.lang.Object obj83 = properties12.putIfAbsent((java.lang.Object) "{com.atomikos.icatch.hi!=-1.0, =hi!}", (java.lang.Object) str82);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 300000L + "'", long50 == 300000L);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 300000L + "'", long72 == 300000L);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test06561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06561");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        java.lang.Object obj9 = properties0.setProperty("{com.atomikos.icatch.hi!=-1.0}", "");
        java.util.Properties properties10 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        atomikosProperties11.set(properties17, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str22 = atomikosProperties11.logBaseDir;
        java.lang.String str23 = atomikosProperties11.logBaseDir;
        java.lang.String str24 = atomikosProperties11.logBaseDir;
        boolean boolean25 = atomikosProperties11.isEnableLogging();
        long long26 = atomikosProperties11.checkpointInterval;
        atomikosProperties11.setOutputDir("hi!");
        long long29 = atomikosProperties11.maxTimeout;
        java.lang.String str30 = atomikosProperties11.logBaseName;
        java.util.Properties properties31 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<?> wildcardEnumeration33 = properties10.propertyNames();
        java.util.Properties properties34 = new java.util.Properties(properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        long long40 = atomikosProperties35.getMaxTimeout();
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet42 = properties41.keySet();
        atomikosProperties35.set(properties41, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str46 = atomikosProperties35.logBaseDir;
        atomikosProperties35.outputDir = "hi!";
        java.lang.String str49 = atomikosProperties35.logBaseDir;
        int int50 = atomikosProperties35.consoleFileLimit;
        atomikosProperties35.enableLogging = false;
        atomikosProperties35.setMaxActives((int) (byte) -1);
        boolean boolean55 = atomikosProperties35.enableLogging;
        java.util.Properties properties56 = atomikosProperties35.asProperties();
        boolean boolean57 = properties34.containsValue((java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.logBaseDir = "";
        atomikosProperties58.setConsoleFileCount((int) (short) 10);
        java.lang.String str63 = atomikosProperties58.logBaseName;
        java.lang.String str64 = atomikosProperties58.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.enableLogging = true;
        int int68 = atomikosProperties65.consoleFileLimit;
        atomikosProperties65.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int72 = atomikosProperties71.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.logBaseDir = "";
        atomikosProperties73.setConsoleFileCount((int) (short) 10);
        atomikosProperties73.setCheckpointInterval(10000L);
        long long80 = atomikosProperties73.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel81 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties73.consoleLogLevel = atomikosLoggingLevel81;
        atomikosProperties71.consoleLogLevel = atomikosLoggingLevel81;
        atomikosProperties65.consoleLogLevel = atomikosLoggingLevel81;
        atomikosProperties58.consoleLogLevel = atomikosLoggingLevel81;
        atomikosProperties58.setDefaultJtaTimeout((long) 5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties88 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int89 = atomikosProperties88.getConsoleFileCount();
        int int90 = atomikosProperties88.maxActives;
        int int91 = atomikosProperties88.getMaxActives();
        java.lang.String str92 = atomikosProperties88.getLogBaseName();
        java.lang.String str93 = atomikosProperties88.getService();
        atomikosProperties88.allowSubTransactions = false;
        boolean boolean96 = atomikosProperties88.isForceShutdownOnVmExit();
        java.lang.Object obj97 = properties56.putIfAbsent((java.lang.Object) atomikosProperties58, (java.lang.Object) boolean96);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tmlog" + "'", str63, "tmlog");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 300000L + "'", long80 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel81 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel81.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 50 + "'", int91 == 50);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "tmlog" + "'", str92, "tmlog");
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test06562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06562");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.maxTimeout = 19;
        atomikosProperties0.setService("");
        long long14 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
    }

    @Test
    public void test06563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06563");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        atomikosProperties4.set(properties10, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Collection<java.lang.Object> objCollection20 = properties18.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean22 = properties10.remove((java.lang.Object) objCollection20, (java.lang.Object) atomikosLoggingLevel21);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        int int27 = atomikosProperties24.getConsoleFileLimit();
        atomikosProperties24.serialJtaTransactions = false;
        atomikosProperties24.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties24.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel32;
        java.lang.String str34 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setMaxTimeout((long) (byte) -1);
        int int37 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    }

    @Test
    public void test06564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06564");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 50);
        recovery0.retryInterval = 0L;
        recovery0.setRetryInterval(10L);
        int int12 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test06565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06565");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.lang.Object obj6 = properties0.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", "{{}={}}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties0.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long9 = atomikosProperties8.checkpointInterval;
        atomikosProperties8.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel12);
        atomikosProperties8.setOutputDir("{}");
        java.lang.String str16 = atomikosProperties8.logBaseName;
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        boolean boolean18 = properties0.containsKey((java.lang.Object) atomikosProperties8);
        java.util.Properties properties19 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06566");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        java.util.Set<java.lang.String> strSet8 = properties1.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        atomikosProperties10.setLogBaseDir("{}");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        java.util.Set<java.lang.String> strSet18 = properties17.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int20 = atomikosProperties19.getConsoleFileCount();
        int int21 = atomikosProperties19.maxActives;
        atomikosProperties19.setConsoleFileName("");
        atomikosProperties19.transactionManagerUniqueName = "{}";
        java.util.Properties properties26 = atomikosProperties19.asProperties();
        boolean boolean27 = atomikosProperties19.threadedTwoPhaseCommit;
        atomikosProperties19.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int31 = atomikosProperties30.getConsoleFileCount();
        int int32 = atomikosProperties30.maxActives;
        atomikosProperties30.setConsoleFileName("");
        atomikosProperties30.transactionManagerUniqueName = "{}";
        atomikosProperties30.setMaxActives(0);
        boolean boolean39 = atomikosProperties30.forceShutdownOnVmExit;
        java.lang.Object obj40 = properties17.put((java.lang.Object) atomikosProperties19, (java.lang.Object) atomikosProperties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.logBaseDir = "";
        boolean boolean44 = atomikosProperties41.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = atomikosProperties41.getRecovery();
        boolean boolean46 = properties17.contains((java.lang.Object) atomikosProperties41);
        java.lang.String str47 = atomikosProperties41.logBaseName;
        int int48 = atomikosProperties41.getConsoleFileCount();
        java.lang.String str49 = atomikosProperties41.logBaseDir;
        atomikosProperties41.setCheckpointInterval((long) 19);
        java.lang.Object obj52 = properties1.get((java.lang.Object) 19);
        java.io.InputStream inputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(recovery45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test06567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06567");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        long long4 = recovery0.getDelay();
        long long5 = recovery0.delay;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 0);
        long long8 = recovery0.getDelay();
        recovery0.setRetryInterval(300000L);
        recovery0.setForgetOrphanedLogEntriesDelay(52L);
        recovery0.forgetOrphanedLogEntriesDelay = 0L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
    }

    @Test
    public void test06568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06568");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Collection<java.lang.Object> objCollection13 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.keys();
        boolean boolean15 = properties9.contains((java.lang.Object) properties11);
        boolean boolean16 = properties9.isEmpty();
        boolean boolean17 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery19.maxRetries = (-1);
        recovery19.setDelay((long) (short) 0);
        recovery19.maxRetries = (short) -1;
        long long26 = recovery19.retryInterval;
        int int27 = recovery19.getMaxRetries();
        atomikosProperties0.set(properties9, "tmlog", (java.lang.Object) int27);
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06569");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.consoleFileCount = 100;
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str8 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test06570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06570");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setService("");
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setService("{}");
        atomikosProperties0.enableLogging = true;
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.maxTimeout = (short) -1;
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06571");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.recovery;
        recovery14.setMaxRetries(10);
        recovery14.setForgetOrphanedLogEntriesDelay((long) (short) 1);
        recovery14.setForgetOrphanedLogEntriesDelay(10000L);
        long long21 = recovery14.getDelay();
        recovery14.delay = 5;
        int int24 = recovery14.getMaxRetries();
        long long25 = recovery14.getRetryInterval();
        long long26 = recovery14.retryInterval;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
    }

    @Test
    public void test06572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06572");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str10 = atomikosProperties0.outputDir;
        atomikosProperties0.consoleFileCount = (byte) 0;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test06573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06573");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.lang.Object obj12 = properties8.setProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{hi!={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setDefaultJtaTimeout((-1L));
        int int16 = atomikosProperties13.getConsoleFileLimit();
        java.util.Properties properties17 = atomikosProperties13.asProperties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        int int20 = properties18.size();
        java.lang.Object obj21 = properties18.clone();
        java.util.Set<java.lang.Object> objSet22 = properties18.keySet();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.save(outputStream24, "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertNotNull(objSet22);
    }

    @Test
    public void test06574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06574");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean15 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.logBaseDir = "{}";
        boolean boolean18 = atomikosProperties0.enableLogging;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06575");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        recovery0.maxRetries = 5;
        long long7 = recovery0.retryInterval;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test06576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06576");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Set<java.lang.String> strSet10 = properties8.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        boolean boolean14 = atomikosProperties11.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties11.getRecovery();
        int int16 = recovery15.getMaxRetries();
        java.lang.Object obj17 = properties8.get((java.lang.Object) int16);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(recovery15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test06577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06577");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setConsoleFileCount(10);
        java.lang.String str11 = atomikosProperties0.getConsoleFileName();
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        atomikosProperties0.setService("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        int int18 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }

    @Test
    public void test06578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06578");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        long long5 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setLogBaseDir("{true=10000}");
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06579");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        int int13 = atomikosProperties0.maxActives;
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        int int15 = atomikosProperties0.getMaxActives();
        long long16 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
    }

    @Test
    public void test06580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06580");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        int int13 = atomikosProperties0.maxActives;
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.consoleFileLimit = (short) 0;
        atomikosProperties0.setOutputDir("");
        boolean boolean20 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setConsoleFileName("");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06581");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((-1L));
        int int23 = atomikosProperties20.getConsoleFileLimit();
        java.util.Properties properties24 = atomikosProperties20.asProperties();
        atomikosProperties20.consoleFileLimit = 0;
        boolean boolean27 = properties19.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties19.entrySet();
        java.util.Properties properties29 = new java.util.Properties(properties19);
        java.lang.String str32 = properties19.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}", "{{}={}}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{{}={}}" + "'", str32, "{{}={}}");
    }

    @Test
    public void test06582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06582");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int6 = atomikosProperties5.getConsoleFileCount();
        int int7 = atomikosProperties5.maxActives;
        atomikosProperties5.setEnableLogging(true);
        java.util.Properties properties10 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.maxRetries = (-1);
        recovery11.setDelay((long) (short) 1);
        long long16 = recovery11.getForgetOrphanedLogEntriesDelay();
        recovery11.setForgetOrphanedLogEntriesDelay((long) '#');
        java.lang.Object obj19 = properties0.put((java.lang.Object) properties10, (java.lang.Object) '#');
        java.util.Properties properties20 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties20.entrySet();
        java.io.PrintWriter printWriter22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.list(printWriter22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 86400000L + "'", long16 == 86400000L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEntrySet21);
    }

    @Test
    public void test06583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06583");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseDir = "{true=10000}";
        atomikosProperties0.defaultJtaTimeout = 0L;
        java.lang.String str14 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("{true=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str28 = atomikosProperties17.service;
        java.lang.String str29 = atomikosProperties17.getService();
        atomikosProperties17.setConsoleFileCount((int) (byte) 1);
        atomikosProperties17.forceShutdownOnVmExit = false;
        boolean boolean34 = atomikosProperties17.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties17.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel35;
        atomikosProperties0.defaultJtaTimeout = (-1L);
        boolean boolean39 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test06584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06584");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = atomikosProperties0.getConsoleFileLimit();
        long long10 = atomikosProperties0.maxTimeout;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery12.maxRetries = (-1);
        recovery12.setDelay((long) (short) 0);
        long long17 = recovery12.forgetOrphanedLogEntriesDelay;
        recovery12.setDelay((long) 1);
        int int20 = recovery12.getMaxRetries();
        recovery12.setMaxRetries((int) '4');
        recovery12.delay = (-1);
        long long25 = recovery12.getDelay();
        int int26 = recovery12.maxRetries;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        long long32 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet34 = properties33.keySet();
        atomikosProperties27.set(properties33, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties33.keys();
        int int39 = properties33.size();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties33.elements();
        properties33.clear();
        java.util.Enumeration<?> wildcardEnumeration42 = properties33.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        boolean boolean46 = atomikosProperties43.isForceShutdownOnVmExit();
        int int47 = atomikosProperties43.consoleFileLimit;
        atomikosProperties43.setLogBaseDir("{}");
        java.lang.Object obj50 = properties33.get((java.lang.Object) atomikosProperties43);
        java.util.Properties properties51 = new java.util.Properties(properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.logBaseDir = "";
        atomikosProperties52.setConsoleFileCount((int) (short) 10);
        long long57 = atomikosProperties52.getMaxTimeout();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet59 = properties58.keySet();
        atomikosProperties52.set(properties58, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj65 = properties58.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setDefaultJtaTimeout((-1L));
        java.util.Properties properties69 = new java.util.Properties();
        java.lang.Object obj71 = properties69.get((java.lang.Object) 0.0d);
        java.lang.Object obj72 = properties69.clone();
        boolean boolean74 = properties58.replace((java.lang.Object) (-1L), obj72, (java.lang.Object) 100.0d);
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Properties properties76 = new java.util.Properties(properties75);
        properties76.clear();
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties76.elements();
        java.lang.String str81 = properties76.getProperty("");
        java.util.Properties properties82 = new java.util.Properties();
        java.lang.Object obj84 = properties82.get((java.lang.Object) 0.0d);
        java.lang.Object obj85 = properties82.clone();
        java.lang.String str86 = properties82.toString();
        boolean boolean88 = properties76.remove((java.lang.Object) properties82, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration89 = properties76.propertyNames();
        java.util.Properties properties90 = new java.util.Properties(properties76);
        java.util.Properties properties91 = new java.util.Properties(properties76);
        boolean boolean92 = properties33.equals((java.lang.Object) properties91);
        java.lang.Object obj93 = properties11.put((java.lang.Object) recovery12, (java.lang.Object) properties33);
        recovery12.delay = (short) -1;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 86400000L + "'", long17 == 86400000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 300000L + "'", long57 == 300000L);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(obj72);
        org.junit.Assert.assertEquals(obj72.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj72), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj72), "{}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(obj85);
        org.junit.Assert.assertEquals(obj85.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj85), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj85), "{}");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{}" + "'", str86, "{}");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test06585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06585");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        int int10 = atomikosProperties0.maxActives;
        boolean boolean11 = atomikosProperties0.enableLogging;
        long long12 = atomikosProperties0.maxTimeout;
        atomikosProperties0.setConsoleFileCount((int) (short) 0);
        atomikosProperties0.setSerialJtaTransactions(false);
        long long17 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
    }

    @Test
    public void test06586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06586");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.recovery;
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test06587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06587");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        boolean boolean37 = properties1.isEmpty();
        java.util.Properties properties38 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        boolean boolean42 = atomikosProperties39.isForceShutdownOnVmExit();
        java.lang.Object obj43 = properties1.remove((java.lang.Object) atomikosProperties39);
        java.lang.Object obj44 = properties1.clone();
        java.lang.Object obj45 = properties1.clone();
        java.lang.Object obj46 = properties1.clone();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{}");
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
    }

    @Test
    public void test06588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06588");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.consoleFileCount = 100;
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.enableLogging = true;
        java.lang.String str10 = atomikosProperties0.service;
        atomikosProperties0.maxActives = 18;
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        boolean boolean14 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06589");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.enableLogging = true;
        long long10 = atomikosProperties7.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties7.getService();
        java.lang.String str12 = atomikosProperties7.logBaseDir;
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.consoleFileCount = 0;
        long long17 = atomikosProperties7.getMaxTimeout();
        boolean boolean18 = atomikosProperties7.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties7.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel19;
        boolean boolean21 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        java.lang.String str24 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test06590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06590");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.maxActives = 50;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        int int13 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
    }

    @Test
    public void test06591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06591");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.service;
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setMaxActives((int) (byte) 10);
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        boolean boolean13 = atomikosProperties0.allowSubTransactions;
        java.lang.String str14 = atomikosProperties0.outputDir;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06592");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        java.lang.String str5 = atomikosProperties0.service;
        atomikosProperties0.maxTimeout = 100;
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test06593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06593");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet9 = properties8.stringPropertyNames();
        boolean boolean11 = properties8.contains((java.lang.Object) false);
        properties8.clear();
        java.util.Collection<java.lang.Object> objCollection13 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int15 = atomikosProperties14.getConsoleFileCount();
        int int16 = atomikosProperties14.maxActives;
        atomikosProperties14.setConsoleFileName("");
        atomikosProperties14.transactionManagerUniqueName = "{}";
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        atomikosProperties14.consoleFileName = "hi!";
        long long24 = atomikosProperties14.getDefaultJtaTimeout();
        java.lang.String str25 = atomikosProperties14.service;
        boolean boolean26 = atomikosProperties14.allowSubTransactions;
        java.lang.Object obj27 = properties8.get((java.lang.Object) boolean26);
        java.io.PrintStream printStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test06594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06594");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.lang.String str6 = properties1.getProperty("");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.get((java.lang.Object) 0.0d);
        java.lang.Object obj10 = properties7.clone();
        java.lang.String str11 = properties7.toString();
        boolean boolean14 = properties7.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj15 = null;
        boolean boolean16 = properties7.equals(obj15);
        java.util.Set<java.lang.Object> objSet17 = properties7.keySet();
        boolean boolean18 = properties1.contains((java.lang.Object) properties7);
        java.util.Properties properties19 = new java.util.Properties(properties1);
        java.lang.String str21 = properties19.getProperty("{{}={}}");
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test06595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06595");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        long long8 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.service = "";
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = null;
        atomikosProperties12.consoleLogLevel = atomikosLoggingLevel15;
        long long17 = atomikosProperties12.checkpointInterval;
        java.lang.String str18 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout((long) 0);
        atomikosProperties12.setAllowSubTransactions(false);
        boolean boolean23 = atomikosProperties12.isSerialJtaTransactions();
        java.util.Properties properties24 = atomikosProperties12.asProperties();
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties(properties26);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06596");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        atomikosProperties6.set(properties12, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str17 = atomikosProperties6.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery18.maxRetries = (-1);
        recovery18.setDelay((long) (short) 1);
        long long23 = recovery18.getForgetOrphanedLogEntriesDelay();
        long long24 = recovery18.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj25 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) long24);
        atomikosProperties6.setTransactionManagerUniqueName("{{}={}}");
        java.util.Properties properties28 = atomikosProperties6.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.enableLogging = true;
        int int32 = atomikosProperties29.consoleFileLimit;
        atomikosProperties29.logBaseName = "hi!";
        boolean boolean35 = atomikosProperties29.isThreadedTwoPhaseCommit();
        java.lang.String str36 = atomikosProperties29.service;
        int int37 = atomikosProperties29.getConsoleFileCount();
        atomikosProperties29.setCheckpointInterval((long) 50);
        boolean boolean40 = atomikosProperties29.allowSubTransactions;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((-1L));
        int int44 = atomikosProperties41.getConsoleFileLimit();
        java.util.Properties properties45 = atomikosProperties41.asProperties();
        boolean boolean46 = atomikosProperties41.forceShutdownOnVmExit;
        long long47 = atomikosProperties41.getDefaultJtaTimeout();
        int int48 = atomikosProperties41.getConsoleFileLimit();
        long long49 = atomikosProperties41.getDefaultJtaTimeout();
        java.lang.Object obj50 = properties28.getOrDefault((java.lang.Object) atomikosProperties29, (java.lang.Object) long49);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 86400000L + "'", long23 == 86400000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 86400000L + "'", long24 == 86400000L);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + (-1L) + "'", obj50, (-1L));
    }

    @Test
    public void test06597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06597");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties13.values();
        int int16 = properties13.size();
        boolean boolean17 = properties13.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties13);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.io.PrintWriter printWriter20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.list(printWriter20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test06598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06598");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.checkpointInterval = 19;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.recovery;
        recovery18.delay = (byte) -1;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test06599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06599");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test06600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06600");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        atomikosProperties0.maxTimeout = (short) 1;
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.consoleFileLimit = ' ';
        atomikosProperties0.serialJtaTransactions = true;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
    }

    @Test
    public void test06601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06601");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        boolean boolean8 = properties1.isEmpty();
        boolean boolean9 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties1.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties1.keys();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream13, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration12);
    }

    @Test
    public void test06602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06602");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = atomikosProperties43.recovery;
        atomikosProperties43.consoleFileLimit = (byte) -1;
        java.lang.String str63 = atomikosProperties43.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.logBaseDir = "";
        atomikosProperties64.setConsoleFileCount((int) (short) 10);
        atomikosProperties64.setCheckpointInterval(10000L);
        long long71 = atomikosProperties64.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties64.consoleLogLevel = atomikosLoggingLevel72;
        atomikosProperties43.consoleLogLevel = atomikosLoggingLevel72;
        boolean boolean75 = atomikosProperties43.isEnableLogging();
        long long76 = atomikosProperties43.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
    }

    @Test
    public void test06603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06603");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        long long8 = recovery0.delay;
        recovery0.setRetryInterval(10000L);
        recovery0.forgetOrphanedLogEntriesDelay = 52L;
        long long13 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setMaxRetries(10);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
    }

    @Test
    public void test06604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06604");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        java.lang.Object obj9 = properties0.setProperty("{com.atomikos.icatch.hi!=-1.0}", "");
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties0.elements();
        int int11 = properties0.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test06605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06605");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
    }

    @Test
    public void test06606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06606");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        long long7 = atomikosProperties0.checkpointInterval;
        int int8 = atomikosProperties0.getConsoleFileCount();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test06607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06607");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        atomikosProperties0.setConsoleFileLimit((int) (short) 100);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
    }

    @Test
    public void test06608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06608");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        boolean boolean31 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setRetryInterval((long) (-1));
        java.lang.Object obj38 = properties15.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        java.util.Properties properties39 = new java.util.Properties(properties15);
        java.util.Properties properties40 = new java.util.Properties(properties15);
        java.util.Properties properties41 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.logBaseDir = "";
        atomikosProperties42.setConsoleFileCount((int) (short) 10);
        long long47 = atomikosProperties42.getMaxTimeout();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet49 = properties48.keySet();
        atomikosProperties42.set(properties48, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str53 = atomikosProperties42.logBaseDir;
        java.lang.String str54 = atomikosProperties42.logBaseDir;
        java.lang.String str55 = atomikosProperties42.logBaseDir;
        java.lang.String str56 = atomikosProperties42.getService();
        atomikosProperties42.checkpointInterval = 100L;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties42.recovery;
        boolean boolean60 = properties41.containsKey((java.lang.Object) atomikosProperties42);
        java.util.Properties properties61 = new java.util.Properties(properties41);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test06609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06609");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        boolean boolean7 = atomikosProperties0.serialJtaTransactions;
        java.lang.String str8 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test06610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06610");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.logBaseDir = "";
        atomikosProperties3.setConsoleFileCount((int) (short) 10);
        atomikosProperties3.setLogBaseDir("{}");
        java.util.Properties properties10 = atomikosProperties3.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        atomikosProperties11.service = "";
        java.lang.String str19 = atomikosProperties11.logBaseDir;
        boolean boolean20 = atomikosProperties11.threadedTwoPhaseCommit;
        java.lang.String str21 = atomikosProperties11.getService();
        atomikosProperties11.setLogBaseDir("{}");
        atomikosProperties11.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj26 = properties10.get((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        long long32 = atomikosProperties27.getMaxTimeout();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet34 = properties33.keySet();
        atomikosProperties27.set(properties33, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj40 = properties33.setProperty("", "hi!");
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Collection<java.lang.Object> objCollection43 = properties41.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean45 = properties33.remove((java.lang.Object) objCollection43, (java.lang.Object) atomikosLoggingLevel44);
        atomikosProperties11.consoleLogLevel = atomikosLoggingLevel44;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.logBaseDir = "";
        atomikosProperties47.setConsoleFileCount((int) (short) 10);
        long long52 = atomikosProperties47.getMaxTimeout();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet54 = properties53.keySet();
        atomikosProperties47.set(properties53, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str58 = atomikosProperties47.logBaseDir;
        java.lang.String str59 = atomikosProperties47.logBaseDir;
        java.lang.String str60 = atomikosProperties47.logBaseDir;
        boolean boolean61 = atomikosProperties47.isEnableLogging();
        long long62 = atomikosProperties47.checkpointInterval;
        atomikosProperties47.setOutputDir("hi!");
        java.lang.String str65 = atomikosProperties47.outputDir;
        atomikosProperties47.allowSubTransactions = true;
        long long68 = atomikosProperties47.getCheckpointInterval();
        boolean boolean69 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.defaultJtaTimeout = 0L;
        java.lang.String str72 = atomikosProperties47.getService();
        java.util.Properties properties73 = atomikosProperties47.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.logBaseDir = "";
        atomikosProperties74.setConsoleFileCount((int) (short) 10);
        atomikosProperties74.setCheckpointInterval(10000L);
        atomikosProperties74.checkpointInterval = 100;
        atomikosProperties74.allowSubTransactions = true;
        java.lang.String str85 = atomikosProperties74.transactionManagerUniqueName;
        java.util.Properties properties86 = atomikosProperties74.asProperties();
        boolean boolean87 = atomikosProperties74.isThreadedTwoPhaseCommit();
        long long88 = atomikosProperties74.maxTimeout;
        boolean boolean89 = properties0.replace((java.lang.Object) atomikosProperties11, (java.lang.Object) properties73, (java.lang.Object) atomikosProperties74);
        java.lang.String str90 = atomikosProperties11.getOutputDir();
        int int91 = atomikosProperties11.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 500L + "'", long62 == 500L);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(properties86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 300000L + "'", long88 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test06611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06611");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.lang.String str9 = atomikosProperties0.consoleFileName;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        boolean boolean11 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06612");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.enableLogging = true;
        long long5 = atomikosProperties2.getCheckpointInterval();
        atomikosProperties2.checkpointInterval = ' ';
        java.lang.String str8 = atomikosProperties2.service;
        atomikosProperties2.consoleFileCount = (short) 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        atomikosProperties11.set(properties17, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str22 = atomikosProperties11.service;
        java.lang.String str23 = atomikosProperties11.getService();
        java.util.Properties properties24 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.enableLogging = true;
        long long28 = atomikosProperties25.getCheckpointInterval();
        java.lang.String str29 = atomikosProperties25.getService();
        java.lang.String str30 = atomikosProperties25.logBaseDir;
        atomikosProperties25.setEnableLogging(false);
        atomikosProperties25.consoleFileCount = 0;
        long long35 = atomikosProperties25.getMaxTimeout();
        int int36 = atomikosProperties25.consoleFileLimit;
        atomikosProperties25.maxActives = 100;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        atomikosProperties39.setLogBaseDir("{}");
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        atomikosProperties39.service = "";
        boolean boolean49 = atomikosProperties39.isEnableLogging();
        java.lang.Object obj50 = properties24.putIfAbsent((java.lang.Object) 100, (java.lang.Object) boolean49);
        boolean boolean51 = properties0.remove((java.lang.Object) atomikosProperties2, (java.lang.Object) properties24);
        int int52 = properties0.size();
        java.io.Reader reader53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test06613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06613");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.checkpointInterval = 100L;
        atomikosProperties0.enableLogging = false;
        int int19 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str20 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
    }

    @Test
    public void test06614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06614");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int8 = atomikosProperties7.getConsoleFileCount();
        int int9 = atomikosProperties7.maxActives;
        java.lang.String str10 = atomikosProperties7.getService();
        atomikosProperties7.setConsoleFileLimit((int) (short) 0);
        atomikosProperties7.setEnableLogging(false);
        boolean boolean15 = atomikosProperties7.isThreadedTwoPhaseCommit();
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.service = "{{}={}}";
        atomikosProperties7.serialJtaTransactions = false;
        java.util.Properties properties22 = atomikosProperties7.asProperties();
        boolean boolean23 = properties6.contains((java.lang.Object) properties22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06615");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test06616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06616");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = properties15.replace((java.lang.Object) 10.0d, (java.lang.Object) properties17);
        java.util.Properties properties26 = new java.util.Properties(properties15);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        int int31 = atomikosProperties28.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties28.asProperties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        atomikosProperties34.setLogBaseDir("{}");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.util.Set<java.lang.String> strSet42 = properties41.stringPropertyNames();
        boolean boolean43 = properties32.containsValue((java.lang.Object) properties41);
        java.lang.Object obj44 = properties26.get((java.lang.Object) boolean43);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Collection<java.lang.Object> objCollection50 = properties48.values();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.keys();
        boolean boolean52 = properties46.contains((java.lang.Object) properties48);
        boolean boolean53 = properties26.containsValue((java.lang.Object) properties46);
        boolean boolean54 = properties46.isEmpty();
        java.util.Properties properties55 = new java.util.Properties(properties46);
        java.util.Set<java.lang.Object> objSet56 = properties46.keySet();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objSet56);
    }

    @Test
    public void test06617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06617");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.outputDir;
        atomikosProperties0.setCheckpointInterval((long) '4');
        atomikosProperties0.maxTimeout = 18;
        java.lang.String str20 = atomikosProperties0.getConsoleFileName();
        long long21 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 18L + "'", long21 == 18L);
    }

    @Test
    public void test06618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06618");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Collection<java.lang.Object> objCollection4 = properties2.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.lang.Object obj7 = properties0.put((java.lang.Object) objEnumeration5, (java.lang.Object) (-1.0d));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        long long13 = atomikosProperties8.getMaxTimeout();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        atomikosProperties8.set(properties14, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str19 = atomikosProperties8.service;
        atomikosProperties8.setSerialJtaTransactions(false);
        int int22 = atomikosProperties8.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        java.lang.String str28 = atomikosProperties23.logBaseName;
        java.lang.String str29 = atomikosProperties23.logBaseDir;
        int int30 = atomikosProperties23.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel31 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel31);
        long long33 = atomikosProperties8.checkpointInterval;
        boolean boolean34 = properties0.contains((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setOutputDir("");
        atomikosProperties8.transactionManagerUniqueName = "{hi!={}}";
        long long39 = atomikosProperties8.getMaxTimeout();
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel31 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel31.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
    }

    @Test
    public void test06619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06619");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.String str13 = properties9.toString();
        boolean boolean16 = properties9.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj17 = properties7.replace((java.lang.Object) 10.0d, (java.lang.Object) properties9);
        java.lang.String str18 = properties9.toString();
        java.util.Properties properties19 = new java.util.Properties(properties9);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.logBaseDir = "";
        boolean boolean24 = atomikosProperties21.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        long long30 = atomikosProperties25.getMaxTimeout();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet32 = properties31.keySet();
        atomikosProperties25.set(properties31, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj38 = properties31.setProperty("", "hi!");
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Collection<java.lang.Object> objCollection41 = properties39.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean43 = properties31.remove((java.lang.Object) objCollection41, (java.lang.Object) atomikosLoggingLevel42);
        atomikosProperties21.setConsoleLogLevel(atomikosLoggingLevel42);
        boolean boolean45 = properties0.containsKey((java.lang.Object) atomikosProperties21);
        atomikosProperties21.setMaxTimeout(32L);
        atomikosProperties21.setConsoleFileLimit(20);
        java.lang.String str50 = atomikosProperties21.service;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test06620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06620");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.consoleFileLimit = (byte) 1;
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        boolean boolean14 = atomikosProperties0.threadedTwoPhaseCommit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj28 = properties21.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((-1L));
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.get((java.lang.Object) 0.0d);
        java.lang.Object obj35 = properties32.clone();
        boolean boolean37 = properties21.replace((java.lang.Object) (-1L), obj35, (java.lang.Object) 100.0d);
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        properties39.clear();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.elements();
        java.lang.String str44 = properties39.getProperty("");
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.get((java.lang.Object) 0.0d);
        java.lang.Object obj48 = properties45.clone();
        java.lang.String str49 = properties45.toString();
        boolean boolean51 = properties39.remove((java.lang.Object) properties45, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration52 = properties39.propertyNames();
        java.util.Properties properties53 = new java.util.Properties(properties39);
        java.util.Properties properties54 = new java.util.Properties(properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        long long60 = atomikosProperties55.getMaxTimeout();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet62 = properties61.keySet();
        atomikosProperties55.set(properties61, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str66 = atomikosProperties55.service;
        atomikosProperties55.setSerialJtaTransactions(false);
        int int69 = atomikosProperties55.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.logBaseDir = "";
        atomikosProperties70.setConsoleFileCount((int) (short) 10);
        java.lang.String str75 = atomikosProperties70.transactionManagerUniqueName;
        long long76 = atomikosProperties70.getDefaultJtaTimeout();
        long long77 = atomikosProperties70.checkpointInterval;
        int int78 = atomikosProperties70.getConsoleFileCount();
        java.lang.Object obj79 = properties54.put((java.lang.Object) atomikosProperties55, (java.lang.Object) atomikosProperties70);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties55.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel80);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration52);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 500L + "'", long77 == 500L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06621");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.logBaseDir = "{}";
        java.util.Properties properties22 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit(50);
        int int25 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.forceShutdownOnVmExit = false;
        long long28 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.get((java.lang.Object) 0.0d);
        java.lang.Object obj32 = properties29.clone();
        java.lang.Object obj35 = properties29.setProperty("{}", "{}");
        java.lang.Object obj38 = properties29.setProperty("{com.atomikos.icatch.hi!=-1.0}", "");
        java.util.Properties properties39 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        long long45 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet47 = properties46.keySet();
        atomikosProperties40.set(properties46, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str51 = atomikosProperties40.logBaseDir;
        java.lang.String str52 = atomikosProperties40.logBaseDir;
        java.lang.String str53 = atomikosProperties40.logBaseDir;
        boolean boolean54 = atomikosProperties40.isEnableLogging();
        long long55 = atomikosProperties40.checkpointInterval;
        atomikosProperties40.setOutputDir("hi!");
        long long58 = atomikosProperties40.maxTimeout;
        java.lang.String str59 = atomikosProperties40.logBaseName;
        java.util.Properties properties60 = atomikosProperties40.asProperties();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.util.Enumeration<?> wildcardEnumeration62 = properties39.propertyNames();
        java.util.Properties properties63 = new java.util.Properties(properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.enableLogging = true;
        int int68 = atomikosProperties65.consoleFileLimit;
        atomikosProperties65.logBaseName = "hi!";
        atomikosProperties65.enableLogging = false;
        long long73 = atomikosProperties65.getDefaultJtaTimeout();
        long long74 = atomikosProperties65.maxTimeout;
        atomikosProperties65.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.set(properties39, "{com.atomikos.icatch.{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=10}", (java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str78 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 500L + "'", long55 == 500L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 10000L + "'", long73 == 10000L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
    }

    @Test
    public void test06622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06622");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.forceShutdownOnVmExit = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test06623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06623");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str18 = atomikosProperties0.outputDir;
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        atomikosProperties22.setService("");
        atomikosProperties22.service = "tmlog";
        atomikosProperties22.checkpointInterval = 1L;
        atomikosProperties22.setConsoleFileLimit((int) (short) 1);
        java.lang.Object obj35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj36 = properties21.replace((java.lang.Object) (short) 1, obj35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test06624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06624");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval(50L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test06625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06625");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        long long60 = atomikosProperties43.defaultJtaTimeout;
        boolean boolean61 = atomikosProperties43.allowSubTransactions;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties43.getConsoleLogLevel();
        java.lang.String str63 = atomikosProperties43.service;
        boolean boolean64 = atomikosProperties43.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test06626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06626");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        int int10 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration13 = properties12.propertyNames();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
    }

    @Test
    public void test06627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06627");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        boolean boolean16 = atomikosProperties0.allowSubTransactions;
        long long17 = atomikosProperties0.getMaxTimeout();
        boolean boolean18 = atomikosProperties0.allowSubTransactions;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06628");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setConsoleFileCount((int) (short) 100);
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
    }

    @Test
    public void test06629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06629");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.defaultJtaTimeout = (short) 100;
        boolean boolean20 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test06630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06630");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        java.lang.String str8 = atomikosProperties0.logBaseName;
        int int9 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test06631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06631");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.logBaseName;
        atomikosProperties9.outputDir = "";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        java.util.Properties properties18 = atomikosProperties9.asProperties();
        boolean boolean19 = properties1.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setLogBaseDir("");
        boolean boolean22 = atomikosProperties9.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        long long28 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        atomikosProperties23.set(properties29, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str34 = atomikosProperties23.logBaseDir;
        java.lang.String str35 = atomikosProperties23.logBaseDir;
        java.util.Properties properties36 = atomikosProperties23.asProperties();
        atomikosProperties23.consoleFileLimit = (byte) 10;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        boolean boolean42 = atomikosProperties39.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj56 = properties49.setProperty("", "hi!");
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Collection<java.lang.Object> objCollection59 = properties57.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean61 = properties49.remove((java.lang.Object) objCollection59, (java.lang.Object) atomikosLoggingLevel60);
        atomikosProperties39.setConsoleLogLevel(atomikosLoggingLevel60);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel60);
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel60;
        java.util.Properties properties65 = atomikosProperties9.asProperties();
        java.lang.String str66 = atomikosProperties9.getOutputDir();
        atomikosProperties9.service = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=INFO, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=35, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objCollection59);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
    }

    @Test
    public void test06632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06632");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties0.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties0.elements();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
    }

    @Test
    public void test06633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06633");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setCheckpointInterval(10000L);
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06634");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.enableLogging = false;
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        long long9 = atomikosProperties0.maxTimeout;
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06635");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.checkpointInterval = ' ';
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.save(outputStream7, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={true=10000}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties6);
    }

    @Test
    public void test06636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06636");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int8 = atomikosProperties7.getConsoleFileCount();
        int int9 = atomikosProperties7.maxActives;
        java.lang.String str10 = atomikosProperties7.getService();
        boolean boolean11 = properties0.remove((java.lang.Object) atomikosProperties2, (java.lang.Object) atomikosProperties7);
        java.lang.String str12 = atomikosProperties2.getLogBaseName();
        java.lang.String str13 = atomikosProperties2.logBaseName;
        boolean boolean14 = atomikosProperties2.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06637");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        properties6.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties6.propertyNames();
        java.lang.String str17 = properties6.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery18.maxRetries = (-1);
        recovery18.setDelay((long) (short) 0);
        long long23 = recovery18.forgetOrphanedLogEntriesDelay;
        recovery18.retryInterval = 500L;
        recovery18.retryInterval = '4';
        long long28 = recovery18.getRetryInterval();
        recovery18.delay = 5;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        long long36 = atomikosProperties31.getMaxTimeout();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet38 = properties37.keySet();
        atomikosProperties31.set(properties37, "hi!", (java.lang.Object) (-1.0f));
        boolean boolean43 = properties6.replace((java.lang.Object) recovery18, (java.lang.Object) (-1.0f), (java.lang.Object) 86400000L);
        long long44 = recovery18.retryInterval;
        recovery18.setDelay(19L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 86400000L + "'", long23 == 86400000L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 52L + "'", long28 == 52L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 52L + "'", long44 == 52L);
    }

    @Test
    public void test06638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06638");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        long long4 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setMaxActives(21);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
    }

    @Test
    public void test06639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06639");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        boolean boolean15 = properties8.remove((java.lang.Object) long13, (java.lang.Object) (byte) 100);
        java.lang.String str16 = properties8.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        atomikosProperties33.set(properties39, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj46 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) 0.0d);
        java.lang.Object obj53 = properties50.clone();
        boolean boolean55 = properties39.replace((java.lang.Object) (-1L), obj53, (java.lang.Object) 100.0d);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        long long65 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet67 = properties66.keySet();
        atomikosProperties60.set(properties66, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str71 = atomikosProperties60.logBaseDir;
        java.lang.String str72 = atomikosProperties60.logBaseDir;
        java.util.Properties properties73 = atomikosProperties60.asProperties();
        java.lang.Object obj74 = properties28.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60);
        boolean boolean75 = properties23.contains((java.lang.Object) atomikosProperties60);
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties23);
        boolean boolean77 = properties0.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel6, (java.lang.Object) boolean76);
        java.util.Properties properties78 = new java.util.Properties(properties0);
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.lang.Object obj80 = properties78.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.logBaseDir = "";
        atomikosProperties81.setConsoleFileCount((int) (short) 10);
        long long86 = atomikosProperties81.getMaxTimeout();
        atomikosProperties81.service = "";
        java.lang.String str89 = atomikosProperties81.logBaseDir;
        boolean boolean90 = atomikosProperties81.threadedTwoPhaseCommit;
        atomikosProperties81.setTransactionManagerUniqueName("{{}={}}");
        java.lang.Object obj93 = properties78.get((java.lang.Object) "{{}={}}");
        boolean boolean94 = properties78.isEmpty();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 300000L + "'", long86 == 300000L);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test06640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06640");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.consoleFileCount = 100;
        int int6 = atomikosProperties0.getMaxActives();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test06641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06641");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        java.util.Collection<java.lang.Object> objCollection7 = properties5.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties8.values();
        int int11 = properties8.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery12.maxRetries = (-1);
        recovery12.setDelay((long) (short) 0);
        recovery12.maxRetries = 0;
        boolean boolean20 = properties8.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration21 = properties8.propertyNames();
        java.lang.Object obj22 = properties5.get((java.lang.Object) properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        long long29 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet31 = properties30.keySet();
        atomikosProperties24.set(properties30, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj37 = properties30.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((-1L));
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.get((java.lang.Object) 0.0d);
        java.lang.Object obj44 = properties41.clone();
        boolean boolean46 = properties30.replace((java.lang.Object) (-1L), obj44, (java.lang.Object) 100.0d);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties48.elements();
        java.lang.String str53 = properties48.getProperty("");
        java.util.Properties properties54 = new java.util.Properties(properties48);
        java.util.Set<java.lang.String> strSet55 = properties54.stringPropertyNames();
        properties54.clear();
        java.util.Set<java.lang.String> strSet57 = properties54.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((-1L));
        long long61 = atomikosProperties58.checkpointInterval;
        boolean boolean62 = atomikosProperties58.forceShutdownOnVmExit;
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setOutputDir("");
        atomikosProperties58.setConsoleFileName("hi!");
        atomikosProperties58.setDefaultJtaTimeout((long) (byte) 1);
        java.util.Properties properties71 = atomikosProperties58.asProperties();
        boolean boolean72 = properties54.containsValue((java.lang.Object) atomikosProperties58);
        java.lang.Object obj73 = properties5.remove((java.lang.Object) properties54);
        int int74 = properties5.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test06642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06642");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.logBaseName = "";
        int int18 = atomikosProperties0.maxActives;
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long21 = atomikosProperties20.defaultJtaTimeout;
        int int22 = atomikosProperties20.getConsoleFileCount();
        long long23 = atomikosProperties20.getCheckpointInterval();
        boolean boolean24 = atomikosProperties20.allowSubTransactions;
        java.lang.String str25 = atomikosProperties20.transactionManagerUniqueName;
        boolean boolean26 = atomikosProperties20.isSerialJtaTransactions();
        boolean boolean27 = properties19.containsKey((java.lang.Object) boolean26);
        properties19.clear();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06643");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        boolean boolean17 = properties13.isEmpty();
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = new java.util.Properties(properties13);
        java.util.Set<java.lang.Object> objSet20 = properties13.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.logBaseDir = "";
        atomikosProperties21.setConsoleFileCount((int) (short) 10);
        java.lang.String str26 = atomikosProperties21.logBaseName;
        java.lang.String str27 = atomikosProperties21.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.enableLogging = true;
        int int31 = atomikosProperties28.consoleFileLimit;
        atomikosProperties28.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int35 = atomikosProperties34.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.logBaseDir = "";
        atomikosProperties36.setConsoleFileCount((int) (short) 10);
        atomikosProperties36.setCheckpointInterval(10000L);
        long long43 = atomikosProperties36.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties36.consoleLogLevel = atomikosLoggingLevel44;
        atomikosProperties34.consoleLogLevel = atomikosLoggingLevel44;
        atomikosProperties28.consoleLogLevel = atomikosLoggingLevel44;
        atomikosProperties21.consoleLogLevel = atomikosLoggingLevel44;
        atomikosProperties21.forceShutdownOnVmExit = true;
        java.lang.Object obj51 = null;
        java.lang.Object obj52 = properties13.getOrDefault((java.lang.Object) true, obj51);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test06644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06644");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        int int13 = atomikosProperties0.maxActives;
        atomikosProperties0.consoleFileLimit = 100;
        long long16 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
    }

    @Test
    public void test06645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06645");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        properties14.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        boolean boolean19 = atomikosProperties16.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties16.getRecovery();
        int int21 = recovery20.getMaxRetries();
        int int22 = recovery20.maxRetries;
        recovery20.setDelay(0L);
        recovery20.setRetryInterval(500L);
        boolean boolean27 = properties14.containsValue((java.lang.Object) 500L);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(recovery20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06646");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        atomikosProperties0.enableLogging = false;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06647");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        atomikosProperties24.setConsoleFileLimit((int) (short) 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test06648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06648");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.allowSubTransactions = true;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        long long12 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test06649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06649");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.consoleFileCount = '#';
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.enableLogging = false;
        long long10 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
    }

    @Test
    public void test06650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06650");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        long long12 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test06651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06651");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxActives((int) (short) 0);
        java.lang.String str17 = atomikosProperties0.service;
        java.lang.String str18 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06652");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        long long2 = recovery0.retryInterval;
        recovery0.setDelay((long) (byte) 0);
        recovery0.delay = (short) -1;
        recovery0.forgetOrphanedLogEntriesDelay = 1;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
    }

    @Test
    public void test06653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06653");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        boolean boolean15 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06654");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        properties8.clear();
        java.util.Set<java.lang.Object> objSet18 = properties8.keySet();
        java.io.PrintWriter printWriter19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printWriter19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test06655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06655");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06656");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        atomikosProperties0.maxTimeout = (short) 1;
        atomikosProperties0.checkpointInterval = 52L;
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.consoleFileLimit = 50;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
    }

    @Test
    public void test06657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06657");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        boolean boolean4 = properties1.isEmpty();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.lang.String str6 = properties5.toString();
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.get((java.lang.Object) 0.0d);
        java.lang.Object obj10 = properties7.clone();
        java.lang.Object obj13 = properties7.setProperty("{}", "{}");
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = properties15.replace((java.lang.Object) 10.0d, (java.lang.Object) properties17);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.lang.Object obj31 = properties27.setProperty("hi!", "{}");
        java.lang.String str33 = properties27.getProperty("tmlog");
        properties27.clear();
        boolean boolean35 = properties27.isEmpty();
        boolean boolean36 = properties5.replace((java.lang.Object) "{}", (java.lang.Object) properties17, (java.lang.Object) properties27);
        java.util.Properties properties37 = new java.util.Properties(properties27);
        java.util.Set<java.lang.String> strSet38 = properties27.stringPropertyNames();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "{}" + "'", str6, "{}");
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test06658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06658");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        atomikosProperties0.defaultJtaTimeout = 'a';
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties0.recovery;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
    }

    @Test
    public void test06659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06659");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties0.serialJtaTransactions = true;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileName("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}");
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
    }

    @Test
    public void test06660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06660");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        java.util.Set<java.lang.String> strSet8 = properties1.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        atomikosProperties10.setConsoleFileLimit((int) (short) 100);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.lang.String str25 = atomikosProperties10.logBaseName;
        atomikosProperties10.transactionManagerUniqueName = "hi!";
        int int28 = atomikosProperties10.getConsoleFileCount();
        atomikosProperties10.forceShutdownOnVmExit = false;
        long long31 = atomikosProperties10.checkpointInterval;
        boolean boolean32 = properties1.contains((java.lang.Object) atomikosProperties10);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 500L + "'", long31 == 500L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test06661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06661");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 10);
        java.lang.String str10 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setMaxActives(18);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        java.lang.String str19 = atomikosProperties14.logBaseName;
        atomikosProperties14.outputDir = "";
        java.util.Properties properties22 = atomikosProperties14.asProperties();
        java.util.Properties properties23 = atomikosProperties14.asProperties();
        java.util.Properties properties24 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long26 = recovery25.getRetryInterval();
        recovery25.delay = 10L;
        recovery25.setForgetOrphanedLogEntriesDelay(0L);
        long long31 = recovery25.getRetryInterval();
        recovery25.retryInterval = 5;
        long long34 = recovery25.getDelay();
        recovery25.maxRetries = 0;
        java.lang.Object obj37 = properties24.get((java.lang.Object) recovery25);
        long long38 = recovery25.retryInterval;
        recovery25.delay = 0L;
        java.util.Properties properties41 = new java.util.Properties();
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Collection<java.lang.Object> objCollection43 = properties41.values();
        int int44 = properties41.size();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties41.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int47 = atomikosProperties46.getConsoleFileCount();
        int int48 = atomikosProperties46.maxActives;
        atomikosProperties46.setEnableLogging(true);
        java.util.Properties properties51 = atomikosProperties46.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery52.maxRetries = (-1);
        recovery52.setDelay((long) (short) 1);
        long long57 = recovery52.getForgetOrphanedLogEntriesDelay();
        recovery52.setForgetOrphanedLogEntriesDelay((long) '#');
        java.lang.Object obj60 = properties41.put((java.lang.Object) properties51, (java.lang.Object) '#');
        java.util.Properties properties61 = new java.util.Properties(properties41);
        java.lang.Object obj62 = properties61.clone();
        java.lang.Object obj63 = properties13.replace((java.lang.Object) recovery25, (java.lang.Object) properties61);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10L + "'", long34 == 10L);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 5L + "'", long38 == 5L);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 86400000L + "'", long57 == 86400000L);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test06662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06662");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        int int40 = recovery17.maxRetries;
        recovery17.forgetOrphanedLogEntriesDelay = 50;
        int int43 = recovery17.getMaxRetries();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 35 + "'", int40 == 35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 35 + "'", int43 == 35);
    }

    @Test
    public void test06663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06663");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setConsoleFileCount((int) (short) 10);
        atomikosProperties2.setCheckpointInterval(10000L);
        long long9 = atomikosProperties2.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties2.consoleLogLevel = atomikosLoggingLevel10;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel10;
        java.lang.String str13 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(10L);
        atomikosProperties0.setCheckpointInterval((long) 'a');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties0.consoleLogLevel;
        java.lang.String str19 = atomikosProperties0.getLogBaseName();
        java.lang.String str20 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Collection<java.lang.Object> objCollection23 = properties22.values();
        boolean boolean24 = properties22.isEmpty();
        boolean boolean25 = properties22.isEmpty();
        java.util.Set<java.lang.String> strSet26 = properties22.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        long long34 = recovery28.getDelay();
        atomikosProperties0.set(properties22, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}", (java.lang.Object) recovery28);
        properties22.clear();
        java.util.Set<java.lang.Object> objSet37 = properties22.keySet();
        java.util.Set<java.lang.String> strSet38 = properties22.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objCollection23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test06664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06664");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        long long11 = recovery0.retryInterval;
        int int12 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
    }

    @Test
    public void test06665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06665");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        java.util.Properties properties39 = new java.util.Properties(properties30);
        java.lang.String str40 = properties39.toString();
        java.util.Collection<java.lang.Object> objCollection41 = properties39.values();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(objCollection41);
    }

    @Test
    public void test06666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06666");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.service;
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setMaxActives((int) (byte) 10);
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.maxActives = (byte) 1;
        boolean boolean15 = atomikosProperties0.enableLogging;
        atomikosProperties0.maxTimeout = 32L;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06667");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        int int9 = recovery0.maxRetries;
        int int10 = recovery0.getMaxRetries();
        long long11 = recovery0.retryInterval;
        recovery0.maxRetries = (short) 0;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test06668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06668");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setLogBaseDir("{}");
        java.util.Properties properties11 = atomikosProperties4.asProperties();
        atomikosProperties4.service = "";
        atomikosProperties4.setTransactionManagerUniqueName("{}");
        atomikosProperties4.setTransactionManagerUniqueName("{}");
        atomikosProperties4.checkpointInterval = (-1L);
        int int20 = atomikosProperties4.consoleFileCount;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties4.recovery;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        java.lang.String str27 = atomikosProperties22.logBaseName;
        atomikosProperties22.outputDir = "";
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Collection<java.lang.Object> objCollection34 = properties32.values();
        int int35 = properties32.size();
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties32.elements();
        java.util.Properties properties37 = new java.util.Properties(properties32);
        boolean boolean38 = properties30.containsKey((java.lang.Object) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery39.maxRetries = (-1);
        recovery39.setDelay((long) (short) 0);
        recovery39.maxRetries = 0;
        recovery39.setMaxRetries((int) '#');
        recovery39.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery50 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery50.maxRetries = (-1);
        recovery50.setDelay((long) (short) 0);
        long long55 = recovery50.forgetOrphanedLogEntriesDelay;
        recovery50.retryInterval = 500L;
        long long58 = recovery50.delay;
        recovery50.setRetryInterval(10000L);
        java.lang.Object obj61 = properties32.put((java.lang.Object) recovery39, (java.lang.Object) 10000L);
        int int62 = recovery39.maxRetries;
        recovery39.setForgetOrphanedLogEntriesDelay(0L);
        recovery39.setRetryInterval(0L);
        java.lang.Object obj67 = properties0.getOrDefault((java.lang.Object) recovery21, (java.lang.Object) 0L);
        long long68 = recovery21.getDelay();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objCollection34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 86400000L + "'", long55 == 86400000L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 35 + "'", int62 == 35);
        org.junit.Assert.assertEquals("'" + obj67 + "' != '" + 0L + "'", obj67, 0L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10000L + "'", long68 == 10000L);
    }

    @Test
    public void test06669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06669");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.consoleFileCount = 100;
        java.lang.String str7 = atomikosProperties0.getService();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj11 = properties8.setProperty("{com.atomikos.icatch.hi!=-1.0, =hi!}", "tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.logBaseDir = "";
        atomikosProperties12.setConsoleFileCount((int) (short) 10);
        long long17 = atomikosProperties12.getMaxTimeout();
        atomikosProperties12.service = "";
        boolean boolean20 = atomikosProperties12.isSerialJtaTransactions();
        atomikosProperties12.setAllowSubTransactions(true);
        java.lang.String str23 = atomikosProperties12.getService();
        boolean boolean24 = properties8.equals((java.lang.Object) str23);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06670");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        int int9 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.enableLogging = true;
        long long18 = atomikosProperties15.getCheckpointInterval();
        boolean boolean20 = properties13.remove((java.lang.Object) long18, (java.lang.Object) (byte) 100);
        boolean boolean22 = properties13.equals((java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Class<?> wildcardClass24 = properties23.getClass();
        java.lang.Object obj25 = properties0.put((java.lang.Object) properties10, (java.lang.Object) wildcardClass24);
        java.util.Properties properties26 = new java.util.Properties(properties10);
        java.util.Set<java.lang.String> strSet27 = properties10.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection28 = properties10.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(objCollection28);
    }

    @Test
    public void test06671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06671");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        recovery12.maxRetries = '#';
        recovery12.delay = (short) 0;
        recovery12.delay = (short) 100;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(recovery12);
    }

    @Test
    public void test06672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06672");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        long long13 = recovery12.delay;
        recovery12.setForgetOrphanedLogEntriesDelay((long) 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test06673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06673");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.checkpointInterval = 300000L;
        long long12 = atomikosProperties0.maxTimeout;
        atomikosProperties0.logBaseDir = "hi!";
        atomikosProperties0.allowSubTransactions = true;
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test06674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06674");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        java.util.Properties properties14 = new java.util.Properties(properties6);
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.lang.String str18 = properties15.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}", "{com.atomikos.icatch.hi!=-1.0}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str18, "{com.atomikos.icatch.hi!=-1.0}");
    }

    @Test
    public void test06675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06675");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties0.clear();
        java.lang.Object obj5 = properties0.setProperty("{{}={}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties6 = new java.util.Properties(properties0);
        boolean boolean7 = properties6.isEmpty();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06676");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        long long10 = recovery9.getForgetOrphanedLogEntriesDelay();
        long long11 = recovery9.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
    }

    @Test
    public void test06677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06677");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        long long18 = atomikosProperties0.maxTimeout;
        atomikosProperties0.outputDir = "tmlog";
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) 19);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test06678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06678");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties6.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long29 = atomikosProperties28.checkpointInterval;
        atomikosProperties28.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setDelay((long) (short) 0);
        recovery32.maxRetries = (short) -1;
        long long39 = recovery32.retryInterval;
        recovery32.setMaxRetries(0);
        boolean boolean42 = properties6.remove((java.lang.Object) "{}", (java.lang.Object) recovery32);
        java.util.Properties properties43 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.setLogBaseName("hi!");
        boolean boolean54 = atomikosProperties44.isAllowSubTransactions();
        boolean boolean55 = atomikosProperties44.isThreadedTwoPhaseCommit();
        boolean boolean56 = atomikosProperties44.forceShutdownOnVmExit;
        boolean boolean57 = atomikosProperties44.enableLogging;
        java.lang.String str58 = atomikosProperties44.logBaseName;
        int int59 = atomikosProperties44.maxActives;
        atomikosProperties44.setThreadedTwoPhaseCommit(false);
        boolean boolean62 = properties43.containsValue((java.lang.Object) atomikosProperties44);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!" + "'", str58, "hi!");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test06679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06679");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        int int5 = recovery0.getMaxRetries();
        recovery0.maxRetries = 2;
        long long8 = recovery0.getRetryInterval();
        long long9 = recovery0.retryInterval;
        recovery0.setDelay((long) 52);
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 86400000L + "'", long12 == 86400000L);
    }

    @Test
    public void test06680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06680");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.checkpointInterval = (short) 1;
        atomikosProperties0.consoleFileCount = 0;
        atomikosProperties0.maxActives = (short) 1;
        atomikosProperties0.service = "tmlog";
        boolean boolean28 = atomikosProperties0.forceShutdownOnVmExit;
        long long29 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
    }

    @Test
    public void test06681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06681");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean9 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.checkpointInterval = '4';
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.maxTimeout = 50;
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.consoleFileLimit = (byte) 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06682");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        int int9 = recovery0.maxRetries;
        int int10 = recovery0.getMaxRetries();
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long12 = recovery0.retryInterval;
        recovery0.forgetOrphanedLogEntriesDelay = (byte) 100;
        recovery0.maxRetries = 100;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test06683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06683");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean9 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.outputDir = "{com.atomikos.icatch.{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=10}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test06684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06684");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        int int4 = atomikosProperties0.maxActives;
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        properties5.clear();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertNotNull(properties5);
    }

    @Test
    public void test06685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06685");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.consoleFileCount = 0;
        long long10 = atomikosProperties0.getMaxTimeout();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setOutputDir("tm.out");
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test06686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06686");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.maxActives = 50;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        int int7 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseName("{{}=tmlog}");
        atomikosProperties0.defaultJtaTimeout = (byte) 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test06687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06687");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getConsoleFileCount();
        int int13 = atomikosProperties11.maxActives;
        java.lang.String str14 = atomikosProperties11.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        atomikosProperties15.setCheckpointInterval(10000L);
        long long22 = atomikosProperties15.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties11.consoleLogLevel = atomikosLoggingLevel23;
        java.util.Properties properties25 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel26);
        boolean boolean28 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean29 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean30 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.maxActives = 100;
        atomikosProperties0.setConsoleFileLimit(22);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test06688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06688");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.maxRetries;
        recovery0.setRetryInterval(0L);
        recovery0.setForgetOrphanedLogEntriesDelay((long) 2);
        recovery0.forgetOrphanedLogEntriesDelay = (byte) -1;
        recovery0.maxRetries = 2;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test06689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06689");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = null;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel12;
        atomikosProperties9.outputDir = "";
        int int16 = atomikosProperties9.maxActives;
        boolean boolean17 = atomikosProperties9.isThreadedTwoPhaseCommit();
        atomikosProperties9.consoleFileLimit = (short) 10;
        java.util.Properties properties20 = atomikosProperties9.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.enableLogging = true;
        long long25 = atomikosProperties22.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.forceShutdownOnVmExit = false;
        java.lang.Object obj29 = properties7.replace((java.lang.Object) objEnumeration21, (java.lang.Object) atomikosProperties22);
        atomikosProperties22.setDefaultJtaTimeout(300000L);
        atomikosProperties22.defaultJtaTimeout = (byte) 1;
        boolean boolean34 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties22.consoleFileCount = '4';
        boolean boolean37 = atomikosProperties22.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test06690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06690");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        java.lang.String str12 = atomikosProperties0.service;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test06691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06691");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        atomikosProperties0.allowSubTransactions = true;
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        int int8 = atomikosProperties0.consoleFileLimit;
        java.lang.String str9 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean12 = atomikosProperties0.allowSubTransactions;
        java.lang.String str13 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
    }

    @Test
    public void test06692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06692");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(10L);
        long long12 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setTransactionManagerUniqueName("");
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        int int16 = atomikosProperties0.getConsoleFileCount();
        long long17 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
    }

    @Test
    public void test06693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06693");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 19);
        int int10 = atomikosProperties0.getConsoleFileCount();
        boolean boolean11 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean12 = atomikosProperties0.enableLogging;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06694");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.lang.Object obj13 = properties1.setProperty("{}", "tmlog");
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        atomikosProperties15.setLogBaseDir("{}");
        boolean boolean22 = atomikosProperties15.isSerialJtaTransactions();
        boolean boolean23 = atomikosProperties15.allowSubTransactions;
        atomikosProperties15.consoleFileLimit = 50;
        boolean boolean26 = properties1.containsKey((java.lang.Object) atomikosProperties15);
        boolean boolean27 = atomikosProperties15.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test06695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06695");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean6 = atomikosProperties0.enableLogging;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setMaxTimeout((long) (byte) 1);
        atomikosProperties0.setMaxTimeout((long) 22);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test06696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06696");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        boolean boolean16 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.maxActives = (short) 100;
        int int19 = atomikosProperties0.maxActives;
        atomikosProperties0.setMaxTimeout(50L);
        long long22 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 500L + "'", long22 == 500L);
    }

    @Test
    public void test06697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06697");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        long long8 = recovery0.delay;
        recovery0.setRetryInterval(10000L);
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long13 = recovery0.getRetryInterval();
        recovery0.setMaxRetries((int) (short) 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test06698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06698");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.lang.String str18 = atomikosProperties0.getLogBaseDir();
        java.lang.String str19 = atomikosProperties0.service;
        atomikosProperties0.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties0.recovery;
        java.lang.String str23 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test06699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06699");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.checkpointInterval = 35;
        boolean boolean22 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str23 = atomikosProperties0.outputDir;
        boolean boolean24 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.checkpointInterval = (byte) -1;
        atomikosProperties0.setConsoleFileCount(100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test06700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06700");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        long long5 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setCheckpointInterval((long) ' ');
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str11 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06701");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        atomikosProperties10.setService("tmlog");
        atomikosProperties10.setCheckpointInterval((long) (short) 0);
        long long18 = atomikosProperties10.getCheckpointInterval();
        java.lang.String str19 = atomikosProperties10.getService();
        atomikosProperties10.setMaxActives((int) (short) 100);
        java.lang.Object obj22 = properties9.remove((java.lang.Object) atomikosProperties10);
        atomikosProperties10.maxTimeout = 5;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties10.getConsoleLogLevel();
        java.util.Properties properties26 = atomikosProperties10.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties26);
    }

    @Test
    public void test06702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06702");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.enableLogging = true;
        long long11 = atomikosProperties8.getCheckpointInterval();
        atomikosProperties8.setService("tmlog");
        atomikosProperties8.setConsoleFileName("{}");
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties16.entrySet();
        boolean boolean18 = properties7.contains((java.lang.Object) properties16);
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream19, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06703");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.enableLogging = true;
        long long10 = atomikosProperties7.getCheckpointInterval();
        boolean boolean12 = properties5.remove((java.lang.Object) long10, (java.lang.Object) (byte) 100);
        boolean boolean14 = properties5.equals((java.lang.Object) (short) 1);
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Set<java.lang.String> strSet16 = properties15.stringPropertyNames();
        java.lang.Object obj17 = properties3.remove((java.lang.Object) strSet16);
        java.lang.String str19 = properties3.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        atomikosProperties20.setCheckpointInterval(10000L);
        long long27 = atomikosProperties20.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties20.consoleLogLevel = atomikosLoggingLevel28;
        atomikosProperties20.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties20.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setLogBaseDir("{}");
        java.lang.String str40 = atomikosProperties33.getOutputDir();
        atomikosProperties33.setLogBaseName("hi!");
        boolean boolean43 = atomikosProperties33.isAllowSubTransactions();
        boolean boolean44 = atomikosProperties33.isThreadedTwoPhaseCommit();
        boolean boolean45 = atomikosProperties33.forceShutdownOnVmExit;
        java.lang.Object obj46 = properties3.put((java.lang.Object) recovery32, (java.lang.Object) atomikosProperties33);
        boolean boolean47 = properties3.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties3.keys();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
    }

    @Test
    public void test06704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06704");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Collection<java.lang.Object> objCollection13 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.keys();
        boolean boolean15 = properties9.contains((java.lang.Object) properties11);
        boolean boolean16 = properties9.isEmpty();
        boolean boolean17 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery19.maxRetries = (-1);
        recovery19.setDelay((long) (short) 0);
        recovery19.maxRetries = (short) -1;
        long long26 = recovery19.retryInterval;
        int int27 = recovery19.getMaxRetries();
        atomikosProperties0.set(properties9, "tmlog", (java.lang.Object) int27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties9.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties9.elements();
        java.lang.String str31 = properties9.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.enableLogging = true;
        long long35 = atomikosProperties32.getCheckpointInterval();
        atomikosProperties32.setService("tmlog");
        atomikosProperties32.setConsoleFileName("{}");
        java.util.Properties properties40 = atomikosProperties32.asProperties();
        atomikosProperties32.setCheckpointInterval((long) (short) 10);
        atomikosProperties32.logBaseName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.enableLogging = true;
        long long48 = atomikosProperties45.getCheckpointInterval();
        java.lang.String str49 = atomikosProperties45.getService();
        java.lang.String str50 = atomikosProperties45.logBaseDir;
        atomikosProperties45.setEnableLogging(false);
        atomikosProperties45.consoleFileCount = 0;
        long long55 = atomikosProperties45.getMaxTimeout();
        boolean boolean56 = atomikosProperties45.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties45.consoleLogLevel;
        atomikosProperties32.setConsoleLogLevel(atomikosLoggingLevel57);
        java.util.Properties properties59 = atomikosProperties32.asProperties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Collection<java.lang.Object> objCollection61 = properties59.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.logBaseDir = "";
        atomikosProperties62.setConsoleFileCount((int) (short) 10);
        java.lang.String str67 = atomikosProperties62.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties62.getConsoleLogLevel();
        java.lang.String str69 = atomikosProperties62.transactionManagerUniqueName;
        atomikosProperties62.consoleFileLimit = (byte) 100;
        long long72 = atomikosProperties62.checkpointInterval;
        boolean boolean73 = atomikosProperties62.enableLogging;
        atomikosProperties62.setMaxTimeout((long) 50);
        java.lang.String str76 = atomikosProperties62.logBaseDir;
        boolean boolean77 = properties59.equals((java.lang.Object) atomikosProperties62);
        boolean boolean78 = properties9.containsValue((java.lang.Object) boolean77);
        java.lang.Object obj79 = properties9.clone();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{com.atomikos.icatch.tmlog=-1}" + "'", str31, "{com.atomikos.icatch.tmlog=-1}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 500L + "'", long35 == 500L);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 500L + "'", long48 == 500L);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(obj79);
        org.junit.Assert.assertEquals(obj79.toString(), "{com.atomikos.icatch.tmlog=-1}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{com.atomikos.icatch.tmlog=-1}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{com.atomikos.icatch.tmlog=-1}");
    }

    @Test
    public void test06705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06705");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setMaxActives((int) (byte) 1);
        int int12 = atomikosProperties0.consoleFileCount;
        boolean boolean13 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test06706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06706");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.outputDir = "hi!";
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06707");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        properties9.clear();
        java.util.Properties properties11 = new java.util.Properties(properties9);
        java.lang.Object obj14 = properties9.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=INFO, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=35, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.tmlog=-1}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test06708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06708");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.logBaseDir = "";
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        java.lang.String str12 = atomikosProperties7.logBaseName;
        atomikosProperties7.outputDir = "";
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.String> strSet16 = properties15.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.elements();
        java.util.Set<java.lang.Object> objSet18 = properties15.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties20 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        java.lang.Object obj24 = properties20.setProperty("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}", "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test06709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str9 = atomikosProperties0.getOutputDir();
        java.lang.String str10 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
    }

    @Test
    public void test06710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06710");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "";
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.enableLogging = true;
        long long14 = atomikosProperties11.getCheckpointInterval();
        java.lang.String str15 = atomikosProperties11.getService();
        java.lang.String str16 = atomikosProperties11.logBaseDir;
        atomikosProperties11.setEnableLogging(false);
        atomikosProperties11.consoleFileCount = 0;
        long long21 = atomikosProperties11.getMaxTimeout();
        boolean boolean22 = atomikosProperties11.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties11.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel23;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties0.consoleLogLevel;
        boolean boolean26 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str27 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
    }

    @Test
    public void test06711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06711");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        long long6 = atomikosProperties0.maxTimeout;
        int int7 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        int int9 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        long long12 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test06712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06712");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        boolean boolean4 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setConsoleFileCount((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test06713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06713");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        boolean boolean4 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getService();
        long long10 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.consoleLogLevel;
        atomikosProperties0.setConsoleFileLimit((int) (short) 10);
        int int14 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean15 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06714");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.maxTimeout = 10000L;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test06715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06715");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((int) (short) -1);
        long long3 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(52L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
    }

    @Test
    public void test06716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06716");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setService("{}");
        atomikosProperties0.consoleFileName = "tm.out";
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.hi!=-1.0}");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test06717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06717");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.consoleFileCount = 100;
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.enableLogging = true;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str12 = atomikosProperties0.getService();
        int int13 = atomikosProperties0.consoleFileLimit;
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.logBaseName = "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}={true=10000}, com.atomikos.icatch.hi!=-1.0}";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
    }

    @Test
    public void test06718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06718");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.forceShutdownOnVmExit = true;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06719");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        boolean boolean37 = properties1.isEmpty();
        java.util.Properties properties38 = new java.util.Properties(properties1);
        int int39 = properties38.size();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test06720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06720");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.enableLogging = false;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) 1;
        java.lang.String str15 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06721");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.setMaxTimeout(52L);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean13 = atomikosProperties0.enableLogging;
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06722");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.lang.Object obj15 = properties6.setProperty("{true=10000}", "tmlog");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.get((java.lang.Object) 0.0d);
        java.lang.Object obj19 = properties16.clone();
        java.lang.String str20 = properties16.toString();
        boolean boolean23 = properties16.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj24 = null;
        boolean boolean25 = properties16.equals(obj24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.get((java.lang.Object) 0.0d);
        java.lang.Object obj29 = properties26.clone();
        java.lang.Object obj32 = properties26.setProperty("{}", "{}");
        int int33 = properties26.size();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        boolean boolean38 = atomikosProperties35.isForceShutdownOnVmExit();
        atomikosProperties35.allowSubTransactions = false;
        boolean boolean41 = atomikosProperties35.serialJtaTransactions;
        boolean boolean42 = properties16.containsKey((java.lang.Object) boolean41);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Collection<java.lang.Object> objCollection45 = properties43.values();
        int int46 = properties43.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery47.maxRetries = (-1);
        recovery47.setDelay((long) (short) 0);
        recovery47.maxRetries = 0;
        boolean boolean55 = properties43.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet56 = properties43.keySet();
        boolean boolean57 = properties6.remove((java.lang.Object) boolean41, (java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.enableLogging = true;
        long long61 = atomikosProperties58.getCheckpointInterval();
        atomikosProperties58.setService("tmlog");
        java.util.Properties properties64 = atomikosProperties58.asProperties();
        boolean boolean65 = properties6.containsKey((java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.logBaseDir = "";
        atomikosProperties66.setConsoleFileCount((int) (short) 10);
        java.lang.String str71 = atomikosProperties66.logBaseName;
        atomikosProperties66.outputDir = "";
        java.util.Properties properties74 = atomikosProperties66.asProperties();
        int int75 = atomikosProperties66.getConsoleFileLimit();
        long long76 = atomikosProperties66.maxTimeout;
        java.util.Properties properties77 = atomikosProperties66.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties77.entrySet();
        java.lang.Object obj79 = properties64.remove((java.lang.Object) properties77);
        java.io.InputStream inputStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties64.load(inputStream80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 300000L + "'", long76 == 300000L);
        org.junit.Assert.assertNotNull(properties77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test06723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06723");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setMaxTimeout((long) '4');
        atomikosProperties0.setConsoleFileLimit(22);
        atomikosProperties0.allowSubTransactions = true;
        atomikosProperties0.setMaxActives(97);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test06724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06724");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        boolean boolean7 = atomikosProperties0.enableLogging;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06725");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.get((java.lang.Object) 0.0d);
        java.lang.Object obj21 = properties18.clone();
        java.lang.String str22 = properties18.toString();
        boolean boolean25 = properties18.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj26 = properties16.replace((java.lang.Object) 10.0d, (java.lang.Object) properties18);
        java.lang.String str27 = properties18.toString();
        java.util.Properties properties28 = new java.util.Properties(properties18);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.get((java.lang.Object) 0.0d);
        java.lang.Object obj35 = properties32.clone();
        java.lang.String str36 = properties32.toString();
        boolean boolean39 = properties32.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj40 = properties30.replace((java.lang.Object) 10.0d, (java.lang.Object) properties32);
        java.util.Properties properties41 = new java.util.Properties(properties30);
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        boolean boolean43 = properties13.contains((java.lang.Object) properties28);
        boolean boolean44 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery45.maxRetries = (-1);
        recovery45.setRetryInterval((long) (-1));
        java.lang.Object obj51 = properties28.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = null;
        atomikosProperties52.consoleLogLevel = atomikosLoggingLevel55;
        atomikosProperties52.outputDir = "";
        int int59 = atomikosProperties52.maxActives;
        boolean boolean60 = atomikosProperties52.isThreadedTwoPhaseCommit();
        atomikosProperties52.consoleFileLimit = (short) 10;
        java.util.Properties properties63 = atomikosProperties52.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.keys();
        boolean boolean65 = properties28.contains((java.lang.Object) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.logBaseDir = "";
        atomikosProperties67.setConsoleFileCount((int) (short) 10);
        long long72 = atomikosProperties67.getMaxTimeout();
        java.util.Properties properties73 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet74 = properties73.keySet();
        atomikosProperties67.set(properties73, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str78 = atomikosProperties67.logBaseDir;
        java.lang.String str79 = atomikosProperties67.logBaseDir;
        java.lang.String str80 = atomikosProperties67.logBaseDir;
        boolean boolean81 = atomikosProperties67.isEnableLogging();
        long long82 = atomikosProperties67.checkpointInterval;
        atomikosProperties67.setOutputDir("hi!");
        java.lang.String str85 = atomikosProperties67.outputDir;
        atomikosProperties67.transactionManagerUniqueName = "{}";
        java.util.Properties properties88 = atomikosProperties67.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int90 = atomikosProperties89.getMaxActives();
        int int91 = atomikosProperties89.consoleFileCount;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel92 = atomikosProperties89.consoleLogLevel;
        atomikosProperties67.setConsoleLogLevel(atomikosLoggingLevel92);
        atomikosProperties0.set(properties28, "{}", (java.lang.Object) atomikosProperties67);
        atomikosProperties0.setConsoleFileLimit((int) (byte) -1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 300000L + "'", long72 == 300000L);
        org.junit.Assert.assertNotNull(objSet74);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 500L + "'", long82 == 500L);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel92 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel92.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06726");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.logBaseName = "tm.out";
        atomikosProperties0.setMaxTimeout(1L);
        java.lang.String str22 = atomikosProperties0.consoleFileName;
        atomikosProperties0.serialJtaTransactions = false;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tm.out" + "'", str22, "tm.out");
    }

    @Test
    public void test06727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06727");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        boolean boolean17 = properties13.isEmpty();
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = new java.util.Properties(properties13);
        java.util.Set<java.lang.Object> objSet20 = properties13.keySet();
        java.util.Set<java.lang.String> strSet21 = properties13.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        long long27 = atomikosProperties22.getMaxTimeout();
        atomikosProperties22.service = "";
        java.lang.String str30 = atomikosProperties22.logBaseDir;
        atomikosProperties22.logBaseName = "tmlog";
        atomikosProperties22.transactionManagerUniqueName = "{}";
        boolean boolean35 = atomikosProperties22.isForceShutdownOnVmExit();
        long long36 = atomikosProperties22.getDefaultJtaTimeout();
        atomikosProperties22.setTransactionManagerUniqueName("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}");
        boolean boolean39 = properties13.containsValue((java.lang.Object) "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test06728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06728");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.logBaseName;
        atomikosProperties9.outputDir = "";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        java.util.Properties properties18 = atomikosProperties9.asProperties();
        boolean boolean19 = properties1.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setOutputDir("{{}={}}");
        atomikosProperties9.allowSubTransactions = false;
        int int26 = atomikosProperties9.getConsoleFileCount();
        boolean boolean27 = atomikosProperties9.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06729");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        java.lang.String str20 = properties8.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.logBaseDir = "";
        atomikosProperties21.setConsoleFileCount((int) (short) 10);
        java.lang.String str26 = atomikosProperties21.logBaseName;
        atomikosProperties21.outputDir = "";
        java.util.Properties properties29 = atomikosProperties21.asProperties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Collection<java.lang.Object> objCollection33 = properties31.values();
        int int34 = properties31.size();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties31.elements();
        java.util.Properties properties36 = new java.util.Properties(properties31);
        boolean boolean37 = properties29.containsKey((java.lang.Object) properties31);
        java.util.Collection<java.lang.Object> objCollection38 = properties29.values();
        boolean boolean39 = properties8.equals((java.lang.Object) properties29);
        java.lang.Object obj40 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery41.maxRetries = (-1);
        recovery41.setDelay((long) (short) 1);
        long long46 = recovery41.getForgetOrphanedLogEntriesDelay();
        int int47 = recovery41.maxRetries;
        recovery41.setForgetOrphanedLogEntriesDelay(0L);
        long long50 = recovery41.retryInterval;
        recovery41.setRetryInterval(86400000L);
        recovery41.setMaxRetries(18);
        recovery41.retryInterval = (-1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.logBaseDir = "";
        atomikosProperties57.setConsoleFileCount((int) (short) 10);
        atomikosProperties57.setLogBaseDir("{}");
        java.util.Properties properties64 = atomikosProperties57.asProperties();
        java.util.Set<java.lang.String> strSet65 = properties64.stringPropertyNames();
        java.util.Properties properties66 = new java.util.Properties(properties64);
        java.lang.Object obj67 = properties8.getOrDefault((java.lang.Object) recovery41, (java.lang.Object) properties64);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 86400000L + "'", long46 == 86400000L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10000L + "'", long50 == 10000L);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(obj67);
// flaky:         org.junit.Assert.assertEquals(obj67.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06730");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.maxTimeout = 300000L;
        java.lang.String str10 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        int int12 = atomikosProperties0.consoleFileCount;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test06731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06731");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "hi!";
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        long long16 = atomikosProperties13.getCheckpointInterval();
        boolean boolean18 = properties11.remove((java.lang.Object) long16, (java.lang.Object) (byte) 100);
        boolean boolean20 = properties11.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties11.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((-1L));
        long long25 = atomikosProperties22.checkpointInterval;
        boolean boolean26 = atomikosProperties22.forceShutdownOnVmExit;
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        boolean boolean29 = properties11.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str41 = atomikosProperties30.logBaseDir;
        java.lang.String str42 = atomikosProperties30.logBaseDir;
        java.lang.String str43 = atomikosProperties30.logBaseDir;
        boolean boolean44 = atomikosProperties30.isEnableLogging();
        boolean boolean45 = atomikosProperties30.forceShutdownOnVmExit;
        boolean boolean46 = properties11.containsValue((java.lang.Object) atomikosProperties30);
        atomikosProperties30.consoleFileName = "";
        int int49 = atomikosProperties30.maxActives;
        atomikosProperties30.serialJtaTransactions = false;
        java.util.Properties properties52 = atomikosProperties30.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties30.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel53;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06732");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        long long5 = atomikosProperties0.checkpointInterval;
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        boolean boolean13 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test06733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06733");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.lang.String str6 = properties1.getProperty("");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.get((java.lang.Object) 0.0d);
        java.lang.Object obj10 = properties7.clone();
        java.lang.String str11 = properties7.toString();
        boolean boolean14 = properties7.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj15 = null;
        boolean boolean16 = properties7.equals(obj15);
        java.util.Set<java.lang.Object> objSet17 = properties7.keySet();
        boolean boolean18 = properties1.contains((java.lang.Object) properties7);
        java.util.Set<java.lang.Object> objSet19 = properties1.keySet();
        java.lang.Object obj20 = properties1.clone();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
    }

    @Test
    public void test06734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06734");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = null;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel21;
        long long23 = atomikosProperties18.checkpointInterval;
        atomikosProperties18.setOutputDir("");
        atomikosProperties18.setCheckpointInterval((long) ' ');
        long long28 = atomikosProperties18.checkpointInterval;
        atomikosProperties18.setMaxActives(50);
        atomikosProperties18.logBaseName = "";
        java.lang.Object obj33 = properties16.remove((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj47 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((-1L));
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.get((java.lang.Object) 0.0d);
        java.lang.Object obj54 = properties51.clone();
        boolean boolean56 = properties40.replace((java.lang.Object) (-1L), obj54, (java.lang.Object) 100.0d);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.util.Properties properties61 = new java.util.Properties(properties40);
        java.lang.Object obj62 = properties7.getOrDefault((java.lang.Object) "", (java.lang.Object) properties61);
        java.lang.Object obj65 = properties7.setProperty("{{}={}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Collection<java.lang.Object> objCollection68 = properties67.values();
        boolean boolean69 = properties67.isEmpty();
        java.util.Set<java.lang.String> strSet70 = properties67.stringPropertyNames();
        java.lang.String str72 = properties67.getProperty("");
        java.util.Properties properties73 = new java.util.Properties();
        java.lang.Object obj75 = properties73.get((java.lang.Object) 0.0d);
        java.lang.Object obj76 = properties73.clone();
        java.lang.String str77 = properties73.toString();
        boolean boolean80 = properties73.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj81 = null;
        boolean boolean82 = properties73.equals(obj81);
        java.util.Set<java.lang.Object> objSet83 = properties73.keySet();
        boolean boolean84 = properties67.contains((java.lang.Object) properties73);
        java.util.Set<java.lang.Object> objSet85 = properties67.keySet();
        boolean boolean86 = properties7.containsKey((java.lang.Object) properties67);
        java.lang.String str89 = properties7.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}", "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 32L + "'", long28 == 32L);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objCollection68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(obj76);
        org.junit.Assert.assertEquals(obj76.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj76), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj76), "{}");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "{}" + "'", str77, "{}");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{tmlog={com.atomikos.icatch.hi!=-1.0}}" + "'", str89, "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
    }

    @Test
    public void test06735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06735");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Collection<java.lang.Object> objCollection8 = properties6.values();
        int int9 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties6.elements();
        boolean boolean11 = properties5.equals((java.lang.Object) objEnumeration10);
        properties5.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties5.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setCheckpointInterval(10000L);
        long long21 = atomikosProperties14.maxTimeout;
        int int22 = atomikosProperties14.maxActives;
        boolean boolean23 = atomikosProperties14.isSerialJtaTransactions();
        boolean boolean24 = atomikosProperties14.serialJtaTransactions;
        atomikosProperties14.setConsoleFileLimit(1);
        java.lang.Object obj27 = properties5.remove((java.lang.Object) atomikosProperties14);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test06736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06736");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setMaxActives((int) (byte) -1);
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long19 = atomikosProperties0.maxTimeout;
        atomikosProperties0.checkpointInterval = 50;
        java.lang.String str22 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.lang.String str25 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
    }

    @Test
    public void test06737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06737");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.setMaxActives((int) (short) 100);
        int int13 = atomikosProperties0.maxActives;
        java.lang.String str14 = atomikosProperties0.service;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06738");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 35;
        boolean boolean17 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        java.lang.String str23 = atomikosProperties20.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setCheckpointInterval(10000L);
        long long31 = atomikosProperties24.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties24.getConsoleLogLevel();
        atomikosProperties20.consoleLogLevel = atomikosLoggingLevel32;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel32;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06739");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        long long9 = recovery0.delay;
        int int10 = recovery0.maxRetries;
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
    }

    @Test
    public void test06740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06740");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj27 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        boolean boolean36 = properties20.replace((java.lang.Object) (-1L), obj34, (java.lang.Object) 100.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean41 = properties3.equals((java.lang.Object) properties20);
        java.util.Properties properties42 = new java.util.Properties(properties20);
        java.util.Collection<java.lang.Object> objCollection43 = properties20.values();
        java.util.Properties properties44 = new java.util.Properties();
        java.lang.Object obj46 = properties44.get((java.lang.Object) 0.0d);
        java.lang.Object obj47 = properties44.clone();
        java.lang.String str48 = properties44.toString();
        boolean boolean51 = properties44.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj52 = null;
        boolean boolean53 = properties44.equals(obj52);
        java.util.Set<java.lang.Object> objSet54 = properties44.keySet();
        java.util.Properties properties55 = new java.util.Properties(properties44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet56 = properties55.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.logBaseDir = "";
        atomikosProperties57.setConsoleFileCount((int) (short) 10);
        long long62 = atomikosProperties57.getMaxTimeout();
        java.util.Properties properties63 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet64 = properties63.keySet();
        atomikosProperties57.set(properties63, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str68 = atomikosProperties57.logBaseDir;
        java.lang.String str69 = atomikosProperties57.logBaseDir;
        java.lang.String str70 = atomikosProperties57.logBaseDir;
        boolean boolean71 = atomikosProperties57.isEnableLogging();
        long long72 = atomikosProperties57.checkpointInterval;
        boolean boolean73 = atomikosProperties57.serialJtaTransactions;
        atomikosProperties57.maxActives = (short) 100;
        atomikosProperties57.transactionManagerUniqueName = "{}";
        boolean boolean78 = properties20.remove((java.lang.Object) properties55, (java.lang.Object) atomikosProperties57);
        java.util.Properties properties79 = new java.util.Properties(properties55);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{}" + "'", str48, "{}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNotNull(objEntrySet56);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 500L + "'", long72 == 500L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test06741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06741");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Set<java.lang.String> strSet32 = properties30.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        atomikosProperties33.service = "";
        java.lang.String str41 = atomikosProperties33.logBaseDir;
        boolean boolean42 = atomikosProperties33.threadedTwoPhaseCommit;
        java.lang.String str43 = atomikosProperties33.getService();
        atomikosProperties33.setOutputDir("tmlog");
        atomikosProperties33.maxTimeout = (short) -1;
        java.lang.Object obj48 = properties30.get((java.lang.Object) atomikosProperties33);
        java.io.InputStream inputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.load(inputStream49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test06742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06742");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        boolean boolean8 = properties1.isEmpty();
        boolean boolean9 = properties1.isEmpty();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        boolean boolean13 = properties11.isEmpty();
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.lang.String str16 = properties11.getProperty("");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = null;
        boolean boolean26 = properties17.equals(obj25);
        java.util.Set<java.lang.Object> objSet27 = properties17.keySet();
        boolean boolean28 = properties11.contains((java.lang.Object) properties17);
        java.lang.Object obj29 = properties1.remove((java.lang.Object) properties17);
        java.util.Properties properties30 = new java.util.Properties(properties17);
        java.util.Properties properties31 = new java.util.Properties(properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        java.lang.String str37 = atomikosProperties32.transactionManagerUniqueName;
        atomikosProperties32.maxActives = (-1);
        boolean boolean40 = properties17.equals((java.lang.Object) (-1));
        properties17.clear();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test06743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06743");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 35;
        atomikosProperties0.checkpointInterval = 1;
        long long19 = atomikosProperties0.getDefaultJtaTimeout();
        long long20 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setConsoleFileCount(21);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
    }

    @Test
    public void test06744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06744");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Properties properties16 = new java.util.Properties(properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        atomikosProperties17.setLogBaseDir("{}");
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.util.Set<java.lang.String> strSet25 = properties24.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int27 = atomikosProperties26.getConsoleFileCount();
        int int28 = atomikosProperties26.maxActives;
        atomikosProperties26.setConsoleFileName("");
        atomikosProperties26.transactionManagerUniqueName = "{}";
        java.util.Properties properties33 = atomikosProperties26.asProperties();
        boolean boolean34 = atomikosProperties26.threadedTwoPhaseCommit;
        atomikosProperties26.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getConsoleFileCount();
        int int39 = atomikosProperties37.maxActives;
        atomikosProperties37.setConsoleFileName("");
        atomikosProperties37.transactionManagerUniqueName = "{}";
        atomikosProperties37.setMaxActives(0);
        boolean boolean46 = atomikosProperties37.forceShutdownOnVmExit;
        java.lang.Object obj47 = properties24.put((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties37);
        atomikosProperties26.setConsoleFileCount((int) '4');
        java.util.Properties properties50 = atomikosProperties26.asProperties();
        boolean boolean51 = properties16.containsValue((java.lang.Object) properties50);
        java.lang.String str53 = properties16.getProperty("{{}=tmlog}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long55 = atomikosProperties54.defaultJtaTimeout;
        int int56 = atomikosProperties54.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long58 = atomikosProperties57.defaultJtaTimeout;
        java.lang.String str59 = atomikosProperties57.getLogBaseName();
        atomikosProperties57.allowSubTransactions = true;
        long long62 = atomikosProperties57.getDefaultJtaTimeout();
        atomikosProperties57.setCheckpointInterval((long) 35);
        atomikosProperties57.defaultJtaTimeout = 50L;
        java.lang.String str67 = atomikosProperties57.consoleFileName;
        boolean boolean68 = atomikosProperties57.threadedTwoPhaseCommit;
        java.lang.Object obj69 = properties16.putIfAbsent((java.lang.Object) int56, (java.lang.Object) atomikosProperties57);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10000L + "'", long55 == 10000L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tm.out" + "'", str67, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(obj69);
    }

    @Test
    public void test06745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06745");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        properties9.clear();
        java.util.Properties properties11 = new java.util.Properties(properties9);
        int int12 = properties9.size();
        java.util.Collection<java.lang.Object> objCollection13 = properties9.values();
        java.lang.String str14 = properties9.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        atomikosProperties15.setCheckpointInterval(10000L);
        boolean boolean22 = atomikosProperties15.serialJtaTransactions;
        atomikosProperties15.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj25 = properties9.remove((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test06746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06746");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties3.setProperty("", "");
        java.util.Properties properties17 = new java.util.Properties(properties3);
        properties3.clear();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.keys();
        java.util.Collection<java.lang.Object> objCollection26 = properties24.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Collection<java.lang.Object> objCollection29 = properties27.values();
        int int30 = properties27.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery31.maxRetries = (-1);
        recovery31.setDelay((long) (short) 0);
        recovery31.maxRetries = 0;
        boolean boolean39 = properties27.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration40 = properties27.propertyNames();
        java.lang.Object obj41 = properties24.get((java.lang.Object) properties27);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties43 = new java.util.Properties(properties24);
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties44.isEmpty();
        java.lang.String str47 = properties44.toString();
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.get((java.lang.Object) 0.0d);
        java.lang.Object obj51 = properties48.clone();
        java.lang.String str52 = properties48.toString();
        java.util.Properties properties53 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties48.entrySet();
        java.util.Set<java.lang.String> strSet55 = properties48.stringPropertyNames();
        boolean boolean56 = properties44.containsKey((java.lang.Object) strSet55);
        java.util.Properties properties57 = new java.util.Properties(properties44);
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Properties properties59 = new java.util.Properties(properties57);
        java.util.Properties properties60 = new java.util.Properties(properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.logBaseDir = "";
        atomikosProperties61.setConsoleFileCount((int) (short) 10);
        atomikosProperties61.setCheckpointInterval(10000L);
        long long68 = atomikosProperties61.maxTimeout;
        int int69 = atomikosProperties61.getConsoleFileLimit();
        atomikosProperties61.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        java.lang.String str72 = atomikosProperties61.consoleFileName;
        java.lang.Object obj73 = properties24.put((java.lang.Object) properties59, (java.lang.Object) atomikosProperties61);
        atomikosProperties61.logBaseDir = "{com.atomikos.icatch.hi!=-1.0}";
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{}" + "'", str52, "{}");
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}" + "'", str72, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        org.junit.Assert.assertNull(obj73);
    }

    @Test
    public void test06747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06747");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        int int13 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties20.keys();
        int int26 = properties20.size();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getConsoleFileCount();
        int int31 = atomikosProperties29.maxActives;
        java.lang.String str32 = atomikosProperties29.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setCheckpointInterval(10000L);
        long long40 = atomikosProperties33.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties29.consoleLogLevel = atomikosLoggingLevel41;
        atomikosProperties0.set(properties20, "tmlog", (java.lang.Object) atomikosLoggingLevel41);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = atomikosProperties0.recovery;
        java.util.Properties properties45 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet46 = properties45.keySet();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery44);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objSet46);
    }

    @Test
    public void test06748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06748");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        boolean boolean12 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.checkpointInterval = 1L;
        long long15 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
    }

    @Test
    public void test06749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06749");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "hi!";
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.maxActives = (-1);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.consoleLogLevel;
        int int14 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setTransactionManagerUniqueName("{tmlog={com.atomikos.icatch.hi!=-1.0}}");
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test06750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06750");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        long long18 = atomikosProperties0.maxTimeout;
        java.lang.String str19 = atomikosProperties0.logBaseName;
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration21 = properties20.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        atomikosProperties22.setCheckpointInterval(10000L);
        long long29 = atomikosProperties22.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties22.consoleLogLevel = atomikosLoggingLevel30;
        atomikosProperties22.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties22.serialJtaTransactions = true;
        atomikosProperties22.setOutputDir("hi!");
        atomikosProperties22.setMaxActives((int) (byte) -1);
        boolean boolean40 = atomikosProperties22.isThreadedTwoPhaseCommit();
        long long41 = atomikosProperties22.maxTimeout;
        atomikosProperties22.checkpointInterval = 50;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setCheckpointInterval(10000L);
        atomikosProperties44.checkpointInterval = 100;
        atomikosProperties44.allowSubTransactions = true;
        java.lang.String str55 = atomikosProperties44.transactionManagerUniqueName;
        java.util.Properties properties56 = atomikosProperties44.asProperties();
        boolean boolean57 = atomikosProperties44.isEnableLogging();
        int int58 = atomikosProperties44.getMaxActives();
        boolean boolean59 = properties20.remove((java.lang.Object) atomikosProperties22, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        atomikosProperties60.setCheckpointInterval(10000L);
        long long67 = atomikosProperties60.maxTimeout;
        int int68 = atomikosProperties60.maxActives;
        long long69 = atomikosProperties60.getCheckpointInterval();
        atomikosProperties60.setMaxTimeout(10L);
        atomikosProperties60.forceShutdownOnVmExit = false;
        boolean boolean74 = properties20.equals((java.lang.Object) false);
        java.lang.Object obj75 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.logBaseDir = "";
        atomikosProperties76.setConsoleFileCount((int) (short) 10);
        atomikosProperties76.setCheckpointInterval(10000L);
        long long83 = atomikosProperties76.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel84 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties76.consoleLogLevel = atomikosLoggingLevel84;
        atomikosProperties76.setMaxActives((int) (byte) 1);
        int int88 = atomikosProperties76.consoleFileCount;
        atomikosProperties76.checkpointInterval = 500L;
        atomikosProperties76.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj93 = properties20.put(obj75, (java.lang.Object) atomikosProperties76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 300000L + "'", long67 == 300000L);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10000L + "'", long69 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 300000L + "'", long83 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel84 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel84.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
    }

    @Test
    public void test06751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06751");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setConsoleFileLimit((int) (byte) -1);
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        boolean boolean19 = atomikosProperties0.enableLogging;
        atomikosProperties0.setMaxActives((int) (short) 0);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = atomikosProperties0.getRecovery();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(recovery26);
    }

    @Test
    public void test06752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06752");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.logBaseDir = "";
        atomikosProperties3.setConsoleFileCount((int) (short) 10);
        long long8 = atomikosProperties3.getMaxTimeout();
        java.lang.String str9 = atomikosProperties3.getLogBaseName();
        atomikosProperties3.service = "tmlog";
        atomikosProperties3.setTransactionManagerUniqueName("{com.atomikos.icatch.hi!=-1.0}");
        boolean boolean14 = properties1.equals((java.lang.Object) "{com.atomikos.icatch.hi!=-1.0}");
        java.util.Properties properties15 = new java.util.Properties(properties1);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test06753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06753");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        long long18 = atomikosProperties0.maxTimeout;
        atomikosProperties0.outputDir = "tmlog";
        java.lang.String str21 = atomikosProperties0.logBaseDir;
        int int22 = atomikosProperties0.maxActives;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
    }

    @Test
    public void test06754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06754");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties0.isEmpty();
        java.lang.String str3 = properties0.toString();
        java.util.Properties properties4 = new java.util.Properties();
        java.lang.Object obj6 = properties4.get((java.lang.Object) 0.0d);
        java.lang.Object obj7 = properties4.clone();
        java.lang.String str8 = properties4.toString();
        java.util.Properties properties9 = new java.util.Properties(properties4);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties4.entrySet();
        java.util.Set<java.lang.String> strSet11 = properties4.stringPropertyNames();
        boolean boolean12 = properties0.containsKey((java.lang.Object) strSet11);
        java.util.Properties properties13 = new java.util.Properties(properties0);
        int int14 = properties13.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str26 = atomikosProperties15.logBaseDir;
        boolean boolean27 = atomikosProperties15.enableLogging;
        atomikosProperties15.setLogBaseDir("");
        atomikosProperties15.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties15.getConsoleLogLevel();
        long long33 = atomikosProperties15.getCheckpointInterval();
        atomikosProperties15.setThreadedTwoPhaseCommit(false);
        int int36 = atomikosProperties15.consoleFileLimit;
        atomikosProperties15.logBaseDir = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        java.lang.String str44 = atomikosProperties39.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        atomikosProperties39.consoleLogLevel = atomikosLoggingLevel45;
        boolean boolean47 = atomikosProperties39.enableLogging;
        boolean boolean48 = atomikosProperties39.allowSubTransactions;
        java.lang.Object obj49 = properties13.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) atomikosProperties39);
        java.util.Properties properties50 = atomikosProperties15.asProperties();
        atomikosProperties15.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(properties50);
    }

    @Test
    public void test06755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06755");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.outputDir = "hi!";
        java.lang.String str14 = atomikosProperties0.logBaseDir;
        int int15 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        boolean boolean18 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str19 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
    }

    @Test
    public void test06756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06756");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.lang.Object obj23 = properties1.setProperty("{com.atomikos.icatch.hi!=-1.0, =hi!}", "tm.out");
        java.util.Collection<java.lang.Object> objCollection24 = properties1.values();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objCollection24);
    }

    @Test
    public void test06757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06757");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        int int13 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties20.keys();
        int int26 = properties20.size();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getConsoleFileCount();
        int int31 = atomikosProperties29.maxActives;
        java.lang.String str32 = atomikosProperties29.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setCheckpointInterval(10000L);
        long long40 = atomikosProperties33.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties29.consoleLogLevel = atomikosLoggingLevel41;
        atomikosProperties0.set(properties20, "tmlog", (java.lang.Object) atomikosLoggingLevel41);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06758");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        boolean boolean9 = atomikosProperties0.serialJtaTransactions;
        java.lang.String str10 = atomikosProperties0.service;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test06759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06759");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.lang.String str5 = properties0.getProperty("hi!");
        java.io.InputStream inputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test06760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06760");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.String> strSet31 = properties30.stringPropertyNames();
        properties30.clear();
        java.lang.String str33 = properties30.toString();
        java.util.Properties properties34 = new java.util.Properties(properties30);
        java.util.Properties properties35 = new java.util.Properties(properties30);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        java.lang.Object obj41 = properties37.setProperty("hi!", "{}");
        java.lang.String str43 = properties37.getProperty("tmlog");
        properties37.clear();
        java.lang.Object obj45 = properties37.clone();
        int int46 = properties37.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.logBaseDir = "";
        atomikosProperties47.setConsoleFileCount((int) (short) 10);
        atomikosProperties47.setLogBaseDir("{}");
        java.lang.String str54 = atomikosProperties47.getOutputDir();
        atomikosProperties47.setLogBaseName("hi!");
        boolean boolean57 = atomikosProperties47.isAllowSubTransactions();
        boolean boolean58 = atomikosProperties47.isThreadedTwoPhaseCommit();
        boolean boolean59 = atomikosProperties47.isForceShutdownOnVmExit();
        java.lang.String str60 = atomikosProperties47.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.logBaseDir = "";
        atomikosProperties61.setConsoleFileCount((int) (short) 10);
        atomikosProperties61.setLogBaseDir("{}");
        java.util.Properties properties68 = atomikosProperties61.asProperties();
        atomikosProperties61.service = "";
        atomikosProperties61.setTransactionManagerUniqueName("{}");
        atomikosProperties61.setTransactionManagerUniqueName("{}");
        java.lang.Class<?> wildcardClass75 = atomikosProperties61.getClass();
        java.lang.Object obj76 = properties37.putIfAbsent((java.lang.Object) str60, (java.lang.Object) atomikosProperties61);
        java.util.Collection<java.lang.Object> objCollection77 = properties37.values();
        java.util.Properties properties78 = new java.util.Properties(properties37);
        java.util.Properties properties79 = new java.util.Properties();
        java.lang.Object obj81 = properties79.get((java.lang.Object) 0.0d);
        java.lang.Object obj82 = properties79.clone();
        java.lang.String str83 = properties79.toString();
        java.util.Properties properties84 = new java.util.Properties(properties79);
        java.util.Properties properties85 = new java.util.Properties();
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.util.Collection<java.lang.Object> objCollection87 = properties85.values();
        int int88 = properties85.size();
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties85.elements();
        boolean boolean90 = properties84.equals((java.lang.Object) objEnumeration89);
        properties84.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration92 = properties84.keys();
        java.util.Set<java.lang.String> strSet93 = properties84.stringPropertyNames();
        java.lang.Object obj94 = properties30.putIfAbsent((java.lang.Object) properties37, (java.lang.Object) properties84);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertEquals(obj45.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj45), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj45), "{}");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{}" + "'", str60, "{}");
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "{}" + "'", str83, "{}");
        org.junit.Assert.assertNotNull(objCollection87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(objEnumeration89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objEnumeration92);
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test06761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06761");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.util.Properties properties13 = new java.util.Properties(properties1);
        java.util.Set<java.lang.Object> objSet14 = properties1.keySet();
        java.lang.String str16 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream17, "{true=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test06762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06762");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long3 = recovery2.getRetryInterval();
        long long4 = recovery2.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setDefaultJtaTimeout((-1L));
        int int8 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties9 = atomikosProperties5.asProperties();
        boolean boolean10 = atomikosProperties5.forceShutdownOnVmExit;
        long long11 = atomikosProperties5.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long13 = atomikosProperties12.defaultJtaTimeout;
        atomikosProperties12.logBaseName = "tm.out";
        boolean boolean16 = properties0.replace((java.lang.Object) recovery2, (java.lang.Object) long11, (java.lang.Object) atomikosProperties12);
        java.lang.Object obj19 = properties0.setProperty("tm.out", "{{}={}}");
        int int20 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.enableLogging = true;
        long long25 = atomikosProperties22.getCheckpointInterval();
        atomikosProperties22.consoleFileCount = '#';
        atomikosProperties22.setForceShutdownOnVmExit(false);
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) 0.0d);
        java.lang.Object obj33 = properties30.clone();
        java.lang.Object obj36 = properties30.setProperty("{}", "{}");
        java.lang.Object obj39 = properties30.setProperty("{com.atomikos.icatch.hi!=-1.0}", "");
        java.util.Properties properties40 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.logBaseDir = "";
        atomikosProperties41.setConsoleFileCount((int) (short) 10);
        long long46 = atomikosProperties41.getMaxTimeout();
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet48 = properties47.keySet();
        atomikosProperties41.set(properties47, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str52 = atomikosProperties41.logBaseDir;
        java.lang.String str53 = atomikosProperties41.logBaseDir;
        java.lang.String str54 = atomikosProperties41.logBaseDir;
        boolean boolean55 = atomikosProperties41.isEnableLogging();
        long long56 = atomikosProperties41.checkpointInterval;
        atomikosProperties41.setOutputDir("hi!");
        long long59 = atomikosProperties41.maxTimeout;
        java.lang.String str60 = atomikosProperties41.logBaseName;
        java.util.Properties properties61 = atomikosProperties41.asProperties();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties40.keys();
        java.lang.Object obj64 = properties0.getOrDefault((java.lang.Object) false, (java.lang.Object) properties40);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 300000L + "'", long46 == 300000L);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 500L + "'", long56 == 500L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(obj64);
// flaky:         org.junit.Assert.assertEquals(obj64.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06763");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.enableLogging = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        recovery18.setMaxRetries(10);
        recovery18.setForgetOrphanedLogEntriesDelay((long) 1);
        long long23 = recovery18.getDelay();
        long long24 = recovery18.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
    }

    @Test
    public void test06764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06764");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.enableLogging = false;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) 1;
        atomikosProperties0.outputDir = "hi!";
        java.lang.String str17 = atomikosProperties0.service;
        int int18 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.checkpointInterval = (-1);
        java.lang.String str23 = atomikosProperties0.getService();
        atomikosProperties0.outputDir = "{hi!={}}";
        java.lang.String str26 = atomikosProperties0.getOutputDir();
        int int27 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{hi!={}}" + "'", str26, "{hi!={}}");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
    }

    @Test
    public void test06765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06765");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        properties0.clear();
        java.lang.Object obj5 = properties0.setProperty("{{}={}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.lang.String> strSet6 = properties0.stringPropertyNames();
        java.util.Properties properties7 = new java.util.Properties(properties0);
        java.lang.String str8 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties15.keys();
        int int21 = properties15.size();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties15.elements();
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        java.util.Properties properties24 = new java.util.Properties(properties15);
        java.util.Properties properties25 = new java.util.Properties(properties24);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}" + "'", str8, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test06766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06766");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        java.lang.String str12 = atomikosProperties0.service;
        atomikosProperties0.setMaxTimeout((long) 35);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setOutputDir("{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        boolean boolean18 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06767");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        boolean boolean31 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setRetryInterval((long) (-1));
        java.lang.Object obj38 = properties15.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        java.util.Properties properties39 = new java.util.Properties(properties15);
        java.util.Properties properties40 = new java.util.Properties(properties15);
        java.util.Properties properties41 = new java.util.Properties(properties40);
        properties41.clear();
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.save(outputStream43, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj38);
    }

    @Test
    public void test06768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.allowSubTransactions = false;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        boolean boolean23 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test06769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06769");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        atomikosProperties0.consoleFileLimit = (short) 0;
        atomikosProperties0.setMaxTimeout((long) '4');
        boolean boolean9 = atomikosProperties0.serialJtaTransactions;
        int int10 = atomikosProperties0.consoleFileCount;
        java.lang.String str11 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
    }

    @Test
    public void test06770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06770");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileName("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.recovery;
        boolean boolean7 = atomikosProperties0.serialJtaTransactions;
        long long8 = atomikosProperties0.maxTimeout;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        atomikosProperties11.setLogBaseDir("{}");
        java.util.Properties properties18 = atomikosProperties11.asProperties();
        java.util.Set<java.lang.String> strSet19 = properties18.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = null;
        atomikosProperties20.consoleLogLevel = atomikosLoggingLevel23;
        atomikosProperties20.outputDir = "";
        int int27 = atomikosProperties20.maxActives;
        boolean boolean28 = atomikosProperties20.isThreadedTwoPhaseCommit();
        atomikosProperties20.consoleFileLimit = (short) 10;
        java.util.Properties properties31 = atomikosProperties20.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.enableLogging = true;
        long long36 = atomikosProperties33.getCheckpointInterval();
        java.lang.String str37 = atomikosProperties33.getService();
        atomikosProperties33.forceShutdownOnVmExit = false;
        java.lang.Object obj40 = properties18.replace((java.lang.Object) objEnumeration32, (java.lang.Object) atomikosProperties33);
        long long41 = atomikosProperties33.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = null;
        atomikosProperties42.consoleLogLevel = atomikosLoggingLevel45;
        atomikosProperties42.outputDir = "";
        java.util.Properties properties49 = atomikosProperties42.asProperties();
        long long50 = atomikosProperties42.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.logBaseDir = "";
        atomikosProperties51.setConsoleFileCount((int) (short) 10);
        java.lang.String str56 = atomikosProperties51.logBaseName;
        atomikosProperties51.outputDir = "";
        java.util.Properties properties59 = atomikosProperties51.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        long long65 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet67 = properties66.keySet();
        atomikosProperties60.set(properties66, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj73 = properties66.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.logBaseDir = "";
        atomikosProperties75.setConsoleFileCount((int) (short) 10);
        atomikosProperties75.setLogBaseDir("{}");
        java.lang.String str82 = atomikosProperties75.getOutputDir();
        atomikosProperties51.set(properties66, "{}", (java.lang.Object) atomikosProperties75);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel84 = atomikosProperties51.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel85 = atomikosProperties51.consoleLogLevel;
        atomikosProperties42.consoleLogLevel = atomikosLoggingLevel85;
        atomikosProperties33.setConsoleLogLevel(atomikosLoggingLevel85);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel85);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 500L + "'", long36 == 500L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 500L + "'", long50 == 500L);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel84 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel84.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel85 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel85.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06771");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        boolean boolean41 = atomikosProperties29.enableLogging;
        int int42 = atomikosProperties29.maxActives;
        boolean boolean43 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.maxActives = 35;
        java.lang.Object obj54 = properties24.getOrDefault((java.lang.Object) boolean43, (java.lang.Object) 35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        java.lang.String str60 = atomikosProperties55.logBaseName;
        java.lang.String str61 = atomikosProperties55.logBaseDir;
        java.lang.String str62 = atomikosProperties55.getOutputDir();
        java.util.Properties properties63 = atomikosProperties55.asProperties();
        java.util.Collection<java.lang.Object> objCollection64 = properties63.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties63.entrySet();
        java.lang.String str67 = properties63.getProperty("{com.atomikos.icatch.hi!=-1.0}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((-1L));
        int int71 = atomikosProperties68.getConsoleFileLimit();
        java.util.Properties properties72 = atomikosProperties68.asProperties();
        boolean boolean73 = atomikosProperties68.forceShutdownOnVmExit;
        boolean boolean74 = atomikosProperties68.forceShutdownOnVmExit;
        atomikosProperties68.setOutputDir("tmlog");
        atomikosProperties68.setCheckpointInterval((long) (-1));
        java.util.Properties properties79 = atomikosProperties68.asProperties();
        boolean boolean80 = properties24.remove((java.lang.Object) "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) atomikosProperties68);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties24.keys();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 35 + "'", obj54, 35);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEnumeration81);
    }

    @Test
    public void test06772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06772");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        boolean boolean31 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setRetryInterval((long) (-1));
        java.lang.Object obj38 = properties15.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = null;
        atomikosProperties39.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties39.outputDir = "";
        int int46 = atomikosProperties39.maxActives;
        boolean boolean47 = atomikosProperties39.isThreadedTwoPhaseCommit();
        atomikosProperties39.consoleFileLimit = (short) 10;
        java.util.Properties properties50 = atomikosProperties39.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.keys();
        boolean boolean52 = properties15.contains((java.lang.Object) properties50);
        java.util.Set<java.lang.String> strSet53 = properties50.stringPropertyNames();
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSet53);
    }

    @Test
    public void test06773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06773");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.forceShutdownOnVmExit = true;
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.enableLogging = true;
        long long19 = atomikosProperties16.getCheckpointInterval();
        boolean boolean21 = properties14.remove((java.lang.Object) long19, (java.lang.Object) (byte) 100);
        boolean boolean23 = properties14.equals((java.lang.Object) (short) 1);
        java.lang.Object obj26 = properties14.setProperty("{}", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        long long33 = atomikosProperties28.getMaxTimeout();
        atomikosProperties28.service = "";
        java.lang.String str36 = atomikosProperties28.logBaseDir;
        boolean boolean37 = atomikosProperties28.threadedTwoPhaseCommit;
        java.lang.String str38 = atomikosProperties28.getService();
        atomikosProperties28.setOutputDir("tmlog");
        atomikosProperties28.setEnableLogging(false);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean45 = atomikosProperties28.isSerialJtaTransactions();
        atomikosProperties28.maxTimeout = 2;
        atomikosProperties0.set(properties14, "tmlog", (java.lang.Object) 2);
        java.lang.String str49 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 500L + "'", long19 == 500L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test06774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06774");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.consoleFileCount = 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getConsoleFileCount();
        int int12 = atomikosProperties10.maxActives;
        java.lang.String str13 = atomikosProperties10.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setCheckpointInterval(10000L);
        long long21 = atomikosProperties14.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties14.getConsoleLogLevel();
        atomikosProperties10.consoleLogLevel = atomikosLoggingLevel22;
        java.util.Properties properties24 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str29 = atomikosProperties0.service;
        atomikosProperties0.setDefaultJtaTimeout(52L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test06775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06775");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.lang.String str9 = atomikosProperties0.getOutputDir();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.maxActives = (short) 1;
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.service = "tmlog";
        java.lang.String str17 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test06776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06776");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        long long15 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setMaxRetries(5);
        recovery0.forgetOrphanedLogEntriesDelay = 5L;
        long long20 = recovery0.delay;
        recovery0.forgetOrphanedLogEntriesDelay = 0L;
        recovery0.setMaxRetries((int) (short) 0);
        recovery0.setForgetOrphanedLogEntriesDelay(35L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test06777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06777");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setConsoleFileCount((int) (short) 10);
        atomikosProperties2.setCheckpointInterval(10000L);
        long long9 = atomikosProperties2.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties2.consoleLogLevel = atomikosLoggingLevel10;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel10;
        java.lang.String str13 = atomikosProperties0.getService();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        java.lang.String str17 = atomikosProperties0.getOutputDir();
        long long18 = atomikosProperties0.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties0.recovery;
        long long20 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertNotNull(recovery19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 500L + "'", long20 == 500L);
    }

    @Test
    public void test06778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06778");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties10.load(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test06779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06779");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test06780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06780");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel15;
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean18 = atomikosProperties0.serialJtaTransactions;
        java.lang.String str19 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test06781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06781");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = null;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel9;
        atomikosProperties6.outputDir = "";
        int int13 = atomikosProperties6.maxActives;
        boolean boolean14 = atomikosProperties6.isThreadedTwoPhaseCommit();
        atomikosProperties6.consoleFileLimit = (short) 10;
        java.util.Properties properties17 = atomikosProperties6.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        java.lang.String str20 = properties17.getProperty("{true=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        java.lang.String str27 = atomikosProperties22.logBaseName;
        java.lang.String str28 = atomikosProperties22.logBaseDir;
        long long29 = atomikosProperties22.defaultJtaTimeout;
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties22.getRecovery();
        boolean boolean32 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties0.set(properties17, "{true=10000}", (java.lang.Object) boolean32);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.maxTimeout = 5L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(recovery31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test06782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06782");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        int int13 = atomikosProperties0.maxActives;
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.consoleFileLimit = (short) 0;
        atomikosProperties0.setLogBaseName("{{}={}}");
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        atomikosProperties0.defaultJtaTimeout = (byte) 10;
        long long23 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
    }

    @Test
    public void test06783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06783");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.lang.Object obj9 = properties1.clone();
        int int10 = properties1.size();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream13, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=INFO, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=35, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test06784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06784");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        int int7 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.checkpointInterval = 'a';
        atomikosProperties0.consoleFileName = "{}";
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test06785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06785");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setLogBaseDir("{}");
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet14 = properties13.stringPropertyNames();
        boolean boolean15 = properties4.containsValue((java.lang.Object) properties13);
        java.lang.Object obj16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = properties13.containsValue(obj16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06786");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.lang.Object obj13 = properties9.setProperty("hi!", "{}");
        java.lang.String str15 = properties9.getProperty("tmlog");
        properties9.clear();
        java.util.Set<java.lang.String> strSet17 = properties9.stringPropertyNames();
        java.util.Set<java.lang.String> strSet18 = properties9.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        atomikosProperties19.setLogBaseDir("{}");
        java.lang.String str26 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("hi!");
        boolean boolean29 = atomikosProperties19.isAllowSubTransactions();
        boolean boolean30 = atomikosProperties19.isThreadedTwoPhaseCommit();
        boolean boolean31 = atomikosProperties19.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties19.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery33 = atomikosProperties19.recovery;
        recovery33.setMaxRetries(10);
        int int36 = recovery33.maxRetries;
        recovery33.setForgetOrphanedLogEntriesDelay((long) (byte) -1);
        java.lang.Object obj39 = properties3.replace((java.lang.Object) strSet18, (java.lang.Object) recovery33);
        recovery33.setMaxRetries((-1));
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertNotNull(recovery33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test06787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06787");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Set<java.lang.String> strSet32 = properties30.stringPropertyNames();
        boolean boolean33 = properties30.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setDefaultJtaTimeout((-1L));
        long long38 = atomikosProperties35.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int40 = atomikosProperties39.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.logBaseDir = "";
        atomikosProperties41.setConsoleFileCount((int) (short) 10);
        atomikosProperties41.setCheckpointInterval(10000L);
        long long48 = atomikosProperties41.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel49 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties41.consoleLogLevel = atomikosLoggingLevel49;
        atomikosProperties39.consoleLogLevel = atomikosLoggingLevel49;
        atomikosProperties35.consoleLogLevel = atomikosLoggingLevel49;
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Properties properties56 = new java.util.Properties();
        java.lang.Object obj58 = properties56.get((java.lang.Object) 0.0d);
        java.lang.Object obj59 = properties56.clone();
        java.lang.String str60 = properties56.toString();
        boolean boolean63 = properties56.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj64 = properties54.replace((java.lang.Object) 10.0d, (java.lang.Object) properties56);
        java.util.Properties properties65 = new java.util.Properties(properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setDefaultJtaTimeout((-1L));
        int int70 = atomikosProperties67.getConsoleFileLimit();
        java.util.Properties properties71 = atomikosProperties67.asProperties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        atomikosProperties35.set(properties65, "hi!", (java.lang.Object) properties71);
        atomikosProperties35.setConsoleFileCount((int) '4');
        atomikosProperties35.enableLogging = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setDefaultJtaTimeout((-1L));
        int int81 = atomikosProperties78.getConsoleFileLimit();
        java.util.Properties properties82 = atomikosProperties78.asProperties();
        boolean boolean83 = atomikosProperties78.forceShutdownOnVmExit;
        boolean boolean84 = atomikosProperties78.forceShutdownOnVmExit;
        atomikosProperties78.setForceShutdownOnVmExit(false);
        boolean boolean87 = properties30.remove((java.lang.Object) atomikosProperties35, (java.lang.Object) atomikosProperties78);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery88 = atomikosProperties78.getRecovery();
        long long89 = atomikosProperties78.checkpointInterval;
        atomikosProperties78.setOutputDir("{tmlog={com.atomikos.icatch.hi!=-1.0}}");
        java.lang.String str92 = atomikosProperties78.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 500L + "'", long38 == 500L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel49 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel49.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{}" + "'", str60, "{}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(recovery88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 500L + "'", long89 == 500L);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test06788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06788");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        boolean boolean10 = atomikosProperties0.enableLogging;
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06789");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        atomikosProperties6.set(properties12, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str17 = atomikosProperties6.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery18.maxRetries = (-1);
        recovery18.setDelay((long) (short) 1);
        long long23 = recovery18.getForgetOrphanedLogEntriesDelay();
        long long24 = recovery18.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj25 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) long24);
        atomikosProperties6.setForceShutdownOnVmExit(false);
        atomikosProperties6.forceShutdownOnVmExit = true;
        java.util.Properties properties30 = atomikosProperties6.asProperties();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 86400000L + "'", long23 == 86400000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 86400000L + "'", long24 == 86400000L);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(properties30);
    }

    @Test
    public void test06790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06790");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval(300000L);
        atomikosProperties0.setDefaultJtaTimeout(35L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNotNull(recovery15);
    }

    @Test
    public void test06791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06791");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay(500L);
        long long12 = recovery0.retryInterval;
        recovery0.maxRetries = 97;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test06792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06792");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setConsoleFileLimit((int) (byte) -1);
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties0.setMaxTimeout(86400000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
    }

    @Test
    public void test06793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06793");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        boolean boolean10 = atomikosProperties0.enableLogging;
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test06794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06794");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.get((java.lang.Object) 0.0d);
        java.lang.Object obj11 = properties8.clone();
        java.lang.String str12 = properties8.toString();
        boolean boolean15 = properties8.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj16 = properties6.replace((java.lang.Object) 10.0d, (java.lang.Object) properties8);
        java.lang.String str17 = properties8.toString();
        java.util.Properties properties18 = new java.util.Properties(properties8);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        boolean boolean22 = properties20.isEmpty();
        boolean boolean23 = properties8.equals((java.lang.Object) boolean22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Collection<java.lang.Object> objCollection26 = properties25.values();
        boolean boolean27 = properties25.isEmpty();
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        java.lang.String str30 = properties25.getProperty("");
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        java.lang.String str35 = properties31.toString();
        boolean boolean38 = properties31.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj39 = null;
        boolean boolean40 = properties31.equals(obj39);
        java.util.Set<java.lang.Object> objSet41 = properties31.keySet();
        boolean boolean42 = properties25.contains((java.lang.Object) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        atomikosProperties43.setCheckpointInterval(10000L);
        long long50 = atomikosProperties43.maxTimeout;
        int int51 = atomikosProperties43.maxActives;
        boolean boolean52 = properties0.replace((java.lang.Object) boolean22, (java.lang.Object) properties31, (java.lang.Object) int51);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Collection<java.lang.Object> objCollection55 = properties53.values();
        int int56 = properties53.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery57 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery57.maxRetries = (-1);
        recovery57.setDelay((long) (short) 0);
        recovery57.maxRetries = 0;
        boolean boolean65 = properties53.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        boolean boolean66 = properties31.contains((java.lang.Object) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.enableLogging = true;
        long long70 = atomikosProperties67.getCheckpointInterval();
        java.lang.String str71 = atomikosProperties67.getService();
        java.lang.String str72 = atomikosProperties67.logBaseDir;
        atomikosProperties67.setEnableLogging(false);
        atomikosProperties67.consoleFileCount = 0;
        long long77 = atomikosProperties67.getMaxTimeout();
        int int78 = atomikosProperties67.consoleFileLimit;
        java.util.Properties properties79 = atomikosProperties67.asProperties();
        boolean boolean80 = properties31.containsKey((java.lang.Object) atomikosProperties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery81 = atomikosProperties67.getRecovery();
        recovery81.setRetryInterval((long) 10);
        recovery81.setMaxRetries((-1));
        long long86 = recovery81.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 300000L + "'", long50 == 300000L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 300000L + "'", long77 == 300000L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(recovery81);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 86400000L + "'", long86 == 86400000L);
    }

    @Test
    public void test06795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06795");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.lang.Object obj47 = properties40.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long49 = atomikosProperties48.defaultJtaTimeout;
        atomikosProperties48.logBaseName = "tm.out";
        boolean boolean52 = properties40.containsKey((java.lang.Object) atomikosProperties48);
        atomikosProperties48.setCheckpointInterval((long) 97);
        atomikosProperties48.serialJtaTransactions = true;
        long long57 = atomikosProperties48.getDefaultJtaTimeout();
        boolean boolean58 = atomikosProperties48.allowSubTransactions;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10000L + "'", long57 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test06796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06796");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Set<java.lang.Object> objSet10 = properties0.keySet();
        java.util.Properties properties11 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.logBaseDir = "";
        atomikosProperties12.setConsoleFileCount((int) (short) 10);
        java.lang.String str17 = atomikosProperties12.logBaseName;
        atomikosProperties12.setAllowSubTransactions(false);
        atomikosProperties12.setConsoleFileName("hi!");
        boolean boolean22 = properties0.contains((java.lang.Object) atomikosProperties12);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06797");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileName("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.recovery;
        recovery6.maxRetries = (byte) 0;
        long long9 = recovery6.forgetOrphanedLogEntriesDelay;
        long long10 = recovery6.getDelay();
        long long11 = recovery6.getForgetOrphanedLogEntriesDelay();
        long long12 = recovery6.getDelay();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 86400000L + "'", long9 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test06798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06798");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties0.recovery;
        long long9 = recovery8.forgetOrphanedLogEntriesDelay;
        long long10 = recovery8.retryInterval;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 86400000L + "'", long9 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test06799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06799");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties16.keys();
        int int22 = properties16.size();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties16.elements();
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery25.maxRetries = (-1);
        recovery25.setDelay((long) (short) 0);
        long long30 = recovery25.forgetOrphanedLogEntriesDelay;
        recovery25.retryInterval = 500L;
        recovery25.retryInterval = '4';
        long long35 = recovery25.getRetryInterval();
        long long36 = recovery25.getForgetOrphanedLogEntriesDelay();
        recovery25.retryInterval = 100L;
        recovery25.setDelay((long) ' ');
        long long41 = recovery25.delay;
        java.lang.Object obj42 = properties9.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) recovery25);
        int int43 = recovery25.getMaxRetries();
        recovery25.forgetOrphanedLogEntriesDelay = 2L;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 86400000L + "'", long30 == 86400000L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 52L + "'", long35 == 52L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 86400000L + "'", long36 == 86400000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 32L + "'", long41 == 32L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test06800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06800");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        java.lang.Object obj12 = properties1.clone();
        java.lang.String str14 = properties1.getProperty("{{}={}}");
        java.util.Set<java.lang.Object> objSet15 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int17 = atomikosProperties16.getMaxActives();
        atomikosProperties16.serialJtaTransactions = true;
        java.lang.String str20 = atomikosProperties16.transactionManagerUniqueName;
        long long21 = atomikosProperties16.getMaxTimeout();
        java.lang.String str22 = atomikosProperties16.getLogBaseName();
        boolean boolean23 = properties1.contains((java.lang.Object) str22);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test06801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06801");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        atomikosProperties0.logBaseDir = "tm.out";
        atomikosProperties0.maxActives = (short) 0;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.hi!=-1.0, =hi!}");
    }

    @Test
    public void test06802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06802");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.consoleFileCount = 100;
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.enableLogging = true;
        java.lang.String str10 = atomikosProperties0.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        atomikosProperties11.set(properties17, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str22 = atomikosProperties11.logBaseDir;
        boolean boolean23 = atomikosProperties11.enableLogging;
        int int24 = atomikosProperties11.maxActives;
        boolean boolean25 = atomikosProperties11.isForceShutdownOnVmExit();
        long long26 = atomikosProperties11.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        java.lang.String str32 = atomikosProperties27.logBaseName;
        java.lang.String str33 = atomikosProperties27.logBaseDir;
        int int34 = atomikosProperties27.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties27.getConsoleLogLevel();
        atomikosProperties11.consoleLogLevel = atomikosLoggingLevel35;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel35;
        int int38 = atomikosProperties0.maxActives;
        long long39 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.checkpointInterval = 97;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
    }

    @Test
    public void test06803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06803");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.logBaseDir = "";
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        java.lang.String str12 = atomikosProperties7.logBaseName;
        atomikosProperties7.outputDir = "";
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.String> strSet16 = properties15.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.elements();
        java.util.Set<java.lang.Object> objSet18 = properties15.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties20 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.logBaseDir = "";
        atomikosProperties21.setConsoleFileCount((int) (short) 10);
        long long26 = atomikosProperties21.getMaxTimeout();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet28 = properties27.keySet();
        atomikosProperties21.set(properties27, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str32 = atomikosProperties21.service;
        java.lang.String str33 = atomikosProperties21.outputDir;
        java.lang.String str34 = atomikosProperties21.outputDir;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties21.getConsoleLogLevel();
        java.lang.Object obj36 = properties15.get((java.lang.Object) atomikosProperties21);
        atomikosProperties21.allowSubTransactions = false;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test06804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06804");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval(32L);
        recovery0.setRetryInterval(10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 86400000L + "'", long6 == 86400000L);
    }

    @Test
    public void test06805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06805");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        recovery9.maxRetries = (short) 10;
        long long12 = recovery9.getDelay();
        recovery9.maxRetries = 'a';
        recovery9.forgetOrphanedLogEntriesDelay = (byte) -1;
        recovery9.setMaxRetries((int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test06806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06806");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.service = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        atomikosProperties6.set(properties12, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj19 = properties12.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((-1L));
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.get((java.lang.Object) 0.0d);
        java.lang.Object obj26 = properties23.clone();
        boolean boolean28 = properties12.replace((java.lang.Object) (-1L), obj26, (java.lang.Object) 100.0d);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties30.clear();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties30.elements();
        java.lang.String str35 = properties30.getProperty("");
        java.util.Properties properties36 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int39 = atomikosProperties38.getConsoleFileCount();
        int int40 = atomikosProperties38.maxActives;
        atomikosProperties38.setEnableLogging(true);
        boolean boolean43 = atomikosProperties38.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties38.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.logBaseDir = "";
        atomikosProperties45.setConsoleFileCount((int) (short) 10);
        long long50 = atomikosProperties45.getMaxTimeout();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet52 = properties51.keySet();
        atomikosProperties45.set(properties51, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str56 = atomikosProperties45.logBaseDir;
        boolean boolean57 = atomikosProperties45.enableLogging;
        java.lang.Object obj58 = properties36.putIfAbsent((java.lang.Object) atomikosLoggingLevel44, (java.lang.Object) atomikosProperties45);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel44);
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.tmlog=-1}";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 300000L + "'", long50 == 300000L);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test06807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06807");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        atomikosProperties0.forceShutdownOnVmExit = false;
        boolean boolean6 = atomikosProperties0.serialJtaTransactions;
        boolean boolean7 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06808");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.outputDir = "{true=10000}";
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        int int13 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.allowSubTransactions = true;
        java.lang.String str16 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test06809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06809");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.checkpointInterval = 35;
        boolean boolean22 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.allowSubTransactions = true;
        int int27 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test06810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06810");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        java.lang.Object obj9 = properties0.setProperty("{com.atomikos.icatch.hi!=-1.0}", "");
        java.util.Properties properties10 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        atomikosProperties11.set(properties17, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str22 = atomikosProperties11.logBaseDir;
        java.lang.String str23 = atomikosProperties11.logBaseDir;
        java.lang.String str24 = atomikosProperties11.logBaseDir;
        boolean boolean25 = atomikosProperties11.isEnableLogging();
        long long26 = atomikosProperties11.checkpointInterval;
        atomikosProperties11.setOutputDir("hi!");
        long long29 = atomikosProperties11.maxTimeout;
        java.lang.String str30 = atomikosProperties11.logBaseName;
        java.util.Properties properties31 = atomikosProperties11.asProperties();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Enumeration<?> wildcardEnumeration33 = properties10.propertyNames();
        java.util.Properties properties34 = new java.util.Properties(properties10);
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.logBaseDir = "";
        atomikosProperties36.setConsoleFileCount((int) (short) 10);
        long long41 = atomikosProperties36.getMaxTimeout();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet43 = properties42.keySet();
        atomikosProperties36.set(properties42, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str47 = atomikosProperties36.service;
        java.lang.String str48 = atomikosProperties36.outputDir;
        atomikosProperties36.setConsoleFileLimit(35);
        boolean boolean51 = atomikosProperties36.isForceShutdownOnVmExit();
        int int52 = atomikosProperties36.maxActives;
        java.lang.Object obj53 = properties34.remove((java.lang.Object) atomikosProperties36);
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Collection<java.lang.Object> objCollection56 = properties54.values();
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.keys();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(wildcardEnumeration33);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objCollection56);
        org.junit.Assert.assertNotNull(objEnumeration57);
    }

    @Test
    public void test06811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06811");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.logBaseDir = "{}";
        java.util.Properties properties22 = atomikosProperties0.asProperties();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        int int26 = properties23.size();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties23.elements();
        java.util.Properties properties28 = new java.util.Properties(properties23);
        java.lang.String str30 = properties28.getProperty("{{}=tmlog}");
        java.util.Set<java.lang.String> strSet31 = properties28.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration32 = properties28.propertyNames();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((-1L));
        long long37 = atomikosProperties34.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int39 = atomikosProperties38.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        atomikosProperties40.setCheckpointInterval(10000L);
        long long47 = atomikosProperties40.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties40.consoleLogLevel = atomikosLoggingLevel48;
        atomikosProperties38.consoleLogLevel = atomikosLoggingLevel48;
        atomikosProperties34.consoleLogLevel = atomikosLoggingLevel48;
        atomikosProperties34.forceShutdownOnVmExit = false;
        atomikosProperties34.checkpointInterval = (short) 1;
        atomikosProperties34.consoleFileCount = 0;
        atomikosProperties34.maxActives = (short) 1;
        atomikosProperties34.setTransactionManagerUniqueName("");
        java.util.Properties properties62 = atomikosProperties34.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties62.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties62.keys();
        java.lang.Object obj65 = properties28.remove((java.lang.Object) objEnumeration64);
        java.io.InputStream inputStream66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.load(inputStream66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(obj65);
    }

    @Test
    public void test06812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06812");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = true;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives((int) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(properties8);
    }

    @Test
    public void test06813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06813");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        atomikosProperties25.setCheckpointInterval(10000L);
        long long32 = atomikosProperties25.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties25.consoleLogLevel = atomikosLoggingLevel33;
        atomikosProperties25.consoleFileLimit = (byte) 1;
        boolean boolean37 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties25.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        java.lang.String str44 = atomikosProperties39.logBaseName;
        java.lang.String str45 = atomikosProperties39.logBaseDir;
        java.lang.String str46 = atomikosProperties39.getOutputDir();
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        java.lang.String str49 = properties47.toString();
        java.lang.Object obj50 = properties15.put((java.lang.Object) str38, (java.lang.Object) properties47);
        java.lang.Object obj53 = properties15.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=INFO, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=35, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{}={}}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objCollection48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str49, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test06814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06814");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.setOutputDir("tm.out");
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06815");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        int int6 = atomikosProperties4.maxActives;
        java.lang.String str7 = atomikosProperties4.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel16;
        java.util.Properties properties18 = atomikosProperties4.asProperties();
        java.lang.String str19 = atomikosProperties4.getConsoleFileName();
        boolean boolean20 = properties0.containsValue((java.lang.Object) atomikosProperties4);
        atomikosProperties4.setDefaultJtaTimeout(300000L);
        java.lang.String str23 = atomikosProperties4.getService();
        int int24 = atomikosProperties4.getConsoleFileLimit();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test06816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06816");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int8 = atomikosProperties7.getConsoleFileCount();
        int int9 = atomikosProperties7.maxActives;
        java.lang.String str10 = atomikosProperties7.getService();
        boolean boolean11 = properties0.remove((java.lang.Object) atomikosProperties2, (java.lang.Object) atomikosProperties7);
        boolean boolean12 = atomikosProperties2.enableLogging;
        atomikosProperties2.setDefaultJtaTimeout((long) 22);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test06817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06817");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        atomikosProperties0.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        int int14 = recovery13.getMaxRetries();
        recovery13.setDelay(1L);
        recovery13.setRetryInterval((long) 22);
        long long19 = recovery13.retryInterval;
        recovery13.setDelay((long) 50);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 22L + "'", long19 == 22L);
    }

    @Test
    public void test06818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06818");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test06819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06819");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        long long4 = recovery0.getDelay();
        long long5 = recovery0.delay;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery0.maxRetries = '4';
        int int10 = recovery0.getMaxRetries();
        long long11 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setForgetOrphanedLogEntriesDelay(300000L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test06820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06820");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "hi!";
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str11 = atomikosProperties0.service;
        atomikosProperties0.setConsoleFileCount((int) (short) 0);
        java.lang.String str14 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(recovery15);
    }

    @Test
    public void test06821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06821");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int10 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }

    @Test
    public void test06822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06822");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.String str13 = properties9.toString();
        boolean boolean16 = properties9.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj17 = properties7.replace((java.lang.Object) 10.0d, (java.lang.Object) properties9);
        java.lang.String str18 = properties9.toString();
        java.util.Properties properties19 = new java.util.Properties(properties9);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties0.entrySet();
        java.util.Properties properties22 = new java.util.Properties(properties0);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.get((java.lang.Object) 0.0d);
        java.lang.Object obj26 = properties23.clone();
        java.lang.String str27 = properties23.toString();
        boolean boolean30 = properties23.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj31 = null;
        boolean boolean32 = properties23.equals(obj31);
        java.util.Set<java.lang.Object> objSet33 = properties23.keySet();
        java.util.Properties properties34 = new java.util.Properties(properties23);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Collection<java.lang.Object> objCollection37 = properties36.values();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Collection<java.lang.Object> objCollection40 = properties38.values();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        boolean boolean42 = properties36.contains((java.lang.Object) properties38);
        boolean boolean43 = properties36.isEmpty();
        boolean boolean44 = properties36.isEmpty();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        boolean boolean48 = properties46.isEmpty();
        java.util.Set<java.lang.String> strSet49 = properties46.stringPropertyNames();
        java.lang.String str51 = properties46.getProperty("");
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.get((java.lang.Object) 0.0d);
        java.lang.Object obj55 = properties52.clone();
        java.lang.String str56 = properties52.toString();
        boolean boolean59 = properties52.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj60 = null;
        boolean boolean61 = properties52.equals(obj60);
        java.util.Set<java.lang.Object> objSet62 = properties52.keySet();
        boolean boolean63 = properties46.contains((java.lang.Object) properties52);
        java.lang.Object obj64 = properties36.remove((java.lang.Object) properties52);
        java.util.Properties properties65 = new java.util.Properties(properties52);
        java.util.Properties properties66 = new java.util.Properties(properties52);
        java.util.Properties properties67 = new java.util.Properties(properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.logBaseDir = "";
        boolean boolean71 = atomikosProperties68.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery72 = atomikosProperties68.getRecovery();
        int int73 = recovery72.getMaxRetries();
        int int74 = recovery72.maxRetries;
        recovery72.delay = '4';
        java.lang.Object obj77 = properties23.getOrDefault((java.lang.Object) properties67, (java.lang.Object) recovery72);
        recovery72.setDelay((long) (byte) -1);
        boolean boolean80 = properties0.contains((java.lang.Object) (byte) -1);
        java.util.Properties properties81 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(recovery72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 5 + "'", int73 == 5);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06823");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseName = "tmlog";
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.allowSubTransactions = false;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        int int12 = properties11.size();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 19 + "'", int12 == 19);
    }

    @Test
    public void test06824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06824");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str7 = atomikosProperties0.service;
        long long8 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test06825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06825");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = atomikosProperties0.getConsoleFileLimit();
        long long10 = atomikosProperties0.maxTimeout;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06826");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean18 = atomikosProperties0.serialJtaTransactions;
        java.lang.String str19 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test06827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06827");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval(10L);
        java.lang.String str16 = atomikosProperties0.logBaseName;
        java.lang.String str17 = atomikosProperties0.service;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06828");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        recovery0.maxRetries = 5;
        recovery0.delay = 52;
    }

    @Test
    public void test06829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06829");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.lang.String str6 = properties1.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties1.entrySet();
        java.lang.Object obj8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = properties1.get(obj8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objEntrySet7);
    }

    @Test
    public void test06830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06830");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.checkpointInterval = (byte) 100;
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str10 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        int int13 = atomikosProperties0.maxActives;
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test06831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06831");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        long long15 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setRetryInterval(300000L);
        long long18 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setMaxRetries((int) (short) 10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 52L + "'", long18 == 52L);
    }

    @Test
    public void test06832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06832");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties3 = atomikosProperties0.asProperties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.checkpointInterval = 0;
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        boolean boolean11 = atomikosProperties5.isThreadedTwoPhaseCommit();
        long long12 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean13 = atomikosProperties5.isSerialJtaTransactions();
        atomikosProperties5.maxActives = (short) 10;
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        boolean boolean18 = properties16.isEmpty();
        java.lang.String str19 = properties16.toString();
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.get((java.lang.Object) 0.0d);
        java.lang.Object obj23 = properties20.clone();
        java.lang.String str24 = properties20.toString();
        java.util.Properties properties25 = new java.util.Properties(properties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties20.entrySet();
        java.util.Set<java.lang.String> strSet27 = properties20.stringPropertyNames();
        boolean boolean28 = properties16.containsKey((java.lang.Object) strSet27);
        java.util.Properties properties29 = new java.util.Properties(properties16);
        int int30 = properties29.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        long long37 = atomikosProperties32.getMaxTimeout();
        java.lang.String str38 = atomikosProperties32.getLogBaseName();
        atomikosProperties5.set(properties29, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) str38);
        boolean boolean40 = properties3.contains((java.lang.Object) atomikosProperties5);
        java.io.Reader reader41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(reader41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertNotNull(properties3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{}" + "'", str19, "{}");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test06833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06833");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        atomikosProperties25.setCheckpointInterval(10000L);
        long long32 = atomikosProperties25.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties25.consoleLogLevel = atomikosLoggingLevel33;
        atomikosProperties25.consoleFileLimit = (byte) 1;
        boolean boolean37 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties25.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        java.lang.String str44 = atomikosProperties39.logBaseName;
        java.lang.String str45 = atomikosProperties39.logBaseDir;
        java.lang.String str46 = atomikosProperties39.getOutputDir();
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        java.lang.String str49 = properties47.toString();
        java.lang.Object obj50 = properties15.put((java.lang.Object) str38, (java.lang.Object) properties47);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.enableLogging = true;
        long long57 = atomikosProperties54.getCheckpointInterval();
        boolean boolean59 = properties52.remove((java.lang.Object) long57, (java.lang.Object) (byte) 100);
        boolean boolean61 = properties52.equals((java.lang.Object) (short) 1);
        java.lang.Object obj64 = properties52.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties52.keys();
        boolean boolean66 = properties47.contains((java.lang.Object) objEnumeration65);
        java.util.Properties properties67 = new java.util.Properties(properties47);
        java.lang.Object obj70 = properties47.setProperty("", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties47.entrySet();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objCollection48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str49, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objEntrySet71);
    }

    @Test
    public void test06834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06834");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.service = "{{}={}}";
        atomikosProperties0.serialJtaTransactions = false;
        boolean boolean15 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.maxTimeout = 52;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test06835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06835");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        boolean boolean15 = properties8.remove((java.lang.Object) long13, (java.lang.Object) (byte) 100);
        java.lang.String str16 = properties8.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        atomikosProperties33.set(properties39, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj46 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) 0.0d);
        java.lang.Object obj53 = properties50.clone();
        boolean boolean55 = properties39.replace((java.lang.Object) (-1L), obj53, (java.lang.Object) 100.0d);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        long long65 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet67 = properties66.keySet();
        atomikosProperties60.set(properties66, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str71 = atomikosProperties60.logBaseDir;
        java.lang.String str72 = atomikosProperties60.logBaseDir;
        java.util.Properties properties73 = atomikosProperties60.asProperties();
        java.lang.Object obj74 = properties28.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60);
        boolean boolean75 = properties23.contains((java.lang.Object) atomikosProperties60);
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties23);
        boolean boolean77 = properties0.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel6, (java.lang.Object) boolean76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties0.entrySet();
        java.lang.String str80 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int82 = atomikosProperties81.getMaxActives();
        atomikosProperties81.serialJtaTransactions = true;
        java.util.Properties properties85 = atomikosProperties81.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties85.elements();
        java.lang.Object obj87 = properties0.get((java.lang.Object) properties85);
        java.io.InputStream inputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(inputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 50 + "'", int82 == 50);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj87);
    }

    @Test
    public void test06836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06836");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06837");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties6.entrySet();
        java.util.Properties properties28 = new java.util.Properties(properties6);
        java.util.Enumeration<?> wildcardEnumeration29 = properties6.propertyNames();
        java.lang.Class<?> wildcardClass30 = properties6.getClass();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test06838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06838");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        atomikosProperties0.setConsoleFileLimit((int) (short) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str15 = atomikosProperties0.logBaseName;
        atomikosProperties0.transactionManagerUniqueName = "hi!";
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.transactionManagerUniqueName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties0.recovery;
        atomikosProperties0.consoleFileCount = (short) 0;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(recovery21);
    }

    @Test
    public void test06839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06839");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        int int13 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test06840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06840");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        java.util.Set<java.lang.Object> objSet5 = properties0.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        atomikosProperties6.set(properties12, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str17 = atomikosProperties6.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery18.maxRetries = (-1);
        recovery18.setDelay((long) (short) 1);
        long long23 = recovery18.getForgetOrphanedLogEntriesDelay();
        long long24 = recovery18.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj25 = properties0.put((java.lang.Object) atomikosProperties6, (java.lang.Object) long24);
        long long26 = atomikosProperties6.getCheckpointInterval();
        atomikosProperties6.setLogBaseDir("tmlog");
        boolean boolean29 = atomikosProperties6.threadedTwoPhaseCommit;
        long long30 = atomikosProperties6.maxTimeout;
        atomikosProperties6.maxActives = (byte) 1;
        atomikosProperties6.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 86400000L + "'", long23 == 86400000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 86400000L + "'", long24 == 86400000L);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
    }

    @Test
    public void test06841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06841");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.logBaseName;
        atomikosProperties9.outputDir = "";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        java.util.Properties properties18 = atomikosProperties9.asProperties();
        boolean boolean19 = properties1.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setSerialJtaTransactions(false);
        atomikosProperties9.setOutputDir("{{}={}}");
        java.lang.String str24 = atomikosProperties9.getLogBaseDir();
        java.util.Properties properties25 = atomikosProperties9.asProperties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        long long32 = atomikosProperties27.getMaxTimeout();
        boolean boolean33 = atomikosProperties27.enableLogging;
        java.lang.String str34 = atomikosProperties27.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        long long40 = atomikosProperties35.getMaxTimeout();
        atomikosProperties35.service = "";
        java.lang.String str43 = atomikosProperties35.logBaseDir;
        boolean boolean44 = atomikosProperties35.threadedTwoPhaseCommit;
        java.lang.String str45 = atomikosProperties35.getService();
        atomikosProperties35.transactionManagerUniqueName = "tmlog";
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setOutputDir("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = atomikosProperties35.getRecovery();
        int int53 = recovery52.getMaxRetries();
        java.lang.Object obj54 = properties25.replace((java.lang.Object) atomikosProperties27, (java.lang.Object) recovery52);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(recovery52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertNull(obj54);
    }

    @Test
    public void test06842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06842");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        java.util.Properties properties39 = new java.util.Properties(properties30);
        java.lang.String str40 = properties39.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.enableLogging = true;
        long long44 = atomikosProperties41.getCheckpointInterval();
        atomikosProperties41.setService("tmlog");
        atomikosProperties41.setConsoleFileName("{}");
        java.util.Properties properties49 = atomikosProperties41.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet50 = properties49.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.enableLogging = true;
        int int54 = atomikosProperties51.consoleFileLimit;
        atomikosProperties51.logBaseName = "hi!";
        boolean boolean57 = atomikosProperties51.isThreadedTwoPhaseCommit();
        boolean boolean58 = atomikosProperties51.enableLogging;
        java.util.Properties properties59 = atomikosProperties51.asProperties();
        java.lang.Object obj60 = properties39.getOrDefault((java.lang.Object) objEntrySet50, (java.lang.Object) atomikosProperties51);
        boolean boolean61 = properties39.isEmpty();
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.storeToXML(outputStream62, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(objEntrySet50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test06843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06843");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((int) (short) -1);
        long long3 = recovery0.retryInterval;
        recovery0.setRetryInterval(0L);
        long long6 = recovery0.retryInterval;
        recovery0.setForgetOrphanedLogEntriesDelay((long) ' ');
        recovery0.retryInterval = (-1);
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.forgetOrphanedLogEntriesDelay = 19;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test06844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06844");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.outputDir = "hi!";
        java.lang.String str14 = atomikosProperties0.logBaseDir;
        int int15 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.enableLogging = false;
        atomikosProperties0.setMaxActives((int) (byte) -1);
        boolean boolean20 = atomikosProperties0.enableLogging;
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.io.InputStream inputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.load(inputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test06845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06845");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long3 = recovery2.getRetryInterval();
        long long4 = recovery2.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setDefaultJtaTimeout((-1L));
        int int8 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties9 = atomikosProperties5.asProperties();
        boolean boolean10 = atomikosProperties5.forceShutdownOnVmExit;
        long long11 = atomikosProperties5.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long13 = atomikosProperties12.defaultJtaTimeout;
        atomikosProperties12.logBaseName = "tm.out";
        boolean boolean16 = properties0.replace((java.lang.Object) recovery2, (java.lang.Object) long11, (java.lang.Object) atomikosProperties12);
        java.lang.Object obj19 = properties0.setProperty("tm.out", "{{}={}}");
        java.util.Properties properties20 = new java.util.Properties(properties0);
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test06846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06846");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseDir = "{true=10000}";
        atomikosProperties0.defaultJtaTimeout = 0L;
        java.lang.String str14 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setTransactionManagerUniqueName("{true=10000}");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.forceShutdownOnVmExit = false;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
    }

    @Test
    public void test06847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06847");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        recovery0.delay = (-1);
        long long13 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.delay = (-1L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 86400000L + "'", long13 == 86400000L);
    }

    @Test
    public void test06848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06848");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit((int) (short) -1);
        java.lang.String str10 = atomikosProperties0.outputDir;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.storeToXML(outputStream12, "{com.atomikos.icatch.hi!=-1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test06849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06849");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        recovery0.retryInterval = '4';
        long long10 = recovery0.getRetryInterval();
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long12 = recovery0.getDelay();
        recovery0.maxRetries = (short) 10;
        recovery0.forgetOrphanedLogEntriesDelay = 22;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test06850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06850");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        java.lang.String str3 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getService();
        long long6 = atomikosProperties0.maxTimeout;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setCheckpointInterval((long) 100);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
    }

    @Test
    public void test06851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06851");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        int int18 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str19 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str22 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str19, "{com.atomikos.icatch.hi!=-1.0}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str22, "{com.atomikos.icatch.hi!=-1.0}");
    }

    @Test
    public void test06852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06852");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseDir = "{true=10000}";
        atomikosProperties0.defaultJtaTimeout = 0L;
        java.lang.String str14 = atomikosProperties0.getConsoleFileName();
        java.lang.String str15 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.tmlog=-1}";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{true=10000}" + "'", str15, "{true=10000}");
    }

    @Test
    public void test06853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06853");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        int int17 = atomikosProperties0.maxActives;
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        java.lang.String str25 = atomikosProperties20.logBaseName;
        atomikosProperties20.outputDir = "";
        java.util.Properties properties28 = atomikosProperties20.asProperties();
        atomikosProperties20.setConsoleFileLimit(1);
        java.lang.Object obj31 = properties18.put((java.lang.Object) 0L, (java.lang.Object) atomikosProperties20);
        boolean boolean32 = atomikosProperties20.enableLogging;
        java.util.Properties properties33 = atomikosProperties20.asProperties();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties33);
    }

    @Test
    public void test06854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06854");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        int int4 = atomikosProperties0.getMaxActives();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertNotNull(properties5);
    }

    @Test
    public void test06855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06855");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int16 = atomikosProperties15.getConsoleFileCount();
        int int17 = atomikosProperties15.maxActives;
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        int int21 = atomikosProperties15.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties15.getRecovery();
        boolean boolean23 = properties12.containsKey((java.lang.Object) recovery22);
        int int24 = properties12.size();
        java.io.Writer writer25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.store(writer25, "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test06856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06856");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        boolean boolean31 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setRetryInterval((long) (-1));
        java.lang.Object obj38 = properties15.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        java.lang.String str41 = properties15.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}" + "'", str41, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
    }

    @Test
    public void test06857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06857");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        int int40 = recovery17.maxRetries;
        recovery17.setForgetOrphanedLogEntriesDelay(0L);
        recovery17.setRetryInterval(0L);
        recovery17.delay = (-1);
        long long47 = recovery17.delay;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 35 + "'", int40 == 35);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
    }

    @Test
    public void test06858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06858");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.outputDir;
        atomikosProperties0.setCheckpointInterval((long) '4');
        atomikosProperties0.maxTimeout = 18;
        atomikosProperties0.service = "{tmlog={com.atomikos.icatch.hi!=-1.0}}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06859");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.enableLogging = true;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06860");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        atomikosProperties0.setConsoleFileCount((int) '4');
        int int41 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        boolean boolean46 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test06861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06861");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = null;
        atomikosProperties33.consoleLogLevel = atomikosLoggingLevel36;
        atomikosProperties33.outputDir = "";
        int int40 = atomikosProperties33.maxActives;
        boolean boolean41 = atomikosProperties33.isThreadedTwoPhaseCommit();
        atomikosProperties33.consoleFileLimit = (short) 10;
        java.util.Properties properties44 = atomikosProperties33.asProperties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Properties properties46 = new java.util.Properties(properties45);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.logBaseDir = "";
        atomikosProperties48.setConsoleFileCount((int) (short) 10);
        atomikosProperties48.setLogBaseDir("{}");
        java.lang.String str55 = atomikosProperties48.getOutputDir();
        atomikosProperties48.setLogBaseName("hi!");
        boolean boolean58 = atomikosProperties48.isAllowSubTransactions();
        boolean boolean59 = atomikosProperties48.isThreadedTwoPhaseCommit();
        boolean boolean60 = atomikosProperties48.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = atomikosProperties48.getRecovery();
        long long62 = recovery61.getForgetOrphanedLogEntriesDelay();
        long long63 = recovery61.getRetryInterval();
        recovery61.setMaxRetries(50);
        long long66 = recovery61.delay;
        java.lang.Object obj67 = properties46.remove((java.lang.Object) recovery61);
        java.util.Properties properties68 = new java.util.Properties(properties46);
        java.lang.Class<?> wildcardClass69 = properties46.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(recovery61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 86400000L + "'", long62 == 86400000L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10000L + "'", long63 == 10000L);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 10000L + "'", long66 == 10000L);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test06862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06862");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        java.lang.String str5 = atomikosProperties0.getService();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        long long8 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.enableLogging = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
    }

    @Test
    public void test06863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06863");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setCheckpointInterval((long) 35);
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.lang.Object obj11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj12 = properties10.get(obj11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test06864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06864");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        long long5 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setCheckpointInterval((long) ' ');
        long long10 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str15 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        java.lang.String str35 = properties31.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.logBaseDir = "";
        atomikosProperties36.setConsoleFileCount((int) (short) 10);
        long long41 = atomikosProperties36.getMaxTimeout();
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet43 = properties42.keySet();
        atomikosProperties36.set(properties42, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj49 = properties42.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setDefaultJtaTimeout((-1L));
        java.util.Properties properties53 = new java.util.Properties();
        java.lang.Object obj55 = properties53.get((java.lang.Object) 0.0d);
        java.lang.Object obj56 = properties53.clone();
        boolean boolean58 = properties42.replace((java.lang.Object) (-1L), obj56, (java.lang.Object) 100.0d);
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        properties60.clear();
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.logBaseDir = "";
        atomikosProperties63.setConsoleFileCount((int) (short) 10);
        long long68 = atomikosProperties63.getMaxTimeout();
        java.util.Properties properties69 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet70 = properties69.keySet();
        atomikosProperties63.set(properties69, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str74 = atomikosProperties63.logBaseDir;
        java.lang.String str75 = atomikosProperties63.logBaseDir;
        java.util.Properties properties76 = atomikosProperties63.asProperties();
        java.lang.Object obj77 = properties31.replace((java.lang.Object) properties60, (java.lang.Object) atomikosProperties63);
        boolean boolean78 = properties26.contains((java.lang.Object) atomikosProperties63);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel79 = atomikosProperties63.consoleLogLevel;
        long long80 = atomikosProperties63.getMaxTimeout();
        boolean boolean81 = atomikosProperties63.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel82 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel82);
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel82;
        int int85 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 300000L + "'", long41 == 300000L);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 300000L + "'", long68 == 300000L);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel79 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel79.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 300000L + "'", long80 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel82 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel82.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 50 + "'", int85 == 50);
    }

    @Test
    public void test06865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06865");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        atomikosProperties4.set(properties10, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Collection<java.lang.Object> objCollection20 = properties18.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean22 = properties10.remove((java.lang.Object) objCollection20, (java.lang.Object) atomikosLoggingLevel21);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        int int27 = atomikosProperties24.getConsoleFileLimit();
        atomikosProperties24.serialJtaTransactions = false;
        atomikosProperties24.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties24.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel32;
        boolean boolean34 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str35 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tm.out" + "'", str35, "tm.out");
    }

    @Test
    public void test06866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06866");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        properties9.clear();
        java.util.Properties properties11 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.enableLogging = true;
        long long15 = atomikosProperties12.getCheckpointInterval();
        atomikosProperties12.setService("tmlog");
        atomikosProperties12.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties23.keys();
        boolean boolean27 = properties21.contains((java.lang.Object) properties23);
        boolean boolean28 = properties21.isEmpty();
        boolean boolean29 = properties21.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery31.maxRetries = (-1);
        recovery31.setDelay((long) (short) 0);
        recovery31.maxRetries = (short) -1;
        long long38 = recovery31.retryInterval;
        int int39 = recovery31.getMaxRetries();
        atomikosProperties12.set(properties21, "tmlog", (java.lang.Object) int39);
        atomikosProperties12.service = "{com.atomikos.icatch.hi!=-1.0}";
        boolean boolean43 = properties11.contains((java.lang.Object) atomikosProperties12);
        java.lang.String str44 = atomikosProperties12.getService();
        atomikosProperties12.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str44, "{com.atomikos.icatch.hi!=-1.0}");
    }

    @Test
    public void test06867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06867");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        long long14 = recovery13.getForgetOrphanedLogEntriesDelay();
        long long15 = recovery13.getRetryInterval();
        recovery13.setMaxRetries(52);
        int int18 = recovery13.getMaxRetries();
        long long19 = recovery13.getRetryInterval();
        recovery13.delay = 10;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
    }

    @Test
    public void test06868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06868");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Collection<java.lang.Object> objCollection15 = properties13.values();
        java.util.Properties properties16 = new java.util.Properties(properties13);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.enableLogging = true;
        long long23 = atomikosProperties20.getCheckpointInterval();
        boolean boolean25 = properties18.remove((java.lang.Object) long23, (java.lang.Object) (byte) 100);
        boolean boolean27 = properties18.equals((java.lang.Object) (short) 1);
        java.util.Properties properties28 = new java.util.Properties(properties18);
        java.util.Set<java.lang.String> strSet29 = properties28.stringPropertyNames();
        java.lang.Object obj30 = properties16.remove((java.lang.Object) strSet29);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj32 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setLogBaseDir("{}");
        java.lang.String str40 = atomikosProperties33.getOutputDir();
        atomikosProperties33.setLogBaseName("hi!");
        boolean boolean43 = atomikosProperties33.isAllowSubTransactions();
        boolean boolean44 = atomikosProperties33.isThreadedTwoPhaseCommit();
        boolean boolean45 = atomikosProperties33.forceShutdownOnVmExit;
        boolean boolean46 = atomikosProperties33.enableLogging;
        atomikosProperties33.setTransactionManagerUniqueName("");
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        java.lang.String str51 = atomikosProperties33.consoleFileName;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = properties16.remove(obj32, (java.lang.Object) atomikosProperties33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tm.out" + "'", str51, "tm.out");
    }

    @Test
    public void test06869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06869");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.consoleFileCount = (byte) 10;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test06870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06870");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.retryInterval = 5;
        long long9 = recovery0.getDelay();
        recovery0.maxRetries = 0;
        long long12 = recovery0.retryInterval;
        long long13 = recovery0.delay;
        recovery0.setMaxRetries(1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 5L + "'", long12 == 5L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
    }

    @Test
    public void test06871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06871");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.lang.Object obj47 = properties40.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long49 = atomikosProperties48.defaultJtaTimeout;
        atomikosProperties48.logBaseName = "tm.out";
        boolean boolean52 = properties40.containsKey((java.lang.Object) atomikosProperties48);
        properties40.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties40.elements();
        java.io.OutputStream outputStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.store(outputStream55, "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{}");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration54);
    }

    @Test
    public void test06872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06872");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties3.setProperty("", "");
        java.util.Properties properties17 = new java.util.Properties(properties3);
        properties3.clear();
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.keys();
        java.util.Collection<java.lang.Object> objCollection26 = properties24.values();
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Collection<java.lang.Object> objCollection29 = properties27.values();
        int int30 = properties27.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery31.maxRetries = (-1);
        recovery31.setDelay((long) (short) 0);
        recovery31.maxRetries = 0;
        boolean boolean39 = properties27.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration40 = properties27.propertyNames();
        java.lang.Object obj41 = properties24.get((java.lang.Object) properties27);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Collection<java.lang.Object> objCollection45 = properties44.values();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Collection<java.lang.Object> objCollection48 = properties46.values();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties46.keys();
        boolean boolean50 = properties44.contains((java.lang.Object) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.logBaseDir = "";
        atomikosProperties52.setConsoleFileCount((int) (short) 10);
        java.lang.String str57 = atomikosProperties52.logBaseName;
        atomikosProperties52.outputDir = "";
        java.util.Properties properties60 = atomikosProperties52.asProperties();
        java.util.Properties properties61 = atomikosProperties52.asProperties();
        boolean boolean62 = properties44.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setOutputDir("{{}={}}");
        java.lang.String str67 = atomikosProperties52.getLogBaseDir();
        java.util.Properties properties68 = atomikosProperties52.asProperties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        java.util.Set<java.lang.String> strSet71 = properties69.stringPropertyNames();
        java.util.Properties properties72 = new java.util.Properties(properties69);
        properties72.clear();
        java.util.Properties properties74 = new java.util.Properties(properties72);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertNotNull(properties68);
        org.junit.Assert.assertNotNull(strSet71);
    }

    @Test
    public void test06873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06873");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test06874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06874");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        int int4 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test06875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06875");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties0.outputDir;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.maxTimeout = (byte) 10;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test06876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06876");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        java.lang.String str7 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        java.lang.String str13 = atomikosProperties8.logBaseName;
        atomikosProperties8.outputDir = "";
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        java.util.Set<java.lang.String> strSet17 = properties16.stringPropertyNames();
        boolean boolean19 = properties16.contains((java.lang.Object) false);
        properties16.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties16.keys();
        boolean boolean22 = properties0.containsKey((java.lang.Object) objEnumeration21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        java.lang.String str28 = atomikosProperties23.logBaseName;
        atomikosProperties23.outputDir = "";
        java.util.Properties properties31 = atomikosProperties23.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        long long37 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet39 = properties38.keySet();
        atomikosProperties32.set(properties38, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj45 = properties38.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.logBaseDir = "";
        atomikosProperties47.setConsoleFileCount((int) (short) 10);
        atomikosProperties47.setLogBaseDir("{}");
        java.lang.String str54 = atomikosProperties47.getOutputDir();
        atomikosProperties23.set(properties38, "{}", (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.logBaseDir = "";
        atomikosProperties56.setConsoleFileCount((int) (short) 10);
        long long61 = atomikosProperties56.getDefaultJtaTimeout();
        atomikosProperties56.logBaseName = "tmlog";
        boolean boolean64 = properties38.contains((java.lang.Object) atomikosProperties56);
        boolean boolean65 = atomikosProperties56.allowSubTransactions;
        boolean boolean66 = properties0.contains((java.lang.Object) atomikosProperties56);
        java.io.Reader reader67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.load(reader67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{{}={}}" + "'", str7, "{{}={}}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test06877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06877");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
    }

    @Test
    public void test06878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06878");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.checkpointInterval = 0;
        boolean boolean13 = atomikosProperties8.isThreadedTwoPhaseCommit();
        atomikosProperties8.setSerialJtaTransactions(false);
        long long16 = atomikosProperties8.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties8.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.logBaseDir = "";
        atomikosProperties18.setConsoleFileCount((int) (short) 10);
        atomikosProperties18.setCheckpointInterval(10000L);
        long long25 = atomikosProperties18.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel26;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel26;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel26;
        int int30 = atomikosProperties0.getMaxActives();
        java.lang.String str31 = atomikosProperties0.outputDir;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test06879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06879");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        java.util.Properties properties14 = new java.util.Properties(properties6);
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.store(outputStream16, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
    }

    @Test
    public void test06880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06880");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties();
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.get((java.lang.Object) 0.0d);
        java.lang.Object obj11 = properties8.clone();
        java.lang.String str12 = properties8.toString();
        boolean boolean15 = properties8.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj16 = properties6.replace((java.lang.Object) 10.0d, (java.lang.Object) properties8);
        java.lang.String str17 = properties8.toString();
        java.util.Properties properties18 = new java.util.Properties(properties8);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        boolean boolean22 = properties20.isEmpty();
        boolean boolean23 = properties8.equals((java.lang.Object) boolean22);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Collection<java.lang.Object> objCollection26 = properties25.values();
        boolean boolean27 = properties25.isEmpty();
        java.util.Set<java.lang.String> strSet28 = properties25.stringPropertyNames();
        java.lang.String str30 = properties25.getProperty("");
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        java.lang.String str35 = properties31.toString();
        boolean boolean38 = properties31.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj39 = null;
        boolean boolean40 = properties31.equals(obj39);
        java.util.Set<java.lang.Object> objSet41 = properties31.keySet();
        boolean boolean42 = properties25.contains((java.lang.Object) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        atomikosProperties43.setCheckpointInterval(10000L);
        long long50 = atomikosProperties43.maxTimeout;
        int int51 = atomikosProperties43.maxActives;
        boolean boolean52 = properties0.replace((java.lang.Object) boolean22, (java.lang.Object) properties31, (java.lang.Object) int51);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Collection<java.lang.Object> objCollection55 = properties53.values();
        int int56 = properties53.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery57 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery57.maxRetries = (-1);
        recovery57.setDelay((long) (short) 0);
        recovery57.maxRetries = 0;
        boolean boolean65 = properties53.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        boolean boolean66 = properties31.contains((java.lang.Object) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.enableLogging = true;
        long long70 = atomikosProperties67.getCheckpointInterval();
        java.lang.String str71 = atomikosProperties67.getService();
        java.lang.String str72 = atomikosProperties67.logBaseDir;
        atomikosProperties67.setEnableLogging(false);
        atomikosProperties67.consoleFileCount = 0;
        long long77 = atomikosProperties67.getMaxTimeout();
        int int78 = atomikosProperties67.consoleFileLimit;
        java.util.Properties properties79 = atomikosProperties67.asProperties();
        boolean boolean80 = properties31.containsKey((java.lang.Object) atomikosProperties67);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties31.entrySet();
        java.lang.String str84 = properties31.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{}" + "'", str35, "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 300000L + "'", long50 == 300000L);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objCollection55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 300000L + "'", long77 == 300000L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str84, "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test06881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06881");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.maxActives = 0;
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06882");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        boolean boolean3 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test06883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06883");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        properties6.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties6.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        boolean boolean19 = atomikosProperties16.isForceShutdownOnVmExit();
        int int20 = atomikosProperties16.consoleFileLimit;
        atomikosProperties16.setLogBaseDir("{}");
        java.lang.Object obj23 = properties6.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setAllowSubTransactions(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test06884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06884");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.outputDir;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int18 = atomikosProperties0.maxActives;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) 'a');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
    }

    @Test
    public void test06885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06885");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int15 = atomikosProperties0.getConsoleFileCount();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06886");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long16 = atomikosProperties15.defaultJtaTimeout;
        atomikosProperties15.logBaseName = "tm.out";
        java.lang.String str19 = atomikosProperties15.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties15.consoleLogLevel;
        java.lang.String str21 = atomikosProperties15.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        long long27 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        atomikosProperties22.set(properties28, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str33 = atomikosProperties22.logBaseDir;
        java.lang.String str34 = atomikosProperties22.logBaseDir;
        java.lang.String str35 = atomikosProperties22.logBaseDir;
        java.lang.String str36 = atomikosProperties22.getService();
        java.lang.String str37 = atomikosProperties22.outputDir;
        atomikosProperties22.setSerialJtaTransactions(true);
        java.lang.Object obj40 = properties14.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) atomikosProperties22);
        atomikosProperties15.setService("{}");
        boolean boolean43 = atomikosProperties15.isThreadedTwoPhaseCommit();
        atomikosProperties15.defaultJtaTimeout = (-1);
        atomikosProperties15.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test06887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06887");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06888");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.checkpointInterval = (byte) 100;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel17;
        atomikosProperties0.outputDir = "hi!";
        boolean boolean21 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.enableLogging = false;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test06889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06889");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Collection<java.lang.Object> objCollection13 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.keys();
        boolean boolean15 = properties9.contains((java.lang.Object) properties11);
        boolean boolean16 = properties9.isEmpty();
        boolean boolean17 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery19.maxRetries = (-1);
        recovery19.setDelay((long) (short) 0);
        recovery19.maxRetries = (short) -1;
        long long26 = recovery19.retryInterval;
        int int27 = recovery19.getMaxRetries();
        atomikosProperties0.set(properties9, "tmlog", (java.lang.Object) int27);
        boolean boolean29 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean30 = atomikosProperties0.allowSubTransactions;
        boolean boolean31 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setOutputDir("");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test06890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06890");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties16.keys();
        int int22 = properties16.size();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties16.elements();
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery25.maxRetries = (-1);
        recovery25.setDelay((long) (short) 0);
        long long30 = recovery25.forgetOrphanedLogEntriesDelay;
        recovery25.retryInterval = 500L;
        recovery25.retryInterval = '4';
        long long35 = recovery25.getRetryInterval();
        long long36 = recovery25.getForgetOrphanedLogEntriesDelay();
        recovery25.retryInterval = 100L;
        recovery25.setDelay((long) ' ');
        long long41 = recovery25.delay;
        java.lang.Object obj42 = properties9.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) recovery25);
        int int43 = recovery25.getMaxRetries();
        long long44 = recovery25.getRetryInterval();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 86400000L + "'", long30 == 86400000L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 52L + "'", long35 == 52L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 86400000L + "'", long36 == 86400000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 32L + "'", long41 == 32L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 100L + "'", long44 == 100L);
    }

    @Test
    public void test06891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06891");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objEnumeration11);
    }

    @Test
    public void test06892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06892");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        long long7 = atomikosProperties0.getCheckpointInterval();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        boolean boolean18 = properties11.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj19 = properties9.replace((java.lang.Object) 10.0d, (java.lang.Object) properties11);
        java.lang.String str20 = properties11.toString();
        java.util.Properties properties21 = new java.util.Properties(properties11);
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        boolean boolean25 = properties23.isEmpty();
        boolean boolean26 = properties11.equals((java.lang.Object) boolean25);
        java.util.Properties properties27 = new java.util.Properties(properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.get((java.lang.Object) 0.0d);
        java.lang.Object obj43 = properties40.clone();
        java.lang.String str44 = properties40.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.logBaseDir = "";
        atomikosProperties45.setConsoleFileCount((int) (short) 10);
        long long50 = atomikosProperties45.getMaxTimeout();
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet52 = properties51.keySet();
        atomikosProperties45.set(properties51, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj58 = properties51.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setDefaultJtaTimeout((-1L));
        java.util.Properties properties62 = new java.util.Properties();
        java.lang.Object obj64 = properties62.get((java.lang.Object) 0.0d);
        java.lang.Object obj65 = properties62.clone();
        boolean boolean67 = properties51.replace((java.lang.Object) (-1L), obj65, (java.lang.Object) 100.0d);
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        properties69.clear();
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.logBaseDir = "";
        atomikosProperties72.setConsoleFileCount((int) (short) 10);
        long long77 = atomikosProperties72.getMaxTimeout();
        java.util.Properties properties78 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet79 = properties78.keySet();
        atomikosProperties72.set(properties78, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str83 = atomikosProperties72.logBaseDir;
        java.lang.String str84 = atomikosProperties72.logBaseDir;
        java.util.Properties properties85 = atomikosProperties72.asProperties();
        java.lang.Object obj86 = properties40.replace((java.lang.Object) properties69, (java.lang.Object) atomikosProperties72);
        boolean boolean87 = properties35.contains((java.lang.Object) atomikosProperties72);
        atomikosProperties0.set(properties11, "tm.out", (java.lang.Object) boolean87);
        java.util.Enumeration<java.lang.Object> objEnumeration89 = properties11.elements();
        java.io.OutputStream outputStream90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.store(outputStream90, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 300000L + "'", long50 == 300000L);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{}");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 300000L + "'", long77 == 300000L);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(objEnumeration89);
    }

    @Test
    public void test06893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06893");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        long long21 = atomikosProperties18.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setCheckpointInterval(10000L);
        long long31 = atomikosProperties24.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties24.consoleLogLevel = atomikosLoggingLevel32;
        atomikosProperties22.consoleLogLevel = atomikosLoggingLevel32;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel32;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel32;
        boolean boolean37 = atomikosProperties0.allowSubTransactions;
        boolean boolean38 = atomikosProperties0.isEnableLogging();
        boolean boolean39 = atomikosProperties0.threadedTwoPhaseCommit;
        long long40 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
    }

    @Test
    public void test06894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06894");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.checkpointInterval = ' ';
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        int int12 = properties11.size();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 18 + "'", int12 == 18);
    }

    @Test
    public void test06895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06895");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties();
        java.lang.Object obj10 = properties8.get((java.lang.Object) 0.0d);
        java.lang.Object obj11 = properties8.clone();
        java.lang.String str12 = properties8.toString();
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = null;
        boolean boolean22 = properties13.equals(obj21);
        java.util.Properties properties23 = new java.util.Properties();
        java.lang.Object obj25 = properties23.get((java.lang.Object) 0.0d);
        java.lang.Object obj26 = properties23.clone();
        java.lang.Object obj29 = properties23.setProperty("{}", "{}");
        int int30 = properties23.size();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        boolean boolean35 = atomikosProperties32.isForceShutdownOnVmExit();
        atomikosProperties32.allowSubTransactions = false;
        boolean boolean38 = atomikosProperties32.serialJtaTransactions;
        boolean boolean39 = properties13.containsKey((java.lang.Object) boolean38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        atomikosProperties40.setLogBaseDir("{}");
        java.util.Properties properties47 = atomikosProperties40.asProperties();
        java.util.Set<java.lang.String> strSet48 = properties47.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int50 = atomikosProperties49.getConsoleFileCount();
        int int51 = atomikosProperties49.maxActives;
        atomikosProperties49.setConsoleFileName("");
        atomikosProperties49.transactionManagerUniqueName = "{}";
        java.util.Properties properties56 = atomikosProperties49.asProperties();
        boolean boolean57 = atomikosProperties49.threadedTwoPhaseCommit;
        atomikosProperties49.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int61 = atomikosProperties60.getConsoleFileCount();
        int int62 = atomikosProperties60.maxActives;
        atomikosProperties60.setConsoleFileName("");
        atomikosProperties60.transactionManagerUniqueName = "{}";
        atomikosProperties60.setMaxActives(0);
        boolean boolean69 = atomikosProperties60.forceShutdownOnVmExit;
        java.lang.Object obj70 = properties47.put((java.lang.Object) atomikosProperties49, (java.lang.Object) atomikosProperties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.logBaseDir = "";
        boolean boolean74 = atomikosProperties71.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery75 = atomikosProperties71.getRecovery();
        boolean boolean76 = properties47.contains((java.lang.Object) atomikosProperties71);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int78 = atomikosProperties77.getConsoleFileCount();
        int int79 = atomikosProperties77.maxActives;
        int int80 = atomikosProperties77.getMaxActives();
        boolean boolean81 = properties13.remove((java.lang.Object) atomikosProperties71, (java.lang.Object) int80);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel85 = null;
        atomikosProperties82.consoleLogLevel = atomikosLoggingLevel85;
        atomikosProperties82.outputDir = "";
        java.lang.String str89 = atomikosProperties82.logBaseDir;
        java.lang.String str90 = atomikosProperties82.logBaseDir;
        java.lang.Class<?> wildcardClass91 = atomikosProperties82.getClass();
        java.lang.Object obj92 = properties8.replace((java.lang.Object) atomikosProperties71, (java.lang.Object) atomikosProperties82);
        java.lang.Object obj94 = null;
        atomikosProperties0.set(properties8, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}", obj94);
        java.io.OutputStream outputStream96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.storeToXML(outputStream96, "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNotNull(obj11);
        org.junit.Assert.assertEquals(obj11.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj11), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj11), "{}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 50 + "'", int62 == 50);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(recovery75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 50 + "'", int80 == 50);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test06896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06896");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Properties properties47 = new java.util.Properties(properties40);
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((-1L));
        int int55 = atomikosProperties52.getConsoleFileLimit();
        java.util.Properties properties56 = atomikosProperties52.asProperties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        boolean boolean59 = properties50.contains((java.lang.Object) properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.logBaseDir = "";
        boolean boolean64 = atomikosProperties61.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery65 = atomikosProperties61.getRecovery();
        int int66 = recovery65.getMaxRetries();
        int int67 = recovery65.maxRetries;
        java.lang.Object obj68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj69 = properties57.put((java.lang.Object) recovery65, obj68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(recovery65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 5 + "'", int67 == 5);
    }

    @Test
    public void test06897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06897");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        int int17 = atomikosProperties0.maxActives;
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.io.Writer writer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties18.store(writer19, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test06898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06898");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getDefaultJtaTimeout();
        atomikosProperties33.logBaseName = "tmlog";
        boolean boolean41 = properties15.contains((java.lang.Object) atomikosProperties33);
        atomikosProperties33.setService("{true=10000}");
        boolean boolean44 = atomikosProperties33.forceShutdownOnVmExit;
        java.lang.Class<?> wildcardClass45 = atomikosProperties33.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test06899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06899");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        recovery0.delay = (-1);
        long long13 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setMaxRetries((int) (byte) 100);
        recovery0.setMaxRetries((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 86400000L + "'", long13 == 86400000L);
    }

    @Test
    public void test06900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06900");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.lang.String str9 = atomikosProperties0.consoleFileName;
        atomikosProperties0.checkpointInterval = (byte) 10;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
    }

    @Test
    public void test06901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06901");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Set<java.lang.String> strSet2 = properties1.stringPropertyNames();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        properties3.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery6.maxRetries = (-1);
        recovery6.setDelay((long) (short) 0);
        recovery6.maxRetries = 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long14 = recovery13.getRetryInterval();
        long long15 = recovery13.retryInterval;
        boolean boolean16 = properties3.remove((java.lang.Object) 0, (java.lang.Object) long15);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties3);
        java.util.Properties properties18 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.checkpointInterval = 0;
        boolean boolean24 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.setSerialJtaTransactions(false);
        long long27 = atomikosProperties19.getMaxTimeout();
        atomikosProperties19.maxTimeout = 100;
        boolean boolean30 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties19.setLogBaseName("");
        atomikosProperties19.maxTimeout = ' ';
        java.lang.Object obj37 = properties3.get((java.lang.Object) atomikosProperties19);
        org.junit.Assert.assertNotNull(strSet2);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test06902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06902");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.enableLogging = true;
        long long10 = atomikosProperties7.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties7.getService();
        java.lang.String str12 = atomikosProperties7.logBaseDir;
        atomikosProperties7.setEnableLogging(false);
        atomikosProperties7.consoleFileCount = 0;
        long long17 = atomikosProperties7.getMaxTimeout();
        boolean boolean18 = atomikosProperties7.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties7.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel19;
        int int21 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.consoleFileLimit = (byte) 10;
        long long24 = atomikosProperties0.getDefaultJtaTimeout();
        int int25 = atomikosProperties0.maxActives;
        java.util.Properties properties26 = atomikosProperties0.asProperties();
        boolean boolean27 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test06903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06903");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.outputDir;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setConsoleFileName("");
        boolean boolean20 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 0);
        atomikosProperties0.service = "";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test06904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06904");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = properties15.replace((java.lang.Object) 10.0d, (java.lang.Object) properties17);
        java.util.Properties properties26 = new java.util.Properties(properties15);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        int int31 = atomikosProperties28.getConsoleFileLimit();
        java.util.Properties properties32 = atomikosProperties28.asProperties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        atomikosProperties34.setLogBaseDir("{}");
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        java.util.Set<java.lang.String> strSet42 = properties41.stringPropertyNames();
        boolean boolean43 = properties32.containsValue((java.lang.Object) properties41);
        java.lang.Object obj44 = properties26.get((java.lang.Object) boolean43);
        java.util.Properties properties45 = new java.util.Properties(properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int47 = atomikosProperties46.getConsoleFileCount();
        int int48 = atomikosProperties46.maxActives;
        int int49 = atomikosProperties46.getMaxActives();
        java.lang.String str50 = atomikosProperties46.getLogBaseName();
        boolean boolean51 = atomikosProperties46.enableLogging;
        int int52 = atomikosProperties46.getConsoleFileCount();
        boolean boolean53 = properties45.equals((java.lang.Object) int52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties45.elements();
        java.util.Properties properties55 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.logBaseDir = "";
        atomikosProperties56.setConsoleFileCount((int) (short) 10);
        atomikosProperties56.setLogBaseDir("{}");
        java.lang.String str63 = atomikosProperties56.getOutputDir();
        atomikosProperties56.setLogBaseName("hi!");
        boolean boolean66 = atomikosProperties56.isAllowSubTransactions();
        boolean boolean67 = atomikosProperties56.isThreadedTwoPhaseCommit();
        boolean boolean68 = atomikosProperties56.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery69 = atomikosProperties56.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery70 = atomikosProperties56.recovery;
        recovery70.setMaxRetries(10);
        recovery70.setMaxRetries(50);
        long long75 = recovery70.getRetryInterval();
        boolean boolean76 = properties55.containsValue((java.lang.Object) long75);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(recovery69);
        org.junit.Assert.assertNotNull(recovery70);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10000L + "'", long75 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test06905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06905");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj5 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.enableLogging = true;
        int int9 = atomikosProperties6.consoleFileLimit;
        atomikosProperties6.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties6.getRecovery();
        recovery12.setDelay((long) (byte) -1);
        long long15 = recovery12.retryInterval;
        long long16 = recovery12.forgetOrphanedLogEntriesDelay;
        boolean boolean17 = properties0.contains((java.lang.Object) recovery12);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery18.maxRetries = (-1);
        recovery18.retryInterval = 10000L;
        recovery18.setMaxRetries((int) 'a');
        boolean boolean25 = properties0.containsValue((java.lang.Object) 'a');
        java.util.Properties properties26 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 86400000L + "'", long16 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test06906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06906");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        long long5 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet13 = properties12.keySet();
        atomikosProperties6.set(properties12, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str17 = atomikosProperties6.service;
        java.lang.String str18 = atomikosProperties6.outputDir;
        java.lang.String str19 = atomikosProperties6.outputDir;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties6.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel20;
        java.lang.String str22 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str23 = atomikosProperties0.consoleFileName;
        java.util.Properties properties24 = atomikosProperties0.asProperties();
        boolean boolean25 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test06907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06907");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        atomikosProperties4.set(properties10, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Collection<java.lang.Object> objCollection20 = properties18.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean22 = properties10.remove((java.lang.Object) objCollection20, (java.lang.Object) atomikosLoggingLevel21);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        int int27 = atomikosProperties24.getConsoleFileLimit();
        atomikosProperties24.serialJtaTransactions = false;
        atomikosProperties24.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties24.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel32;
        java.lang.String str34 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test06908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06908");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseDir("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.getRecovery();
        atomikosProperties0.setConsoleFileLimit((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery14);
    }

    @Test
    public void test06909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06909");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) '#');
        long long8 = recovery0.retryInterval;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test06910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06910");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setConsoleFileCount((int) (short) 100);
        java.lang.String str13 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test06911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06911");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        atomikosProperties0.checkpointInterval = 100L;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.consoleFileName = "";
        atomikosProperties0.setLogBaseDir("{true=10000}");
        atomikosProperties0.setTransactionManagerUniqueName("{true=10000}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06912");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        long long9 = recovery0.retryInterval;
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long11 = recovery0.getRetryInterval();
        long long12 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test06913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06913");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((int) (short) -1);
        long long3 = recovery0.retryInterval;
        int int4 = recovery0.getMaxRetries();
        int int5 = recovery0.getMaxRetries();
        recovery0.maxRetries = (byte) -1;
        recovery0.setDelay((long) 5);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test06914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06914");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.defaultJtaTimeout = 52L;
        atomikosProperties0.serialJtaTransactions = false;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test06915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06915");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        long long60 = atomikosProperties43.defaultJtaTimeout;
        int int61 = atomikosProperties43.getConsoleFileLimit();
        atomikosProperties43.service = "";
        atomikosProperties43.setEnableLogging(false);
        long long66 = atomikosProperties43.checkpointInterval;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 500L + "'", long66 == 500L);
    }

    @Test
    public void test06916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06916");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        long long10 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.logBaseName = "tmlog";
        boolean boolean13 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test06917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06917");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        java.lang.String str31 = atomikosProperties9.getOutputDir();
        java.util.Properties properties32 = atomikosProperties9.asProperties();
        atomikosProperties9.setForceShutdownOnVmExit(false);
        atomikosProperties9.consoleFileCount = 18;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(properties32);
    }

    @Test
    public void test06918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06918");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 5;
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.forgetOrphanedLogEntriesDelay = 500L;
        int int15 = recovery0.getMaxRetries();
        long long16 = recovery0.delay;
        recovery0.maxRetries = 18;
        recovery0.forgetOrphanedLogEntriesDelay = 20;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10L + "'", long16 == 10L);
    }

    @Test
    public void test06919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06919");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        boolean boolean8 = properties1.isEmpty();
        boolean boolean9 = properties1.isEmpty();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties11.values();
        boolean boolean13 = properties11.isEmpty();
        java.util.Set<java.lang.String> strSet14 = properties11.stringPropertyNames();
        java.lang.String str16 = properties11.getProperty("");
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = null;
        boolean boolean26 = properties17.equals(obj25);
        java.util.Set<java.lang.Object> objSet27 = properties17.keySet();
        boolean boolean28 = properties11.contains((java.lang.Object) properties17);
        java.lang.Object obj29 = properties1.remove((java.lang.Object) properties17);
        java.util.Properties properties30 = new java.util.Properties(properties17);
        java.util.Properties properties31 = new java.util.Properties(properties17);
        java.util.Properties properties32 = new java.util.Properties(properties31);
        int int33 = properties32.size();
        java.lang.String str35 = properties32.getProperty("{com.atomikos.icatch.hi!=-1.0}");
        java.lang.String str36 = properties32.toString();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
    }

    @Test
    public void test06920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06920");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        java.lang.String str16 = atomikosProperties11.logBaseName;
        atomikosProperties11.outputDir = "";
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        atomikosProperties11.setConsoleFileLimit(1);
        atomikosProperties11.threadedTwoPhaseCommit = false;
        atomikosProperties11.setCheckpointInterval((long) 35);
        java.util.Properties properties26 = atomikosProperties11.asProperties();
        boolean boolean27 = properties10.containsKey((java.lang.Object) properties26);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06921");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        boolean boolean34 = atomikosProperties31.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = atomikosProperties31.getRecovery();
        boolean boolean36 = properties7.contains((java.lang.Object) atomikosProperties31);
        java.lang.String str37 = atomikosProperties31.logBaseName;
        atomikosProperties31.setOutputDir("{}");
        atomikosProperties31.setEnableLogging(true);
        java.lang.String str42 = atomikosProperties31.consoleFileName;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(recovery35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tm.out" + "'", str42, "tm.out");
    }

    @Test
    public void test06922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06922");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        recovery0.retryInterval = '4';
        long long10 = recovery0.getRetryInterval();
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval(0L);
        long long14 = recovery0.delay;
        recovery0.setDelay((long) (byte) 10);
        recovery0.setMaxRetries((-1));
        recovery0.setForgetOrphanedLogEntriesDelay((long) 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test06923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06923");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.logBaseName;
        atomikosProperties9.outputDir = "";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        java.util.Properties properties18 = atomikosProperties9.asProperties();
        boolean boolean19 = properties1.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties9);
        atomikosProperties9.setLogBaseName("hi!");
        atomikosProperties9.checkpointInterval = (-1L);
        atomikosProperties9.setMaxActives(35);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test06924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06924");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties6.entrySet();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Collection<java.lang.Object> objCollection30 = properties29.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.enableLogging = true;
        long long34 = atomikosProperties31.getCheckpointInterval();
        boolean boolean36 = properties29.remove((java.lang.Object) long34, (java.lang.Object) (byte) 100);
        boolean boolean38 = properties29.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((-1L));
        long long43 = atomikosProperties40.checkpointInterval;
        boolean boolean44 = atomikosProperties40.forceShutdownOnVmExit;
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        boolean boolean47 = properties29.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.logBaseDir = "";
        atomikosProperties48.setConsoleFileCount((int) (short) 10);
        long long53 = atomikosProperties48.getMaxTimeout();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet55 = properties54.keySet();
        atomikosProperties48.set(properties54, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str59 = atomikosProperties48.logBaseDir;
        java.lang.String str60 = atomikosProperties48.logBaseDir;
        java.lang.String str61 = atomikosProperties48.logBaseDir;
        boolean boolean62 = atomikosProperties48.isEnableLogging();
        boolean boolean63 = atomikosProperties48.forceShutdownOnVmExit;
        boolean boolean64 = properties29.containsValue((java.lang.Object) atomikosProperties48);
        boolean boolean65 = properties29.isEmpty();
        java.util.Properties properties66 = new java.util.Properties();
        java.lang.Object obj68 = properties66.get((java.lang.Object) 0.0d);
        java.lang.Object obj69 = properties66.clone();
        java.lang.String str70 = properties66.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.logBaseDir = "";
        atomikosProperties71.setConsoleFileCount((int) (short) 10);
        atomikosProperties71.setLogBaseDir("{}");
        boolean boolean78 = atomikosProperties71.isSerialJtaTransactions();
        java.lang.Object obj80 = properties66.putIfAbsent((java.lang.Object) boolean78, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet81 = properties66.entrySet();
        java.lang.String str82 = properties66.toString();
        boolean boolean83 = properties29.containsValue((java.lang.Object) str82);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        int int85 = properties6.size();
        java.util.Properties properties86 = new java.util.Properties(properties6);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNotNull(objCollection30);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 500L + "'", long34 == 500L);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 500L + "'", long43 == 500L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertEquals(obj69.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj69), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj69), "{}");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{}" + "'", str70, "{}");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(objEntrySet81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "{true=10000}" + "'", str82, "{true=10000}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 2 + "'", int85 == 2);
    }

    @Test
    public void test06925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06925");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet9 = properties8.stringPropertyNames();
        boolean boolean11 = properties8.contains((java.lang.Object) false);
        java.util.Properties properties12 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.logBaseDir = "";
        atomikosProperties13.setConsoleFileCount((int) (short) 10);
        long long18 = atomikosProperties13.getMaxTimeout();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        atomikosProperties13.set(properties19, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str24 = atomikosProperties13.logBaseDir;
        java.lang.String str25 = atomikosProperties13.logBaseDir;
        java.lang.String str26 = atomikosProperties13.logBaseDir;
        java.lang.String str27 = atomikosProperties13.getService();
        atomikosProperties13.checkpointInterval = 100L;
        atomikosProperties13.setService("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties13.maxTimeout = 10000L;
        atomikosProperties13.setMaxActives(1);
        boolean boolean36 = properties12.containsValue((java.lang.Object) 1);
        java.util.Properties properties37 = new java.util.Properties(properties12);
        java.io.Writer writer38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.store(writer38, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06926");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        boolean boolean34 = atomikosProperties31.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = atomikosProperties31.getRecovery();
        boolean boolean36 = properties7.contains((java.lang.Object) atomikosProperties31);
        java.lang.String str38 = properties7.getProperty("{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long40 = recovery39.getRetryInterval();
        recovery39.delay = 10L;
        java.lang.Object obj43 = properties7.get((java.lang.Object) recovery39);
        recovery39.delay = 22L;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(recovery35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test06927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06927");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        long long7 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean12 = atomikosProperties0.threadedTwoPhaseCommit;
        long long13 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.get((java.lang.Object) 0.0d);
        java.lang.Object obj21 = properties18.clone();
        java.lang.String str22 = properties18.toString();
        boolean boolean25 = properties18.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj26 = properties16.replace((java.lang.Object) 10.0d, (java.lang.Object) properties18);
        java.lang.String str27 = properties18.toString();
        java.util.Properties properties28 = new java.util.Properties(properties18);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection32 = properties30.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setLogBaseDir("{}");
        java.util.Properties properties40 = atomikosProperties33.asProperties();
        atomikosProperties33.service = "";
        atomikosProperties33.setTransactionManagerUniqueName("{}");
        boolean boolean45 = properties30.equals((java.lang.Object) "{}");
        java.util.Collection<java.lang.Object> objCollection46 = properties30.values();
        atomikosProperties0.set(properties18, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}", (java.lang.Object) properties30);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objCollection46);
    }

    @Test
    public void test06928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06928");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.maxRetries;
        recovery0.setRetryInterval((long) (byte) 100);
        recovery0.setRetryInterval((long) 35);
        recovery0.delay = 18L;
        long long13 = recovery0.retryInterval;
        recovery0.delay = 19;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
    }

    @Test
    public void test06929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06929");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileLimit = (byte) 10;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        boolean boolean19 = atomikosProperties16.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj33 = properties26.setProperty("", "hi!");
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Collection<java.lang.Object> objCollection36 = properties34.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean38 = properties26.remove((java.lang.Object) objCollection36, (java.lang.Object) atomikosLoggingLevel37);
        atomikosProperties16.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties0.setDefaultJtaTimeout((long) ' ');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test06930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06930");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.recovery;
        recovery14.setMaxRetries(10);
        int int17 = recovery14.maxRetries;
        recovery14.setMaxRetries((int) (short) -1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
    }

    @Test
    public void test06931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06931");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        int int18 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean19 = atomikosProperties0.isAllowSubTransactions();
        long long20 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
    }

    @Test
    public void test06932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06932");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean8 = atomikosProperties0.enableLogging;
        atomikosProperties0.checkpointInterval = 19;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06933");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str13 = atomikosProperties0.transactionManagerUniqueName;
        java.lang.String str14 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test06934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06934");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration14 = properties13.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        java.lang.String str20 = atomikosProperties15.logBaseName;
        atomikosProperties15.outputDir = "";
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        java.util.Properties properties24 = atomikosProperties15.asProperties();
        atomikosProperties15.setEnableLogging(true);
        boolean boolean27 = properties13.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setEnableLogging(true);
        atomikosProperties15.maxTimeout = 32L;
        atomikosProperties15.maxTimeout = 10;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test06935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06935");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean9 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.checkpointInterval = '4';
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.maxTimeout = 50;
        atomikosProperties0.transactionManagerUniqueName = "{hi!={}}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06936");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        long long10 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setConsoleFileLimit(21);
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
    }

    @Test
    public void test06937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06937");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long12 = recovery11.getRetryInterval();
        recovery11.delay = 10L;
        recovery11.setForgetOrphanedLogEntriesDelay(0L);
        long long17 = recovery11.getRetryInterval();
        recovery11.retryInterval = 5;
        long long20 = recovery11.getDelay();
        recovery11.maxRetries = 0;
        java.lang.Object obj23 = properties10.get((java.lang.Object) recovery11);
        long long24 = recovery11.retryInterval;
        recovery11.setForgetOrphanedLogEntriesDelay(52L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 5L + "'", long24 == 5L);
    }

    @Test
    public void test06938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06938");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.consoleFileCount = 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.get((java.lang.Object) 0.0d);
        java.lang.Object obj43 = properties40.clone();
        java.lang.String str44 = properties40.toString();
        boolean boolean46 = properties34.remove((java.lang.Object) properties40, (java.lang.Object) 0);
        java.util.Set<java.lang.String> strSet47 = properties40.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.logBaseDir = "";
        atomikosProperties48.setConsoleFileCount((int) (short) 10);
        java.lang.String str53 = atomikosProperties48.logBaseName;
        java.lang.String str54 = atomikosProperties48.logBaseDir;
        long long55 = atomikosProperties48.defaultJtaTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int57 = atomikosProperties56.getConsoleFileCount();
        int int58 = atomikosProperties56.maxActives;
        atomikosProperties56.setEnableLogging(false);
        atomikosProperties56.threadedTwoPhaseCommit = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.enableLogging = true;
        long long66 = atomikosProperties63.getCheckpointInterval();
        java.lang.String str67 = atomikosProperties63.getService();
        java.lang.String str68 = atomikosProperties63.logBaseDir;
        atomikosProperties63.setEnableLogging(false);
        atomikosProperties63.consoleFileCount = 0;
        long long73 = atomikosProperties63.getMaxTimeout();
        boolean boolean74 = atomikosProperties63.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties63.consoleLogLevel;
        atomikosProperties56.consoleLogLevel = atomikosLoggingLevel75;
        java.util.Properties properties77 = new java.util.Properties();
        java.util.Properties properties78 = new java.util.Properties(properties77);
        properties77.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery80 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery80.maxRetries = (-1);
        recovery80.setDelay((long) (short) 0);
        recovery80.maxRetries = 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery87 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long88 = recovery87.getRetryInterval();
        long long89 = recovery87.retryInterval;
        boolean boolean90 = properties77.remove((java.lang.Object) 0, (java.lang.Object) long89);
        java.lang.String str91 = properties77.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration92 = properties77.elements();
        boolean boolean93 = properties40.replace((java.lang.Object) long55, (java.lang.Object) atomikosLoggingLevel75, (java.lang.Object) properties77);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel75);
        java.lang.String str95 = atomikosProperties0.service;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel96 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties97 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "{}" + "'", str44, "{}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10000L + "'", long55 == 10000L);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 500L + "'", long66 == 500L);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10000L + "'", long88 == 10000L);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 10000L + "'", long89 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "{}" + "'", str91, "{}");
        org.junit.Assert.assertNotNull(objEnumeration92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel96 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel96.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties97);
    }

    @Test
    public void test06939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06939");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.io.OutputStream outputStream6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream6, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
    }

    @Test
    public void test06940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06940");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        java.lang.String str12 = atomikosProperties9.getService();
        int int13 = atomikosProperties9.getConsoleFileCount();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.lang.Object obj19 = properties15.setProperty("hi!", "{}");
        java.lang.String str21 = properties15.getProperty("tmlog");
        properties15.clear();
        java.lang.Object obj23 = properties15.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Collection<java.lang.Object> objCollection26 = properties24.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        atomikosProperties27.service = "";
        atomikosProperties27.setTransactionManagerUniqueName("{}");
        boolean boolean39 = properties24.equals((java.lang.Object) "{}");
        boolean boolean40 = properties8.replace((java.lang.Object) atomikosProperties9, obj23, (java.lang.Object) boolean39);
        java.lang.Object obj41 = properties8.clone();
        java.util.Properties properties42 = new java.util.Properties(properties8);
        java.util.Set<java.lang.Object> objSet43 = properties42.keySet();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
// flaky:         org.junit.Assert.assertEquals(obj41.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objSet43);
    }

    @Test
    public void test06941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06941");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        boolean boolean7 = atomikosProperties0.allowSubTransactions;
        int int8 = atomikosProperties0.consoleFileCount;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.setMaxActives((int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test06942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06942");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean18 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.maxTimeout = 19;
        atomikosProperties0.setMaxTimeout((long) 97);
        long long23 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
    }

    @Test
    public void test06943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06943");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        int int13 = atomikosProperties0.maxActives;
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.consoleFileLimit = (short) 0;
        atomikosProperties0.setLogBaseName("{{}={}}");
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.logBaseDir = "";
        atomikosProperties21.setConsoleFileCount((int) (short) 10);
        java.lang.String str26 = atomikosProperties21.logBaseName;
        atomikosProperties21.outputDir = "";
        java.util.Properties properties29 = atomikosProperties21.asProperties();
        java.util.Properties properties30 = atomikosProperties21.asProperties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((-1L));
        int int36 = atomikosProperties33.getConsoleFileLimit();
        java.util.Properties properties37 = atomikosProperties33.asProperties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<?> wildcardEnumeration39 = properties37.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        long long45 = atomikosProperties40.getMaxTimeout();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet47 = properties46.keySet();
        atomikosProperties40.set(properties46, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str51 = atomikosProperties40.logBaseDir;
        java.lang.String str52 = atomikosProperties40.logBaseDir;
        java.lang.String str53 = atomikosProperties40.logBaseDir;
        atomikosProperties40.setTransactionManagerUniqueName("{{}={}}");
        boolean boolean56 = properties20.replace((java.lang.Object) properties30, (java.lang.Object) properties37, (java.lang.Object) atomikosProperties40);
        java.io.Writer writer57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.store(writer57, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 300000L + "'", long45 == 300000L);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test06944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06944");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        boolean boolean41 = atomikosProperties29.enableLogging;
        int int42 = atomikosProperties29.maxActives;
        boolean boolean43 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.maxActives = 35;
        java.lang.Object obj54 = properties24.getOrDefault((java.lang.Object) boolean43, (java.lang.Object) 35);
        java.lang.Object obj57 = properties24.setProperty("tm.out", "{com.atomikos.icatch.hi!=-1.0}");
        java.util.Properties properties58 = new java.util.Properties(properties24);
        java.util.Enumeration<?> wildcardEnumeration59 = properties24.propertyNames();
        java.util.Properties properties60 = new java.util.Properties(properties24);
        java.io.OutputStream outputStream61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties60.storeToXML(outputStream61, "", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=0, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 35 + "'", obj54, 35);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(wildcardEnumeration59);
    }

    @Test
    public void test06945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06945");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.hi!=-1.0}";
        java.lang.String str10 = atomikosProperties0.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        long long12 = recovery11.getRetryInterval();
        recovery11.setForgetOrphanedLogEntriesDelay((long) 1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test06946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06946");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.enableLogging = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        boolean boolean19 = atomikosProperties0.enableLogging;
        int int20 = atomikosProperties0.consoleFileCount;
        int int21 = atomikosProperties0.maxActives;
        atomikosProperties0.consoleFileCount = '#';
        long long24 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
    }

    @Test
    public void test06947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06947");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties0.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.maxActives = 50;
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties14.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Collection<java.lang.Object> objCollection19 = properties18.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.enableLogging = true;
        long long23 = atomikosProperties20.getCheckpointInterval();
        boolean boolean25 = properties18.remove((java.lang.Object) long23, (java.lang.Object) (byte) 100);
        boolean boolean27 = properties18.equals((java.lang.Object) (short) 1);
        java.lang.Object obj30 = properties18.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties18.keys();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties32.isEmpty();
        boolean boolean35 = properties14.remove((java.lang.Object) objEnumeration31, (java.lang.Object) properties32);
        boolean boolean36 = properties0.remove((java.lang.Object) 50, (java.lang.Object) properties32);
        java.util.Properties properties37 = new java.util.Properties(properties0);
        int int38 = properties37.size();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test06948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06948");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        atomikosProperties0.service = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        long long16 = atomikosProperties0.getMaxTimeout();
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
    }

    @Test
    public void test06949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06949");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        boolean boolean41 = atomikosProperties29.enableLogging;
        int int42 = atomikosProperties29.maxActives;
        boolean boolean43 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.maxActives = 35;
        java.lang.Object obj54 = properties24.getOrDefault((java.lang.Object) boolean43, (java.lang.Object) 35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        java.lang.String str60 = atomikosProperties55.logBaseName;
        java.lang.String str61 = atomikosProperties55.logBaseDir;
        java.lang.String str62 = atomikosProperties55.getOutputDir();
        java.util.Properties properties63 = atomikosProperties55.asProperties();
        java.util.Collection<java.lang.Object> objCollection64 = properties63.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet65 = properties63.entrySet();
        java.lang.String str67 = properties63.getProperty("{com.atomikos.icatch.hi!=-1.0}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((-1L));
        int int71 = atomikosProperties68.getConsoleFileLimit();
        java.util.Properties properties72 = atomikosProperties68.asProperties();
        boolean boolean73 = atomikosProperties68.forceShutdownOnVmExit;
        boolean boolean74 = atomikosProperties68.forceShutdownOnVmExit;
        atomikosProperties68.setOutputDir("tmlog");
        atomikosProperties68.setCheckpointInterval((long) (-1));
        java.util.Properties properties79 = atomikosProperties68.asProperties();
        boolean boolean80 = properties24.remove((java.lang.Object) "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) atomikosProperties68);
        java.io.PrintStream printStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 35 + "'", obj54, 35);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(objEntrySet65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test06950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06950");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.logBaseName = "";
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={true=10000}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str22 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test06951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06951");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel15;
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.enableLogging = true;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06952");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.outputDir = "tmlog";
        java.lang.String str10 = atomikosProperties0.logBaseName;
        atomikosProperties0.service = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=0, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test06953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06953");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj27 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        boolean boolean36 = properties20.replace((java.lang.Object) (-1L), obj34, (java.lang.Object) 100.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean41 = properties3.equals((java.lang.Object) properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties3.keys();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
    }

    @Test
    public void test06954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06954");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.consoleFileName = "tmlog";
        java.lang.String str12 = atomikosProperties0.outputDir;
        atomikosProperties0.serialJtaTransactions = false;
        int int15 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test06955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06955");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getConsoleFileCount();
        int int13 = atomikosProperties11.maxActives;
        java.lang.String str14 = atomikosProperties11.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        atomikosProperties15.setCheckpointInterval(10000L);
        long long22 = atomikosProperties15.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties11.consoleLogLevel = atomikosLoggingLevel23;
        java.util.Properties properties25 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel26);
        boolean boolean28 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean29 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.consoleFileLimit = '4';
        boolean boolean32 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test06956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06956");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = null;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel12;
        atomikosProperties9.outputDir = "";
        int int16 = atomikosProperties9.maxActives;
        boolean boolean17 = atomikosProperties9.isThreadedTwoPhaseCommit();
        atomikosProperties9.consoleFileLimit = (short) 10;
        java.util.Properties properties20 = atomikosProperties9.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.enableLogging = true;
        long long25 = atomikosProperties22.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.forceShutdownOnVmExit = false;
        java.lang.Object obj29 = properties7.replace((java.lang.Object) objEnumeration21, (java.lang.Object) atomikosProperties22);
        boolean boolean30 = atomikosProperties22.threadedTwoPhaseCommit;
        atomikosProperties22.maxActives = 52;
        atomikosProperties22.setLogBaseName("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = atomikosProperties22.recovery;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(recovery35);
    }

    @Test
    public void test06957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06957");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        java.lang.String str7 = atomikosProperties0.service;
        long long8 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
    }

    @Test
    public void test06958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06958");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        boolean boolean12 = atomikosProperties9.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.logBaseDir = "";
        atomikosProperties13.setConsoleFileCount((int) (short) 10);
        long long18 = atomikosProperties13.getMaxTimeout();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        atomikosProperties13.set(properties19, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj26 = properties19.setProperty("", "hi!");
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Collection<java.lang.Object> objCollection29 = properties27.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean31 = properties19.remove((java.lang.Object) objCollection29, (java.lang.Object) atomikosLoggingLevel30);
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel30);
        boolean boolean34 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean35 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean36 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test06959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06959");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.consoleLogLevel;
        java.lang.Class<?> wildcardClass7 = atomikosLoggingLevel6.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test06960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06960");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.checkpointInterval = 100;
        int int9 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.checkpointInterval = 86400000L;
        long long12 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test06961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06961");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(recovery15);
    }

    @Test
    public void test06962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06962");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        long long18 = atomikosProperties0.maxTimeout;
        atomikosProperties0.outputDir = "tmlog";
        boolean boolean21 = atomikosProperties0.allowSubTransactions;
        long long22 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
    }

    @Test
    public void test06963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06963");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.get((java.lang.Object) 0.0d);
        java.lang.Object obj21 = properties18.clone();
        java.lang.String str22 = properties18.toString();
        boolean boolean25 = properties18.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj26 = properties16.replace((java.lang.Object) 10.0d, (java.lang.Object) properties18);
        java.lang.String str27 = properties18.toString();
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) 0.0d);
        java.lang.Object obj33 = properties30.clone();
        java.lang.String str34 = properties30.toString();
        boolean boolean37 = properties30.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties30.clear();
        boolean boolean39 = properties30.isEmpty();
        atomikosProperties0.set(properties18, "{}", (java.lang.Object) properties30);
        int int41 = properties30.size();
        java.util.Properties properties42 = new java.util.Properties(properties30);
        java.io.Writer writer43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.store(writer43, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test06964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06964");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.consoleFileLimit = 10;
        atomikosProperties0.setMaxActives(2);
        java.lang.String str15 = atomikosProperties0.service;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test06965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06965");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setConsoleFileCount((int) (short) 10);
        atomikosProperties2.setCheckpointInterval(10000L);
        long long9 = atomikosProperties2.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties2.consoleLogLevel = atomikosLoggingLevel10;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel10;
        java.lang.String str13 = atomikosProperties0.getService();
        boolean boolean14 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str15 = atomikosProperties0.getService();
        boolean boolean16 = atomikosProperties0.forceShutdownOnVmExit;
        int int17 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
    }

    @Test
    public void test06966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06966");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        int int9 = recovery0.maxRetries;
        recovery0.delay = (-1);
        long long12 = recovery0.retryInterval;
        recovery0.delay = (-1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test06967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06967");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.outputDir = "{{}={}}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test06968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06968");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel4);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int8 = atomikosProperties0.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        java.lang.String str17 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 500L + "'", long1 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test06969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06969");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.retryInterval = 5;
        long long9 = recovery0.getDelay();
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) 0);
        recovery0.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        recovery0.forgetOrphanedLogEntriesDelay = 52L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test06970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06970");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = atomikosProperties43.recovery;
        long long61 = recovery60.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 86400000L + "'", long61 == 86400000L);
    }

    @Test
    public void test06971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06971");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.setLogBaseName("{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tm.out" + "'", str5, "tm.out");
    }

    @Test
    public void test06972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06972");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long11 = atomikosProperties0.maxTimeout;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.setConsoleFileLimit(18);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties0.getConsoleLogLevel();
        long long16 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test06973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06973");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj23 = properties16.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setDefaultJtaTimeout((-1L));
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        boolean boolean32 = properties16.replace((java.lang.Object) (-1L), obj30, (java.lang.Object) 100.0d);
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties34 = new java.util.Properties(properties33);
        properties34.clear();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties34.elements();
        java.lang.String str39 = properties34.getProperty("");
        java.util.Properties properties40 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long42 = recovery41.getRetryInterval();
        recovery41.delay = 10L;
        boolean boolean45 = properties1.remove((java.lang.Object) properties40, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties40.keys();
        java.util.Properties properties47 = new java.util.Properties(properties40);
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties49 = new java.util.Properties(properties47);
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Properties properties51 = new java.util.Properties(properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((-1L));
        int int55 = atomikosProperties52.getConsoleFileLimit();
        java.util.Properties properties56 = atomikosProperties52.asProperties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        boolean boolean59 = properties50.contains((java.lang.Object) properties57);
        java.util.Properties properties60 = new java.util.Properties(properties57);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test06974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06974");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Set<java.lang.Object> objSet25 = properties8.keySet();
        java.util.Set<java.lang.Object> objSet26 = properties8.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties8.keys();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objEnumeration27);
    }

    @Test
    public void test06975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06975");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.enableLogging = true;
        int int10 = atomikosProperties7.consoleFileLimit;
        atomikosProperties7.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int14 = atomikosProperties13.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        atomikosProperties15.setCheckpointInterval(10000L);
        long long22 = atomikosProperties15.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties15.consoleLogLevel = atomikosLoggingLevel23;
        atomikosProperties13.consoleLogLevel = atomikosLoggingLevel23;
        atomikosProperties7.consoleLogLevel = atomikosLoggingLevel23;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel23;
        java.lang.String str28 = atomikosProperties0.outputDir;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test06976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06976");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = null;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel12;
        atomikosProperties9.outputDir = "";
        int int16 = atomikosProperties9.maxActives;
        boolean boolean17 = atomikosProperties9.isThreadedTwoPhaseCommit();
        atomikosProperties9.consoleFileLimit = (short) 10;
        java.util.Properties properties20 = atomikosProperties9.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.enableLogging = true;
        long long25 = atomikosProperties22.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.forceShutdownOnVmExit = false;
        java.lang.Object obj29 = properties7.replace((java.lang.Object) objEnumeration21, (java.lang.Object) atomikosProperties22);
        java.util.Properties properties30 = new java.util.Properties(properties7);
        java.util.Properties properties31 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection32 = properties7.values();
        int int33 = properties7.size();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 19 + "'", int33 == 19);
    }

    @Test
    public void test06977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06977");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.logBaseDir = "";
        atomikosProperties26.setConsoleFileCount((int) (short) 10);
        long long31 = atomikosProperties26.getMaxTimeout();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet33 = properties32.keySet();
        atomikosProperties26.set(properties32, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj39 = properties32.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((-1L));
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.get((java.lang.Object) 0.0d);
        java.lang.Object obj46 = properties43.clone();
        boolean boolean48 = properties32.replace((java.lang.Object) (-1L), obj46, (java.lang.Object) 100.0d);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.logBaseDir = "";
        atomikosProperties53.setConsoleFileCount((int) (short) 10);
        long long58 = atomikosProperties53.getMaxTimeout();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet60 = properties59.keySet();
        atomikosProperties53.set(properties59, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str64 = atomikosProperties53.logBaseDir;
        java.lang.String str65 = atomikosProperties53.logBaseDir;
        java.util.Properties properties66 = atomikosProperties53.asProperties();
        java.lang.Object obj67 = properties21.replace((java.lang.Object) properties50, (java.lang.Object) atomikosProperties53);
        boolean boolean68 = properties16.contains((java.lang.Object) atomikosProperties53);
        boolean boolean69 = properties1.containsValue((java.lang.Object) properties16);
        java.util.Enumeration<?> wildcardEnumeration70 = properties1.propertyNames();
        java.util.Properties properties71 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.logBaseDir = "";
        atomikosProperties72.setConsoleFileCount((int) (short) 10);
        long long77 = atomikosProperties72.getMaxTimeout();
        java.util.Properties properties78 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet79 = properties78.keySet();
        atomikosProperties72.set(properties78, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str83 = atomikosProperties72.logBaseDir;
        java.lang.String str84 = atomikosProperties72.logBaseDir;
        java.lang.String str85 = atomikosProperties72.logBaseDir;
        boolean boolean86 = atomikosProperties72.isEnableLogging();
        long long87 = atomikosProperties72.checkpointInterval;
        atomikosProperties72.setOutputDir("hi!");
        boolean boolean90 = properties1.contains((java.lang.Object) atomikosProperties72);
        atomikosProperties72.serialJtaTransactions = false;
        boolean boolean93 = atomikosProperties72.forceShutdownOnVmExit;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration70);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 300000L + "'", long77 == 300000L);
        org.junit.Assert.assertNotNull(objSet79);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 500L + "'", long87 == 500L);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test06978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06978");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        long long15 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setMaxRetries(5);
        recovery0.forgetOrphanedLogEntriesDelay = 5L;
        long long20 = recovery0.getRetryInterval();
        long long21 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 52L + "'", long20 == 52L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test06979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06979");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        boolean boolean38 = properties8.contains((java.lang.Object) properties23);
        boolean boolean39 = properties23.isEmpty();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.lang.Object obj45 = properties41.setProperty("hi!", "{}");
        java.lang.String str47 = properties41.getProperty("tmlog");
        properties41.clear();
        java.util.Set<java.lang.String> strSet49 = properties41.stringPropertyNames();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.enableLogging = true;
        int int55 = atomikosProperties52.consoleFileLimit;
        atomikosProperties52.logBaseName = "hi!";
        atomikosProperties52.enableLogging = false;
        atomikosProperties52.setMaxTimeout((long) '4');
        atomikosProperties52.setMaxTimeout((long) 1);
        atomikosProperties0.set(properties23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) 1);
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.lang.String str67 = atomikosProperties0.getService();
        java.lang.String str68 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test06980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06980");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Collection<java.lang.Object> objCollection13 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.keys();
        boolean boolean15 = properties9.contains((java.lang.Object) properties11);
        boolean boolean16 = properties9.isEmpty();
        boolean boolean17 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery19.maxRetries = (-1);
        recovery19.setDelay((long) (short) 0);
        recovery19.maxRetries = (short) -1;
        long long26 = recovery19.retryInterval;
        int int27 = recovery19.getMaxRetries();
        atomikosProperties0.set(properties9, "tmlog", (java.lang.Object) int27);
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.setDefaultJtaTimeout(300000L);
        atomikosProperties0.serialJtaTransactions = false;
        java.lang.String str35 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test06981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06981");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.Object obj22 = properties1.remove((java.lang.Object) 10.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties23.isEmpty();
        java.util.Set<java.lang.Object> objSet26 = properties23.keySet();
        int int27 = properties23.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        long long33 = atomikosProperties28.getMaxTimeout();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        atomikosProperties28.set(properties34, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj41 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.get((java.lang.Object) 0.0d);
        java.lang.Object obj48 = properties45.clone();
        boolean boolean50 = properties34.replace((java.lang.Object) (-1L), obj48, (java.lang.Object) 100.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Properties properties55 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int57 = atomikosProperties56.getConsoleFileCount();
        int int58 = atomikosProperties56.maxActives;
        atomikosProperties56.setConsoleFileName("");
        atomikosProperties56.transactionManagerUniqueName = "{}";
        java.util.Properties properties63 = atomikosProperties56.asProperties();
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.keys();
        boolean boolean66 = properties55.equals((java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int68 = atomikosProperties67.getConsoleFileCount();
        int int69 = atomikosProperties67.maxActives;
        atomikosProperties67.setConsoleFileName("");
        atomikosProperties67.transactionManagerUniqueName = "{}";
        java.util.Properties properties74 = atomikosProperties67.asProperties();
        atomikosProperties67.setConsoleFileLimit((int) (short) -1);
        atomikosProperties67.service = "";
        java.lang.Object obj79 = properties64.remove((java.lang.Object) atomikosProperties67);
        java.lang.Object obj80 = properties1.putIfAbsent((java.lang.Object) int27, (java.lang.Object) atomikosProperties67);
        atomikosProperties67.enableLogging = true;
        boolean boolean83 = atomikosProperties67.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test06982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06982");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.checkpointInterval = (byte) 1;
        atomikosProperties13.setAllowSubTransactions(true);
        java.lang.String str18 = atomikosProperties13.outputDir;
        java.lang.Object obj19 = properties11.remove((java.lang.Object) atomikosProperties13);
        atomikosProperties13.defaultJtaTimeout = 10;
        long long22 = atomikosProperties13.maxTimeout;
        java.lang.String str23 = atomikosProperties13.getOutputDir();
        atomikosProperties13.maxActives = (byte) -1;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test06983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06983");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.consoleFileCount = 100;
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.enableLogging = true;
        java.lang.String str10 = atomikosProperties0.service;
        atomikosProperties0.maxActives = 18;
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        boolean boolean14 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setConsoleFileCount(19);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06984");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.consoleFileLimit = (byte) 100;
        long long10 = atomikosProperties0.checkpointInterval;
        boolean boolean11 = atomikosProperties0.enableLogging;
        atomikosProperties0.setMaxTimeout((long) 50);
        java.lang.String str14 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str17 = atomikosProperties0.outputDir;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test06985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06985");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.maxTimeout = (short) -1;
        java.lang.String str10 = atomikosProperties0.transactionManagerUniqueName;
        long long11 = atomikosProperties0.defaultJtaTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.recovery;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertNotNull(recovery12);
    }

    @Test
    public void test06986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06986");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.consoleLogLevel;
        java.lang.String str6 = atomikosProperties0.consoleFileName;
        boolean boolean7 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean8 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test06987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06987");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        long long10 = atomikosProperties5.getMaxTimeout();
        atomikosProperties5.service = "";
        boolean boolean13 = atomikosProperties5.isSerialJtaTransactions();
        atomikosProperties5.setAllowSubTransactions(true);
        java.lang.String str16 = atomikosProperties5.getService();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.get((java.lang.Object) 0.0d);
        java.lang.Object obj23 = properties20.clone();
        java.lang.String str24 = properties20.toString();
        boolean boolean27 = properties20.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj28 = properties18.replace((java.lang.Object) 10.0d, (java.lang.Object) properties20);
        java.util.Properties properties29 = new java.util.Properties(properties20);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection32 = properties30.values();
        int int33 = properties30.size();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties30.elements();
        java.util.Properties properties35 = new java.util.Properties(properties30);
        java.lang.Object obj36 = properties35.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getConsoleFileCount();
        int int39 = atomikosProperties37.maxActives;
        atomikosProperties37.setEnableLogging(false);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Collection<java.lang.Object> objCollection44 = properties42.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long47 = recovery46.getRetryInterval();
        recovery46.delay = 10L;
        recovery46.setForgetOrphanedLogEntriesDelay(0L);
        int int52 = recovery46.maxRetries;
        atomikosProperties37.set(properties42, "hi!", (java.lang.Object) recovery46);
        java.util.Set<java.lang.String> strSet54 = properties42.stringPropertyNames();
        boolean boolean55 = properties20.remove(obj36, (java.lang.Object) strSet54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.logBaseDir = "";
        atomikosProperties56.setConsoleFileCount((int) (short) 10);
        java.lang.String str61 = atomikosProperties56.logBaseName;
        atomikosProperties56.outputDir = "";
        java.util.Properties properties64 = atomikosProperties56.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.logBaseDir = "";
        atomikosProperties65.setConsoleFileCount((int) (short) 10);
        long long70 = atomikosProperties65.getMaxTimeout();
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet72 = properties71.keySet();
        atomikosProperties65.set(properties71, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj78 = properties71.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.logBaseDir = "";
        atomikosProperties80.setConsoleFileCount((int) (short) 10);
        atomikosProperties80.setLogBaseDir("{}");
        java.lang.String str87 = atomikosProperties80.getOutputDir();
        atomikosProperties56.set(properties71, "{}", (java.lang.Object) atomikosProperties80);
        java.lang.String str89 = atomikosProperties80.getOutputDir();
        boolean boolean90 = properties4.replace((java.lang.Object) atomikosProperties5, obj36, (java.lang.Object) atomikosProperties80);
        atomikosProperties5.setConsoleFileLimit((int) (short) 1);
        atomikosProperties5.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 300000L + "'", long70 == 300000L);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test06988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06988");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        long long7 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean12 = atomikosProperties0.threadedTwoPhaseCommit;
        long long13 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setCheckpointInterval(50L);
        java.lang.String str16 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test06989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06989");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.checkpointInterval = 0L;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.hi!=-1.0}");
        java.lang.String str8 = atomikosProperties0.consoleFileName;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
    }

    @Test
    public void test06990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06990");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.setMaxTimeout(52L);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        long long13 = atomikosProperties0.maxTimeout;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
    }

    @Test
    public void test06991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06991");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        boolean boolean9 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.consoleFileLimit = (byte) 100;
        atomikosProperties0.maxTimeout = 0L;
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test06992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06992");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        recovery0.setMaxRetries((int) 'a');
        recovery0.maxRetries = 'a';
        long long9 = recovery0.getRetryInterval();
        recovery0.forgetOrphanedLogEntriesDelay = 0L;
        recovery0.retryInterval = (short) -1;
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test06993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06993");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.util.Collection<java.lang.Object> objCollection9 = properties1.values();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objCollection9);
    }

    @Test
    public void test06994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06994");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.forceShutdownOnVmExit = true;
        long long17 = atomikosProperties0.maxTimeout;
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
    }

    @Test
    public void test06995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06995");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        recovery13.setRetryInterval((long) (byte) 100);
        long long16 = recovery13.getDelay();
        recovery13.delay = 97;
        long long19 = recovery13.getDelay();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 97L + "'", long19 == 97L);
    }

    @Test
    public void test06996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06996");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration14 = properties13.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        java.lang.String str20 = atomikosProperties15.logBaseName;
        atomikosProperties15.outputDir = "";
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        java.util.Properties properties24 = atomikosProperties15.asProperties();
        atomikosProperties15.setEnableLogging(true);
        boolean boolean27 = properties13.containsKey((java.lang.Object) atomikosProperties15);
        atomikosProperties15.setEnableLogging(true);
        atomikosProperties15.forceShutdownOnVmExit = false;
        java.lang.String str32 = atomikosProperties15.getConsoleFileName();
        long long33 = atomikosProperties15.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties15.recovery;
        recovery34.maxRetries = (short) 10;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(recovery34);
    }

    @Test
    public void test06997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06997");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        boolean boolean17 = properties15.isEmpty();
        boolean boolean18 = properties3.equals((java.lang.Object) boolean17);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        java.util.Properties properties21 = new java.util.Properties(properties19);
        java.util.Properties properties22 = new java.util.Properties(properties21);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet20);
    }

    @Test
    public void test06998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06998");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        boolean boolean38 = properties8.contains((java.lang.Object) properties23);
        boolean boolean39 = properties23.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery40.maxRetries = (-1);
        recovery40.setRetryInterval((long) (-1));
        java.lang.Object obj46 = properties23.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel50 = null;
        atomikosProperties47.consoleLogLevel = atomikosLoggingLevel50;
        atomikosProperties47.outputDir = "";
        int int54 = atomikosProperties47.maxActives;
        boolean boolean55 = atomikosProperties47.isThreadedTwoPhaseCommit();
        atomikosProperties47.consoleFileLimit = (short) 10;
        java.util.Properties properties58 = atomikosProperties47.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.keys();
        boolean boolean60 = properties23.contains((java.lang.Object) properties58);
        boolean boolean61 = properties6.equals((java.lang.Object) boolean60);
        java.lang.Object obj62 = properties6.clone();
        java.util.Collection<java.lang.Object> objCollection63 = properties6.values();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertNotNull(objCollection63);
    }

    @Test
    public void test06999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test06999");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.setMaxTimeout(300000L);
        int int11 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.hi!=-1.0}";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test07000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest13.test07000");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 52L;
        long long8 = recovery0.forgetOrphanedLogEntriesDelay;
        long long9 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long10 = recovery0.delay;
        long long11 = recovery0.delay;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 86400000L + "'", long9 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }
}
