import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest11 {

    public static boolean debug = false;

    @Test
    public void test05501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05501");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int15 = atomikosProperties14.getConsoleFileCount();
        int int16 = atomikosProperties14.maxActives;
        atomikosProperties14.setConsoleFileName("");
        atomikosProperties14.transactionManagerUniqueName = "{}";
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        long long28 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        atomikosProperties23.set(properties29, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj36 = properties29.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((-1L));
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.get((java.lang.Object) 0.0d);
        java.lang.Object obj43 = properties40.clone();
        boolean boolean45 = properties29.replace((java.lang.Object) (-1L), obj43, (java.lang.Object) 100.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        java.lang.String str52 = properties47.getProperty("");
        atomikosProperties0.set(properties21, "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) "");
        java.util.Properties properties54 = new java.util.Properties(properties21);
        java.util.Enumeration<?> wildcardEnumeration55 = properties54.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.logBaseDir = "";
        atomikosProperties56.setConsoleFileCount((int) (short) 10);
        long long61 = atomikosProperties56.getMaxTimeout();
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet63 = properties62.keySet();
        atomikosProperties56.set(properties62, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str67 = atomikosProperties56.logBaseDir;
        java.lang.String str68 = atomikosProperties56.logBaseDir;
        java.lang.String str69 = atomikosProperties56.logBaseDir;
        boolean boolean70 = atomikosProperties56.isEnableLogging();
        long long71 = atomikosProperties56.checkpointInterval;
        atomikosProperties56.setOutputDir("hi!");
        long long74 = atomikosProperties56.maxTimeout;
        java.lang.String str75 = atomikosProperties56.logBaseName;
        java.util.Properties properties76 = atomikosProperties56.asProperties();
        java.util.Collection<java.lang.Object> objCollection77 = properties76.values();
        java.lang.Object obj78 = properties54.get((java.lang.Object) objCollection77);
        java.util.Properties properties79 = new java.util.Properties(properties54);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 500L + "'", long71 == 500L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test05502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05502");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str18 = atomikosProperties0.outputDir;
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test05503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05503");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.consoleFileLimit = (byte) 1;
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.storeToXML(outputStream15, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test05504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05504");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = null;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel9;
        atomikosProperties6.outputDir = "";
        int int13 = atomikosProperties6.maxActives;
        boolean boolean14 = atomikosProperties6.isThreadedTwoPhaseCommit();
        atomikosProperties6.consoleFileLimit = (short) 10;
        java.util.Properties properties17 = atomikosProperties6.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        java.lang.String str20 = properties17.getProperty("{true=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        java.lang.String str27 = atomikosProperties22.logBaseName;
        java.lang.String str28 = atomikosProperties22.logBaseDir;
        long long29 = atomikosProperties22.defaultJtaTimeout;
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties22.getRecovery();
        boolean boolean32 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties0.set(properties17, "{true=10000}", (java.lang.Object) boolean32);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.enableLogging = true;
        long long39 = atomikosProperties36.getCheckpointInterval();
        java.lang.String str40 = atomikosProperties36.getService();
        java.lang.String str41 = atomikosProperties36.logBaseDir;
        atomikosProperties36.setEnableLogging(false);
        atomikosProperties36.consoleFileCount = 0;
        long long46 = atomikosProperties36.getMaxTimeout();
        atomikosProperties36.service = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int50 = atomikosProperties49.getConsoleFileCount();
        int int51 = atomikosProperties49.maxActives;
        atomikosProperties49.setEnableLogging(false);
        atomikosProperties49.threadedTwoPhaseCommit = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.enableLogging = true;
        long long59 = atomikosProperties56.getCheckpointInterval();
        java.lang.String str60 = atomikosProperties56.getService();
        java.lang.String str61 = atomikosProperties56.logBaseDir;
        atomikosProperties56.setEnableLogging(false);
        atomikosProperties56.consoleFileCount = 0;
        long long66 = atomikosProperties56.getMaxTimeout();
        boolean boolean67 = atomikosProperties56.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties56.consoleLogLevel;
        atomikosProperties49.consoleLogLevel = atomikosLoggingLevel68;
        atomikosProperties36.consoleLogLevel = atomikosLoggingLevel68;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel68);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(recovery31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 300000L + "'", long46 == 300000L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 500L + "'", long59 == 500L);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05505");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        long long2 = recovery0.getDelay();
        long long3 = recovery0.retryInterval;
        recovery0.forgetOrphanedLogEntriesDelay = 100L;
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int7 = recovery0.getMaxRetries();
        recovery0.setDelay((long) (short) 100);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test05506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05506");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.service = "hi!";
        atomikosProperties0.consoleFileLimit = 5;
        long long8 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
    }

    @Test
    public void test05507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05507");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str21 = atomikosProperties10.service;
        atomikosProperties10.setSerialJtaTransactions(false);
        int int24 = atomikosProperties10.consoleFileLimit;
        boolean boolean25 = atomikosProperties10.isForceShutdownOnVmExit();
        java.lang.Object obj26 = properties8.get((java.lang.Object) atomikosProperties10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test05508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05508");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        java.util.Collection<java.lang.Object> objCollection17 = properties8.values();
        java.util.Properties properties18 = new java.util.Properties(properties8);
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.util.Collection<java.lang.Object> objCollection21 = properties19.values();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objCollection21);
    }

    @Test
    public void test05509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05509");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties4.values();
        java.lang.Object obj8 = properties4.setProperty("hi!", "{}");
        java.lang.String str10 = properties4.getProperty("tmlog");
        properties4.clear();
        java.lang.Object obj12 = properties4.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setLogBaseDir("{}");
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        atomikosProperties14.service = "";
        atomikosProperties14.setTransactionManagerUniqueName("{}");
        atomikosProperties14.enableLogging = false;
        atomikosProperties0.set(properties4, "", (java.lang.Object) atomikosProperties14);
        long long29 = atomikosProperties0.checkpointInterval;
        java.lang.Class<?> wildcardClass30 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test05510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05510");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        int int40 = recovery17.maxRetries;
        recovery17.forgetOrphanedLogEntriesDelay = 500L;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 35 + "'", int40 == 35);
    }

    @Test
    public void test05511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05511");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties0.getRecovery();
        long long17 = recovery16.getForgetOrphanedLogEntriesDelay();
        long long18 = recovery16.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(recovery16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 86400000L + "'", long17 == 86400000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 86400000L + "'", long18 == 86400000L);
    }

    @Test
    public void test05512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05512");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.checkpointInterval = 35;
        boolean boolean22 = atomikosProperties0.forceShutdownOnVmExit;
        long long23 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties26 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertNotNull(properties26);
    }

    @Test
    public void test05513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05513");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery5 = atomikosProperties0.recovery;
        int int6 = recovery5.maxRetries;
        recovery5.delay = 100L;
        recovery5.retryInterval = 50L;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(recovery5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    }

    @Test
    public void test05514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05514");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        boolean boolean8 = atomikosProperties0.enableLogging;
        atomikosProperties0.setConsoleFileLimit(1);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test05515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05515");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 52L;
        long long8 = recovery0.getRetryInterval();
        recovery0.retryInterval = 10;
        long long11 = recovery0.delay;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 52L + "'", long8 == 52L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test05516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05516");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.serialJtaTransactions = false;
        boolean boolean17 = atomikosProperties0.enableLogging;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test05517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05517");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        long long9 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.logBaseDir = "tmlog";
        atomikosProperties0.setOutputDir("tmlog");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
    }

    @Test
    public void test05518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05518");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        java.lang.String str3 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        atomikosProperties0.defaultJtaTimeout = 21L;
        atomikosProperties0.setDefaultJtaTimeout((long) 2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test05519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05519");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        int int10 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str12 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.checkpointInterval = 97L;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05520");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setLogBaseDir("{}");
        java.util.Properties properties15 = atomikosProperties8.asProperties();
        java.util.Set<java.lang.String> strSet16 = properties15.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int18 = atomikosProperties17.getConsoleFileCount();
        int int19 = atomikosProperties17.maxActives;
        atomikosProperties17.setConsoleFileName("");
        atomikosProperties17.transactionManagerUniqueName = "{}";
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        boolean boolean25 = atomikosProperties17.threadedTwoPhaseCommit;
        atomikosProperties17.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int29 = atomikosProperties28.getConsoleFileCount();
        int int30 = atomikosProperties28.maxActives;
        atomikosProperties28.setConsoleFileName("");
        atomikosProperties28.transactionManagerUniqueName = "{}";
        atomikosProperties28.setMaxActives(0);
        boolean boolean37 = atomikosProperties28.forceShutdownOnVmExit;
        java.lang.Object obj38 = properties15.put((java.lang.Object) atomikosProperties17, (java.lang.Object) atomikosProperties28);
        atomikosProperties28.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties28.serialJtaTransactions = true;
        atomikosProperties28.setConsoleFileLimit((int) (short) 10);
        atomikosProperties28.setConsoleFileCount((int) '4');
        boolean boolean47 = properties7.containsKey((java.lang.Object) '4');
        java.io.OutputStream outputStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream48, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test05521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05521");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.checkpointInterval = (short) 1;
        atomikosProperties0.consoleFileCount = 0;
        atomikosProperties0.maxActives = (short) 1;
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.util.Properties properties28 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties28.entrySet();
        java.util.Properties properties30 = new java.util.Properties(properties28);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNotNull(objEntrySet29);
    }

    @Test
    public void test05522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05522");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        boolean boolean17 = properties15.isEmpty();
        boolean boolean18 = properties3.equals((java.lang.Object) boolean17);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.lang.Object obj20 = properties3.clone();
        java.util.Set<java.lang.Object> objSet21 = properties3.keySet();
        java.io.OutputStream outputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream22, "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertNotNull(objSet21);
    }

    @Test
    public void test05523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05523");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxActives((int) (short) 10);
        int int8 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test05524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05524");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.util.Set<java.lang.String> strSet9 = properties1.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Object obj26 = properties13.setProperty("", "");
        java.util.Properties properties27 = new java.util.Properties(properties13);
        java.util.Set<java.lang.Object> objSet28 = properties27.keySet();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties1.containsKey((java.lang.Object) properties29);
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream31, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test05525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05525");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int15 = atomikosProperties14.getConsoleFileCount();
        int int16 = atomikosProperties14.maxActives;
        atomikosProperties14.setConsoleFileName("");
        atomikosProperties14.transactionManagerUniqueName = "{}";
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        long long28 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        atomikosProperties23.set(properties29, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj36 = properties29.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((-1L));
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.get((java.lang.Object) 0.0d);
        java.lang.Object obj43 = properties40.clone();
        boolean boolean45 = properties29.replace((java.lang.Object) (-1L), obj43, (java.lang.Object) 100.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        java.lang.String str52 = properties47.getProperty("");
        atomikosProperties0.set(properties21, "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) "");
        java.util.Properties properties54 = new java.util.Properties(properties21);
        java.util.Enumeration<?> wildcardEnumeration55 = properties54.propertyNames();
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties54.clone();
        boolean boolean58 = properties54.isEmpty();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test05526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05526");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        long long11 = recovery0.getDelay();
        int int12 = recovery0.getMaxRetries();
        long long13 = recovery0.getDelay();
        long long14 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setRetryInterval((long) '4');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
    }

    @Test
    public void test05527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05527");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setMaxActives(5);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        long long16 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
    }

    @Test
    public void test05528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05528");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.checkpointInterval = 100;
        int int9 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.maxActives = 10;
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05529");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int15 = atomikosProperties0.getConsoleFileCount();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.transactionManagerUniqueName = "{{}=tmlog}";
        java.lang.String str19 = atomikosProperties0.getLogBaseDir();
        java.lang.String str20 = atomikosProperties0.outputDir;
        int int21 = atomikosProperties0.consoleFileCount;
        java.lang.String str22 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str22, "{com.atomikos.icatch.hi!=-1.0}");
    }

    @Test
    public void test05530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05530");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((-1L));
        int int23 = atomikosProperties20.getConsoleFileLimit();
        java.util.Properties properties24 = atomikosProperties20.asProperties();
        atomikosProperties20.consoleFileLimit = 0;
        boolean boolean27 = properties19.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties19.entrySet();
        java.util.Properties properties29 = new java.util.Properties(properties19);
        java.io.InputStream inputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.loadFromXML(inputStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEntrySet28);
    }

    @Test
    public void test05531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05531");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        atomikosProperties9.setConsoleFileCount((int) '4');
        int int33 = atomikosProperties9.getConsoleFileLimit();
        boolean boolean34 = atomikosProperties9.allowSubTransactions;
        long long35 = atomikosProperties9.getDefaultJtaTimeout();
        java.lang.String str36 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.threadedTwoPhaseCommit = false;
        boolean boolean39 = atomikosProperties9.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test05532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05532");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        boolean boolean20 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str21 = atomikosProperties0.consoleFileName;
        atomikosProperties0.forceShutdownOnVmExit = true;
        long long24 = atomikosProperties0.defaultJtaTimeout;
        long long25 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Collection<java.lang.Object> objCollection28 = properties27.values();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection31 = properties29.values();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        boolean boolean33 = properties27.contains((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        java.lang.String str40 = atomikosProperties35.logBaseName;
        atomikosProperties35.outputDir = "";
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        java.util.Properties properties44 = atomikosProperties35.asProperties();
        boolean boolean45 = properties27.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties35);
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setOutputDir("{{}={}}");
        java.lang.String str50 = atomikosProperties35.outputDir;
        boolean boolean51 = atomikosProperties35.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.logBaseDir = "";
        atomikosProperties52.setConsoleFileCount((int) (short) 10);
        long long57 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.service = "";
        java.lang.String str60 = atomikosProperties52.logBaseDir;
        boolean boolean61 = atomikosProperties52.threadedTwoPhaseCommit;
        java.lang.String str62 = atomikosProperties52.getService();
        java.lang.String str63 = atomikosProperties52.consoleFileName;
        java.lang.String str64 = atomikosProperties52.service;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties35.consoleLogLevel = atomikosLoggingLevel65;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel65);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{{}={}}" + "'", str50, "{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 300000L + "'", long57 == 300000L);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05533");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.allowSubTransactions = true;
        java.lang.String str11 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test05534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05534");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet14 = properties6.keySet();
        java.lang.String str15 = properties6.toString();
        java.lang.String str16 = properties6.toString();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objSet14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.hi!=-1.0, =hi!}" + "'", str15, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{com.atomikos.icatch.hi!=-1.0, =hi!}" + "'", str16, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
    }

    @Test
    public void test05535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05535");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
    }

    @Test
    public void test05536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05536");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.outputDir;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int18 = atomikosProperties0.maxActives;
        boolean boolean19 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.maxActives = (byte) 1;
        long long22 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
    }

    @Test
    public void test05537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05537");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.util.Enumeration<?> wildcardEnumeration22 = properties13.propertyNames();
        java.lang.Object obj23 = properties8.get((java.lang.Object) properties13);
        java.util.Properties properties24 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        java.lang.String str30 = atomikosProperties25.logBaseName;
        java.lang.String str31 = atomikosProperties25.logBaseDir;
        java.lang.String str32 = atomikosProperties25.logBaseDir;
        atomikosProperties25.maxActives = 50;
        boolean boolean35 = properties24.containsValue((java.lang.Object) atomikosProperties25);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test05538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05538");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        atomikosProperties10.setLogBaseDir("{}");
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        atomikosProperties10.service = "";
        boolean boolean20 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.maxActives = (byte) 1;
        atomikosProperties10.setConsoleFileCount(100);
        atomikosProperties10.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        atomikosProperties10.setService("tmlog");
        boolean boolean29 = atomikosProperties10.threadedTwoPhaseCommit;
        java.lang.String str30 = atomikosProperties10.logBaseName;
        java.lang.String str31 = atomikosProperties10.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        java.lang.String str37 = atomikosProperties32.logBaseName;
        atomikosProperties32.outputDir = "";
        java.util.Properties properties40 = atomikosProperties32.asProperties();
        int int41 = atomikosProperties32.getConsoleFileLimit();
        atomikosProperties32.defaultJtaTimeout = (byte) 1;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties32.consoleLogLevel;
        atomikosProperties10.consoleLogLevel = atomikosLoggingLevel44;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel44);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05539");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        boolean boolean11 = atomikosProperties8.isForceShutdownOnVmExit();
        int int12 = atomikosProperties8.consoleFileLimit;
        atomikosProperties8.consoleFileCount = 100;
        boolean boolean15 = atomikosProperties8.threadedTwoPhaseCommit;
        atomikosProperties8.enableLogging = true;
        java.lang.String str18 = atomikosProperties8.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        java.lang.String str24 = atomikosProperties19.logBaseName;
        atomikosProperties19.outputDir = "";
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = atomikosProperties19.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties35.keys();
        int int41 = properties35.size();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties35.elements();
        properties35.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery44.maxRetries = (-1);
        recovery44.setDelay((long) (short) 0);
        long long49 = recovery44.forgetOrphanedLogEntriesDelay;
        recovery44.retryInterval = 500L;
        recovery44.retryInterval = '4';
        long long54 = recovery44.getRetryInterval();
        long long55 = recovery44.getForgetOrphanedLogEntriesDelay();
        recovery44.retryInterval = 100L;
        recovery44.setDelay((long) ' ');
        long long60 = recovery44.delay;
        java.lang.Object obj61 = properties28.putIfAbsent((java.lang.Object) properties35, (java.lang.Object) recovery44);
        java.util.Collection<java.lang.Object> objCollection62 = properties28.values();
        boolean boolean63 = properties7.remove((java.lang.Object) atomikosProperties8, (java.lang.Object) objCollection62);
        atomikosProperties8.consoleFileCount = (-1);
        atomikosProperties8.setMaxActives(52);
        atomikosProperties8.defaultJtaTimeout = 19L;
        atomikosProperties8.setConsoleFileLimit(5);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 86400000L + "'", long49 == 86400000L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 52L + "'", long54 == 52L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 86400000L + "'", long55 == 86400000L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 32L + "'", long60 == 32L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test05540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05540");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        boolean boolean4 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str5 = atomikosProperties0.logBaseName;
        boolean boolean6 = atomikosProperties0.isSerialJtaTransactions();
        long long7 = atomikosProperties0.getMaxTimeout();
        boolean boolean8 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.consoleFileLimit = 100;
        atomikosProperties0.consoleFileLimit = (short) -1;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05541");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount(0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.consoleLogLevel;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test05542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05542");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        java.util.Set<java.lang.String> strSet17 = properties13.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        boolean boolean19 = properties13.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj33 = properties26.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setDefaultJtaTimeout((-1L));
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = properties37.clone();
        boolean boolean42 = properties26.replace((java.lang.Object) (-1L), obj40, (java.lang.Object) 100.0d);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        properties44.clear();
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties26.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties26.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.enableLogging = true;
        int int52 = atomikosProperties49.consoleFileLimit;
        atomikosProperties49.logBaseName = "hi!";
        boolean boolean55 = atomikosProperties49.isThreadedTwoPhaseCommit();
        boolean boolean56 = atomikosProperties49.enableLogging;
        java.util.Properties properties57 = atomikosProperties49.asProperties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean60 = properties58.containsValue((java.lang.Object) 100.0f);
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.lang.Object obj62 = properties26.clone();
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery64 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery64.maxRetries = (-1);
        recovery64.setDelay((long) (short) 0);
        recovery64.maxRetries = (short) -1;
        recovery64.setForgetOrphanedLogEntriesDelay(500L);
        long long73 = recovery64.delay;
        long long74 = recovery64.forgetOrphanedLogEntriesDelay;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setDefaultJtaTimeout((-1L));
        int int78 = atomikosProperties75.getConsoleFileLimit();
        java.util.Properties properties79 = atomikosProperties75.asProperties();
        boolean boolean80 = atomikosProperties75.forceShutdownOnVmExit;
        atomikosProperties75.setCheckpointInterval(10000L);
        java.lang.Object obj83 = properties13.put((java.lang.Object) recovery64, (java.lang.Object) atomikosProperties75);
        java.util.Properties properties84 = new java.util.Properties(properties13);
        java.util.Properties properties85 = new java.util.Properties(properties84);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(obj62);
// flaky:         org.junit.Assert.assertEquals(obj62.toString(), "{com.atomikos.icatch.hi!=-1.0, =hi!}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{com.atomikos.icatch.hi!=-1.0, =hi!}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{com.atomikos.icatch.hi!=-1.0, =hi!}");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 500L + "'", long74 == 500L);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test05543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05543");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        long long6 = atomikosProperties0.getCheckpointInterval();
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setConsoleFileName("{}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test05544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05544");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "";
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        atomikosProperties0.checkpointInterval = (-1L);
        int int16 = atomikosProperties0.consoleFileCount;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties0.recovery;
        int int18 = recovery17.maxRetries;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(recovery17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
    }

    @Test
    public void test05545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05545");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean3 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.transactionManagerUniqueName = "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}";
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
    }

    @Test
    public void test05546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05546");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05547");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties0.getRecovery();
        boolean boolean21 = atomikosProperties0.enableLogging;
        java.util.Properties properties22 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(recovery20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(properties22);
    }

    @Test
    public void test05548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05548");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long16 = atomikosProperties15.defaultJtaTimeout;
        atomikosProperties15.logBaseName = "tm.out";
        java.lang.String str19 = atomikosProperties15.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties15.consoleLogLevel;
        java.lang.String str21 = atomikosProperties15.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        long long27 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        atomikosProperties22.set(properties28, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str33 = atomikosProperties22.logBaseDir;
        java.lang.String str34 = atomikosProperties22.logBaseDir;
        java.lang.String str35 = atomikosProperties22.logBaseDir;
        java.lang.String str36 = atomikosProperties22.getService();
        java.lang.String str37 = atomikosProperties22.outputDir;
        atomikosProperties22.setSerialJtaTransactions(true);
        java.lang.Object obj40 = properties14.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) atomikosProperties22);
        atomikosProperties15.forceShutdownOnVmExit = false;
        atomikosProperties15.logBaseDir = "tm.out";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test05549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05549");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        long long3 = recovery0.getDelay();
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long5 = recovery0.getDelay();
        long long6 = recovery0.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 86400000L + "'", long4 == 86400000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 86400000L + "'", long6 == 86400000L);
    }

    @Test
    public void test05550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05550");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Set<java.lang.String> strSet32 = properties30.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        java.lang.String str38 = atomikosProperties33.logBaseName;
        atomikosProperties33.outputDir = "";
        java.util.Properties properties41 = atomikosProperties33.asProperties();
        java.util.Set<java.lang.String> strSet42 = properties41.stringPropertyNames();
        boolean boolean43 = properties30.containsKey((java.lang.Object) properties41);
        java.util.Properties properties44 = new java.util.Properties(properties41);
        java.util.Set<java.lang.String> strSet45 = properties41.stringPropertyNames();
        java.lang.Object obj46 = properties41.clone();
        java.lang.String str48 = properties41.getProperty("{true=10000}");
        java.lang.String str50 = properties41.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(obj46);
// flaky:         org.junit.Assert.assertEquals(obj46.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test05551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05551");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str18 = atomikosProperties0.consoleFileName;
        atomikosProperties0.checkpointInterval = (byte) 1;
        atomikosProperties0.setDefaultJtaTimeout((long) 18);
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
    }

    @Test
    public void test05552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05552");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties27 = new java.util.Properties(properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long29 = atomikosProperties28.defaultJtaTimeout;
        java.lang.String str30 = atomikosProperties28.getLogBaseName();
        atomikosProperties28.allowSubTransactions = true;
        boolean boolean33 = atomikosProperties28.enableLogging;
        atomikosProperties28.service = "";
        atomikosProperties28.logBaseDir = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long39 = recovery38.getRetryInterval();
        recovery38.delay = 10L;
        recovery38.setForgetOrphanedLogEntriesDelay(0L);
        long long44 = recovery38.getRetryInterval();
        recovery38.maxRetries = 1;
        long long47 = recovery38.forgetOrphanedLogEntriesDelay;
        recovery38.retryInterval = 5;
        recovery38.delay = 50;
        java.util.Properties properties52 = new java.util.Properties();
        java.lang.Object obj54 = properties52.get((java.lang.Object) 0.0d);
        java.lang.Object obj55 = properties52.clone();
        java.lang.String str56 = properties52.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.logBaseDir = "";
        atomikosProperties57.setConsoleFileCount((int) (short) 10);
        atomikosProperties57.setLogBaseDir("{}");
        boolean boolean64 = atomikosProperties57.isSerialJtaTransactions();
        java.lang.Object obj66 = properties52.putIfAbsent((java.lang.Object) boolean64, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties52.entrySet();
        java.lang.String str68 = properties52.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = null;
        atomikosProperties69.consoleLogLevel = atomikosLoggingLevel72;
        atomikosProperties69.outputDir = "";
        java.lang.String str76 = atomikosProperties69.logBaseDir;
        java.lang.String str77 = atomikosProperties69.logBaseDir;
        java.lang.Class<?> wildcardClass78 = atomikosProperties69.getClass();
        boolean boolean79 = properties52.containsValue((java.lang.Object) atomikosProperties69);
        boolean boolean80 = properties6.replace((java.lang.Object) atomikosProperties28, (java.lang.Object) recovery38, (java.lang.Object) atomikosProperties69);
        atomikosProperties28.logBaseName = "{true=10000}";
        java.lang.String str83 = atomikosProperties28.getConsoleFileName();
        boolean boolean84 = atomikosProperties28.enableLogging;
        atomikosProperties28.consoleFileCount = '#';
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{true=10000}" + "'", str68, "{true=10000}");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tm.out" + "'", str83, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test05553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05553");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        recovery0.maxRetries = 'a';
        int int17 = recovery0.maxRetries;
        long long18 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setMaxRetries(19);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test05554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05554");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long3 = recovery2.getRetryInterval();
        long long4 = recovery2.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setDefaultJtaTimeout((-1L));
        int int8 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties9 = atomikosProperties5.asProperties();
        boolean boolean10 = atomikosProperties5.forceShutdownOnVmExit;
        long long11 = atomikosProperties5.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long13 = atomikosProperties12.defaultJtaTimeout;
        atomikosProperties12.logBaseName = "tm.out";
        boolean boolean16 = properties0.replace((java.lang.Object) recovery2, (java.lang.Object) long11, (java.lang.Object) atomikosProperties12);
        java.util.Properties properties17 = new java.util.Properties(properties0);
        java.lang.String str20 = properties17.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10000, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=10, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}" + "'", str20, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}");
    }

    @Test
    public void test05555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05555");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.keys();
        java.lang.String str14 = properties11.getProperty("{true=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        java.lang.String str20 = atomikosProperties15.logBaseName;
        atomikosProperties15.outputDir = "";
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        java.util.Properties properties24 = atomikosProperties15.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        long long30 = atomikosProperties25.getMaxTimeout();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet32 = properties31.keySet();
        atomikosProperties25.set(properties31, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties31.keys();
        int int37 = properties31.size();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties31.elements();
        properties31.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery40.maxRetries = (-1);
        recovery40.setDelay((long) (short) 0);
        long long45 = recovery40.forgetOrphanedLogEntriesDelay;
        recovery40.retryInterval = 500L;
        recovery40.retryInterval = '4';
        long long50 = recovery40.getRetryInterval();
        long long51 = recovery40.getForgetOrphanedLogEntriesDelay();
        recovery40.retryInterval = 100L;
        recovery40.setDelay((long) ' ');
        long long56 = recovery40.delay;
        java.lang.Object obj57 = properties24.putIfAbsent((java.lang.Object) properties31, (java.lang.Object) recovery40);
        java.util.Collection<java.lang.Object> objCollection58 = properties24.values();
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.get((java.lang.Object) 0.0d);
        java.util.Set<java.lang.Object> objSet62 = properties59.keySet();
        boolean boolean63 = properties11.remove((java.lang.Object) objCollection58, (java.lang.Object) objSet62);
        int int64 = properties11.size();
        java.lang.Object obj65 = properties11.clone();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 86400000L + "'", long45 == 86400000L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 52L + "'", long50 == 52L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 86400000L + "'", long51 == 86400000L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 32L + "'", long56 == 32L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objCollection58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 18 + "'", int64 == 18);
        org.junit.Assert.assertNotNull(obj65);
// flaky:         org.junit.Assert.assertEquals(obj65.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
    }

    @Test
    public void test05556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05556");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setService("");
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setService("{}");
        atomikosProperties0.enableLogging = true;
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties0.recovery;
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(recovery20);
    }

    @Test
    public void test05557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05557");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.hi!=-1.0}";
        java.lang.String str10 = atomikosProperties0.outputDir;
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05558");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.maxTimeout = 100;
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int12 = atomikosProperties0.consoleFileCount;
        java.lang.String str13 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05559");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        long long18 = atomikosProperties0.maxTimeout;
        long long19 = atomikosProperties0.maxTimeout;
        java.lang.String str20 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test05560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05560");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.enableLogging = true;
        long long11 = atomikosProperties8.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties8.getService();
        java.lang.String str13 = atomikosProperties8.logBaseDir;
        atomikosProperties8.setEnableLogging(false);
        atomikosProperties8.consoleFileCount = 0;
        long long18 = atomikosProperties8.getMaxTimeout();
        int int19 = atomikosProperties8.consoleFileLimit;
        java.util.Properties properties20 = atomikosProperties8.asProperties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        int int24 = atomikosProperties22.maxActives;
        atomikosProperties22.setConsoleFileName("");
        atomikosProperties22.transactionManagerUniqueName = "{}";
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties36.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((-1L));
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.get((java.lang.Object) 0.0d);
        java.lang.Object obj50 = properties47.clone();
        boolean boolean52 = properties36.replace((java.lang.Object) (-1L), obj50, (java.lang.Object) 100.0d);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        java.lang.String str59 = properties54.getProperty("");
        java.util.Properties properties60 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int63 = atomikosProperties62.getConsoleFileCount();
        int int64 = atomikosProperties62.maxActives;
        atomikosProperties62.setEnableLogging(true);
        boolean boolean67 = atomikosProperties62.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties62.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.logBaseDir = "";
        atomikosProperties69.setConsoleFileCount((int) (short) 10);
        long long74 = atomikosProperties69.getMaxTimeout();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet76 = properties75.keySet();
        atomikosProperties69.set(properties75, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str80 = atomikosProperties69.logBaseDir;
        boolean boolean81 = atomikosProperties69.enableLogging;
        java.lang.Object obj82 = properties60.putIfAbsent((java.lang.Object) atomikosLoggingLevel68, (java.lang.Object) atomikosProperties69);
        boolean boolean83 = properties3.replace((java.lang.Object) properties20, (java.lang.Object) atomikosProperties22, (java.lang.Object) atomikosLoggingLevel68);
        atomikosProperties22.threadedTwoPhaseCommit = true;
        atomikosProperties22.setMaxTimeout((long) 0);
        java.lang.String str88 = atomikosProperties22.consoleFileName;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 50 + "'", int64 == 50);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
    }

    @Test
    public void test05561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05561");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        int int13 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties20.keys();
        int int26 = properties20.size();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getConsoleFileCount();
        int int31 = atomikosProperties29.maxActives;
        java.lang.String str32 = atomikosProperties29.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setCheckpointInterval(10000L);
        long long40 = atomikosProperties33.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties29.consoleLogLevel = atomikosLoggingLevel41;
        atomikosProperties0.set(properties20, "tmlog", (java.lang.Object) atomikosLoggingLevel41);
        java.util.Properties properties44 = new java.util.Properties(properties20);
        java.io.Reader reader45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.load(reader45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05562");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        atomikosProperties43.consoleFileCount = (byte) 100;
        boolean boolean62 = atomikosProperties43.serialJtaTransactions;
        atomikosProperties43.consoleFileLimit = (byte) 100;
        boolean boolean65 = atomikosProperties43.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test05563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05563");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 5;
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.forgetOrphanedLogEntriesDelay = 500L;
        int int15 = recovery0.getMaxRetries();
        recovery0.retryInterval = 10;
        long long18 = recovery0.retryInterval;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10L + "'", long18 == 10L);
    }

    @Test
    public void test05564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05564");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.maxActives = 50;
        boolean boolean10 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05565");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setService("");
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setService("{}");
        long long13 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setConsoleFileName("{{}=tmlog}");
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test05566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05566");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        boolean boolean38 = properties8.contains((java.lang.Object) properties23);
        boolean boolean39 = properties23.isEmpty();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.lang.Object obj45 = properties41.setProperty("hi!", "{}");
        java.lang.String str47 = properties41.getProperty("tmlog");
        properties41.clear();
        java.util.Set<java.lang.String> strSet49 = properties41.stringPropertyNames();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.enableLogging = true;
        int int55 = atomikosProperties52.consoleFileLimit;
        atomikosProperties52.logBaseName = "hi!";
        atomikosProperties52.enableLogging = false;
        atomikosProperties52.setMaxTimeout((long) '4');
        atomikosProperties52.setMaxTimeout((long) 1);
        atomikosProperties0.set(properties23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) 1);
        java.lang.String str65 = atomikosProperties0.getOutputDir();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.serialJtaTransactions = true;
        java.lang.String str70 = atomikosProperties0.getService();
        java.lang.String str71 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test05567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05567");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseName;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.String str13 = properties9.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setLogBaseDir("{}");
        boolean boolean21 = atomikosProperties14.isSerialJtaTransactions();
        java.lang.Object obj23 = properties9.putIfAbsent((java.lang.Object) boolean21, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties9.entrySet();
        java.lang.String str25 = properties9.toString();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setCheckpointInterval(10000L);
        long long34 = atomikosProperties27.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties27.consoleLogLevel = atomikosLoggingLevel35;
        atomikosProperties27.maxActives = 50;
        java.util.Properties properties39 = atomikosProperties27.asProperties();
        java.lang.Object obj40 = properties9.remove((java.lang.Object) atomikosProperties27);
        java.lang.Class<?> wildcardClass41 = properties9.getClass();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{true=10000}" + "'", str25, "{true=10000}");
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test05568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05568");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setLogBaseDir("{}");
        java.util.Properties properties13 = atomikosProperties6.asProperties();
        java.util.Set<java.lang.String> strSet14 = properties13.stringPropertyNames();
        boolean boolean15 = properties4.containsValue((java.lang.Object) properties13);
        java.util.Collection<java.lang.Object> objCollection16 = properties13.values();
        java.util.Properties properties17 = new java.util.Properties(properties13);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objCollection16);
    }

    @Test
    public void test05569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05569");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        java.util.Set<java.lang.String> strSet58 = properties40.stringPropertyNames();
        java.util.Properties properties59 = new java.util.Properties(properties40);
        java.util.Properties properties60 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.logBaseDir = "";
        atomikosProperties61.setConsoleFileCount((int) (short) 10);
        long long66 = atomikosProperties61.getMaxTimeout();
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet68 = properties67.keySet();
        atomikosProperties61.set(properties67, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj74 = properties67.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setDefaultJtaTimeout((-1L));
        java.util.Properties properties78 = new java.util.Properties();
        java.lang.Object obj80 = properties78.get((java.lang.Object) 0.0d);
        java.lang.Object obj81 = properties78.clone();
        boolean boolean83 = properties67.replace((java.lang.Object) (-1L), obj81, (java.lang.Object) 100.0d);
        java.util.Properties properties84 = new java.util.Properties();
        java.util.Properties properties85 = new java.util.Properties(properties84);
        properties85.clear();
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties85);
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties85.elements();
        java.lang.String str90 = properties85.getProperty("");
        java.util.Properties properties91 = new java.util.Properties(properties85);
        java.util.Properties properties92 = new java.util.Properties(properties91);
        boolean boolean93 = properties92.isEmpty();
        boolean boolean94 = properties10.remove((java.lang.Object) properties40, (java.lang.Object) properties92);
        java.lang.Object obj95 = properties10.clone();
        java.lang.Object obj98 = properties10.setProperty("{com.atomikos.icatch.hi!=-1.0, =hi!}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertEquals(obj81.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj81), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj81), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objEnumeration88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "{}");
        org.junit.Assert.assertNull(obj98);
    }

    @Test
    public void test05570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05570");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.logBaseName;
        atomikosProperties9.outputDir = "";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.logBaseDir = "";
        atomikosProperties18.setConsoleFileCount((int) (short) 10);
        long long23 = atomikosProperties18.getMaxTimeout();
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet25 = properties24.keySet();
        atomikosProperties18.set(properties24, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj31 = properties24.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setLogBaseDir("{}");
        java.lang.String str40 = atomikosProperties33.getOutputDir();
        atomikosProperties9.set(properties24, "{}", (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties9.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties9.consoleLogLevel;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel43;
        atomikosProperties0.setDefaultJtaTimeout(32L);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05571");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        long long18 = atomikosProperties0.maxTimeout;
        atomikosProperties0.outputDir = "tmlog";
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.io.Reader reader22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.load(reader22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test05572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05572");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.Object> objSet31 = properties24.keySet();
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        java.lang.String str37 = properties33.toString();
        boolean boolean40 = properties33.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj41 = null;
        boolean boolean42 = properties33.equals(obj41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.enableLogging = true;
        long long46 = atomikosProperties43.getCheckpointInterval();
        java.lang.String str47 = atomikosProperties43.getService();
        java.lang.String str48 = atomikosProperties43.logBaseDir;
        atomikosProperties43.setEnableLogging(false);
        boolean boolean51 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Collection<java.lang.Object> objCollection57 = properties56.values();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Collection<java.lang.Object> objCollection60 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.keys();
        boolean boolean62 = properties56.contains((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.logBaseDir = "";
        atomikosProperties64.setConsoleFileCount((int) (short) 10);
        java.lang.String str69 = atomikosProperties64.logBaseName;
        atomikosProperties64.outputDir = "";
        java.util.Properties properties72 = atomikosProperties64.asProperties();
        java.util.Properties properties73 = atomikosProperties64.asProperties();
        boolean boolean74 = properties56.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties64);
        java.lang.Object obj75 = properties33.getOrDefault((java.lang.Object) atomikosProperties43, (java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.logBaseDir = "";
        atomikosProperties76.setConsoleFileCount((int) (short) 10);
        atomikosProperties76.setLogBaseDir("{}");
        boolean boolean83 = atomikosProperties76.isSerialJtaTransactions();
        boolean boolean84 = atomikosProperties76.allowSubTransactions;
        atomikosProperties76.consoleFileLimit = 50;
        atomikosProperties76.maxActives = (-1);
        java.lang.Object obj89 = properties24.replace(obj75, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setForceShutdownOnVmExit(false);
        atomikosProperties76.service = "{com.atomikos.icatch.hi!=-1.0, =hi!}";
        atomikosProperties76.serialJtaTransactions = false;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test05573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05573");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "hi!";
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.maxActives = (-1);
        atomikosProperties0.enableLogging = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test05574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05574");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet9 = properties8.keySet();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.util.Enumeration<?> wildcardEnumeration22 = properties13.propertyNames();
        java.lang.Object obj23 = properties8.get((java.lang.Object) properties13);
        java.util.Properties properties24 = new java.util.Properties(properties8);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties8.entrySet();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(wildcardEnumeration22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEntrySet25);
    }

    @Test
    public void test05575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05575");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long3 = recovery2.getRetryInterval();
        long long4 = recovery2.getDelay();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setDefaultJtaTimeout((-1L));
        int int8 = atomikosProperties5.getConsoleFileLimit();
        java.util.Properties properties9 = atomikosProperties5.asProperties();
        boolean boolean10 = atomikosProperties5.forceShutdownOnVmExit;
        long long11 = atomikosProperties5.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long13 = atomikosProperties12.defaultJtaTimeout;
        atomikosProperties12.logBaseName = "tm.out";
        boolean boolean16 = properties0.replace((java.lang.Object) recovery2, (java.lang.Object) long11, (java.lang.Object) atomikosProperties12);
        java.lang.Object obj19 = properties0.setProperty("tm.out", "{{}={}}");
        int int20 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties0.elements();
        properties0.clear();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(objEnumeration21);
    }

    @Test
    public void test05576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05576");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        atomikosProperties9.setConsoleFileCount((int) '4');
        int int33 = atomikosProperties9.getConsoleFileLimit();
        java.util.Properties properties34 = atomikosProperties9.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long36 = recovery35.getRetryInterval();
        recovery35.delay = 10L;
        recovery35.setForgetOrphanedLogEntriesDelay(0L);
        long long41 = recovery35.getRetryInterval();
        recovery35.retryInterval = 5;
        long long44 = recovery35.getDelay();
        recovery35.maxRetries = 0;
        recovery35.forgetOrphanedLogEntriesDelay = 100;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.logBaseDir = "";
        atomikosProperties50.setConsoleFileCount((int) (short) 10);
        long long55 = atomikosProperties50.getMaxTimeout();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet57 = properties56.keySet();
        atomikosProperties50.set(properties56, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str61 = atomikosProperties50.service;
        atomikosProperties50.setSerialJtaTransactions(false);
        int int64 = atomikosProperties50.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.logBaseDir = "";
        atomikosProperties65.setConsoleFileCount((int) (short) 10);
        java.lang.String str70 = atomikosProperties65.logBaseName;
        java.lang.String str71 = atomikosProperties65.logBaseDir;
        int int72 = atomikosProperties65.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties65.getConsoleLogLevel();
        atomikosProperties50.setConsoleLogLevel(atomikosLoggingLevel73);
        boolean boolean75 = properties34.replace((java.lang.Object) recovery35, (java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) atomikosLoggingLevel73);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10L + "'", long44 == 10L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test05577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05577");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setConsoleFileLimit(100);
        atomikosProperties0.allowSubTransactions = false;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
    }

    @Test
    public void test05578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05578");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        atomikosProperties0.setConsoleFileCount((int) '4');
        atomikosProperties0.enableLogging = false;
        boolean boolean43 = atomikosProperties0.enableLogging;
        int int44 = atomikosProperties0.consoleFileLimit;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test05579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05579");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        recovery0.setMaxRetries((int) 'a');
        int int7 = recovery0.maxRetries;
        recovery0.forgetOrphanedLogEntriesDelay = 18L;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 97 + "'", int7 == 97);
    }

    @Test
    public void test05580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05580");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.lang.Object obj10 = properties9.clone();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
    }

    @Test
    public void test05581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05581");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        atomikosProperties4.set(properties10, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        boolean boolean26 = properties10.replace((java.lang.Object) (-1L), obj24, (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        long long33 = atomikosProperties28.getMaxTimeout();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        atomikosProperties28.set(properties34, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj41 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.get((java.lang.Object) 0.0d);
        java.lang.Object obj48 = properties45.clone();
        boolean boolean50 = properties34.replace((java.lang.Object) (-1L), obj48, (java.lang.Object) 100.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        java.lang.String str57 = properties52.getProperty("");
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.get((java.lang.Object) 0.0d);
        java.lang.Object obj61 = properties58.clone();
        java.lang.String str62 = properties58.toString();
        boolean boolean64 = properties52.remove((java.lang.Object) properties58, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration65 = properties52.propertyNames();
        atomikosProperties0.set(properties10, "hi!", (java.lang.Object) wildcardEnumeration65);
        java.lang.String str67 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery68 = atomikosProperties0.getRecovery();
        atomikosProperties0.setMaxTimeout((long) (-1));
        atomikosProperties0.setMaxActives((int) (short) 100);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(recovery68);
    }

    @Test
    public void test05582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05582");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setConsoleFileCount((int) (short) 10);
        atomikosProperties2.setCheckpointInterval(10000L);
        long long9 = atomikosProperties2.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties2.consoleLogLevel = atomikosLoggingLevel10;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel10;
        java.lang.String str13 = atomikosProperties0.getService();
        boolean boolean14 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        atomikosProperties0.consoleFileLimit = 5;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05583");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Collection<java.lang.Object> objCollection4 = properties2.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.lang.Object obj7 = properties0.put((java.lang.Object) objEnumeration5, (java.lang.Object) (-1.0d));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        long long13 = atomikosProperties8.getMaxTimeout();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        atomikosProperties8.set(properties14, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str19 = atomikosProperties8.logBaseDir;
        java.lang.String str20 = atomikosProperties8.logBaseDir;
        java.util.Properties properties21 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        int int24 = atomikosProperties22.maxActives;
        atomikosProperties22.setConsoleFileName("");
        atomikosProperties22.transactionManagerUniqueName = "{}";
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        java.lang.String str37 = atomikosProperties32.transactionManagerUniqueName;
        long long38 = atomikosProperties32.getDefaultJtaTimeout();
        long long39 = atomikosProperties32.checkpointInterval;
        java.lang.String str40 = atomikosProperties32.consoleFileName;
        atomikosProperties32.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj43 = properties0.putIfAbsent((java.lang.Object) properties30, (java.lang.Object) atomikosProperties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        java.lang.String str49 = atomikosProperties44.logBaseName;
        atomikosProperties44.outputDir = "";
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.lang.String str53 = atomikosProperties44.getTransactionManagerUniqueName();
        int int54 = atomikosProperties44.consoleFileLimit;
        boolean boolean55 = properties0.equals((java.lang.Object) int54);
        java.lang.Object obj56 = properties0.clone();
        java.io.PrintStream printStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 50 + "'", int24 == 50);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tm.out" + "'", str40, "tm.out");
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(obj56);
    }

    @Test
    public void test05584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05584");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        boolean boolean12 = atomikosProperties9.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.logBaseDir = "";
        atomikosProperties13.setConsoleFileCount((int) (short) 10);
        long long18 = atomikosProperties13.getMaxTimeout();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        atomikosProperties13.set(properties19, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj26 = properties19.setProperty("", "hi!");
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Collection<java.lang.Object> objCollection29 = properties27.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean31 = properties19.remove((java.lang.Object) objCollection29, (java.lang.Object) atomikosLoggingLevel30);
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties0.setConsoleFileLimit(100);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = atomikosProperties0.recovery;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(recovery36);
    }

    @Test
    public void test05585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05585");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxTimeout(500L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test05586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05586");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream13, "{{}=tmlog}", "{tmlog={com.atomikos.icatch.hi!=-1.0}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test05587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05587");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        atomikosProperties0.setMaxTimeout((long) (short) 0);
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.consoleFileName = "";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str26 = atomikosProperties0.getOutputDir();
        int int27 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test05588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05588");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str18 = atomikosProperties0.outputDir;
        atomikosProperties0.allowSubTransactions = true;
        long long21 = atomikosProperties0.getCheckpointInterval();
        boolean boolean22 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.defaultJtaTimeout = 97;
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test05589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05589");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = properties15.replace((java.lang.Object) 10.0d, (java.lang.Object) properties17);
        java.lang.String str26 = properties17.toString();
        java.util.Properties properties27 = new java.util.Properties(properties17);
        java.lang.Object obj30 = properties17.setProperty("", "");
        java.util.Properties properties31 = new java.util.Properties(properties17);
        java.util.Set<java.lang.Object> objSet32 = properties31.keySet();
        java.util.Properties properties33 = new java.util.Properties(properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery34.maxRetries = (-1);
        recovery34.setDelay((long) (short) 0);
        recovery34.maxRetries = 0;
        recovery34.setMaxRetries((int) '#');
        int int43 = recovery34.maxRetries;
        int int44 = recovery34.getMaxRetries();
        long long45 = recovery34.getForgetOrphanedLogEntriesDelay();
        long long46 = recovery34.retryInterval;
        java.lang.Object obj47 = properties6.putIfAbsent((java.lang.Object) properties33, (java.lang.Object) recovery34);
        recovery34.setMaxRetries((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 35 + "'", int43 == 35);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 35 + "'", int44 == 35);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 86400000L + "'", long45 == 86400000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test05590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05590");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.lang.Object obj15 = properties12.getOrDefault((java.lang.Object) false, (java.lang.Object) "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties12.keys();
        java.lang.Object obj17 = properties12.clone();
        java.io.Reader reader18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.load(reader18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + obj15 + "' != '" + "{}" + "'", obj15, "{}");
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
    }

    @Test
    public void test05591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05591");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        recovery17.maxRetries = (byte) 100;
        int int42 = recovery17.getMaxRetries();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    }

    @Test
    public void test05592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05592");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        atomikosProperties20.consoleFileName = "";
        int int39 = atomikosProperties20.maxActives;
        java.util.Properties properties40 = atomikosProperties20.asProperties();
        int int41 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileCount((int) ' ');
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
    }

    @Test
    public void test05593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05593");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        long long6 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseDir = "{hi!={}}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05594");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        int int7 = atomikosProperties0.getConsoleFileLimit();
        int int8 = atomikosProperties0.getConsoleFileCount();
        boolean boolean9 = atomikosProperties0.enableLogging;
        atomikosProperties0.allowSubTransactions = true;
        long long12 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setMaxTimeout((long) 22);
        java.lang.String str15 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
    }

    @Test
    public void test05595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05595");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.keys();
        properties2.clear();
        java.lang.String str5 = properties2.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery6.maxRetries = (-1);
        recovery6.setDelay((long) (short) 0);
        long long11 = recovery6.forgetOrphanedLogEntriesDelay;
        recovery6.retryInterval = 500L;
        recovery6.retryInterval = '4';
        long long16 = recovery6.getRetryInterval();
        long long17 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.setRetryInterval(0L);
        long long20 = recovery6.forgetOrphanedLogEntriesDelay;
        boolean boolean21 = properties2.equals((java.lang.Object) recovery6);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 52L + "'", long16 == 52L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 86400000L + "'", long17 == 86400000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 86400000L + "'", long20 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test05596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05596");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Collection<java.lang.Object> objCollection8 = properties6.values();
        int int9 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties6.elements();
        boolean boolean11 = properties5.equals((java.lang.Object) objEnumeration10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long13 = recovery12.getRetryInterval();
        long long14 = recovery12.delay;
        boolean boolean15 = properties5.containsValue((java.lang.Object) recovery12);
        java.lang.Object obj18 = properties5.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.hi!=-1.0}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        java.lang.String str24 = atomikosProperties19.logBaseName;
        atomikosProperties19.outputDir = "";
        java.util.Properties properties27 = atomikosProperties19.asProperties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Collection<java.lang.Object> objCollection31 = properties29.values();
        int int32 = properties29.size();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties29.elements();
        java.util.Properties properties34 = new java.util.Properties(properties29);
        boolean boolean35 = properties27.containsKey((java.lang.Object) properties29);
        properties27.clear();
        java.util.Properties properties37 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.logBaseDir = "";
        atomikosProperties38.setConsoleFileCount((int) (short) 10);
        long long43 = atomikosProperties38.getMaxTimeout();
        java.util.Properties properties44 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet45 = properties44.keySet();
        atomikosProperties38.set(properties44, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str49 = atomikosProperties38.logBaseDir;
        java.lang.String str50 = atomikosProperties38.logBaseDir;
        java.lang.String str51 = atomikosProperties38.logBaseDir;
        boolean boolean52 = atomikosProperties38.isEnableLogging();
        long long53 = atomikosProperties38.checkpointInterval;
        atomikosProperties38.setOutputDir("hi!");
        boolean boolean56 = properties5.remove((java.lang.Object) properties37, (java.lang.Object) atomikosProperties38);
        java.lang.Object obj57 = properties37.clone();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objCollection31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 300000L + "'", long43 == 300000L);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 500L + "'", long53 == 500L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
    }

    @Test
    public void test05597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05597");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit(1);
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test05598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05598");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.logBaseDir = "";
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        long long12 = atomikosProperties7.getMaxTimeout();
        atomikosProperties7.service = "";
        java.lang.String str15 = atomikosProperties7.logBaseDir;
        boolean boolean16 = atomikosProperties7.threadedTwoPhaseCommit;
        java.lang.String str17 = atomikosProperties7.getService();
        java.lang.String str18 = atomikosProperties7.consoleFileName;
        boolean boolean19 = atomikosProperties7.serialJtaTransactions;
        atomikosProperties7.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int22 = atomikosProperties7.getConsoleFileCount();
        boolean boolean23 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.transactionManagerUniqueName = "{{}=tmlog}";
        java.lang.String str26 = atomikosProperties7.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long28 = recovery27.getRetryInterval();
        long long29 = recovery27.getDelay();
        recovery27.setMaxRetries(35);
        long long32 = recovery27.getForgetOrphanedLogEntriesDelay();
        long long33 = recovery27.getDelay();
        recovery27.setDelay((-1L));
        java.lang.Object obj36 = properties0.putIfAbsent((java.lang.Object) atomikosProperties7, (java.lang.Object) (-1L));
        int int37 = properties0.size();
        java.lang.String str38 = properties0.toString();
        java.util.Collection<java.lang.Object> objCollection39 = properties0.values();
        java.lang.String str42 = properties0.getProperty("{true=10000}", "{com.atomikos.icatch.hi!=-1.0}");
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 86400000L + "'", long32 == 86400000L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{com.atomikos.icatch.hi!=-1.0}" + "'", str42, "{com.atomikos.icatch.hi!=-1.0}");
    }

    @Test
    public void test05599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05599");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.util.Set<java.lang.String> strSet8 = properties0.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration9 = properties0.propertyNames();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream10, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
    }

    @Test
    public void test05600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05600");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseDir = "{true=10000}";
        atomikosProperties0.defaultJtaTimeout = 0L;
        java.lang.String str14 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={true=10000}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05601");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 5;
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        recovery0.setDelay((long) '#');
        recovery0.setDelay((long) ' ');
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test05602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05602");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test05603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05603");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        java.lang.String str4 = atomikosProperties0.consoleFileName;
        atomikosProperties0.allowSubTransactions = true;
        atomikosProperties0.setMaxTimeout((long) 50);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tm.out" + "'", str4, "tm.out");
    }

    @Test
    public void test05604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05604");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        atomikosProperties0.consoleFileLimit = 50;
        boolean boolean10 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        java.lang.String str15 = atomikosProperties0.outputDir;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test05605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05605");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        java.lang.String str8 = atomikosProperties0.service;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.defaultJtaTimeout = (byte) 100;
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.enableLogging = false;
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test05606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05606");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        boolean boolean41 = atomikosProperties29.enableLogging;
        int int42 = atomikosProperties29.maxActives;
        boolean boolean43 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.maxActives = 35;
        java.lang.Object obj54 = properties24.getOrDefault((java.lang.Object) boolean43, (java.lang.Object) 35);
        java.lang.Object obj57 = properties24.setProperty("tm.out", "{com.atomikos.icatch.hi!=-1.0}");
        java.util.Properties properties58 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.logBaseDir = "";
        atomikosProperties59.setConsoleFileCount((int) (short) 10);
        long long64 = atomikosProperties59.getMaxTimeout();
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet66 = properties65.keySet();
        atomikosProperties59.set(properties65, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str70 = atomikosProperties59.logBaseDir;
        java.lang.String str71 = atomikosProperties59.logBaseDir;
        java.lang.String str72 = atomikosProperties59.logBaseDir;
        atomikosProperties59.outputDir = "{{}={}}";
        boolean boolean75 = atomikosProperties59.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.logBaseDir = "";
        atomikosProperties76.setConsoleFileCount((int) (short) 10);
        long long81 = atomikosProperties76.getMaxTimeout();
        atomikosProperties76.service = "";
        java.lang.String str84 = atomikosProperties76.logBaseDir;
        boolean boolean85 = atomikosProperties76.threadedTwoPhaseCommit;
        java.lang.String str86 = atomikosProperties76.getService();
        atomikosProperties76.transactionManagerUniqueName = "tmlog";
        atomikosProperties76.setSerialJtaTransactions(false);
        atomikosProperties76.setOutputDir("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery93 = atomikosProperties76.getRecovery();
        java.lang.Object obj94 = properties24.replace((java.lang.Object) boolean75, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        atomikosProperties76.service = "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 35 + "'", obj54, 35);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 300000L + "'", long64 == 300000L);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 300000L + "'", long81 == 300000L);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertNotNull(recovery93);
        org.junit.Assert.assertNull(obj94);
    }

    @Test
    public void test05607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05607");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str21 = atomikosProperties10.logBaseDir;
        java.lang.String str22 = atomikosProperties10.logBaseDir;
        java.lang.String str23 = atomikosProperties10.logBaseDir;
        boolean boolean24 = atomikosProperties10.isEnableLogging();
        long long25 = atomikosProperties10.checkpointInterval;
        atomikosProperties10.setOutputDir("hi!");
        long long28 = atomikosProperties10.maxTimeout;
        java.lang.String str29 = atomikosProperties10.logBaseName;
        java.util.Properties properties30 = atomikosProperties10.asProperties();
        java.util.Enumeration<?> wildcardEnumeration31 = properties30.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        atomikosProperties32.setCheckpointInterval(10000L);
        long long39 = atomikosProperties32.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel40 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties32.consoleLogLevel = atomikosLoggingLevel40;
        atomikosProperties32.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties32.serialJtaTransactions = true;
        atomikosProperties32.setOutputDir("hi!");
        atomikosProperties32.setMaxActives((int) (byte) -1);
        boolean boolean50 = atomikosProperties32.isThreadedTwoPhaseCommit();
        long long51 = atomikosProperties32.maxTimeout;
        atomikosProperties32.checkpointInterval = 50;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.logBaseDir = "";
        atomikosProperties54.setConsoleFileCount((int) (short) 10);
        atomikosProperties54.setCheckpointInterval(10000L);
        atomikosProperties54.checkpointInterval = 100;
        atomikosProperties54.allowSubTransactions = true;
        java.lang.String str65 = atomikosProperties54.transactionManagerUniqueName;
        java.util.Properties properties66 = atomikosProperties54.asProperties();
        boolean boolean67 = atomikosProperties54.isEnableLogging();
        int int68 = atomikosProperties54.getMaxActives();
        boolean boolean69 = properties30.remove((java.lang.Object) atomikosProperties32, (java.lang.Object) atomikosProperties54);
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel40 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel40.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test05608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05608");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.maxRetries;
        recovery0.setRetryInterval(0L);
        long long9 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 86400000L + "'", long9 == 86400000L);
    }

    @Test
    public void test05609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05609");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        int int2 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.enableLogging = true;
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=0, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
    }

    @Test
    public void test05610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05610");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        boolean boolean41 = atomikosProperties29.enableLogging;
        int int42 = atomikosProperties29.maxActives;
        boolean boolean43 = atomikosProperties29.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        atomikosProperties44.setLogBaseDir("{}");
        java.lang.String str51 = atomikosProperties44.getOutputDir();
        atomikosProperties44.maxActives = 35;
        java.lang.Object obj54 = properties24.getOrDefault((java.lang.Object) boolean43, (java.lang.Object) 35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.enableLogging = true;
        int int58 = atomikosProperties55.consoleFileLimit;
        atomikosProperties55.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = atomikosProperties55.getRecovery();
        long long62 = recovery61.getDelay();
        recovery61.setForgetOrphanedLogEntriesDelay(0L);
        boolean boolean65 = properties24.equals((java.lang.Object) recovery61);
        recovery61.forgetOrphanedLogEntriesDelay = 50;
        recovery61.setMaxRetries(52);
        long long70 = recovery61.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 50 + "'", int42 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + obj54 + "' != '" + 35 + "'", obj54, 35);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(recovery61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 50L + "'", long70 == 50L);
    }

    @Test
    public void test05611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05611");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        int int40 = recovery17.maxRetries;
        long long41 = recovery17.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 35 + "'", int40 == 35);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 86400000L + "'", long41 == 86400000L);
    }

    @Test
    public void test05612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05612");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean5 = atomikosProperties0.threadedTwoPhaseCommit;
        int int6 = atomikosProperties0.maxActives;
        atomikosProperties0.transactionManagerUniqueName = "";
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test05613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05613");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.enableLogging = true;
        long long11 = atomikosProperties8.getCheckpointInterval();
        atomikosProperties8.setService("tmlog");
        atomikosProperties8.setConsoleFileName("{}");
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties16.entrySet();
        boolean boolean18 = properties7.contains((java.lang.Object) properties16);
        boolean boolean19 = properties7.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties7.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int22 = atomikosProperties21.getConsoleFileCount();
        int int23 = atomikosProperties21.maxActives;
        java.lang.String str24 = atomikosProperties21.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        atomikosProperties25.setCheckpointInterval(10000L);
        long long32 = atomikosProperties25.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties25.getConsoleLogLevel();
        atomikosProperties21.consoleLogLevel = atomikosLoggingLevel33;
        java.util.Properties properties35 = atomikosProperties21.asProperties();
        boolean boolean36 = properties7.contains((java.lang.Object) properties35);
        java.lang.Object obj39 = properties7.setProperty("tm.out", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test05614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05614");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.serialJtaTransactions = false;
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
    }

    @Test
    public void test05615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05615");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        atomikosProperties0.defaultJtaTimeout = 'a';
        atomikosProperties0.consoleFileName = "{{}=tmlog}";
        atomikosProperties0.consoleFileLimit = 22;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05616");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        long long4 = recovery0.getDelay();
        long long5 = recovery0.delay;
        recovery0.setForgetOrphanedLogEntriesDelay((long) 0);
        long long8 = recovery0.getDelay();
        int int9 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10L + "'", long4 == 10L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
    }

    @Test
    public void test05617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05617");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.util.Properties properties28 = new java.util.Properties(properties24);
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.store(outputStream29, "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
    }

    @Test
    public void test05618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05618");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.enableLogging = true;
        long long7 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties4.getService();
        java.lang.String str9 = atomikosProperties4.logBaseDir;
        atomikosProperties4.setEnableLogging(false);
        boolean boolean12 = atomikosProperties4.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        long long16 = atomikosProperties13.getCheckpointInterval();
        atomikosProperties13.setService("tmlog");
        atomikosProperties13.setConsoleFileName("{}");
        java.util.Properties properties21 = atomikosProperties13.asProperties();
        atomikosProperties13.setCheckpointInterval((long) (short) 10);
        atomikosProperties13.logBaseName = "";
        java.lang.Object obj26 = properties0.put((java.lang.Object) boolean12, (java.lang.Object) atomikosProperties13);
        java.util.Set<java.lang.Object> objSet27 = properties0.keySet();
        properties0.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objSet27);
    }

    @Test
    public void test05619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05619");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getService();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        long long12 = atomikosProperties0.maxTimeout;
        atomikosProperties0.setOutputDir("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
    }

    @Test
    public void test05620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05620");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.forceShutdownOnVmExit = true;
        java.lang.String str17 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test05621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05621");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        int int5 = atomikosProperties0.consoleFileLimit;
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties0.consoleLogLevel;
        int int8 = atomikosProperties0.consoleFileLimit;
        int int9 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
    }

    @Test
    public void test05622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05622");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        long long14 = recovery13.getForgetOrphanedLogEntriesDelay();
        long long15 = recovery13.getRetryInterval();
        int int16 = recovery13.maxRetries;
        long long17 = recovery13.retryInterval;
        long long18 = recovery13.retryInterval;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test05623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05623");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.Object obj15 = properties9.setProperty("{}", "{}");
        int int16 = properties9.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        atomikosProperties17.setLogBaseDir("{}");
        java.lang.String str24 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("hi!");
        boolean boolean27 = atomikosProperties17.isAllowSubTransactions();
        boolean boolean28 = atomikosProperties17.isThreadedTwoPhaseCommit();
        boolean boolean29 = atomikosProperties17.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties17.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties17.recovery;
        recovery31.setMaxRetries(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str45 = atomikosProperties34.logBaseDir;
        boolean boolean46 = atomikosProperties34.enableLogging;
        atomikosProperties34.setLogBaseDir("");
        atomikosProperties34.setAllowSubTransactions(true);
        java.lang.Object obj51 = properties9.put((java.lang.Object) 10, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties52 = new java.util.Properties(properties9);
        java.lang.String str53 = properties9.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.enableLogging = true;
        java.lang.String str58 = atomikosProperties55.logBaseDir;
        atomikosProperties0.set(properties9, "tm.out", (java.lang.Object) str58);
        java.util.Properties properties60 = new java.util.Properties(properties9);
        java.lang.String str62 = properties9.getProperty("{com.atomikos.icatch.tmlog=-1}");
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration63 = properties9.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertNotNull(recovery31);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test05624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05624");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        recovery0.retryInterval = '4';
        long long10 = recovery0.getRetryInterval();
        recovery0.delay = 5;
        long long13 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
    }

    @Test
    public void test05625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05625");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        boolean boolean22 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.allowSubTransactions = false;
        boolean boolean25 = atomikosProperties19.serialJtaTransactions;
        boolean boolean26 = properties0.containsKey((java.lang.Object) boolean25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getConsoleFileCount();
        int int38 = atomikosProperties36.maxActives;
        atomikosProperties36.setConsoleFileName("");
        atomikosProperties36.transactionManagerUniqueName = "{}";
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        boolean boolean44 = atomikosProperties36.threadedTwoPhaseCommit;
        atomikosProperties36.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int48 = atomikosProperties47.getConsoleFileCount();
        int int49 = atomikosProperties47.maxActives;
        atomikosProperties47.setConsoleFileName("");
        atomikosProperties47.transactionManagerUniqueName = "{}";
        atomikosProperties47.setMaxActives(0);
        boolean boolean56 = atomikosProperties47.forceShutdownOnVmExit;
        java.lang.Object obj57 = properties34.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.logBaseDir = "";
        boolean boolean61 = atomikosProperties58.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = atomikosProperties58.getRecovery();
        boolean boolean63 = properties34.contains((java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int65 = atomikosProperties64.getConsoleFileCount();
        int int66 = atomikosProperties64.maxActives;
        int int67 = atomikosProperties64.getMaxActives();
        boolean boolean68 = properties0.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) int67);
        int int69 = atomikosProperties58.getConsoleFileLimit();
        java.lang.String str70 = atomikosProperties58.logBaseName;
        atomikosProperties58.setSerialJtaTransactions(true);
        boolean boolean73 = atomikosProperties58.serialJtaTransactions;
        atomikosProperties58.maxTimeout = (byte) 1;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(recovery62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test05626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05626");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.consoleFileLimit = 'a';
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        java.lang.String str12 = atomikosProperties0.service;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test05627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05627");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties16.keys();
        int int22 = properties16.size();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties16.elements();
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery25.maxRetries = (-1);
        recovery25.setDelay((long) (short) 0);
        long long30 = recovery25.forgetOrphanedLogEntriesDelay;
        recovery25.retryInterval = 500L;
        recovery25.retryInterval = '4';
        long long35 = recovery25.getRetryInterval();
        long long36 = recovery25.getForgetOrphanedLogEntriesDelay();
        recovery25.retryInterval = 100L;
        recovery25.setDelay((long) ' ');
        long long41 = recovery25.delay;
        java.lang.Object obj42 = properties9.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) recovery25);
        java.lang.String str43 = properties16.toString();
        boolean boolean44 = properties16.isEmpty();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 86400000L + "'", long30 == 86400000L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 52L + "'", long35 == 52L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 86400000L + "'", long36 == 86400000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 32L + "'", long41 == 32L);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{}" + "'", str43, "{}");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test05628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05628");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.serialJtaTransactions = true;
        boolean boolean13 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.maxTimeout = 50;
        boolean boolean16 = atomikosProperties0.allowSubTransactions;
        int int17 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
    }

    @Test
    public void test05629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05629");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.consoleFileCount = (short) -1;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test05630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05630");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties0.getConsoleLogLevel();
        long long18 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int21 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean24 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.forceShutdownOnVmExit = true;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test05631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05631");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.threadedTwoPhaseCommit = true;
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tm.out" + "'", str7, "tm.out");
    }

    @Test
    public void test05632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05632");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        boolean boolean17 = properties15.isEmpty();
        boolean boolean18 = properties3.equals((java.lang.Object) boolean17);
        java.util.Properties properties19 = new java.util.Properties(properties3);
        java.util.Properties properties20 = new java.util.Properties(properties3);
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.lang.String str22 = properties21.toString();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
    }

    @Test
    public void test05633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05633");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.util.Properties properties13 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties13.entrySet();
        boolean boolean15 = properties13.isEmpty();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test05634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05634");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet14 = properties6.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties6.keys();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNotNull(objEnumeration15);
    }

    @Test
    public void test05635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05635");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        long long7 = atomikosProperties0.getCheckpointInterval();
        int int8 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
    }

    @Test
    public void test05636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05636");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.outputDir;
        atomikosProperties0.setCheckpointInterval(50L);
        atomikosProperties0.maxActives = 19;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05637");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.logBaseDir = "";
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        long long12 = atomikosProperties7.getMaxTimeout();
        atomikosProperties7.service = "";
        java.lang.String str15 = atomikosProperties7.logBaseDir;
        boolean boolean16 = atomikosProperties7.threadedTwoPhaseCommit;
        java.lang.String str17 = atomikosProperties7.getService();
        java.lang.String str18 = atomikosProperties7.consoleFileName;
        boolean boolean19 = atomikosProperties7.serialJtaTransactions;
        atomikosProperties7.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int22 = atomikosProperties7.getConsoleFileCount();
        boolean boolean23 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.transactionManagerUniqueName = "{{}=tmlog}";
        java.lang.String str26 = atomikosProperties7.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long28 = recovery27.getRetryInterval();
        long long29 = recovery27.getDelay();
        recovery27.setMaxRetries(35);
        long long32 = recovery27.getForgetOrphanedLogEntriesDelay();
        long long33 = recovery27.getDelay();
        recovery27.setDelay((-1L));
        java.lang.Object obj36 = properties0.putIfAbsent((java.lang.Object) atomikosProperties7, (java.lang.Object) (-1L));
        java.util.Properties properties37 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties0.keys();
        java.io.Writer writer39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.store(writer39, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 86400000L + "'", long32 == 86400000L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration38);
    }

    @Test
    public void test05638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05638");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        atomikosProperties9.setConsoleFileCount((int) '4');
        int int33 = atomikosProperties9.getConsoleFileLimit();
        boolean boolean34 = atomikosProperties9.allowSubTransactions;
        long long35 = atomikosProperties9.getDefaultJtaTimeout();
        java.lang.String str36 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.threadedTwoPhaseCommit = false;
        long long39 = atomikosProperties9.checkpointInterval;
        atomikosProperties9.setConsoleFileName("{}");
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
    }

    @Test
    public void test05639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05639");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int11 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test05640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05640");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        atomikosProperties5.setLogBaseDir("{}");
        int int12 = atomikosProperties5.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        int int16 = atomikosProperties13.consoleFileLimit;
        atomikosProperties13.logBaseName = "hi!";
        boolean boolean19 = atomikosProperties13.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery20.maxRetries = (-1);
        recovery20.retryInterval = 10000L;
        boolean boolean25 = properties0.replace((java.lang.Object) int12, (java.lang.Object) boolean19, (java.lang.Object) 10000L);
        java.util.Properties properties26 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long28 = atomikosProperties27.defaultJtaTimeout;
        atomikosProperties27.logBaseName = "tm.out";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        long long36 = atomikosProperties31.getMaxTimeout();
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet38 = properties37.keySet();
        atomikosProperties31.set(properties37, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj44 = properties37.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setDefaultJtaTimeout((-1L));
        java.util.Properties properties48 = new java.util.Properties();
        java.lang.Object obj50 = properties48.get((java.lang.Object) 0.0d);
        java.lang.Object obj51 = properties48.clone();
        boolean boolean53 = properties37.replace((java.lang.Object) (-1L), obj51, (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        long long60 = atomikosProperties55.getMaxTimeout();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet62 = properties61.keySet();
        atomikosProperties55.set(properties61, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj68 = properties61.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setDefaultJtaTimeout((-1L));
        java.util.Properties properties72 = new java.util.Properties();
        java.lang.Object obj74 = properties72.get((java.lang.Object) 0.0d);
        java.lang.Object obj75 = properties72.clone();
        boolean boolean77 = properties61.replace((java.lang.Object) (-1L), obj75, (java.lang.Object) 100.0d);
        java.util.Properties properties78 = new java.util.Properties();
        java.util.Properties properties79 = new java.util.Properties(properties78);
        properties79.clear();
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties79.elements();
        java.lang.String str84 = properties79.getProperty("");
        java.util.Properties properties85 = new java.util.Properties();
        java.lang.Object obj87 = properties85.get((java.lang.Object) 0.0d);
        java.lang.Object obj88 = properties85.clone();
        java.lang.String str89 = properties85.toString();
        boolean boolean91 = properties79.remove((java.lang.Object) properties85, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration92 = properties79.propertyNames();
        atomikosProperties27.set(properties37, "hi!", (java.lang.Object) wildcardEnumeration92);
        java.lang.String str94 = atomikosProperties27.transactionManagerUniqueName;
        atomikosProperties27.logBaseName = "";
        boolean boolean97 = properties0.contains((java.lang.Object) "");
        boolean boolean98 = properties0.isEmpty();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "{}");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "{}" + "'", str89, "{}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration92);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test05641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05641");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setConsoleFileCount((int) (short) 10);
        atomikosProperties2.setCheckpointInterval(10000L);
        long long9 = atomikosProperties2.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties2.consoleLogLevel = atomikosLoggingLevel10;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel10;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.enableLogging = true;
        java.lang.String str16 = atomikosProperties0.service;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        long long19 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
    }

    @Test
    public void test05642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05642");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        boolean boolean22 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.allowSubTransactions = false;
        boolean boolean25 = atomikosProperties19.serialJtaTransactions;
        boolean boolean26 = properties0.containsKey((java.lang.Object) boolean25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getConsoleFileCount();
        int int38 = atomikosProperties36.maxActives;
        atomikosProperties36.setConsoleFileName("");
        atomikosProperties36.transactionManagerUniqueName = "{}";
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        boolean boolean44 = atomikosProperties36.threadedTwoPhaseCommit;
        atomikosProperties36.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int48 = atomikosProperties47.getConsoleFileCount();
        int int49 = atomikosProperties47.maxActives;
        atomikosProperties47.setConsoleFileName("");
        atomikosProperties47.transactionManagerUniqueName = "{}";
        atomikosProperties47.setMaxActives(0);
        boolean boolean56 = atomikosProperties47.forceShutdownOnVmExit;
        java.lang.Object obj57 = properties34.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.logBaseDir = "";
        boolean boolean61 = atomikosProperties58.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = atomikosProperties58.getRecovery();
        boolean boolean63 = properties34.contains((java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int65 = atomikosProperties64.getConsoleFileCount();
        int int66 = atomikosProperties64.maxActives;
        int int67 = atomikosProperties64.getMaxActives();
        boolean boolean68 = properties0.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) int67);
        int int69 = atomikosProperties58.getConsoleFileLimit();
        java.lang.String str70 = atomikosProperties58.logBaseName;
        atomikosProperties58.setSerialJtaTransactions(true);
        boolean boolean73 = atomikosProperties58.serialJtaTransactions;
        atomikosProperties58.consoleFileLimit = 100;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(recovery62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test05643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05643");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        atomikosProperties0.allowSubTransactions = false;
        atomikosProperties0.setConsoleFileLimit((int) 'a');
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test05644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05644");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setOutputDir("{true=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        boolean boolean19 = atomikosProperties16.isForceShutdownOnVmExit();
        int int20 = atomikosProperties16.consoleFileLimit;
        long long21 = atomikosProperties16.checkpointInterval;
        atomikosProperties16.setLogBaseDir("{true=10000}");
        java.util.Properties properties24 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.logBaseDir = "";
        atomikosProperties26.setConsoleFileCount((int) (short) 10);
        long long31 = atomikosProperties26.getMaxTimeout();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet33 = properties32.keySet();
        atomikosProperties26.set(properties32, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = properties37.clone();
        java.lang.String str41 = properties37.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.logBaseDir = "";
        atomikosProperties42.setConsoleFileCount((int) (short) 10);
        long long47 = atomikosProperties42.getMaxTimeout();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet49 = properties48.keySet();
        atomikosProperties42.set(properties48, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj55 = properties48.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((-1L));
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.get((java.lang.Object) 0.0d);
        java.lang.Object obj62 = properties59.clone();
        boolean boolean64 = properties48.replace((java.lang.Object) (-1L), obj62, (java.lang.Object) 100.0d);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.logBaseDir = "";
        atomikosProperties69.setConsoleFileCount((int) (short) 10);
        long long74 = atomikosProperties69.getMaxTimeout();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet76 = properties75.keySet();
        atomikosProperties69.set(properties75, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str80 = atomikosProperties69.logBaseDir;
        java.lang.String str81 = atomikosProperties69.logBaseDir;
        java.util.Properties properties82 = atomikosProperties69.asProperties();
        java.lang.Object obj83 = properties37.replace((java.lang.Object) properties66, (java.lang.Object) atomikosProperties69);
        boolean boolean84 = properties32.contains((java.lang.Object) atomikosProperties69);
        atomikosProperties69.consoleFileName = "";
        long long87 = atomikosProperties69.getMaxTimeout();
        long long88 = atomikosProperties69.defaultJtaTimeout;
        atomikosProperties69.setOutputDir("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties69.forceShutdownOnVmExit = true;
        long long93 = atomikosProperties69.defaultJtaTimeout;
        atomikosProperties0.set(properties24, "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) atomikosProperties69);
        atomikosProperties69.setConsoleFileCount(35);
        boolean boolean97 = atomikosProperties69.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{}" + "'", str41, "{}");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 300000L + "'", long87 == 300000L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10000L + "'", long88 == 10000L);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 10000L + "'", long93 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test05645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05645");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.checkpointInterval = 0L;
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.hi!=-1.0}");
        java.lang.String str8 = atomikosProperties0.consoleFileName;
        atomikosProperties0.allowSubTransactions = true;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.Object obj12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = properties11.containsKey(obj12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test05646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05646");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = atomikosProperties0.getConsoleFileLimit();
        long long10 = atomikosProperties0.maxTimeout;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test05647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05647");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        long long8 = recovery0.getDelay();
        recovery0.maxRetries = 0;
        long long11 = recovery0.getRetryInterval();
        int int12 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) (short) 100);
        int int15 = recovery0.maxRetries;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test05648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05648");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        long long5 = recovery0.getRetryInterval();
        recovery0.setRetryInterval(52L);
        long long8 = recovery0.getDelay();
        recovery0.delay = 5;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test05649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05649");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.enableLogging = true;
        long long5 = atomikosProperties2.getCheckpointInterval();
        atomikosProperties2.checkpointInterval = ' ';
        java.lang.String str8 = atomikosProperties2.service;
        atomikosProperties2.consoleFileCount = (short) 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        long long16 = atomikosProperties11.getMaxTimeout();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        atomikosProperties11.set(properties17, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str22 = atomikosProperties11.service;
        java.lang.String str23 = atomikosProperties11.getService();
        java.util.Properties properties24 = atomikosProperties11.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.enableLogging = true;
        long long28 = atomikosProperties25.getCheckpointInterval();
        java.lang.String str29 = atomikosProperties25.getService();
        java.lang.String str30 = atomikosProperties25.logBaseDir;
        atomikosProperties25.setEnableLogging(false);
        atomikosProperties25.consoleFileCount = 0;
        long long35 = atomikosProperties25.getMaxTimeout();
        int int36 = atomikosProperties25.consoleFileLimit;
        atomikosProperties25.maxActives = 100;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        atomikosProperties39.setLogBaseDir("{}");
        java.util.Properties properties46 = atomikosProperties39.asProperties();
        atomikosProperties39.service = "";
        boolean boolean49 = atomikosProperties39.isEnableLogging();
        java.lang.Object obj50 = properties24.putIfAbsent((java.lang.Object) 100, (java.lang.Object) boolean49);
        boolean boolean51 = properties0.remove((java.lang.Object) atomikosProperties2, (java.lang.Object) properties24);
        java.util.Properties properties52 = new java.util.Properties(properties24);
        java.lang.Class<?> wildcardClass53 = properties24.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test05650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05650");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        long long4 = atomikosProperties0.maxTimeout;
        boolean boolean5 = atomikosProperties0.enableLogging;
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 300000L + "'", long4 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test05651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05651");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        boolean boolean31 = atomikosProperties20.isAllowSubTransactions();
        atomikosProperties20.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test05652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05652");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        long long7 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        atomikosProperties10.setService("tmlog");
        atomikosProperties10.setConsoleFileName("{}");
        java.util.Properties properties18 = atomikosProperties10.asProperties();
        atomikosProperties10.setCheckpointInterval((long) (short) 10);
        atomikosProperties10.logBaseName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.enableLogging = true;
        long long26 = atomikosProperties23.getCheckpointInterval();
        java.lang.String str27 = atomikosProperties23.getService();
        java.lang.String str28 = atomikosProperties23.logBaseDir;
        atomikosProperties23.setEnableLogging(false);
        atomikosProperties23.consoleFileCount = 0;
        long long33 = atomikosProperties23.getMaxTimeout();
        boolean boolean34 = atomikosProperties23.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties23.consoleLogLevel;
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel35);
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel35;
        boolean boolean38 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.enableLogging = true;
        long long42 = atomikosProperties39.getCheckpointInterval();
        java.lang.String str43 = atomikosProperties39.getService();
        java.lang.String str44 = atomikosProperties39.logBaseDir;
        atomikosProperties39.setEnableLogging(false);
        atomikosProperties39.maxTimeout = (short) -1;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel49 = atomikosProperties39.consoleLogLevel;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel49);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 500L + "'", long42 == 500L);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel49 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel49.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05653");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        int int17 = atomikosProperties0.maxActives;
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        java.lang.String str25 = atomikosProperties20.logBaseName;
        atomikosProperties20.outputDir = "";
        java.util.Properties properties28 = atomikosProperties20.asProperties();
        atomikosProperties20.setConsoleFileLimit(1);
        java.lang.Object obj31 = properties18.put((java.lang.Object) 0L, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        java.lang.String str39 = atomikosProperties34.transactionManagerUniqueName;
        atomikosProperties34.setService("{}");
        atomikosProperties34.setConsoleFileLimit(10);
        int int44 = atomikosProperties34.getMaxActives();
        boolean boolean45 = atomikosProperties34.threadedTwoPhaseCommit;
        atomikosProperties34.logBaseName = "{com.atomikos.icatch.tmlog=-1}";
        java.util.Properties properties48 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.logBaseDir = "";
        atomikosProperties50.checkpointInterval = 0;
        boolean boolean55 = atomikosProperties50.isThreadedTwoPhaseCommit();
        atomikosProperties50.setSerialJtaTransactions(false);
        long long58 = atomikosProperties50.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties50.getConsoleLogLevel();
        java.lang.String str60 = atomikosProperties50.getLogBaseName();
        atomikosProperties20.set(properties48, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}", (java.lang.Object) str60);
        atomikosProperties20.outputDir = "";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertNotNull(properties28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
    }

    @Test
    public void test05654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05654");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        boolean boolean13 = atomikosProperties10.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        atomikosProperties15.setLogBaseDir("{}");
        java.util.Properties properties22 = atomikosProperties15.asProperties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setCheckpointInterval(10000L);
        long long31 = atomikosProperties24.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties24.getConsoleLogLevel();
        boolean boolean33 = properties23.containsValue((java.lang.Object) atomikosProperties24);
        atomikosProperties24.setConsoleFileName("hi!");
        boolean boolean36 = properties14.equals((java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.logBaseDir = "";
        atomikosProperties37.setConsoleFileCount((int) (short) 10);
        long long42 = atomikosProperties37.getMaxTimeout();
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet44 = properties43.keySet();
        atomikosProperties37.set(properties43, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj50 = properties43.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setDefaultJtaTimeout((-1L));
        java.util.Properties properties54 = new java.util.Properties();
        java.lang.Object obj56 = properties54.get((java.lang.Object) 0.0d);
        java.lang.Object obj57 = properties54.clone();
        boolean boolean59 = properties43.replace((java.lang.Object) (-1L), obj57, (java.lang.Object) 100.0d);
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties(properties60);
        properties61.clear();
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties61.elements();
        java.lang.String str66 = properties61.getProperty("");
        java.util.Properties properties67 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.util.Set<java.lang.String> strSet69 = properties67.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.logBaseDir = "";
        atomikosProperties70.setConsoleFileCount((int) (short) 10);
        java.lang.String str75 = atomikosProperties70.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel76 = atomikosProperties70.getConsoleLogLevel();
        java.lang.String str77 = atomikosProperties70.transactionManagerUniqueName;
        atomikosProperties70.consoleFileLimit = (byte) 100;
        java.lang.Object obj80 = properties14.replace((java.lang.Object) properties67, (java.lang.Object) (byte) 100);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.enableLogging = true;
        int int84 = atomikosProperties81.consoleFileLimit;
        atomikosProperties81.logBaseName = "hi!";
        boolean boolean87 = atomikosProperties81.isThreadedTwoPhaseCommit();
        boolean boolean88 = atomikosProperties81.enableLogging;
        java.util.Properties properties89 = atomikosProperties81.asProperties();
        java.util.Properties properties90 = new java.util.Properties(properties89);
        java.lang.Object obj91 = properties8.put((java.lang.Object) properties67, (java.lang.Object) properties90);
        java.util.Set<java.lang.String> strSet92 = properties8.stringPropertyNames();
        java.io.InputStream inputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties22);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertNotNull(objSet44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel76 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel76.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(properties89);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNotNull(strSet92);
    }

    @Test
    public void test05655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05655");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) 0.0d);
        java.lang.Object obj33 = properties30.clone();
        java.lang.String str34 = properties30.toString();
        boolean boolean36 = properties24.remove((java.lang.Object) properties30, (java.lang.Object) 0);
        java.util.Set<java.lang.String> strSet37 = properties30.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.logBaseDir = "";
        atomikosProperties38.setConsoleFileCount((int) (short) 10);
        java.lang.String str43 = atomikosProperties38.logBaseName;
        java.lang.String str44 = atomikosProperties38.logBaseDir;
        long long45 = atomikosProperties38.defaultJtaTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int47 = atomikosProperties46.getConsoleFileCount();
        int int48 = atomikosProperties46.maxActives;
        atomikosProperties46.setEnableLogging(false);
        atomikosProperties46.threadedTwoPhaseCommit = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.enableLogging = true;
        long long56 = atomikosProperties53.getCheckpointInterval();
        java.lang.String str57 = atomikosProperties53.getService();
        java.lang.String str58 = atomikosProperties53.logBaseDir;
        atomikosProperties53.setEnableLogging(false);
        atomikosProperties53.consoleFileCount = 0;
        long long63 = atomikosProperties53.getMaxTimeout();
        boolean boolean64 = atomikosProperties53.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties53.consoleLogLevel;
        atomikosProperties46.consoleLogLevel = atomikosLoggingLevel65;
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = new java.util.Properties(properties67);
        properties67.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery70 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery70.maxRetries = (-1);
        recovery70.setDelay((long) (short) 0);
        recovery70.maxRetries = 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery77 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long78 = recovery77.getRetryInterval();
        long long79 = recovery77.retryInterval;
        boolean boolean80 = properties67.remove((java.lang.Object) 0, (java.lang.Object) long79);
        java.lang.String str81 = properties67.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties67.elements();
        boolean boolean83 = properties30.replace((java.lang.Object) long45, (java.lang.Object) atomikosLoggingLevel65, (java.lang.Object) properties67);
        java.util.Set<java.lang.String> strSet84 = properties30.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.logBaseDir = "";
        atomikosProperties85.setConsoleFileCount((int) (short) 10);
        atomikosProperties85.setLogBaseDir("{}");
        java.lang.String str92 = atomikosProperties85.getOutputDir();
        boolean boolean93 = atomikosProperties85.isForceShutdownOnVmExit();
        atomikosProperties85.logBaseName = "";
        boolean boolean96 = properties30.containsValue((java.lang.Object) "");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 500L + "'", long56 == 500L);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 300000L + "'", long63 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 10000L + "'", long78 == 10000L);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 10000L + "'", long79 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{}" + "'", str81, "{}");
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test05656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05656");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean10 = atomikosProperties0.serialJtaTransactions;
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test05657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05657");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.consoleFileLimit = 50;
        atomikosProperties0.maxActives = (-1);
        java.lang.String str13 = atomikosProperties0.logBaseName;
        atomikosProperties0.setCheckpointInterval((long) 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test05658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05658");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        recovery13.setRetryInterval((long) (byte) 100);
        long long16 = recovery13.getDelay();
        recovery13.forgetOrphanedLogEntriesDelay = (short) 1;
        recovery13.setForgetOrphanedLogEntriesDelay(500L);
        long long21 = recovery13.getDelay();
        recovery13.setRetryInterval(10000L);
        long long24 = recovery13.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
    }

    @Test
    public void test05659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05659");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int22 = atomikosProperties21.getConsoleFileCount();
        int int23 = atomikosProperties21.maxActives;
        atomikosProperties21.setConsoleFileName("");
        boolean boolean26 = atomikosProperties21.forceShutdownOnVmExit;
        long long27 = atomikosProperties21.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties21.getRecovery();
        atomikosProperties21.setSerialJtaTransactions(true);
        boolean boolean31 = properties19.containsKey((java.lang.Object) atomikosProperties21);
        atomikosProperties21.setConsoleFileCount((int) (byte) 100);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test05660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05660");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long16 = atomikosProperties15.defaultJtaTimeout;
        atomikosProperties15.logBaseName = "tm.out";
        java.lang.String str19 = atomikosProperties15.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties15.consoleLogLevel;
        java.lang.String str21 = atomikosProperties15.consoleFileName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        long long27 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties28 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet29 = properties28.keySet();
        atomikosProperties22.set(properties28, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str33 = atomikosProperties22.logBaseDir;
        java.lang.String str34 = atomikosProperties22.logBaseDir;
        java.lang.String str35 = atomikosProperties22.logBaseDir;
        java.lang.String str36 = atomikosProperties22.getService();
        java.lang.String str37 = atomikosProperties22.outputDir;
        atomikosProperties22.setSerialJtaTransactions(true);
        java.lang.Object obj40 = properties14.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) atomikosProperties22);
        atomikosProperties15.consoleFileName = "";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertNotNull(objSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test05661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05661");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.logBaseDir = "";
        atomikosProperties5.setConsoleFileCount((int) (short) 10);
        long long10 = atomikosProperties5.getMaxTimeout();
        atomikosProperties5.service = "";
        boolean boolean13 = atomikosProperties5.isSerialJtaTransactions();
        atomikosProperties5.setAllowSubTransactions(true);
        java.lang.String str16 = atomikosProperties5.getService();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.get((java.lang.Object) 0.0d);
        java.lang.Object obj23 = properties20.clone();
        java.lang.String str24 = properties20.toString();
        boolean boolean27 = properties20.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj28 = properties18.replace((java.lang.Object) 10.0d, (java.lang.Object) properties20);
        java.util.Properties properties29 = new java.util.Properties(properties20);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection32 = properties30.values();
        int int33 = properties30.size();
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties30.elements();
        java.util.Properties properties35 = new java.util.Properties(properties30);
        java.lang.Object obj36 = properties35.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getConsoleFileCount();
        int int39 = atomikosProperties37.maxActives;
        atomikosProperties37.setEnableLogging(false);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Collection<java.lang.Object> objCollection44 = properties42.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long47 = recovery46.getRetryInterval();
        recovery46.delay = 10L;
        recovery46.setForgetOrphanedLogEntriesDelay(0L);
        int int52 = recovery46.maxRetries;
        atomikosProperties37.set(properties42, "hi!", (java.lang.Object) recovery46);
        java.util.Set<java.lang.String> strSet54 = properties42.stringPropertyNames();
        boolean boolean55 = properties20.remove(obj36, (java.lang.Object) strSet54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.logBaseDir = "";
        atomikosProperties56.setConsoleFileCount((int) (short) 10);
        java.lang.String str61 = atomikosProperties56.logBaseName;
        atomikosProperties56.outputDir = "";
        java.util.Properties properties64 = atomikosProperties56.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.logBaseDir = "";
        atomikosProperties65.setConsoleFileCount((int) (short) 10);
        long long70 = atomikosProperties65.getMaxTimeout();
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet72 = properties71.keySet();
        atomikosProperties65.set(properties71, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj78 = properties71.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.logBaseDir = "";
        atomikosProperties80.setConsoleFileCount((int) (short) 10);
        atomikosProperties80.setLogBaseDir("{}");
        java.lang.String str87 = atomikosProperties80.getOutputDir();
        atomikosProperties56.set(properties71, "{}", (java.lang.Object) atomikosProperties80);
        java.lang.String str89 = atomikosProperties80.getOutputDir();
        boolean boolean90 = properties4.replace((java.lang.Object) atomikosProperties5, obj36, (java.lang.Object) atomikosProperties80);
        properties4.clear();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 300000L + "'", long70 == 300000L);
        org.junit.Assert.assertNotNull(objSet72);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test05662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05662");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "hi!";
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test05663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05663");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.maxTimeout = 300000L;
        java.lang.String str10 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.consoleFileLimit = 19;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.getRecovery();
        int int15 = recovery14.maxRetries;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
    }

    @Test
    public void test05664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05664");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.lang.Object obj15 = properties12.setProperty("hi!", "{com.atomikos.icatch.hi!=-1.0, =hi!}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        java.lang.String str21 = atomikosProperties16.logBaseName;
        atomikosProperties16.outputDir = "";
        java.util.Properties properties24 = atomikosProperties16.asProperties();
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        properties25.clear();
        java.util.Properties properties27 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.enableLogging = true;
        long long31 = atomikosProperties28.getCheckpointInterval();
        atomikosProperties28.setService("tmlog");
        atomikosProperties28.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Collection<java.lang.Object> objCollection41 = properties39.values();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties39.keys();
        boolean boolean43 = properties37.contains((java.lang.Object) properties39);
        boolean boolean44 = properties37.isEmpty();
        boolean boolean45 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery47.maxRetries = (-1);
        recovery47.setDelay((long) (short) 0);
        recovery47.maxRetries = (short) -1;
        long long54 = recovery47.retryInterval;
        int int55 = recovery47.getMaxRetries();
        atomikosProperties28.set(properties37, "tmlog", (java.lang.Object) int55);
        atomikosProperties28.service = "{com.atomikos.icatch.hi!=-1.0}";
        boolean boolean59 = properties27.contains((java.lang.Object) atomikosProperties28);
        java.util.Enumeration<?> wildcardEnumeration60 = properties27.propertyNames();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.io.PrintWriter printWriter62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.list(printWriter62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 500L + "'", long31 == 500L);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
    }

    @Test
    public void test05665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05665");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.hi!=-1.0}");
        int int8 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileCount = (byte) 100;
        long long12 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
    }

    @Test
    public void test05666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05666");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.util.Properties properties4 = new java.util.Properties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Collection<java.lang.Object> objCollection6 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.enableLogging = true;
        long long10 = atomikosProperties7.getCheckpointInterval();
        boolean boolean12 = properties5.remove((java.lang.Object) long10, (java.lang.Object) (byte) 100);
        boolean boolean14 = properties5.equals((java.lang.Object) (short) 1);
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Set<java.lang.String> strSet16 = properties15.stringPropertyNames();
        java.lang.Object obj17 = properties3.remove((java.lang.Object) strSet16);
        java.lang.String str19 = properties3.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        atomikosProperties20.setCheckpointInterval(10000L);
        long long27 = atomikosProperties20.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties20.consoleLogLevel = atomikosLoggingLevel28;
        atomikosProperties20.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties20.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setLogBaseDir("{}");
        java.lang.String str40 = atomikosProperties33.getOutputDir();
        atomikosProperties33.setLogBaseName("hi!");
        boolean boolean43 = atomikosProperties33.isAllowSubTransactions();
        boolean boolean44 = atomikosProperties33.isThreadedTwoPhaseCommit();
        boolean boolean45 = atomikosProperties33.forceShutdownOnVmExit;
        java.lang.Object obj46 = properties3.put((java.lang.Object) recovery32, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = atomikosProperties33.getRecovery();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(recovery47);
    }

    @Test
    public void test05667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05667");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        long long5 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setLogBaseDir("{true=10000}");
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.service = "{hi!={}}";
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.io.PrintStream printStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test05668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05668");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str15 = atomikosProperties0.logBaseDir;
        java.lang.String str16 = atomikosProperties0.outputDir;
        java.lang.String str17 = atomikosProperties0.getOutputDir();
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.lang.String str21 = properties18.getProperty("{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str21, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test05669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05669");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.lang.Object obj15 = properties6.setProperty("{true=10000}", "tmlog");
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.get((java.lang.Object) 0.0d);
        java.lang.Object obj19 = properties16.clone();
        java.lang.String str20 = properties16.toString();
        boolean boolean23 = properties16.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj24 = null;
        boolean boolean25 = properties16.equals(obj24);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.get((java.lang.Object) 0.0d);
        java.lang.Object obj29 = properties26.clone();
        java.lang.Object obj32 = properties26.setProperty("{}", "{}");
        int int33 = properties26.size();
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        boolean boolean38 = atomikosProperties35.isForceShutdownOnVmExit();
        atomikosProperties35.allowSubTransactions = false;
        boolean boolean41 = atomikosProperties35.serialJtaTransactions;
        boolean boolean42 = properties16.containsKey((java.lang.Object) boolean41);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Collection<java.lang.Object> objCollection45 = properties43.values();
        int int46 = properties43.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery47.maxRetries = (-1);
        recovery47.setDelay((long) (short) 0);
        recovery47.maxRetries = 0;
        boolean boolean55 = properties43.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        java.util.Set<java.lang.Object> objSet56 = properties43.keySet();
        boolean boolean57 = properties6.remove((java.lang.Object) boolean41, (java.lang.Object) properties43);
        java.lang.Object obj58 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.logBaseDir = "";
        atomikosProperties59.setConsoleFileCount((int) (short) 10);
        long long64 = atomikosProperties59.getMaxTimeout();
        atomikosProperties59.service = "";
        java.lang.String str67 = atomikosProperties59.logBaseDir;
        atomikosProperties59.logBaseName = "tmlog";
        atomikosProperties59.transactionManagerUniqueName = "{}";
        java.lang.String str72 = atomikosProperties59.getLogBaseDir();
        java.lang.String str73 = atomikosProperties59.logBaseDir;
        int int74 = atomikosProperties59.consoleFileCount;
        boolean boolean75 = atomikosProperties59.isForceShutdownOnVmExit();
        atomikosProperties59.serialJtaTransactions = true;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj78 = properties43.getOrDefault(obj58, (java.lang.Object) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objCollection45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 300000L + "'", long64 == 300000L);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test05670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05670");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        java.util.Properties properties19 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setDefaultJtaTimeout((-1L));
        int int23 = atomikosProperties20.getConsoleFileLimit();
        java.util.Properties properties24 = atomikosProperties20.asProperties();
        atomikosProperties20.consoleFileLimit = 0;
        boolean boolean27 = properties19.containsValue((java.lang.Object) atomikosProperties20);
        java.util.Enumeration<?> wildcardEnumeration28 = properties19.propertyNames();
        java.lang.Object obj31 = properties19.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
        java.util.Map<java.lang.Object, java.lang.Object> objMap32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.putAll(objMap32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test05671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05671");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseName;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test05672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05672");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int6 = atomikosProperties5.getConsoleFileCount();
        int int7 = atomikosProperties5.maxActives;
        atomikosProperties5.setEnableLogging(true);
        java.util.Properties properties10 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.maxRetries = (-1);
        recovery11.setDelay((long) (short) 1);
        long long16 = recovery11.getForgetOrphanedLogEntriesDelay();
        recovery11.setForgetOrphanedLogEntriesDelay((long) '#');
        java.lang.Object obj19 = properties0.put((java.lang.Object) properties10, (java.lang.Object) '#');
        java.util.Properties properties20 = new java.util.Properties(properties0);
        java.lang.Object obj21 = properties20.clone();
        java.lang.Object obj22 = properties20.clone();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 86400000L + "'", long16 == 86400000L);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
    }

    @Test
    public void test05673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05673");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 35;
        boolean boolean17 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.allowSubTransactions = true;
        java.lang.String str20 = atomikosProperties0.getConsoleFileName();
        boolean boolean21 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test05674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05674");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.outputDir;
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test05675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05675");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setEnableLogging(false);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long19 = recovery18.getRetryInterval();
        recovery18.delay = 10L;
        recovery18.setForgetOrphanedLogEntriesDelay(0L);
        int int24 = recovery18.maxRetries;
        atomikosProperties9.set(properties14, "hi!", (java.lang.Object) recovery18);
        long long26 = recovery18.getDelay();
        boolean boolean27 = properties7.containsValue((java.lang.Object) recovery18);
        long long28 = recovery18.getRetryInterval();
        int int29 = recovery18.maxRetries;
        recovery18.setMaxRetries(100);
        recovery18.setForgetOrphanedLogEntriesDelay((long) ' ');
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
    }

    @Test
    public void test05676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05676");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        atomikosProperties11.setService("");
        boolean boolean18 = properties10.equals((java.lang.Object) atomikosProperties11);
        boolean boolean19 = atomikosProperties11.serialJtaTransactions;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test05677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05677");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        boolean boolean17 = properties13.isEmpty();
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = new java.util.Properties(properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        atomikosProperties20.service = "";
        java.lang.String str28 = atomikosProperties20.logBaseDir;
        boolean boolean29 = atomikosProperties20.threadedTwoPhaseCommit;
        java.lang.String str30 = atomikosProperties20.getService();
        java.lang.String str31 = atomikosProperties20.consoleFileName;
        boolean boolean32 = atomikosProperties20.serialJtaTransactions;
        atomikosProperties20.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int35 = atomikosProperties20.getConsoleFileCount();
        boolean boolean36 = atomikosProperties20.isEnableLogging();
        atomikosProperties20.transactionManagerUniqueName = "{{}=tmlog}";
        atomikosProperties20.maxTimeout = 5;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setDefaultJtaTimeout((-1L));
        long long44 = atomikosProperties41.checkpointInterval;
        java.lang.Object obj45 = properties19.replace((java.lang.Object) 5, (java.lang.Object) atomikosProperties41);
        atomikosProperties41.setDefaultJtaTimeout((long) (-1));
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 500L + "'", long44 == 500L);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test05678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05678");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.logBaseName = "tm.out";
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.get((java.lang.Object) 0.0d);
        java.lang.Object obj19 = properties16.clone();
        java.lang.String str20 = properties16.toString();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.get((java.lang.Object) 0.0d);
        java.lang.Object obj27 = properties24.clone();
        java.lang.String str28 = properties24.toString();
        boolean boolean31 = properties24.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj32 = properties22.replace((java.lang.Object) 10.0d, (java.lang.Object) properties24);
        java.lang.String str33 = properties24.toString();
        java.util.Properties properties34 = new java.util.Properties(properties24);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Collection<java.lang.Object> objCollection37 = properties36.values();
        boolean boolean38 = properties36.isEmpty();
        boolean boolean39 = properties24.equals((java.lang.Object) boolean38);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        boolean boolean43 = properties41.isEmpty();
        java.util.Set<java.lang.String> strSet44 = properties41.stringPropertyNames();
        java.lang.String str46 = properties41.getProperty("");
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.get((java.lang.Object) 0.0d);
        java.lang.Object obj50 = properties47.clone();
        java.lang.String str51 = properties47.toString();
        boolean boolean54 = properties47.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj55 = null;
        boolean boolean56 = properties47.equals(obj55);
        java.util.Set<java.lang.Object> objSet57 = properties47.keySet();
        boolean boolean58 = properties41.contains((java.lang.Object) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.logBaseDir = "";
        atomikosProperties59.setConsoleFileCount((int) (short) 10);
        atomikosProperties59.setCheckpointInterval(10000L);
        long long66 = atomikosProperties59.maxTimeout;
        int int67 = atomikosProperties59.maxActives;
        boolean boolean68 = properties16.replace((java.lang.Object) boolean38, (java.lang.Object) properties47, (java.lang.Object) int67);
        java.lang.String str70 = properties16.getProperty("");
        java.lang.Object obj71 = properties16.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.logBaseDir = "";
        atomikosProperties72.setConsoleFileCount((int) (short) 10);
        java.lang.String str77 = atomikosProperties72.logBaseName;
        atomikosProperties72.outputDir = "";
        java.util.Properties properties80 = atomikosProperties72.asProperties();
        long long81 = atomikosProperties72.getDefaultJtaTimeout();
        atomikosProperties72.logBaseDir = "{true=10000}";
        java.util.Properties properties84 = atomikosProperties72.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.enableLogging = true;
        long long88 = atomikosProperties85.getCheckpointInterval();
        atomikosProperties85.setService("tmlog");
        atomikosProperties85.setConsoleFileLimit((int) (short) 0);
        java.lang.String str93 = atomikosProperties85.getService();
        boolean boolean94 = properties15.replace((java.lang.Object) properties16, (java.lang.Object) properties84, (java.lang.Object) atomikosProperties85);
        java.lang.String str97 = properties16.getProperty("tm.out", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(obj71);
        org.junit.Assert.assertEquals(obj71.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj71), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj71), "{}");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertNotNull(properties80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10000L + "'", long81 == 10000L);
        org.junit.Assert.assertNotNull(properties84);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 500L + "'", long88 == 500L);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "tmlog" + "'", str93, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}" + "'", str97, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
    }

    @Test
    public void test05679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05679");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection6 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.logBaseDir = "";
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        long long12 = atomikosProperties7.getMaxTimeout();
        atomikosProperties7.service = "";
        java.lang.String str15 = atomikosProperties7.logBaseDir;
        boolean boolean16 = atomikosProperties7.threadedTwoPhaseCommit;
        java.lang.String str17 = atomikosProperties7.getService();
        java.lang.String str18 = atomikosProperties7.consoleFileName;
        boolean boolean19 = atomikosProperties7.serialJtaTransactions;
        atomikosProperties7.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int22 = atomikosProperties7.getConsoleFileCount();
        boolean boolean23 = atomikosProperties7.isEnableLogging();
        atomikosProperties7.transactionManagerUniqueName = "{{}=tmlog}";
        java.lang.String str26 = atomikosProperties7.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long28 = recovery27.getRetryInterval();
        long long29 = recovery27.getDelay();
        recovery27.setMaxRetries(35);
        long long32 = recovery27.getForgetOrphanedLogEntriesDelay();
        long long33 = recovery27.getDelay();
        recovery27.setDelay((-1L));
        java.lang.Object obj36 = properties0.putIfAbsent((java.lang.Object) atomikosProperties7, (java.lang.Object) (-1L));
        atomikosProperties7.allowSubTransactions = true;
        atomikosProperties7.consoleFileLimit = ' ';
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection6);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 86400000L + "'", long32 == 86400000L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test05680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05680");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        java.util.Collection<java.lang.Object> objCollection7 = properties5.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties8.values();
        int int11 = properties8.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery12.maxRetries = (-1);
        recovery12.setDelay((long) (short) 0);
        recovery12.maxRetries = 0;
        boolean boolean20 = properties8.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration21 = properties8.propertyNames();
        java.lang.Object obj22 = properties5.get((java.lang.Object) properties8);
        properties8.clear();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test05681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05681");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        atomikosProperties4.set(properties10, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        boolean boolean26 = properties10.replace((java.lang.Object) (-1L), obj24, (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        long long33 = atomikosProperties28.getMaxTimeout();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        atomikosProperties28.set(properties34, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj41 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.get((java.lang.Object) 0.0d);
        java.lang.Object obj48 = properties45.clone();
        boolean boolean50 = properties34.replace((java.lang.Object) (-1L), obj48, (java.lang.Object) 100.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        java.lang.String str57 = properties52.getProperty("");
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.get((java.lang.Object) 0.0d);
        java.lang.Object obj61 = properties58.clone();
        java.lang.String str62 = properties58.toString();
        boolean boolean64 = properties52.remove((java.lang.Object) properties58, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration65 = properties52.propertyNames();
        atomikosProperties0.set(properties10, "hi!", (java.lang.Object) wildcardEnumeration65);
        java.lang.String str67 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.setMaxActives((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test05682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05682");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.maxActives = 50;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel5 = atomikosProperties0.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel5 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel5.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05683");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        atomikosProperties43.consoleFileName = "";
        long long61 = atomikosProperties43.getMaxTimeout();
        long long62 = atomikosProperties43.defaultJtaTimeout;
        atomikosProperties43.transactionManagerUniqueName = "tm.out";
        atomikosProperties43.checkpointInterval = '4';
        long long67 = atomikosProperties43.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 10000L + "'", long67 == 10000L);
    }

    @Test
    public void test05684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05684");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int15 = atomikosProperties14.getConsoleFileCount();
        int int16 = atomikosProperties14.maxActives;
        atomikosProperties14.setConsoleFileName("");
        atomikosProperties14.transactionManagerUniqueName = "{}";
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        long long28 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        atomikosProperties23.set(properties29, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj36 = properties29.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((-1L));
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.get((java.lang.Object) 0.0d);
        java.lang.Object obj43 = properties40.clone();
        boolean boolean45 = properties29.replace((java.lang.Object) (-1L), obj43, (java.lang.Object) 100.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        java.lang.String str52 = properties47.getProperty("");
        atomikosProperties0.set(properties21, "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) "");
        java.util.Properties properties54 = new java.util.Properties(properties21);
        java.util.Enumeration<?> wildcardEnumeration55 = properties54.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.logBaseDir = "";
        atomikosProperties56.setConsoleFileCount((int) (short) 10);
        long long61 = atomikosProperties56.getMaxTimeout();
        java.util.Properties properties62 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet63 = properties62.keySet();
        atomikosProperties56.set(properties62, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str67 = atomikosProperties56.logBaseDir;
        java.lang.String str68 = atomikosProperties56.logBaseDir;
        java.lang.String str69 = atomikosProperties56.logBaseDir;
        boolean boolean70 = atomikosProperties56.isEnableLogging();
        long long71 = atomikosProperties56.checkpointInterval;
        atomikosProperties56.setOutputDir("hi!");
        long long74 = atomikosProperties56.maxTimeout;
        java.lang.String str75 = atomikosProperties56.logBaseName;
        java.util.Properties properties76 = atomikosProperties56.asProperties();
        java.util.Collection<java.lang.Object> objCollection77 = properties76.values();
        java.lang.Object obj78 = properties54.get((java.lang.Object) objCollection77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int80 = atomikosProperties79.getConsoleFileCount();
        int int81 = atomikosProperties79.maxActives;
        int int82 = atomikosProperties79.getMaxActives();
        java.lang.String str83 = atomikosProperties79.getLogBaseName();
        boolean boolean84 = atomikosProperties79.enableLogging;
        int int85 = atomikosProperties79.getConsoleFileCount();
        atomikosProperties79.setForceShutdownOnVmExit(true);
        atomikosProperties79.service = "{{}={}}";
        atomikosProperties79.setTransactionManagerUniqueName("{}");
        java.lang.Object obj92 = properties54.get((java.lang.Object) atomikosProperties79);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(wildcardEnumeration55);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 500L + "'", long71 == 500L);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertNotNull(properties76);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 50 + "'", int81 == 50);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 50 + "'", int82 == 50);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tmlog" + "'", str83, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test05685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05685");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setService("");
        atomikosProperties0.service = "tmlog";
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setService("{}");
        long long13 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setConsoleFileName("{{}=tmlog}");
        boolean boolean17 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05686");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        long long12 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setEnableLogging(true);
        boolean boolean17 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test05687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05687");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        java.lang.String str19 = properties0.toString();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Collection<java.lang.Object> objCollection22 = properties21.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.enableLogging = true;
        long long26 = atomikosProperties23.getCheckpointInterval();
        boolean boolean28 = properties21.remove((java.lang.Object) long26, (java.lang.Object) (byte) 100);
        java.lang.String str29 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.logBaseDir = "";
        atomikosProperties30.setConsoleFileCount((int) (short) 10);
        long long35 = atomikosProperties30.getMaxTimeout();
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet37 = properties36.keySet();
        atomikosProperties30.set(properties36, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj43 = properties36.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setDefaultJtaTimeout((-1L));
        java.util.Properties properties47 = new java.util.Properties();
        java.lang.Object obj49 = properties47.get((java.lang.Object) 0.0d);
        java.lang.Object obj50 = properties47.clone();
        boolean boolean52 = properties36.replace((java.lang.Object) (-1L), obj50, (java.lang.Object) 100.0d);
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Properties properties54 = new java.util.Properties(properties53);
        properties54.clear();
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties54.elements();
        java.lang.String str59 = properties54.getProperty("");
        java.util.Properties properties60 = new java.util.Properties(properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long62 = recovery61.getRetryInterval();
        recovery61.delay = 10L;
        boolean boolean65 = properties21.remove((java.lang.Object) properties60, (java.lang.Object) 10L);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties60.keys();
        java.util.Properties properties67 = new java.util.Properties(properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = null;
        atomikosProperties68.consoleLogLevel = atomikosLoggingLevel71;
        atomikosProperties68.outputDir = "";
        java.lang.String str75 = atomikosProperties68.logBaseDir;
        java.lang.String str76 = atomikosProperties68.logBaseDir;
        java.lang.Class<?> wildcardClass77 = atomikosProperties68.getClass();
        boolean boolean78 = properties67.contains((java.lang.Object) atomikosProperties68);
        boolean boolean79 = properties67.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery80 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long81 = recovery80.getRetryInterval();
        recovery80.delay = 10L;
        long long84 = recovery80.getDelay();
        long long85 = recovery80.delay;
        recovery80.setForgetOrphanedLogEntriesDelay((long) 0);
        long long88 = recovery80.getDelay();
        recovery80.setRetryInterval(300000L);
        int int91 = recovery80.getMaxRetries();
        java.lang.Object obj92 = properties0.getOrDefault((java.lang.Object) boolean79, (java.lang.Object) recovery80);
        java.lang.Object obj93 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean94 = properties0.contains(obj93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "{{}={}}" + "'", str19, "{{}={}}");
        org.junit.Assert.assertNotNull(objCollection22);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 500L + "'", long26 == 500L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals(obj50.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj50), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj50), "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10000L + "'", long81 == 10000L);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10L + "'", long84 == 10L);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 10L + "'", long85 == 10L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10L + "'", long88 == 10L);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 5 + "'", int91 == 5);
        org.junit.Assert.assertNotNull(obj92);
    }

    @Test
    public void test05688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05688");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        int int9 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test05689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05689");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        boolean boolean31 = atomikosProperties20.isAllowSubTransactions();
        atomikosProperties20.threadedTwoPhaseCommit = false;
        java.util.Properties properties34 = atomikosProperties20.asProperties();
        java.util.Properties properties35 = new java.util.Properties(properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.enableLogging = true;
        long long39 = atomikosProperties36.getCheckpointInterval();
        java.lang.String str40 = atomikosProperties36.getService();
        java.lang.String str41 = atomikosProperties36.logBaseDir;
        atomikosProperties36.setEnableLogging(false);
        atomikosProperties36.consoleFileCount = 0;
        long long46 = atomikosProperties36.getMaxTimeout();
        boolean boolean47 = atomikosProperties36.isEnableLogging();
        atomikosProperties36.service = "tmlog";
        atomikosProperties36.setLogBaseName("{}");
        java.lang.String str52 = atomikosProperties36.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setDefaultJtaTimeout((-1L));
        java.lang.String str56 = atomikosProperties53.getTransactionManagerUniqueName();
        java.util.Properties properties57 = atomikosProperties53.asProperties();
        java.lang.String str58 = atomikosProperties53.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties53.recovery;
        long long60 = atomikosProperties53.checkpointInterval;
        java.lang.Object obj61 = properties34.putIfAbsent((java.lang.Object) atomikosProperties36, (java.lang.Object) long60);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 300000L + "'", long46 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 500L + "'", long60 == 500L);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test05690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05690");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        int int2 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.enableLogging = true;
        long long10 = atomikosProperties0.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        atomikosProperties11.setService("");
        atomikosProperties11.service = "tmlog";
        java.util.Properties properties20 = atomikosProperties11.asProperties();
        java.util.Enumeration<?> wildcardEnumeration21 = properties20.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        atomikosProperties23.setLogBaseDir("{}");
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        java.util.Set<java.lang.String> strSet31 = properties30.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getConsoleFileCount();
        int int34 = atomikosProperties32.maxActives;
        atomikosProperties32.setConsoleFileName("");
        atomikosProperties32.transactionManagerUniqueName = "{}";
        java.util.Properties properties39 = atomikosProperties32.asProperties();
        boolean boolean40 = atomikosProperties32.threadedTwoPhaseCommit;
        atomikosProperties32.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getConsoleFileCount();
        int int45 = atomikosProperties43.maxActives;
        atomikosProperties43.setConsoleFileName("");
        atomikosProperties43.transactionManagerUniqueName = "{}";
        atomikosProperties43.setMaxActives(0);
        boolean boolean52 = atomikosProperties43.forceShutdownOnVmExit;
        java.lang.Object obj53 = properties30.put((java.lang.Object) atomikosProperties32, (java.lang.Object) atomikosProperties43);
        atomikosProperties32.setConsoleFileCount((int) '4');
        int int56 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties57 = atomikosProperties32.asProperties();
        long long58 = atomikosProperties32.maxTimeout;
        atomikosProperties32.forceShutdownOnVmExit = true;
        java.lang.String str61 = atomikosProperties32.consoleFileName;
        atomikosProperties32.consoleFileName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.set(properties20, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) atomikosProperties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.enableLogging = true;
        long long68 = atomikosProperties65.getCheckpointInterval();
        java.lang.String str69 = atomikosProperties65.getOutputDir();
        atomikosProperties65.defaultJtaTimeout = 'a';
        atomikosProperties65.maxTimeout = (byte) 0;
        boolean boolean74 = properties20.containsKey((java.lang.Object) atomikosProperties65);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties20.elements();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 500L + "'", long68 == 500L);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objEnumeration75);
    }

    @Test
    public void test05691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05691");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit((int) (short) -1);
        atomikosProperties0.service = "";
        atomikosProperties0.maxActives = 10;
        atomikosProperties0.consoleFileCount = 50;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test05692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05692");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        java.lang.String str14 = atomikosProperties0.service;
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.defaultJtaTimeout = 86400000L;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05693");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseDir = "{{}={}}";
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        boolean boolean18 = atomikosProperties15.isForceShutdownOnVmExit();
        int int19 = atomikosProperties15.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties15.consoleFileLimit = ' ';
        int int23 = atomikosProperties15.getConsoleFileCount();
        java.lang.Object obj24 = properties14.get((java.lang.Object) atomikosProperties15);
        java.io.Reader reader25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.load(reader25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test05694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05694");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        java.lang.String str14 = atomikosProperties10.getService();
        java.lang.String str15 = atomikosProperties10.logBaseDir;
        atomikosProperties10.setEnableLogging(false);
        boolean boolean18 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties10.getConsoleLogLevel();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection27 = properties25.values();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        boolean boolean29 = properties23.contains((java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        java.lang.String str36 = atomikosProperties31.logBaseName;
        atomikosProperties31.outputDir = "";
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        boolean boolean41 = properties23.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties31);
        java.lang.Object obj42 = properties0.getOrDefault((java.lang.Object) atomikosProperties10, (java.lang.Object) properties23);
        int int43 = atomikosProperties10.getConsoleFileCount();
        java.lang.String str44 = atomikosProperties10.logBaseName;
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
    }

    @Test
    public void test05695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05695");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.maxRetries;
        recovery0.setRetryInterval(0L);
        recovery0.setForgetOrphanedLogEntriesDelay((long) 2);
        recovery0.forgetOrphanedLogEntriesDelay = (byte) -1;
        recovery0.delay = 52;
        long long15 = recovery0.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
    }

    @Test
    public void test05696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05696");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        long long14 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setLogBaseName("");
        int int17 = atomikosProperties0.getConsoleFileCount();
        int int18 = atomikosProperties0.maxActives;
        boolean boolean19 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test05697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05697");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Set<java.lang.Object> objSet25 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.enableLogging = true;
        int int29 = atomikosProperties26.consoleFileLimit;
        atomikosProperties26.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties26.getRecovery();
        boolean boolean33 = properties8.equals((java.lang.Object) recovery32);
        long long34 = recovery32.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 86400000L + "'", long34 == 86400000L);
    }

    @Test
    public void test05698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05698");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.String str13 = properties9.toString();
        boolean boolean16 = properties9.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj17 = properties7.replace((java.lang.Object) 10.0d, (java.lang.Object) properties9);
        java.lang.String str18 = properties9.toString();
        java.util.Properties properties19 = new java.util.Properties(properties9);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties0.entrySet();
        java.util.Properties properties22 = new java.util.Properties(properties0);
        java.util.Properties properties23 = new java.util.Properties(properties0);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{}" + "'", str18, "{}");
        org.junit.Assert.assertNotNull(objEntrySet21);
    }

    @Test
    public void test05699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05699");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05700");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.lang.Object obj9 = properties1.clone();
        int int10 = properties1.size();
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream12, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test05701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05701");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        boolean boolean22 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.allowSubTransactions = false;
        boolean boolean25 = atomikosProperties19.serialJtaTransactions;
        boolean boolean26 = properties0.containsKey((java.lang.Object) boolean25);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        long long37 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet39 = properties38.keySet();
        atomikosProperties32.set(properties38, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj45 = properties38.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setDefaultJtaTimeout((-1L));
        java.util.Properties properties49 = new java.util.Properties();
        java.lang.Object obj51 = properties49.get((java.lang.Object) 0.0d);
        java.lang.Object obj52 = properties49.clone();
        boolean boolean54 = properties38.replace((java.lang.Object) (-1L), obj52, (java.lang.Object) 100.0d);
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        properties56.clear();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.logBaseDir = "";
        atomikosProperties59.setConsoleFileCount((int) (short) 10);
        long long64 = atomikosProperties59.getMaxTimeout();
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet66 = properties65.keySet();
        atomikosProperties59.set(properties65, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str70 = atomikosProperties59.logBaseDir;
        java.lang.String str71 = atomikosProperties59.logBaseDir;
        java.util.Properties properties72 = atomikosProperties59.asProperties();
        java.lang.Object obj73 = properties27.replace((java.lang.Object) properties56, (java.lang.Object) atomikosProperties59);
        java.lang.Class<?> wildcardClass74 = properties27.getClass();
        boolean boolean75 = properties0.contains((java.lang.Object) wildcardClass74);
        java.io.PrintWriter printWriter76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printWriter76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 300000L + "'", long64 == 300000L);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test05702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05702");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        int int13 = atomikosProperties0.maxActives;
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.consoleFileLimit = (short) 0;
        int int18 = atomikosProperties0.consoleFileLimit;
        int int19 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.transactionManagerUniqueName = "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test05703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05703");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        int int4 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.consoleFileCount = 100;
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.enableLogging = true;
        java.lang.String str10 = atomikosProperties0.service;
        atomikosProperties0.maxActives = 18;
        atomikosProperties0.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.recovery;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(recovery15);
    }

    @Test
    public void test05704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05704");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        long long6 = recovery0.delay;
        long long7 = recovery0.delay;
        int int8 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test05705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05705");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        recovery0.retryInterval = '4';
        long long10 = recovery0.getRetryInterval();
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval(0L);
        long long14 = recovery0.delay;
        long long15 = recovery0.getRetryInterval();
        long long16 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long17 = recovery0.getDelay();
        recovery0.setDelay((long) 50);
        long long20 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int21 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 86400000L + "'", long16 == 86400000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 86400000L + "'", long20 == 86400000L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test05706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05706");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.checkpointInterval = 300000L;
        long long12 = atomikosProperties0.maxTimeout;
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05707");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        long long9 = recovery0.retryInterval;
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setMaxRetries(0);
        long long13 = recovery0.getDelay();
        long long14 = recovery0.delay;
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test05708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05708");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.checkpointInterval = 35;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setLogBaseDir("tmlog");
        boolean boolean26 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test05709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05709");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        long long8 = atomikosProperties0.getCheckpointInterval();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.transactionManagerUniqueName;
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test05710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05710");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        long long17 = atomikosProperties14.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int19 = atomikosProperties18.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        atomikosProperties20.setCheckpointInterval(10000L);
        long long27 = atomikosProperties20.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties20.consoleLogLevel = atomikosLoggingLevel28;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel28;
        atomikosProperties14.consoleLogLevel = atomikosLoggingLevel28;
        atomikosProperties14.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery34.maxRetries = (-1);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Collection<java.lang.Object> objCollection39 = properties38.values();
        java.lang.Object obj42 = properties38.setProperty("hi!", "{}");
        java.lang.String str44 = properties38.getProperty("tmlog");
        java.util.Set<java.lang.String> strSet45 = properties38.stringPropertyNames();
        boolean boolean46 = properties13.replace((java.lang.Object) false, (java.lang.Object) recovery34, (java.lang.Object) strSet45);
        long long47 = recovery34.getForgetOrphanedLogEntriesDelay();
        recovery34.maxRetries = 0;
        long long50 = recovery34.retryInterval;
        recovery34.forgetOrphanedLogEntriesDelay = 86400000L;
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel28 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel28.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 86400000L + "'", long47 == 86400000L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10000L + "'", long50 == 10000L);
    }

    @Test
    public void test05711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05711");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.checkpointInterval = (byte) 1;
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.outputDir;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05712");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet11 = properties1.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
    }

    @Test
    public void test05713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05713");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        atomikosProperties0.allowSubTransactions = false;
        atomikosProperties0.enableLogging = true;
        java.lang.String str20 = atomikosProperties0.consoleFileName;
        java.lang.String str21 = atomikosProperties0.getTransactionManagerUniqueName();
        long long22 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
    }

    @Test
    public void test05714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05714");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.logBaseDir = "{}";
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test05715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05715");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        boolean boolean8 = properties1.isEmpty();
        boolean boolean9 = properties1.isEmpty();
        java.lang.Object obj12 = properties1.setProperty("", "tmlog");
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream13, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10000, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=10, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test05716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05716");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.consoleFileLimit = 'a';
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        atomikosProperties0.consoleFileCount = (byte) 1;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05717");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setSerialJtaTransactions(true);
        long long12 = atomikosProperties0.maxTimeout;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        int int14 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test05718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05718");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setLogBaseName("tm.out");
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
    }

    @Test
    public void test05719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05719");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.consoleFileCount = 0;
        long long10 = atomikosProperties0.getMaxTimeout();
        int int11 = atomikosProperties0.consoleFileLimit;
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str13 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.transactionManagerUniqueName = "";
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.setCheckpointInterval((long) '#');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05720");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        properties6.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties6.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        boolean boolean19 = atomikosProperties16.isForceShutdownOnVmExit();
        int int20 = atomikosProperties16.consoleFileLimit;
        atomikosProperties16.setLogBaseDir("{}");
        java.lang.Object obj23 = properties6.get((java.lang.Object) atomikosProperties16);
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.storeToXML(outputStream24, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test05721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05721");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.setMaxActives((int) (short) 100);
        long long11 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 500L + "'", long11 == 500L);
    }

    @Test
    public void test05722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05722");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        boolean boolean17 = properties13.isEmpty();
        boolean boolean18 = properties13.isEmpty();
        java.util.Properties properties19 = new java.util.Properties(properties13);
        java.lang.Object obj22 = properties13.setProperty("{}", "{}");
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj22);
    }

    @Test
    public void test05723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05723");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 1);
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.maxRetries;
        recovery0.setRetryInterval(35L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test05724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05724");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        int int10 = atomikosProperties0.consoleFileLimit;
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection17 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.keys();
        boolean boolean19 = properties13.contains((java.lang.Object) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.enableLogging = true;
        long long23 = atomikosProperties20.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties20.getService();
        java.lang.String str25 = atomikosProperties20.logBaseDir;
        atomikosProperties20.setEnableLogging(false);
        atomikosProperties20.consoleFileCount = 0;
        long long30 = atomikosProperties20.getMaxTimeout();
        int int31 = atomikosProperties20.consoleFileLimit;
        java.util.Properties properties32 = atomikosProperties20.asProperties();
        java.util.Properties properties33 = new java.util.Properties(properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int35 = atomikosProperties34.getConsoleFileCount();
        int int36 = atomikosProperties34.maxActives;
        atomikosProperties34.setConsoleFileName("");
        atomikosProperties34.transactionManagerUniqueName = "{}";
        java.util.Properties properties41 = atomikosProperties34.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.logBaseDir = "";
        atomikosProperties42.setConsoleFileCount((int) (short) 10);
        long long47 = atomikosProperties42.getMaxTimeout();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet49 = properties48.keySet();
        atomikosProperties42.set(properties48, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj55 = properties48.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((-1L));
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.get((java.lang.Object) 0.0d);
        java.lang.Object obj62 = properties59.clone();
        boolean boolean64 = properties48.replace((java.lang.Object) (-1L), obj62, (java.lang.Object) 100.0d);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties66.elements();
        java.lang.String str71 = properties66.getProperty("");
        java.util.Properties properties72 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int75 = atomikosProperties74.getConsoleFileCount();
        int int76 = atomikosProperties74.maxActives;
        atomikosProperties74.setEnableLogging(true);
        boolean boolean79 = atomikosProperties74.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.logBaseDir = "";
        atomikosProperties81.setConsoleFileCount((int) (short) 10);
        long long86 = atomikosProperties81.getMaxTimeout();
        java.util.Properties properties87 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet88 = properties87.keySet();
        atomikosProperties81.set(properties87, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str92 = atomikosProperties81.logBaseDir;
        boolean boolean93 = atomikosProperties81.enableLogging;
        java.lang.Object obj94 = properties72.putIfAbsent((java.lang.Object) atomikosLoggingLevel80, (java.lang.Object) atomikosProperties81);
        boolean boolean95 = properties15.replace((java.lang.Object) properties32, (java.lang.Object) atomikosProperties34, (java.lang.Object) atomikosLoggingLevel80);
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel80;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 500L + "'", long23 == 500L);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 50 + "'", int76 == 50);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 300000L + "'", long86 == 300000L);
        org.junit.Assert.assertNotNull(objSet88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test05725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05725");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit((int) (short) -1);
        atomikosProperties0.service = "";
        atomikosProperties0.maxActives = 10;
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.maxActives = 22;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test05726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05726");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.checkpointInterval = 100;
        java.lang.String str9 = atomikosProperties0.consoleFileName;
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        java.lang.String str16 = atomikosProperties11.logBaseName;
        atomikosProperties11.outputDir = "";
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Set<java.lang.String> strSet20 = properties19.stringPropertyNames();
        boolean boolean22 = properties19.contains((java.lang.Object) false);
        properties19.clear();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.get((java.lang.Object) 0.0d);
        java.lang.Object obj29 = properties26.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.enableLogging = true;
        long long33 = atomikosProperties30.getCheckpointInterval();
        java.lang.String str34 = atomikosProperties30.getService();
        java.lang.String str35 = atomikosProperties30.logBaseDir;
        atomikosProperties30.setEnableLogging(false);
        boolean boolean38 = atomikosProperties30.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.enableLogging = true;
        long long42 = atomikosProperties39.getCheckpointInterval();
        atomikosProperties39.setService("tmlog");
        atomikosProperties39.setConsoleFileName("{}");
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        atomikosProperties39.setCheckpointInterval((long) (short) 10);
        atomikosProperties39.logBaseName = "";
        java.lang.Object obj52 = properties26.put((java.lang.Object) boolean38, (java.lang.Object) atomikosProperties39);
        java.util.Set<java.lang.Object> objSet53 = properties26.keySet();
        atomikosProperties0.set(properties19, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", (java.lang.Object) properties26);
        java.lang.String str55 = properties19.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 500L + "'", long42 == 500L);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objSet53);
    }

    @Test
    public void test05727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05727");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.maxActives = (short) 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05728");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.lang.Object obj6 = properties0.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", "{{}={}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setDefaultJtaTimeout((-1L));
        java.lang.String str10 = atomikosProperties7.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getConsoleFileCount();
        int int13 = atomikosProperties11.maxActives;
        atomikosProperties11.setEnableLogging(true);
        boolean boolean16 = atomikosProperties11.isThreadedTwoPhaseCommit();
        atomikosProperties11.setMaxTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.checkpointInterval = 0;
        boolean boolean24 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.setSerialJtaTransactions(false);
        java.util.Properties properties27 = new java.util.Properties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Properties properties32 = new java.util.Properties();
        java.lang.Object obj34 = properties32.get((java.lang.Object) 0.0d);
        java.lang.Object obj35 = properties32.clone();
        java.lang.String str36 = properties32.toString();
        boolean boolean39 = properties32.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj40 = properties30.replace((java.lang.Object) 10.0d, (java.lang.Object) properties32);
        java.lang.String str41 = properties32.toString();
        java.util.Properties properties42 = new java.util.Properties(properties32);
        java.util.Properties properties43 = new java.util.Properties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties46 = new java.util.Properties();
        java.lang.Object obj48 = properties46.get((java.lang.Object) 0.0d);
        java.lang.Object obj49 = properties46.clone();
        java.lang.String str50 = properties46.toString();
        boolean boolean53 = properties46.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj54 = properties44.replace((java.lang.Object) 10.0d, (java.lang.Object) properties46);
        java.util.Properties properties55 = new java.util.Properties(properties44);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        boolean boolean57 = properties27.contains((java.lang.Object) properties42);
        boolean boolean58 = properties42.isEmpty();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Collection<java.lang.Object> objCollection61 = properties60.values();
        java.lang.Object obj64 = properties60.setProperty("hi!", "{}");
        java.lang.String str66 = properties60.getProperty("tmlog");
        properties60.clear();
        java.util.Set<java.lang.String> strSet68 = properties60.stringPropertyNames();
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.enableLogging = true;
        int int74 = atomikosProperties71.consoleFileLimit;
        atomikosProperties71.logBaseName = "hi!";
        atomikosProperties71.enableLogging = false;
        atomikosProperties71.setMaxTimeout((long) '4');
        atomikosProperties71.setMaxTimeout((long) 1);
        atomikosProperties19.set(properties42, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) 1);
        boolean boolean84 = properties0.replace((java.lang.Object) atomikosProperties7, (java.lang.Object) atomikosProperties11, (java.lang.Object) properties42);
        atomikosProperties7.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        java.lang.String str87 = atomikosProperties7.getOutputDir();
        atomikosProperties7.logBaseName = "{}";
        atomikosProperties7.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        int int92 = atomikosProperties7.consoleFileLimit;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertEquals(obj35.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj35), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj35), "{}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "{}" + "'", str36, "{}");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{}" + "'", str41, "{}");
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
    }

    @Test
    public void test05729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05729");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        boolean boolean9 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.consoleFileLimit = (byte) 100;
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test05730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05730");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties21.keys();
        int int27 = properties21.size();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties21.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery30.maxRetries = (-1);
        recovery30.setDelay((long) (short) 0);
        recovery30.maxRetries = 0;
        atomikosProperties0.set(properties21, "tmlog", (java.lang.Object) recovery30);
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = null;
        atomikosProperties43.consoleLogLevel = atomikosLoggingLevel46;
        atomikosProperties43.outputDir = "";
        java.lang.String str50 = atomikosProperties43.logBaseName;
        java.util.Properties properties51 = atomikosProperties43.asProperties();
        atomikosProperties0.set(properties40, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) atomikosProperties43);
        java.lang.String str53 = atomikosProperties43.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
    }

    @Test
    public void test05731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05731");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        properties6.clear();
        java.util.Enumeration<?> wildcardEnumeration15 = properties6.propertyNames();
        java.lang.Class<?> wildcardClass16 = wildcardEnumeration15.getClass();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(wildcardEnumeration15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test05732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05732");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.service;
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setMaxActives((int) (byte) 10);
        atomikosProperties0.setMaxTimeout(1L);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test05733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05733");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.outputDir;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setConsoleFileName("");
        boolean boolean20 = atomikosProperties0.isAllowSubTransactions();
        int int21 = atomikosProperties0.getMaxActives();
        boolean boolean22 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int24 = atomikosProperties23.getConsoleFileCount();
        int int25 = atomikosProperties23.maxActives;
        atomikosProperties23.setConsoleFileName("");
        atomikosProperties23.transactionManagerUniqueName = "{}";
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        atomikosProperties23.setConsoleFileLimit((int) (short) -1);
        java.lang.String str33 = atomikosProperties23.outputDir;
        java.util.Properties properties34 = atomikosProperties23.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel35;
        java.lang.String str37 = atomikosProperties0.logBaseName;
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
    }

    @Test
    public void test05734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05734");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean6 = atomikosProperties0.allowSubTransactions;
        long long7 = atomikosProperties0.checkpointInterval;
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        long long9 = atomikosProperties0.maxTimeout;
        int int10 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test05735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05735");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int8 = atomikosProperties7.getConsoleFileCount();
        int int9 = atomikosProperties7.maxActives;
        java.lang.String str10 = atomikosProperties7.getService();
        boolean boolean11 = properties0.remove((java.lang.Object) atomikosProperties2, (java.lang.Object) atomikosProperties7);
        atomikosProperties7.setLogBaseDir("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties7.consoleLogLevel;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05736");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.consoleFileLimit = 'a';
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        atomikosProperties0.allowSubTransactions = true;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05737");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        atomikosProperties0.logBaseName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        long long16 = atomikosProperties13.getCheckpointInterval();
        java.lang.String str17 = atomikosProperties13.getService();
        java.lang.String str18 = atomikosProperties13.logBaseDir;
        atomikosProperties13.setEnableLogging(false);
        atomikosProperties13.consoleFileCount = 0;
        long long23 = atomikosProperties13.getMaxTimeout();
        boolean boolean24 = atomikosProperties13.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties13.consoleLogLevel;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        java.util.Properties properties27 = atomikosProperties0.asProperties();
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.io.Reader reader29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties28.load(reader29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties27);
    }

    @Test
    public void test05738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05738");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.defaultJtaTimeout = 52L;
        int int14 = atomikosProperties0.consoleFileLimit;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test05739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05739");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setOutputDir("tmlog");
        long long9 = atomikosProperties0.maxTimeout;
        atomikosProperties0.defaultJtaTimeout = 'a';
        atomikosProperties0.outputDir = "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}";
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
    }

    @Test
    public void test05740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05740");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit((int) (short) -1);
        atomikosProperties0.service = "";
        atomikosProperties0.maxActives = 10;
        atomikosProperties0.consoleFileLimit = (byte) -1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test05741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05741");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        boolean boolean38 = properties8.contains((java.lang.Object) properties23);
        boolean boolean39 = properties23.isEmpty();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.lang.Object obj45 = properties41.setProperty("hi!", "{}");
        java.lang.String str47 = properties41.getProperty("tmlog");
        properties41.clear();
        java.util.Set<java.lang.String> strSet49 = properties41.stringPropertyNames();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.enableLogging = true;
        int int55 = atomikosProperties52.consoleFileLimit;
        atomikosProperties52.logBaseName = "hi!";
        atomikosProperties52.enableLogging = false;
        atomikosProperties52.setMaxTimeout((long) '4');
        atomikosProperties52.setMaxTimeout((long) 1);
        atomikosProperties0.set(properties23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) 1);
        java.lang.String str65 = atomikosProperties0.getOutputDir();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.consoleFileCount = '4';
        boolean boolean70 = atomikosProperties0.enableLogging;
        java.lang.String str71 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test05742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05742");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((-1L));
        long long12 = atomikosProperties9.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int14 = atomikosProperties13.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        atomikosProperties15.setCheckpointInterval(10000L);
        long long22 = atomikosProperties15.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties15.consoleLogLevel = atomikosLoggingLevel23;
        atomikosProperties13.consoleLogLevel = atomikosLoggingLevel23;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel23;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel23);
        java.lang.String str28 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 500L + "'", long12 == 500L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test05743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05743");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.consoleFileCount = 0;
        long long10 = atomikosProperties0.getMaxTimeout();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.consoleLogLevel;
        atomikosProperties0.setLogBaseDir("{true=10000}");
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.lang.String str17 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test05744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05744");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties(properties0);
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.get((java.lang.Object) 0.0d);
        java.lang.Object obj10 = properties7.clone();
        java.lang.String str11 = properties7.toString();
        java.util.Properties properties12 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.keys();
        java.util.Collection<java.lang.Object> objCollection14 = properties12.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.get((java.lang.Object) 0.0d);
        java.lang.Object obj21 = properties18.clone();
        java.lang.String str22 = properties18.toString();
        boolean boolean25 = properties18.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj26 = properties16.replace((java.lang.Object) 10.0d, (java.lang.Object) properties18);
        java.util.Properties properties27 = new java.util.Properties(properties16);
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        boolean boolean35 = properties28.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getConsoleFileCount();
        int int39 = atomikosProperties37.maxActives;
        atomikosProperties37.maxActives = 50;
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Collection<java.lang.Object> objCollection44 = properties42.values();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Collection<java.lang.Object> objCollection47 = properties46.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.enableLogging = true;
        long long51 = atomikosProperties48.getCheckpointInterval();
        boolean boolean53 = properties46.remove((java.lang.Object) long51, (java.lang.Object) (byte) 100);
        boolean boolean55 = properties46.equals((java.lang.Object) (short) 1);
        java.lang.Object obj58 = properties46.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties46.keys();
        java.util.Properties properties60 = new java.util.Properties();
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties60.isEmpty();
        boolean boolean63 = properties42.remove((java.lang.Object) objEnumeration59, (java.lang.Object) properties60);
        boolean boolean64 = properties28.remove((java.lang.Object) 50, (java.lang.Object) properties60);
        java.lang.String str65 = properties60.toString();
        java.util.Properties properties66 = new java.util.Properties(properties60);
        boolean boolean67 = properties16.contains((java.lang.Object) properties66);
        boolean boolean69 = properties16.containsKey((java.lang.Object) 0);
        java.util.Properties properties70 = new java.util.Properties();
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Collection<java.lang.Object> objCollection72 = properties71.values();
        java.lang.Object obj75 = properties71.setProperty("hi!", "{}");
        java.lang.String str77 = properties71.getProperty("tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties71.elements();
        java.lang.Object obj79 = properties12.put((java.lang.Object) boolean69, (java.lang.Object) properties71);
        boolean boolean80 = properties0.containsKey((java.lang.Object) properties12);
        java.lang.Object obj81 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean82 = properties12.contains(obj81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNotNull(objCollection44);
        org.junit.Assert.assertNotNull(objCollection47);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 500L + "'", long51 == 500L);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{}" + "'", str65, "{}");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test05745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05745");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setService("{}");
        boolean boolean5 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties0.getRecovery();
        long long9 = recovery8.getDelay();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test05746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05746");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.util.Set<java.lang.String> strSet9 = properties1.stringPropertyNames();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Object obj26 = properties13.setProperty("", "");
        java.util.Properties properties27 = new java.util.Properties(properties13);
        java.util.Set<java.lang.Object> objSet28 = properties27.keySet();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        boolean boolean30 = properties1.containsKey((java.lang.Object) properties29);
        boolean boolean31 = properties1.isEmpty();
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream32, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test05747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05747");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.enableLogging = true;
        long long7 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str8 = atomikosProperties4.getService();
        java.lang.String str9 = atomikosProperties4.logBaseDir;
        atomikosProperties4.setEnableLogging(false);
        boolean boolean12 = atomikosProperties4.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        long long16 = atomikosProperties13.getCheckpointInterval();
        atomikosProperties13.setService("tmlog");
        atomikosProperties13.setConsoleFileName("{}");
        java.util.Properties properties21 = atomikosProperties13.asProperties();
        atomikosProperties13.setCheckpointInterval((long) (short) 10);
        atomikosProperties13.logBaseName = "";
        java.lang.Object obj26 = properties0.put((java.lang.Object) boolean12, (java.lang.Object) atomikosProperties13);
        atomikosProperties13.setForceShutdownOnVmExit(true);
        boolean boolean29 = atomikosProperties13.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test05748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05748");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.checkpointInterval = (byte) 1;
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test05749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05749");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.lang.String> strSet11 = properties1.stringPropertyNames();
        java.lang.String str12 = properties1.toString();
        java.util.Properties properties13 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNotNull(objEnumeration14);
    }

    @Test
    public void test05750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05750");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.forceShutdownOnVmExit = false;
        atomikosProperties0.checkpointInterval = (short) 1;
        int int22 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.allowSubTransactions = false;
        long long25 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
    }

    @Test
    public void test05751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05751");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties9.values();
        java.util.Properties properties11 = new java.util.Properties();
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Collection<java.lang.Object> objCollection13 = properties11.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties11.keys();
        boolean boolean15 = properties9.contains((java.lang.Object) properties11);
        boolean boolean16 = properties9.isEmpty();
        boolean boolean17 = properties9.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery19.maxRetries = (-1);
        recovery19.setDelay((long) (short) 0);
        recovery19.maxRetries = (short) -1;
        long long26 = recovery19.retryInterval;
        int int27 = recovery19.getMaxRetries();
        atomikosProperties0.set(properties9, "tmlog", (java.lang.Object) int27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties9.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties9.elements();
        java.io.InputStream inputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration30);
    }

    @Test
    public void test05752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05752");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        recovery0.retryInterval = '4';
        long long10 = recovery0.getRetryInterval();
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.retryInterval = 100L;
        recovery0.setDelay((long) ' ');
        long long16 = recovery0.retryInterval;
        int int17 = recovery0.maxRetries;
        recovery0.setRetryInterval((long) (byte) 1);
        long long20 = recovery0.retryInterval;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
    }

    @Test
    public void test05753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05753");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.checkpointInterval = 100;
        java.lang.String str9 = atomikosProperties0.consoleFileName;
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        java.lang.String str16 = atomikosProperties11.logBaseName;
        atomikosProperties11.outputDir = "";
        java.util.Properties properties19 = atomikosProperties11.asProperties();
        java.util.Set<java.lang.String> strSet20 = properties19.stringPropertyNames();
        boolean boolean22 = properties19.contains((java.lang.Object) false);
        properties19.clear();
        java.util.Properties properties24 = new java.util.Properties(properties19);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.get((java.lang.Object) 0.0d);
        java.lang.Object obj29 = properties26.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.enableLogging = true;
        long long33 = atomikosProperties30.getCheckpointInterval();
        java.lang.String str34 = atomikosProperties30.getService();
        java.lang.String str35 = atomikosProperties30.logBaseDir;
        atomikosProperties30.setEnableLogging(false);
        boolean boolean38 = atomikosProperties30.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.enableLogging = true;
        long long42 = atomikosProperties39.getCheckpointInterval();
        atomikosProperties39.setService("tmlog");
        atomikosProperties39.setConsoleFileName("{}");
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        atomikosProperties39.setCheckpointInterval((long) (short) 10);
        atomikosProperties39.logBaseName = "";
        java.lang.Object obj52 = properties26.put((java.lang.Object) boolean38, (java.lang.Object) atomikosProperties39);
        java.util.Set<java.lang.Object> objSet53 = properties26.keySet();
        atomikosProperties0.set(properties19, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", (java.lang.Object) properties26);
        atomikosProperties0.enableLogging = true;
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 500L + "'", long42 == 500L);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objSet53);
    }

    @Test
    public void test05754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05754");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.util.Properties properties9 = new java.util.Properties();
        java.lang.Object obj11 = properties9.get((java.lang.Object) 0.0d);
        java.lang.Object obj12 = properties9.clone();
        java.lang.Object obj15 = properties9.setProperty("{}", "{}");
        int int16 = properties9.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        atomikosProperties17.setLogBaseDir("{}");
        java.lang.String str24 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setLogBaseName("hi!");
        boolean boolean27 = atomikosProperties17.isAllowSubTransactions();
        boolean boolean28 = atomikosProperties17.isThreadedTwoPhaseCommit();
        boolean boolean29 = atomikosProperties17.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties17.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties17.recovery;
        recovery31.setMaxRetries(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str45 = atomikosProperties34.logBaseDir;
        boolean boolean46 = atomikosProperties34.enableLogging;
        atomikosProperties34.setLogBaseDir("");
        atomikosProperties34.setAllowSubTransactions(true);
        java.lang.Object obj51 = properties9.put((java.lang.Object) 10, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties52 = new java.util.Properties(properties9);
        java.lang.String str53 = properties9.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.enableLogging = true;
        java.lang.String str58 = atomikosProperties55.logBaseDir;
        atomikosProperties0.set(properties9, "tm.out", (java.lang.Object) str58);
        java.util.Properties properties60 = new java.util.Properties(properties9);
        java.lang.String str62 = properties9.getProperty("{com.atomikos.icatch.tmlog=-1}");
        java.io.InputStream inputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.loadFromXML(inputStream63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertNotNull(recovery31);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test05755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05755");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.consoleFileLimit = 'a';
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        long long10 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.consoleFileCount = 18;
        atomikosProperties0.defaultJtaTimeout = '#';
        java.lang.String str15 = atomikosProperties0.getOutputDir();
        java.lang.String str16 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test05756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05756");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        int int9 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.enableLogging = true;
        long long18 = atomikosProperties15.getCheckpointInterval();
        boolean boolean20 = properties13.remove((java.lang.Object) long18, (java.lang.Object) (byte) 100);
        boolean boolean22 = properties13.equals((java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Class<?> wildcardClass24 = properties23.getClass();
        java.lang.Object obj25 = properties0.put((java.lang.Object) properties10, (java.lang.Object) wildcardClass24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setDefaultJtaTimeout((-1L));
        int int29 = atomikosProperties26.getConsoleFileLimit();
        java.util.Properties properties30 = atomikosProperties26.asProperties();
        boolean boolean31 = atomikosProperties26.forceShutdownOnVmExit;
        atomikosProperties26.setCheckpointInterval(10000L);
        atomikosProperties26.maxActives = 50;
        java.util.Properties properties36 = new java.util.Properties();
        int int37 = properties36.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.logBaseDir = "";
        atomikosProperties38.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getConsoleFileCount();
        int int45 = atomikosProperties43.maxActives;
        java.lang.String str46 = atomikosProperties43.getService();
        boolean boolean47 = properties36.remove((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties43);
        java.lang.String str48 = atomikosProperties38.getLogBaseName();
        java.lang.Object obj49 = properties10.replace((java.lang.Object) atomikosProperties26, (java.lang.Object) str48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.logBaseDir = "";
        atomikosProperties50.setConsoleFileCount((int) (short) 10);
        long long55 = atomikosProperties50.getMaxTimeout();
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet57 = properties56.keySet();
        atomikosProperties50.set(properties56, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str61 = atomikosProperties50.logBaseDir;
        java.lang.String str62 = atomikosProperties50.logBaseDir;
        java.lang.String str63 = atomikosProperties50.logBaseDir;
        java.lang.String str64 = atomikosProperties50.getService();
        java.lang.String str65 = atomikosProperties50.outputDir;
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setConsoleFileName("");
        long long70 = atomikosProperties50.getCheckpointInterval();
        java.lang.Object obj71 = properties10.get((java.lang.Object) atomikosProperties50);
        java.lang.String str72 = atomikosProperties50.getLogBaseName();
        java.util.Properties properties73 = atomikosProperties50.asProperties();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertNotNull(properties73);
    }

    @Test
    public void test05757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05757");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        java.util.Set<java.lang.Object> objSet14 = properties6.keySet();
        java.lang.String str15 = properties6.toString();
        java.util.Properties properties16 = new java.util.Properties(properties6);
        java.io.PrintWriter printWriter17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.list(printWriter17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objSet14);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{com.atomikos.icatch.hi!=-1.0, =hi!}" + "'", str15, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
    }

    @Test
    public void test05758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05758");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        int int7 = properties5.size();
        java.lang.Object obj8 = properties5.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long10 = atomikosProperties9.defaultJtaTimeout;
        java.lang.String str11 = atomikosProperties9.getLogBaseName();
        atomikosProperties9.allowSubTransactions = true;
        long long14 = atomikosProperties9.getDefaultJtaTimeout();
        atomikosProperties9.setCheckpointInterval((long) 35);
        atomikosProperties9.defaultJtaTimeout = 50L;
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        long long29 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet31 = properties30.keySet();
        atomikosProperties24.set(properties30, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj37 = properties30.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setDefaultJtaTimeout((-1L));
        java.util.Properties properties41 = new java.util.Properties();
        java.lang.Object obj43 = properties41.get((java.lang.Object) 0.0d);
        java.lang.Object obj44 = properties41.clone();
        boolean boolean46 = properties30.replace((java.lang.Object) (-1L), obj44, (java.lang.Object) 100.0d);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        properties48.clear();
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.logBaseDir = "";
        atomikosProperties51.setConsoleFileCount((int) (short) 10);
        long long56 = atomikosProperties51.getMaxTimeout();
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet58 = properties57.keySet();
        atomikosProperties51.set(properties57, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str62 = atomikosProperties51.logBaseDir;
        java.lang.String str63 = atomikosProperties51.logBaseDir;
        java.util.Properties properties64 = atomikosProperties51.asProperties();
        java.lang.Object obj65 = properties19.replace((java.lang.Object) properties48, (java.lang.Object) atomikosProperties51);
        atomikosProperties51.serialJtaTransactions = true;
        atomikosProperties51.setMaxTimeout((long) 100);
        java.lang.String str70 = atomikosProperties51.getOutputDir();
        java.lang.String str71 = atomikosProperties51.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.logBaseDir = "";
        atomikosProperties72.setConsoleFileCount((int) (short) 10);
        java.lang.String str77 = atomikosProperties72.logBaseName;
        atomikosProperties72.outputDir = "";
        long long80 = atomikosProperties72.checkpointInterval;
        atomikosProperties72.service = "";
        int int83 = atomikosProperties72.getConsoleFileCount();
        boolean boolean84 = properties5.replace((java.lang.Object) 50L, (java.lang.Object) atomikosProperties51, (java.lang.Object) int83);
        atomikosProperties51.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties51.transactionManagerUniqueName = "{{}=tmlog}";
        atomikosProperties51.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 500L + "'", long80 == 500L);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 10 + "'", int83 == 10);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test05759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05759");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        atomikosProperties9.setConsoleFileCount((int) '4');
        int int33 = atomikosProperties9.getConsoleFileLimit();
        boolean boolean34 = atomikosProperties9.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        java.lang.String str40 = atomikosProperties35.logBaseName;
        java.lang.String str41 = atomikosProperties35.logBaseDir;
        long long42 = atomikosProperties35.defaultJtaTimeout;
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        java.util.Properties properties44 = atomikosProperties35.asProperties();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.enableLogging = true;
        long long52 = atomikosProperties49.getCheckpointInterval();
        boolean boolean54 = properties47.remove((java.lang.Object) long52, (java.lang.Object) (byte) 100);
        boolean boolean56 = properties47.equals((java.lang.Object) (short) 1);
        java.util.Properties properties57 = new java.util.Properties(properties47);
        java.util.Set<java.lang.String> strSet58 = properties57.stringPropertyNames();
        atomikosProperties9.set(properties44, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) properties57);
        atomikosProperties9.service = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 10000L + "'", long42 == 10000L);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strSet58);
    }

    @Test
    public void test05760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05760");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        boolean boolean24 = properties17.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj25 = properties15.replace((java.lang.Object) 10.0d, (java.lang.Object) properties17);
        java.util.Properties properties26 = new java.util.Properties(properties15);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.String str28 = properties26.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery29.maxRetries = (-1);
        recovery29.setDelay((long) (short) 0);
        recovery29.maxRetries = 0;
        recovery29.forgetOrphanedLogEntriesDelay = 100;
        recovery29.setMaxRetries((int) (byte) -1);
        long long40 = recovery29.forgetOrphanedLogEntriesDelay;
        recovery29.setMaxRetries(0);
        boolean boolean43 = properties26.contains((java.lang.Object) recovery29);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 100L + "'", long40 == 100L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test05761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05761");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileLimit = 0;
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean11 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05762");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        java.lang.String str14 = atomikosProperties9.logBaseName;
        atomikosProperties9.outputDir = "";
        java.util.Properties properties17 = atomikosProperties9.asProperties();
        java.util.Properties properties18 = atomikosProperties9.asProperties();
        boolean boolean19 = properties1.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties9);
        atomikosProperties9.maxTimeout = (short) 10;
        int int22 = atomikosProperties9.consoleFileLimit;
        atomikosProperties9.transactionManagerUniqueName = "{com.atomikos.icatch.{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=10}";
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test05763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05763");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.service;
        java.lang.String str12 = atomikosProperties0.getService();
        boolean boolean13 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties0.setConsoleFileCount(0);
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Collection<java.lang.Object> objCollection20 = properties19.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.enableLogging = true;
        long long24 = atomikosProperties21.getCheckpointInterval();
        boolean boolean26 = properties19.remove((java.lang.Object) long24, (java.lang.Object) (byte) 100);
        boolean boolean28 = properties19.equals((java.lang.Object) (short) 1);
        java.util.Properties properties29 = new java.util.Properties(properties19);
        properties19.clear();
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Collection<java.lang.Object> objCollection33 = properties31.values();
        java.util.Properties properties34 = new java.util.Properties(properties31);
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Collection<java.lang.Object> objCollection37 = properties36.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.enableLogging = true;
        long long41 = atomikosProperties38.getCheckpointInterval();
        boolean boolean43 = properties36.remove((java.lang.Object) long41, (java.lang.Object) (byte) 100);
        boolean boolean45 = properties36.equals((java.lang.Object) (short) 1);
        java.util.Properties properties46 = new java.util.Properties(properties36);
        java.util.Set<java.lang.String> strSet47 = properties46.stringPropertyNames();
        java.lang.Object obj48 = properties34.remove((java.lang.Object) strSet47);
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.enableLogging = true;
        int int54 = atomikosProperties51.consoleFileLimit;
        atomikosProperties51.logBaseName = "hi!";
        atomikosProperties51.setEnableLogging(false);
        atomikosProperties51.setTransactionManagerUniqueName("");
        atomikosProperties51.forceShutdownOnVmExit = true;
        atomikosProperties51.setLogBaseName("hi!");
        atomikosProperties51.setLogBaseName("{{}=tmlog}");
        atomikosProperties0.set(properties34, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) atomikosProperties51);
        int int68 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        java.lang.String str71 = atomikosProperties0.service;
        boolean boolean72 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, {}={}, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 500L + "'", long24 == 500L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 500L + "'", long41 == 500L);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test05764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05764");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        int int11 = atomikosProperties0.consoleFileCount;
        atomikosProperties0.setMaxActives(52);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test05765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05765");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        boolean boolean15 = properties8.remove((java.lang.Object) long13, (java.lang.Object) (byte) 100);
        java.lang.String str16 = properties8.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        atomikosProperties33.set(properties39, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj46 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) 0.0d);
        java.lang.Object obj53 = properties50.clone();
        boolean boolean55 = properties39.replace((java.lang.Object) (-1L), obj53, (java.lang.Object) 100.0d);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        long long65 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet67 = properties66.keySet();
        atomikosProperties60.set(properties66, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str71 = atomikosProperties60.logBaseDir;
        java.lang.String str72 = atomikosProperties60.logBaseDir;
        java.util.Properties properties73 = atomikosProperties60.asProperties();
        java.lang.Object obj74 = properties28.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60);
        boolean boolean75 = properties23.contains((java.lang.Object) atomikosProperties60);
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties23);
        boolean boolean77 = properties0.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel6, (java.lang.Object) boolean76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties0.entrySet();
        java.lang.String str80 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel84 = null;
        atomikosProperties81.consoleLogLevel = atomikosLoggingLevel84;
        boolean boolean86 = atomikosProperties81.enableLogging;
        atomikosProperties81.logBaseDir = "{}";
        atomikosProperties81.setSerialJtaTransactions(false);
        atomikosProperties81.setLogBaseDir("{}");
        atomikosProperties81.setDefaultJtaTimeout((-1L));
        boolean boolean95 = properties0.equals((java.lang.Object) atomikosProperties81);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet96 = properties0.entrySet();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(objEntrySet96);
    }

    @Test
    public void test05766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05766");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        java.util.Properties properties12 = new java.util.Properties(properties6);
        java.util.Enumeration<?> wildcardEnumeration13 = properties12.propertyNames();
        java.lang.String str15 = properties12.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        atomikosProperties16.service = "";
        java.lang.String str24 = atomikosProperties16.logBaseDir;
        boolean boolean25 = atomikosProperties16.threadedTwoPhaseCommit;
        java.lang.String str26 = atomikosProperties16.getService();
        java.lang.String str27 = atomikosProperties16.consoleFileName;
        boolean boolean28 = atomikosProperties16.serialJtaTransactions;
        atomikosProperties16.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int31 = atomikosProperties16.getConsoleFileCount();
        atomikosProperties16.logBaseName = "";
        int int34 = atomikosProperties16.maxActives;
        java.util.Properties properties35 = atomikosProperties16.asProperties();
        boolean boolean36 = properties12.containsValue((java.lang.Object) properties35);
        java.io.InputStream inputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.load(inputStream37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tm.out" + "'", str27, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test05767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05767");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str18 = atomikosProperties0.outputDir;
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.lang.String str22 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
    }

    @Test
    public void test05768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05768");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        int int17 = atomikosProperties0.maxActives;
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties20 = new java.util.Properties(properties19);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test05769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05769");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.util.Properties properties16 = new java.util.Properties(properties14);
        int int17 = properties16.size();
        java.util.Set<java.lang.Object> objSet18 = properties16.keySet();
        java.util.Properties properties19 = new java.util.Properties(properties16);
        java.io.Reader reader20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.load(reader20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test05770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05770");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str7 = atomikosProperties0.service;
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05771");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.consoleFileLimit = (short) 10;
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties12 = new java.util.Properties();
        java.lang.Object obj14 = properties12.get((java.lang.Object) 0.0d);
        java.lang.Object obj15 = properties12.clone();
        java.lang.String str16 = properties12.toString();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Properties properties20 = new java.util.Properties();
        java.lang.Object obj22 = properties20.get((java.lang.Object) 0.0d);
        java.lang.Object obj23 = properties20.clone();
        java.lang.String str24 = properties20.toString();
        boolean boolean27 = properties20.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj28 = properties18.replace((java.lang.Object) 10.0d, (java.lang.Object) properties20);
        java.lang.String str29 = properties20.toString();
        java.util.Properties properties30 = new java.util.Properties(properties20);
        java.util.Properties properties31 = new java.util.Properties();
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Collection<java.lang.Object> objCollection33 = properties32.values();
        boolean boolean34 = properties32.isEmpty();
        boolean boolean35 = properties20.equals((java.lang.Object) boolean34);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Collection<java.lang.Object> objCollection38 = properties37.values();
        boolean boolean39 = properties37.isEmpty();
        java.util.Set<java.lang.String> strSet40 = properties37.stringPropertyNames();
        java.lang.String str42 = properties37.getProperty("");
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.get((java.lang.Object) 0.0d);
        java.lang.Object obj46 = properties43.clone();
        java.lang.String str47 = properties43.toString();
        boolean boolean50 = properties43.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj51 = null;
        boolean boolean52 = properties43.equals(obj51);
        java.util.Set<java.lang.Object> objSet53 = properties43.keySet();
        boolean boolean54 = properties37.contains((java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        atomikosProperties55.setCheckpointInterval(10000L);
        long long62 = atomikosProperties55.maxTimeout;
        int int63 = atomikosProperties55.maxActives;
        boolean boolean64 = properties12.replace((java.lang.Object) boolean34, (java.lang.Object) properties43, (java.lang.Object) int63);
        java.lang.String str66 = properties12.getProperty("");
        java.lang.Object obj67 = properties12.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int70 = atomikosProperties69.getConsoleFileCount();
        int int71 = atomikosProperties69.maxActives;
        java.lang.String str72 = atomikosProperties69.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.logBaseDir = "";
        atomikosProperties73.setConsoleFileCount((int) (short) 10);
        atomikosProperties73.setCheckpointInterval(10000L);
        long long80 = atomikosProperties73.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel81 = atomikosProperties73.getConsoleLogLevel();
        atomikosProperties69.consoleLogLevel = atomikosLoggingLevel81;
        java.lang.String str83 = atomikosProperties69.consoleFileName;
        atomikosProperties69.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel86 = atomikosProperties69.consoleLogLevel;
        atomikosProperties69.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int89 = atomikosProperties69.getMaxActives();
        atomikosProperties0.set(properties12, "", (java.lang.Object) atomikosProperties69);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertEquals(obj15.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "{}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{}" + "'", str29, "{}");
        org.junit.Assert.assertNotNull(objCollection33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 50 + "'", int63 == 50);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 300000L + "'", long80 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel81 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel81.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "tm.out" + "'", str83, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel86 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel86.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 50 + "'", int89 == 50);
    }

    @Test
    public void test05772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05772");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        java.lang.String str5 = atomikosProperties0.service;
        java.lang.String str6 = atomikosProperties0.service;
        atomikosProperties0.serialJtaTransactions = false;
        java.lang.String str9 = atomikosProperties0.transactionManagerUniqueName;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05773");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        int int13 = atomikosProperties0.getConsoleFileLimit();
        long long14 = atomikosProperties0.checkpointInterval;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test05774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05774");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.lang.String str6 = properties1.getProperty("");
        java.util.Properties properties7 = new java.util.Properties();
        java.lang.Object obj9 = properties7.get((java.lang.Object) 0.0d);
        java.lang.Object obj10 = properties7.clone();
        java.lang.String str11 = properties7.toString();
        boolean boolean14 = properties7.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj15 = null;
        boolean boolean16 = properties7.equals(obj15);
        java.util.Set<java.lang.Object> objSet17 = properties7.keySet();
        boolean boolean18 = properties1.contains((java.lang.Object) properties7);
        java.util.Set<java.lang.Object> objSet19 = properties1.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties1.keys();
        java.io.InputStream inputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(obj10);
        org.junit.Assert.assertEquals(obj10.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration20);
    }

    @Test
    public void test05775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05775");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setDefaultJtaTimeout((long) 19);
        int int10 = atomikosProperties0.getConsoleFileCount();
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test05776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05776");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str13 = atomikosProperties0.outputDir;
        long long14 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
    }

    @Test
    public void test05777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05777");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.enableLogging = true;
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test05778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05778");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        long long9 = atomikosProperties0.checkpointInterval;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        int int11 = atomikosProperties0.consoleFileCount;
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{}" + "'", str13, "{}");
    }

    @Test
    public void test05779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05779");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        int int7 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        boolean boolean10 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.allowSubTransactions = false;
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
    }

    @Test
    public void test05780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05780");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        long long2 = atomikosProperties0.defaultJtaTimeout;
        boolean boolean3 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str4 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 10000L + "'", long2 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05781");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        java.lang.String str9 = atomikosProperties0.consoleFileName;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        boolean boolean11 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str12 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileLimit(0);
        java.lang.String str15 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
    }

    @Test
    public void test05782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05782");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel8;
        atomikosProperties0.consoleFileLimit = (byte) 1;
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        boolean boolean14 = atomikosProperties0.serialJtaTransactions;
        java.lang.String str15 = atomikosProperties0.consoleFileName;
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test05783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05783");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        java.lang.String str14 = atomikosProperties10.getService();
        java.lang.String str15 = atomikosProperties10.logBaseDir;
        atomikosProperties10.setEnableLogging(false);
        boolean boolean18 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties10.getConsoleLogLevel();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection27 = properties25.values();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        boolean boolean29 = properties23.contains((java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        java.lang.String str36 = atomikosProperties31.logBaseName;
        atomikosProperties31.outputDir = "";
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        boolean boolean41 = properties23.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties31);
        java.lang.Object obj42 = properties0.getOrDefault((java.lang.Object) atomikosProperties10, (java.lang.Object) properties23);
        java.io.InputStream inputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.load(inputStream43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
    }

    @Test
    public void test05784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05784");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = null;
        atomikosProperties25.consoleLogLevel = atomikosLoggingLevel28;
        long long30 = atomikosProperties25.checkpointInterval;
        java.lang.String str31 = atomikosProperties25.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = null;
        atomikosProperties32.consoleLogLevel = atomikosLoggingLevel35;
        atomikosProperties32.outputDir = "";
        int int39 = atomikosProperties32.maxActives;
        boolean boolean40 = atomikosProperties32.isThreadedTwoPhaseCommit();
        atomikosProperties32.consoleFileLimit = (short) 10;
        java.util.Properties properties43 = atomikosProperties32.asProperties();
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.lang.Object obj46 = properties15.putIfAbsent((java.lang.Object) str31, (java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.logBaseDir = "";
        atomikosProperties47.setConsoleFileCount((int) (short) 10);
        long long52 = atomikosProperties47.getMaxTimeout();
        java.util.Properties properties53 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet54 = properties53.keySet();
        atomikosProperties47.set(properties53, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj60 = properties53.setProperty("", "hi!");
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Collection<java.lang.Object> objCollection63 = properties61.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel64 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean65 = properties53.remove((java.lang.Object) objCollection63, (java.lang.Object) atomikosLoggingLevel64);
        boolean boolean66 = properties45.containsKey((java.lang.Object) atomikosLoggingLevel64);
        java.util.Set<java.lang.String> strSet67 = properties45.stringPropertyNames();
        java.lang.String str69 = properties45.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=0, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 500L + "'", long30 == 500L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertNotNull(objSet54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel64 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel64.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test05785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05785");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxActives(97);
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
    }

    @Test
    public void test05786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05786");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        atomikosProperties0.allowSubTransactions = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long10 = atomikosProperties9.checkpointInterval;
        atomikosProperties9.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel13);
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel13;
        atomikosProperties0.setConsoleFileCount((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
    }

    @Test
    public void test05787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05787");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.util.Set<java.lang.String> strSet9 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getConsoleFileCount();
        int int12 = atomikosProperties10.maxActives;
        java.lang.String str13 = atomikosProperties10.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setCheckpointInterval(10000L);
        long long21 = atomikosProperties14.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties14.getConsoleLogLevel();
        atomikosProperties10.consoleLogLevel = atomikosLoggingLevel22;
        java.lang.String str24 = atomikosProperties10.consoleFileName;
        atomikosProperties10.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int28 = atomikosProperties27.getConsoleFileCount();
        int int29 = atomikosProperties27.maxActives;
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection32 = properties31.values();
        java.lang.Object obj35 = properties31.setProperty("hi!", "{}");
        java.lang.String str37 = properties31.getProperty("tmlog");
        properties31.clear();
        java.lang.Object obj39 = properties31.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.logBaseDir = "";
        atomikosProperties41.setConsoleFileCount((int) (short) 10);
        atomikosProperties41.setLogBaseDir("{}");
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        atomikosProperties41.service = "";
        atomikosProperties41.setTransactionManagerUniqueName("{}");
        atomikosProperties41.enableLogging = false;
        atomikosProperties27.set(properties31, "", (java.lang.Object) atomikosProperties41);
        java.lang.Object obj56 = properties1.putIfAbsent((java.lang.Object) atomikosProperties10, (java.lang.Object) properties31);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties31.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long59 = recovery58.getRetryInterval();
        recovery58.delay = 10L;
        long long62 = recovery58.getDelay();
        long long63 = recovery58.delay;
        recovery58.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery58.maxRetries = '4';
        long long68 = recovery58.getDelay();
        long long69 = recovery58.retryInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.logBaseDir = "";
        atomikosProperties70.setConsoleFileCount((int) (short) 10);
        java.lang.String str75 = atomikosProperties70.logBaseName;
        java.lang.String str76 = atomikosProperties70.logBaseDir;
        long long77 = atomikosProperties70.defaultJtaTimeout;
        java.util.Properties properties78 = atomikosProperties70.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.logBaseDir = "";
        atomikosProperties79.setConsoleFileCount((int) (short) 10);
        long long84 = atomikosProperties79.getMaxTimeout();
        java.util.Properties properties85 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet86 = properties85.keySet();
        atomikosProperties79.set(properties85, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj92 = properties85.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet93 = properties85.stringPropertyNames();
        properties78.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties85);
        java.util.Properties properties95 = new java.util.Properties(properties85);
        java.lang.Object obj96 = properties31.replace((java.lang.Object) long69, (java.lang.Object) properties95);
        java.util.Properties properties97 = new java.util.Properties(properties31);
        java.util.Set<java.lang.String> strSet98 = properties97.stringPropertyNames();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10000L + "'", long59 == 10000L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10L + "'", long62 == 10L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10L + "'", long63 == 10L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10L + "'", long68 == 10L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10000L + "'", long69 == 10000L);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tmlog" + "'", str75, "tmlog");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10000L + "'", long77 == 10000L);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 300000L + "'", long84 == 300000L);
        org.junit.Assert.assertNotNull(objSet86);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertNull(obj96);
        org.junit.Assert.assertNotNull(strSet98);
    }

    @Test
    public void test05788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05788");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        int int6 = recovery0.maxRetries;
        int int7 = recovery0.maxRetries;
        recovery0.setDelay(32L);
        recovery0.retryInterval = (short) 1;
        recovery0.setMaxRetries(5);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test05789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05789");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        int int5 = recovery0.maxRetries;
        recovery0.maxRetries = (short) 10;
        long long8 = recovery0.forgetOrphanedLogEntriesDelay;
        long long9 = recovery0.getRetryInterval();
        recovery0.setRetryInterval(5L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test05790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05790");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) 0.0d);
        java.lang.Object obj33 = properties30.clone();
        java.lang.String str34 = properties30.toString();
        boolean boolean36 = properties24.remove((java.lang.Object) properties30, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration37 = properties24.propertyNames();
        java.util.Properties properties38 = new java.util.Properties(properties24);
        java.io.PrintStream printStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.list(printStream39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
    }

    @Test
    public void test05791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05791");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.transactionManagerUniqueName = "";
        java.lang.Class<?> wildcardClass13 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test05792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05792");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        long long10 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay(2L);
        recovery0.setForgetOrphanedLogEntriesDelay((long) 1);
        recovery0.setRetryInterval((long) (short) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test05793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05793");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str18 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setLogBaseDir("{{}=tmlog}");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.transactionManagerUniqueName = "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = atomikosProperties0.recovery;
        long long28 = recovery27.getDelay();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertNotNull(recovery27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
    }

    @Test
    public void test05794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05794");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.checkpointInterval = (byte) 100;
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        long long11 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test05795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05795");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        atomikosProperties0.consoleFileLimit = 50;
        int int10 = atomikosProperties0.consoleFileLimit;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test05796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05796");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        int int5 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.setLogBaseName("tm.out");
        boolean boolean8 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.serialJtaTransactions = false;
        boolean boolean11 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setCheckpointInterval((-1L));
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05797");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        long long9 = recovery0.retryInterval;
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setMaxRetries(0);
        long long13 = recovery0.getDelay();
        long long14 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test05798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05798");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setSerialJtaTransactions(true);
        long long11 = atomikosProperties0.maxTimeout;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.setConsoleFileLimit(18);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05799");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        long long5 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setCheckpointInterval((long) ' ');
        long long10 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setService("{{}=tmlog}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
    }

    @Test
    public void test05800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05800");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        recovery0.delay = (-1);
        long long13 = recovery0.getDelay();
        int int14 = recovery0.maxRetries;
        recovery0.setMaxRetries((-1));
        int int17 = recovery0.maxRetries;
        long long18 = recovery0.delay;
        recovery0.maxRetries = '4';
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
    }

    @Test
    public void test05801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05801");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        atomikosProperties0.consoleFileLimit = 50;
        boolean boolean10 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.serialJtaTransactions = false;
        boolean boolean14 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05802");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        atomikosProperties0.setConsoleFileLimit((int) (byte) -1);
        boolean boolean20 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.allowSubTransactions = true;
        long long23 = atomikosProperties0.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
    }

    @Test
    public void test05803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05803");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        long long4 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setMaxActives(21);
        boolean boolean7 = atomikosProperties0.threadedTwoPhaseCommit;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 500L + "'", long4 == 500L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05804");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean18 = properties8.containsValue((java.lang.Object) atomikosProperties9);
        java.lang.String str19 = atomikosProperties9.logBaseName;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
    }

    @Test
    public void test05805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05805");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "";
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.maxActives = (byte) 1;
        atomikosProperties0.setConsoleFileCount(100);
        atomikosProperties0.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.checkpointInterval = (short) 100;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test05806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05806");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        long long13 = atomikosProperties8.getMaxTimeout();
        atomikosProperties8.service = "";
        java.lang.String str16 = atomikosProperties8.logBaseDir;
        boolean boolean17 = atomikosProperties8.threadedTwoPhaseCommit;
        java.lang.String str18 = atomikosProperties8.getService();
        atomikosProperties8.setLogBaseDir("{}");
        atomikosProperties8.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj23 = properties7.get((java.lang.Object) atomikosProperties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        long long29 = atomikosProperties24.getMaxTimeout();
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet31 = properties30.keySet();
        atomikosProperties24.set(properties30, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj37 = properties30.setProperty("", "hi!");
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Collection<java.lang.Object> objCollection40 = properties38.values();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        boolean boolean42 = properties30.remove((java.lang.Object) objCollection40, (java.lang.Object) atomikosLoggingLevel41);
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel41;
        atomikosProperties8.setEnableLogging(false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objCollection40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test05807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05807");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setOutputDir("{true=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        boolean boolean19 = atomikosProperties16.isForceShutdownOnVmExit();
        int int20 = atomikosProperties16.consoleFileLimit;
        long long21 = atomikosProperties16.checkpointInterval;
        atomikosProperties16.setLogBaseDir("{true=10000}");
        java.util.Properties properties24 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.logBaseDir = "";
        atomikosProperties26.setConsoleFileCount((int) (short) 10);
        long long31 = atomikosProperties26.getMaxTimeout();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet33 = properties32.keySet();
        atomikosProperties26.set(properties32, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties37 = new java.util.Properties();
        java.lang.Object obj39 = properties37.get((java.lang.Object) 0.0d);
        java.lang.Object obj40 = properties37.clone();
        java.lang.String str41 = properties37.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.logBaseDir = "";
        atomikosProperties42.setConsoleFileCount((int) (short) 10);
        long long47 = atomikosProperties42.getMaxTimeout();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet49 = properties48.keySet();
        atomikosProperties42.set(properties48, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj55 = properties48.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setDefaultJtaTimeout((-1L));
        java.util.Properties properties59 = new java.util.Properties();
        java.lang.Object obj61 = properties59.get((java.lang.Object) 0.0d);
        java.lang.Object obj62 = properties59.clone();
        boolean boolean64 = properties48.replace((java.lang.Object) (-1L), obj62, (java.lang.Object) 100.0d);
        java.util.Properties properties65 = new java.util.Properties();
        java.util.Properties properties66 = new java.util.Properties(properties65);
        properties66.clear();
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.logBaseDir = "";
        atomikosProperties69.setConsoleFileCount((int) (short) 10);
        long long74 = atomikosProperties69.getMaxTimeout();
        java.util.Properties properties75 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet76 = properties75.keySet();
        atomikosProperties69.set(properties75, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str80 = atomikosProperties69.logBaseDir;
        java.lang.String str81 = atomikosProperties69.logBaseDir;
        java.util.Properties properties82 = atomikosProperties69.asProperties();
        java.lang.Object obj83 = properties37.replace((java.lang.Object) properties66, (java.lang.Object) atomikosProperties69);
        boolean boolean84 = properties32.contains((java.lang.Object) atomikosProperties69);
        atomikosProperties69.consoleFileName = "";
        long long87 = atomikosProperties69.getMaxTimeout();
        long long88 = atomikosProperties69.defaultJtaTimeout;
        atomikosProperties69.setOutputDir("{com.atomikos.icatch.hi!=-1.0}");
        atomikosProperties69.forceShutdownOnVmExit = true;
        long long93 = atomikosProperties69.defaultJtaTimeout;
        atomikosProperties0.set(properties24, "{com.atomikos.icatch.hi!=-1.0}", (java.lang.Object) atomikosProperties69);
        boolean boolean95 = properties24.isEmpty();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{}" + "'", str41, "{}");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 300000L + "'", long74 == 300000L);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 300000L + "'", long87 == 300000L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 10000L + "'", long88 == 10000L);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 10000L + "'", long93 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test05808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05808");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setRetryInterval((long) (-1));
        long long5 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int6 = recovery0.maxRetries;
        long long7 = recovery0.getRetryInterval();
        long long8 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) 1);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
    }

    @Test
    public void test05809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05809");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.checkpointInterval = (byte) 1;
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setService("tm.out");
        atomikosProperties0.consoleFileLimit = (short) 1;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.recovery;
        recovery9.forgetOrphanedLogEntriesDelay = 21L;
        org.junit.Assert.assertNotNull(recovery9);
    }

    @Test
    public void test05810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05810");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        boolean boolean15 = properties8.remove((java.lang.Object) long13, (java.lang.Object) (byte) 100);
        java.lang.String str16 = properties8.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        atomikosProperties33.set(properties39, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj46 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) 0.0d);
        java.lang.Object obj53 = properties50.clone();
        boolean boolean55 = properties39.replace((java.lang.Object) (-1L), obj53, (java.lang.Object) 100.0d);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        long long65 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet67 = properties66.keySet();
        atomikosProperties60.set(properties66, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str71 = atomikosProperties60.logBaseDir;
        java.lang.String str72 = atomikosProperties60.logBaseDir;
        java.util.Properties properties73 = atomikosProperties60.asProperties();
        java.lang.Object obj74 = properties28.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60);
        boolean boolean75 = properties23.contains((java.lang.Object) atomikosProperties60);
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties23);
        boolean boolean77 = properties0.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel6, (java.lang.Object) boolean76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties0.entrySet();
        java.lang.String str80 = properties0.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int82 = atomikosProperties81.getMaxActives();
        atomikosProperties81.serialJtaTransactions = true;
        java.util.Properties properties85 = atomikosProperties81.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties85.elements();
        java.lang.Object obj87 = properties0.get((java.lang.Object) properties85);
        java.util.Enumeration<?> wildcardEnumeration88 = properties0.propertyNames();
        java.util.Collection<java.lang.Object> objCollection89 = properties0.values();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 50 + "'", int82 == 50);
        org.junit.Assert.assertNotNull(properties85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(wildcardEnumeration88);
        org.junit.Assert.assertNotNull(objCollection89);
    }

    @Test
    public void test05811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05811");
        java.util.Properties properties0 = new java.util.Properties();
        int int1 = properties0.size();
        java.util.Properties properties2 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.keys();
        java.util.Set<java.lang.Object> objSet4 = properties2.keySet();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objSet4);
    }

    @Test
    public void test05812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05812");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        boolean boolean37 = properties1.isEmpty();
        java.util.Properties properties38 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        long long44 = atomikosProperties39.getMaxTimeout();
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet46 = properties45.keySet();
        atomikosProperties39.set(properties45, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties45.keys();
        java.util.Properties properties51 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.logBaseDir = "";
        atomikosProperties52.setConsoleFileCount((int) (short) 10);
        atomikosProperties52.setLogBaseDir("{}");
        java.lang.String str59 = atomikosProperties52.getOutputDir();
        atomikosProperties52.setLogBaseName("hi!");
        boolean boolean62 = atomikosProperties52.isAllowSubTransactions();
        int int63 = atomikosProperties52.consoleFileCount;
        atomikosProperties52.setLogBaseDir("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.logBaseDir = "";
        atomikosProperties66.setConsoleFileCount((int) (short) 10);
        long long71 = atomikosProperties66.getMaxTimeout();
        boolean boolean72 = atomikosProperties66.enableLogging;
        java.lang.String str73 = atomikosProperties66.logBaseDir;
        boolean boolean74 = properties1.replace((java.lang.Object) properties45, (java.lang.Object) "tm.out", (java.lang.Object) str73);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery75 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long76 = recovery75.getRetryInterval();
        recovery75.delay = 10L;
        recovery75.setForgetOrphanedLogEntriesDelay(0L);
        long long81 = recovery75.getRetryInterval();
        recovery75.setRetryInterval((long) 19);
        recovery75.delay = 50;
        boolean boolean86 = properties1.containsValue((java.lang.Object) recovery75);
        long long87 = recovery75.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 300000L + "'", long71 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10000L + "'", long76 == 10000L);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10000L + "'", long81 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 0L + "'", long87 == 0L);
    }

    @Test
    public void test05813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05813");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setDelay((long) 1);
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) '4');
        recovery0.delay = (-1);
        recovery0.forgetOrphanedLogEntriesDelay = (byte) 0;
        long long15 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.retryInterval = (short) 10;
        recovery0.maxRetries = 52;
        long long20 = recovery0.getRetryInterval();
        recovery0.setDelay(21L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
    }

    @Test
    public void test05814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05814");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        boolean boolean14 = atomikosProperties0.allowSubTransactions;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test05815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05815");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        atomikosProperties0.checkpointInterval = 100;
        atomikosProperties0.threadedTwoPhaseCommit = true;
        long long11 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.setConsoleFileCount(2);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test05816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05816");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.lang.Object obj9 = properties1.clone();
        int int10 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        atomikosProperties11.setLogBaseDir("{}");
        java.lang.String str18 = atomikosProperties11.getOutputDir();
        atomikosProperties11.setLogBaseName("hi!");
        boolean boolean21 = atomikosProperties11.isAllowSubTransactions();
        boolean boolean22 = atomikosProperties11.isThreadedTwoPhaseCommit();
        boolean boolean23 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.String str24 = atomikosProperties11.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        atomikosProperties25.setLogBaseDir("{}");
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        atomikosProperties25.service = "";
        atomikosProperties25.setTransactionManagerUniqueName("{}");
        atomikosProperties25.setTransactionManagerUniqueName("{}");
        java.lang.Class<?> wildcardClass39 = atomikosProperties25.getClass();
        java.lang.Object obj40 = properties1.putIfAbsent((java.lang.Object) str24, (java.lang.Object) atomikosProperties25);
        java.util.Collection<java.lang.Object> objCollection41 = properties1.values();
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        java.lang.String str48 = atomikosProperties43.logBaseName;
        java.lang.String str49 = atomikosProperties43.logBaseDir;
        java.lang.String str50 = atomikosProperties43.logBaseDir;
        boolean boolean51 = properties1.equals((java.lang.Object) str50);
        java.io.Reader reader52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test05817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05817");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        int int4 = atomikosProperties0.maxActives;
        atomikosProperties0.setDefaultJtaTimeout(500L);
        long long7 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 50 + "'", int4 == 50);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 500L + "'", long7 == 500L);
    }

    @Test
    public void test05818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05818");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.serialJtaTransactions = true;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05819");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel4);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int8 = atomikosProperties0.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 500L + "'", long1 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05820");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        boolean boolean4 = properties0.isEmpty();
        java.lang.Object obj5 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.enableLogging = true;
        int int9 = atomikosProperties6.consoleFileLimit;
        atomikosProperties6.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties6.getRecovery();
        recovery12.setDelay((long) (byte) -1);
        long long15 = recovery12.retryInterval;
        long long16 = recovery12.forgetOrphanedLogEntriesDelay;
        boolean boolean17 = properties0.contains((java.lang.Object) recovery12);
        java.lang.Object obj20 = properties0.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 86400000L + "'", long16 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test05821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05821");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = null;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel9;
        atomikosProperties6.outputDir = "";
        int int13 = atomikosProperties6.maxActives;
        boolean boolean14 = atomikosProperties6.isThreadedTwoPhaseCommit();
        atomikosProperties6.consoleFileLimit = (short) 10;
        java.util.Properties properties17 = atomikosProperties6.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.keys();
        java.lang.String str20 = properties17.getProperty("{true=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        java.lang.String str27 = atomikosProperties22.logBaseName;
        java.lang.String str28 = atomikosProperties22.logBaseDir;
        long long29 = atomikosProperties22.defaultJtaTimeout;
        java.util.Properties properties30 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = atomikosProperties22.getRecovery();
        boolean boolean32 = atomikosProperties22.isSerialJtaTransactions();
        atomikosProperties0.set(properties17, "{true=10000}", (java.lang.Object) boolean32);
        java.io.Reader reader34 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.load(reader34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertNotNull(recovery31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test05822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05822");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.util.Properties properties3 = new java.util.Properties();
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Collection<java.lang.Object> objCollection5 = properties3.values();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties3.keys();
        boolean boolean7 = properties1.contains((java.lang.Object) properties3);
        java.util.Properties properties8 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties3.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        java.lang.String str15 = atomikosProperties10.transactionManagerUniqueName;
        atomikosProperties10.setService("{}");
        atomikosProperties10.threadedTwoPhaseCommit = true;
        atomikosProperties10.setConsoleFileCount(35);
        atomikosProperties10.maxActives = (byte) 0;
        java.lang.Object obj24 = properties3.remove((java.lang.Object) atomikosProperties10);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test05823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05823");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        boolean boolean18 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.maxTimeout = 19;
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.transactionManagerUniqueName = "{true=10000}";
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties0.consoleLogLevel;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05824");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        java.lang.String str14 = atomikosProperties10.getService();
        java.lang.String str15 = atomikosProperties10.logBaseDir;
        atomikosProperties10.setEnableLogging(false);
        boolean boolean18 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties10.getConsoleLogLevel();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Collection<java.lang.Object> objCollection27 = properties25.values();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        boolean boolean29 = properties23.contains((java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        java.lang.String str36 = atomikosProperties31.logBaseName;
        atomikosProperties31.outputDir = "";
        java.util.Properties properties39 = atomikosProperties31.asProperties();
        java.util.Properties properties40 = atomikosProperties31.asProperties();
        boolean boolean41 = properties23.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties31);
        java.lang.Object obj42 = properties0.getOrDefault((java.lang.Object) atomikosProperties10, (java.lang.Object) properties23);
        java.lang.String str45 = properties0.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertEquals(obj42.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "{}");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}" + "'", str45, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
    }

    @Test
    public void test05825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05825");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.outputDir;
        atomikosProperties0.setCheckpointInterval(50L);
        int int11 = atomikosProperties0.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.getConsoleLogLevel();
        long long13 = atomikosProperties0.maxTimeout;
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
    }

    @Test
    public void test05826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05826");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str18 = atomikosProperties0.outputDir;
        atomikosProperties0.allowSubTransactions = true;
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        boolean boolean23 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean24 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test05827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05827");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        boolean boolean14 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05828");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.checkpointInterval = (byte) 100;
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        int int11 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test05829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05829");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        long long7 = recovery0.getRetryInterval();
        int int8 = recovery0.getMaxRetries();
        recovery0.setMaxRetries(5);
        int int11 = recovery0.maxRetries;
        recovery0.setRetryInterval(300000L);
        long long14 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
    }

    @Test
    public void test05830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05830");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.keys();
        java.util.Collection<java.lang.Object> objCollection7 = properties5.values();
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection10 = properties8.values();
        int int11 = properties8.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery12.maxRetries = (-1);
        recovery12.setDelay((long) (short) 0);
        recovery12.maxRetries = 0;
        boolean boolean20 = properties8.remove((java.lang.Object) 0, (java.lang.Object) (-1));
        java.util.Enumeration<?> wildcardEnumeration21 = properties8.propertyNames();
        java.lang.Object obj22 = properties5.get((java.lang.Object) properties8);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Properties properties26 = new java.util.Properties();
        java.lang.Object obj28 = properties26.get((java.lang.Object) 0.0d);
        java.lang.Object obj29 = properties26.clone();
        java.lang.String str30 = properties26.toString();
        boolean boolean33 = properties26.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj34 = properties24.replace((java.lang.Object) 10.0d, (java.lang.Object) properties26);
        java.util.Properties properties35 = new java.util.Properties(properties24);
        java.util.Properties properties36 = new java.util.Properties(properties24);
        java.util.Set<java.lang.Object> objSet37 = properties24.keySet();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.lang.Object obj39 = properties24.clone();
        properties24.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties24.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = null;
        atomikosProperties42.consoleLogLevel = atomikosLoggingLevel45;
        atomikosProperties42.outputDir = "";
        atomikosProperties42.allowSubTransactions = true;
        boolean boolean51 = atomikosProperties42.isThreadedTwoPhaseCommit();
        long long52 = atomikosProperties42.getMaxTimeout();
        long long53 = atomikosProperties42.getMaxTimeout();
        atomikosProperties42.transactionManagerUniqueName = "";
        atomikosProperties42.service = "{{}={}}";
        boolean boolean58 = properties24.contains((java.lang.Object) atomikosProperties42);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objCollection7);
        org.junit.Assert.assertNotNull(objCollection10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "{}");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test05831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05831");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.hi!=-1.0}");
        int int8 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.recovery;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test05832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05832");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties0.recovery;
        boolean boolean15 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.consoleFileName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.outputDir = "";
        int int22 = atomikosProperties0.maxActives;
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
    }

    @Test
    public void test05833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05833");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getService();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.maxActives = 100;
        boolean boolean14 = atomikosProperties0.allowSubTransactions;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test05834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05834");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        boolean boolean15 = properties8.remove((java.lang.Object) long13, (java.lang.Object) (byte) 100);
        java.lang.String str16 = properties8.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        atomikosProperties33.set(properties39, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj46 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) 0.0d);
        java.lang.Object obj53 = properties50.clone();
        boolean boolean55 = properties39.replace((java.lang.Object) (-1L), obj53, (java.lang.Object) 100.0d);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        long long65 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet67 = properties66.keySet();
        atomikosProperties60.set(properties66, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str71 = atomikosProperties60.logBaseDir;
        java.lang.String str72 = atomikosProperties60.logBaseDir;
        java.util.Properties properties73 = atomikosProperties60.asProperties();
        java.lang.Object obj74 = properties28.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60);
        boolean boolean75 = properties23.contains((java.lang.Object) atomikosProperties60);
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties23);
        boolean boolean77 = properties0.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel6, (java.lang.Object) boolean76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties0.entrySet();
        java.util.Properties properties79 = new java.util.Properties(properties0);
        java.util.Properties properties80 = new java.util.Properties(properties79);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntrySet78);
    }

    @Test
    public void test05835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05835");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout(50L);
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.service = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05836");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        recovery0.setMaxRetries((int) 'a');
        int int7 = recovery0.maxRetries;
        recovery0.retryInterval = (-1L);
        recovery0.setForgetOrphanedLogEntriesDelay(19L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 97 + "'", int7 == 97);
    }

    @Test
    public void test05837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05837");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.util.Set<java.lang.String> strSet9 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getConsoleFileCount();
        int int12 = atomikosProperties10.maxActives;
        java.lang.String str13 = atomikosProperties10.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setCheckpointInterval(10000L);
        long long21 = atomikosProperties14.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties14.getConsoleLogLevel();
        atomikosProperties10.consoleLogLevel = atomikosLoggingLevel22;
        java.lang.String str24 = atomikosProperties10.consoleFileName;
        atomikosProperties10.forceShutdownOnVmExit = false;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int28 = atomikosProperties27.getConsoleFileCount();
        int int29 = atomikosProperties27.maxActives;
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Collection<java.lang.Object> objCollection32 = properties31.values();
        java.lang.Object obj35 = properties31.setProperty("hi!", "{}");
        java.lang.String str37 = properties31.getProperty("tmlog");
        properties31.clear();
        java.lang.Object obj39 = properties31.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.logBaseDir = "";
        atomikosProperties41.setConsoleFileCount((int) (short) 10);
        atomikosProperties41.setLogBaseDir("{}");
        java.util.Properties properties48 = atomikosProperties41.asProperties();
        atomikosProperties41.service = "";
        atomikosProperties41.setTransactionManagerUniqueName("{}");
        atomikosProperties41.enableLogging = false;
        atomikosProperties27.set(properties31, "", (java.lang.Object) atomikosProperties41);
        java.lang.Object obj56 = properties1.putIfAbsent((java.lang.Object) atomikosProperties10, (java.lang.Object) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.logBaseDir = "";
        atomikosProperties57.setConsoleFileCount((int) (short) 10);
        long long62 = atomikosProperties57.getMaxTimeout();
        atomikosProperties57.service = "";
        java.lang.String str65 = atomikosProperties57.logBaseDir;
        java.lang.String str66 = atomikosProperties57.getOutputDir();
        boolean boolean67 = atomikosProperties57.serialJtaTransactions;
        boolean boolean68 = properties31.equals((java.lang.Object) atomikosProperties57);
        java.util.Set<java.lang.String> strSet69 = properties31.stringPropertyNames();
        java.lang.String str70 = properties31.toString();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tm.out" + "'", str24, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 50 + "'", int29 == 50);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test05838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05838");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        atomikosProperties9.setConsoleFileCount((int) '4');
        int int33 = atomikosProperties9.getConsoleFileLimit();
        java.util.Properties properties34 = atomikosProperties9.asProperties();
        java.util.Collection<java.lang.Object> objCollection35 = properties34.values();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Enumeration<?> wildcardEnumeration37 = properties36.propertyNames();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(objCollection35);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
    }

    @Test
    public void test05839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05839");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties3.setProperty("", "");
        java.util.Properties properties17 = new java.util.Properties(properties3);
        java.util.Set<java.lang.Object> objSet18 = properties17.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties17.keys();
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objEnumeration19);
    }

    @Test
    public void test05840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05840");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setService("{}");
        atomikosProperties0.consoleFileName = "tm.out";
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0, =hi!}";
        atomikosProperties0.setLogBaseDir("{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}}");
        boolean boolean14 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05841");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int16 = atomikosProperties15.getConsoleFileCount();
        int int17 = atomikosProperties15.maxActives;
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        int int21 = atomikosProperties15.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties15.getRecovery();
        boolean boolean23 = properties12.containsKey((java.lang.Object) recovery22);
        java.util.Collection<java.lang.Object> objCollection24 = properties12.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel28 = null;
        atomikosProperties25.consoleLogLevel = atomikosLoggingLevel28;
        long long30 = atomikosProperties25.checkpointInterval;
        java.lang.String str31 = atomikosProperties25.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.enableLogging = true;
        int int35 = atomikosProperties32.consoleFileLimit;
        atomikosProperties32.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = atomikosProperties32.getRecovery();
        long long39 = recovery38.getDelay();
        recovery38.setForgetOrphanedLogEntriesDelay(0L);
        java.lang.Class<?> wildcardClass42 = recovery38.getClass();
        boolean boolean43 = properties12.remove((java.lang.Object) atomikosProperties25, (java.lang.Object) recovery38);
        java.io.OutputStream outputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.store(outputStream44, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 500L + "'", long30 == 500L);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(recovery38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test05842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05842");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 5;
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval(0L);
        recovery0.setMaxRetries(97);
        int int17 = recovery0.maxRetries;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
    }

    @Test
    public void test05843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05843");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        java.lang.String str5 = atomikosProperties0.getService();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean7 = atomikosProperties0.forceShutdownOnVmExit;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test05844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05844");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.loadFromXML(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
    }

    @Test
    public void test05845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05845");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setEnableLogging(false);
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setConsoleFileCount(10);
        java.lang.String str11 = atomikosProperties0.getConsoleFileName();
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        atomikosProperties0.setService("{com.atomikos.icatch.hi!=-1.0, =hi!}");
        java.lang.String str17 = atomikosProperties0.logBaseName;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
    }

    @Test
    public void test05846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05846");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        atomikosProperties0.setDefaultJtaTimeout(50L);
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test05847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05847");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.forceShutdownOnVmExit = true;
        atomikosProperties0.setLogBaseName("hi!");
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        atomikosProperties0.checkpointInterval = 35;
        atomikosProperties0.checkpointInterval = 1;
        long long19 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties0.getRecovery();
        long long21 = recovery20.getDelay();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertNotNull(recovery20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
    }

    @Test
    public void test05848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05848");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        int int8 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setConsoleFileLimit(100);
        boolean boolean11 = atomikosProperties0.allowSubTransactions;
        boolean boolean12 = atomikosProperties0.enableLogging;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test05849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05849");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        boolean boolean16 = atomikosProperties0.enableLogging;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test05850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05850");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        int int2 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.enableLogging = true;
        int int10 = atomikosProperties0.consoleFileCount;
        long long11 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
    }

    @Test
    public void test05851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05851");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        java.lang.Object obj5 = properties1.setProperty("hi!", "{}");
        java.lang.String str7 = properties1.getProperty("tmlog");
        properties1.clear();
        java.lang.Object obj9 = properties1.clone();
        int int10 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        atomikosProperties11.setLogBaseDir("{}");
        java.lang.String str18 = atomikosProperties11.getOutputDir();
        atomikosProperties11.setLogBaseName("hi!");
        boolean boolean21 = atomikosProperties11.isAllowSubTransactions();
        boolean boolean22 = atomikosProperties11.isThreadedTwoPhaseCommit();
        boolean boolean23 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.String str24 = atomikosProperties11.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        atomikosProperties25.setLogBaseDir("{}");
        java.util.Properties properties32 = atomikosProperties25.asProperties();
        atomikosProperties25.service = "";
        atomikosProperties25.setTransactionManagerUniqueName("{}");
        atomikosProperties25.setTransactionManagerUniqueName("{}");
        java.lang.Class<?> wildcardClass39 = atomikosProperties25.getClass();
        java.lang.Object obj40 = properties1.putIfAbsent((java.lang.Object) str24, (java.lang.Object) atomikosProperties25);
        java.util.Collection<java.lang.Object> objCollection41 = properties1.values();
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        java.lang.String str48 = atomikosProperties43.logBaseName;
        java.lang.String str49 = atomikosProperties43.logBaseDir;
        java.lang.String str50 = atomikosProperties43.logBaseDir;
        boolean boolean51 = properties1.equals((java.lang.Object) str50);
        java.util.Properties properties52 = new java.util.Properties(properties1);
        java.lang.Object obj53 = properties1.clone();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(obj9);
        org.junit.Assert.assertEquals(obj9.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objCollection41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj53);
    }

    @Test
    public void test05852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05852");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.hi!=-1.0}");
        boolean boolean7 = atomikosProperties0.serialJtaTransactions;
        boolean boolean8 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.allowSubTransactions = false;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05853");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        int int3 = atomikosProperties0.getMaxActives();
        java.lang.String str4 = atomikosProperties0.getLogBaseName();
        boolean boolean5 = atomikosProperties0.enableLogging;
        int int6 = atomikosProperties0.getConsoleFileCount();
        int int7 = atomikosProperties0.getConsoleFileCount();
        int int8 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.consoleFileLimit = 50;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 50 + "'", int3 == 50);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "tmlog" + "'", str4, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test05854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05854");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str18 = atomikosProperties0.outputDir;
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.enableLogging = true;
        long long25 = atomikosProperties22.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties22.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = atomikosProperties22.recovery;
        int int28 = recovery27.maxRetries;
        recovery27.delay = 100L;
        java.lang.Object obj31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj32 = properties21.replace((java.lang.Object) recovery27, obj31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(recovery27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
    }

    @Test
    public void test05855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05855");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        java.util.Properties properties39 = new java.util.Properties(properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.logBaseDir = "";
        atomikosProperties40.setConsoleFileCount((int) (short) 10);
        java.lang.String str45 = atomikosProperties40.logBaseName;
        atomikosProperties40.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.logBaseDir = "";
        atomikosProperties48.setConsoleFileCount((int) (short) 10);
        atomikosProperties48.setCheckpointInterval(10000L);
        long long55 = atomikosProperties48.maxTimeout;
        int int56 = atomikosProperties48.maxActives;
        atomikosProperties48.setCheckpointInterval((long) 0);
        java.util.Properties properties59 = atomikosProperties48.asProperties();
        java.util.Properties properties60 = atomikosProperties48.asProperties();
        int int61 = atomikosProperties48.getConsoleFileLimit();
        boolean boolean62 = atomikosProperties48.isEnableLogging();
        atomikosProperties48.transactionManagerUniqueName = "{com.atomikos.icatch.hi!=-1.0}";
        java.lang.Object obj65 = properties30.replace((java.lang.Object) false, (java.lang.Object) atomikosProperties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.enableLogging = true;
        int int69 = atomikosProperties66.consoleFileLimit;
        atomikosProperties66.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery72 = atomikosProperties66.getRecovery();
        atomikosProperties66.checkpointInterval = (byte) 100;
        java.lang.String str75 = atomikosProperties66.getTransactionManagerUniqueName();
        java.lang.String str76 = atomikosProperties66.consoleFileName;
        atomikosProperties66.setDefaultJtaTimeout((long) (byte) -1);
        int int79 = atomikosProperties66.getConsoleFileCount();
        java.lang.String str80 = atomikosProperties66.getTransactionManagerUniqueName();
        boolean boolean81 = properties30.contains((java.lang.Object) atomikosProperties66);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 300000L + "'", long55 == 300000L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 50 + "'", int56 == 50);
        org.junit.Assert.assertNotNull(properties59);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(recovery72);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "tm.out" + "'", str76, "tm.out");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test05856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05856");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        atomikosProperties4.service = "";
        boolean boolean12 = atomikosProperties4.isSerialJtaTransactions();
        boolean boolean13 = properties0.equals((java.lang.Object) boolean12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        atomikosProperties14.setLogBaseDir("{}");
        java.util.Properties properties21 = atomikosProperties14.asProperties();
        java.util.Set<java.lang.String> strSet22 = properties21.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int24 = atomikosProperties23.getConsoleFileCount();
        int int25 = atomikosProperties23.maxActives;
        atomikosProperties23.setConsoleFileName("");
        atomikosProperties23.transactionManagerUniqueName = "{}";
        java.util.Properties properties30 = atomikosProperties23.asProperties();
        boolean boolean31 = atomikosProperties23.threadedTwoPhaseCommit;
        atomikosProperties23.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int35 = atomikosProperties34.getConsoleFileCount();
        int int36 = atomikosProperties34.maxActives;
        atomikosProperties34.setConsoleFileName("");
        atomikosProperties34.transactionManagerUniqueName = "{}";
        atomikosProperties34.setMaxActives(0);
        boolean boolean43 = atomikosProperties34.forceShutdownOnVmExit;
        java.lang.Object obj44 = properties21.put((java.lang.Object) atomikosProperties23, (java.lang.Object) atomikosProperties34);
        atomikosProperties23.setConsoleFileCount((int) '4');
        int int47 = atomikosProperties23.getConsoleFileLimit();
        java.util.Properties properties48 = atomikosProperties23.asProperties();
        java.util.Collection<java.lang.Object> objCollection49 = properties48.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int51 = atomikosProperties50.getConsoleFileCount();
        int int52 = atomikosProperties50.maxActives;
        atomikosProperties50.setConsoleFileName("");
        java.lang.String str55 = atomikosProperties50.getOutputDir();
        atomikosProperties50.setConsoleFileName("");
        atomikosProperties50.serialJtaTransactions = true;
        atomikosProperties50.enableLogging = false;
        java.lang.Object obj62 = properties0.replace((java.lang.Object) objCollection49, (java.lang.Object) atomikosProperties50);
        atomikosProperties50.setMaxActives(0);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(properties48);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 50 + "'", int52 == 50);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test05857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05857");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 5;
        recovery0.delay = 50;
        recovery0.retryInterval = 86400000L;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test05858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05858");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        atomikosProperties0.logBaseName = "tm.out";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        long long9 = atomikosProperties4.getMaxTimeout();
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet11 = properties10.keySet();
        atomikosProperties4.set(properties10, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj17 = properties10.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        boolean boolean26 = properties10.replace((java.lang.Object) (-1L), obj24, (java.lang.Object) 100.0d);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        long long33 = atomikosProperties28.getMaxTimeout();
        java.util.Properties properties34 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet35 = properties34.keySet();
        atomikosProperties28.set(properties34, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj41 = properties34.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        java.util.Properties properties45 = new java.util.Properties();
        java.lang.Object obj47 = properties45.get((java.lang.Object) 0.0d);
        java.lang.Object obj48 = properties45.clone();
        boolean boolean50 = properties34.replace((java.lang.Object) (-1L), obj48, (java.lang.Object) 100.0d);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        properties52.clear();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.elements();
        java.lang.String str57 = properties52.getProperty("");
        java.util.Properties properties58 = new java.util.Properties();
        java.lang.Object obj60 = properties58.get((java.lang.Object) 0.0d);
        java.lang.Object obj61 = properties58.clone();
        java.lang.String str62 = properties58.toString();
        boolean boolean64 = properties52.remove((java.lang.Object) properties58, (java.lang.Object) 0);
        java.util.Enumeration<?> wildcardEnumeration65 = properties52.propertyNames();
        atomikosProperties0.set(properties10, "hi!", (java.lang.Object) wildcardEnumeration65);
        java.lang.String str67 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery68 = atomikosProperties0.getRecovery();
        atomikosProperties0.setMaxTimeout((long) (-1));
        java.lang.String str71 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 300000L + "'", long33 == 300000L);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(recovery68);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tm.out" + "'", str71, "tm.out");
    }

    @Test
    public void test05859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05859");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.maxActives = 'a';
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        int int12 = atomikosProperties9.getMaxActives();
        java.lang.String str13 = atomikosProperties9.getLogBaseName();
        java.lang.String str14 = atomikosProperties9.getService();
        atomikosProperties9.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        long long17 = atomikosProperties9.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.logBaseDir = "";
        atomikosProperties18.setConsoleFileCount((int) (short) 10);
        long long23 = atomikosProperties18.getMaxTimeout();
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet25 = properties24.keySet();
        atomikosProperties18.set(properties24, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.get((java.lang.Object) 0.0d);
        java.lang.Object obj32 = properties29.clone();
        java.lang.String str33 = properties29.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.logBaseDir = "";
        atomikosProperties34.setConsoleFileCount((int) (short) 10);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        atomikosProperties34.set(properties40, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj47 = properties40.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setDefaultJtaTimeout((-1L));
        java.util.Properties properties51 = new java.util.Properties();
        java.lang.Object obj53 = properties51.get((java.lang.Object) 0.0d);
        java.lang.Object obj54 = properties51.clone();
        boolean boolean56 = properties40.replace((java.lang.Object) (-1L), obj54, (java.lang.Object) 100.0d);
        java.util.Properties properties57 = new java.util.Properties();
        java.util.Properties properties58 = new java.util.Properties(properties57);
        properties58.clear();
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.logBaseDir = "";
        atomikosProperties61.setConsoleFileCount((int) (short) 10);
        long long66 = atomikosProperties61.getMaxTimeout();
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet68 = properties67.keySet();
        atomikosProperties61.set(properties67, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str72 = atomikosProperties61.logBaseDir;
        java.lang.String str73 = atomikosProperties61.logBaseDir;
        java.util.Properties properties74 = atomikosProperties61.asProperties();
        java.lang.Object obj75 = properties29.replace((java.lang.Object) properties58, (java.lang.Object) atomikosProperties61);
        boolean boolean76 = properties24.contains((java.lang.Object) atomikosProperties61);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = atomikosProperties61.consoleLogLevel;
        long long78 = atomikosProperties61.defaultJtaTimeout;
        atomikosProperties61.setConsoleFileLimit(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel81 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties61.setConsoleLogLevel(atomikosLoggingLevel81);
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel81;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel81);
        atomikosProperties0.setMaxTimeout(50L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertEquals(obj54.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj54), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj54), "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertNotNull(objSet68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(properties74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel77 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel77.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 10000L + "'", long78 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel81 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel81.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
    }

    @Test
    public void test05860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05860");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setConsoleFileCount((int) (short) 10);
        atomikosProperties2.setCheckpointInterval(10000L);
        long long9 = atomikosProperties2.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties2.consoleLogLevel = atomikosLoggingLevel10;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel10;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(recovery13);
    }

    @Test
    public void test05861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05861");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.Object> objSet31 = properties24.keySet();
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        java.lang.String str37 = properties33.toString();
        boolean boolean40 = properties33.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj41 = null;
        boolean boolean42 = properties33.equals(obj41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.enableLogging = true;
        long long46 = atomikosProperties43.getCheckpointInterval();
        java.lang.String str47 = atomikosProperties43.getService();
        java.lang.String str48 = atomikosProperties43.logBaseDir;
        atomikosProperties43.setEnableLogging(false);
        boolean boolean51 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Collection<java.lang.Object> objCollection57 = properties56.values();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Collection<java.lang.Object> objCollection60 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.keys();
        boolean boolean62 = properties56.contains((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.logBaseDir = "";
        atomikosProperties64.setConsoleFileCount((int) (short) 10);
        java.lang.String str69 = atomikosProperties64.logBaseName;
        atomikosProperties64.outputDir = "";
        java.util.Properties properties72 = atomikosProperties64.asProperties();
        java.util.Properties properties73 = atomikosProperties64.asProperties();
        boolean boolean74 = properties56.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties64);
        java.lang.Object obj75 = properties33.getOrDefault((java.lang.Object) atomikosProperties43, (java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.logBaseDir = "";
        atomikosProperties76.setConsoleFileCount((int) (short) 10);
        atomikosProperties76.setLogBaseDir("{}");
        boolean boolean83 = atomikosProperties76.isSerialJtaTransactions();
        boolean boolean84 = atomikosProperties76.allowSubTransactions;
        atomikosProperties76.consoleFileLimit = 50;
        atomikosProperties76.maxActives = (-1);
        java.lang.Object obj89 = properties24.replace(obj75, (java.lang.Object) atomikosProperties76);
        java.io.Writer writer90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties24.store(writer90, "{{{}={}}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj89);
    }

    @Test
    public void test05862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05862");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setConsoleFileCount((int) (short) 10);
        atomikosProperties2.setCheckpointInterval(10000L);
        long long9 = atomikosProperties2.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties2.consoleLogLevel = atomikosLoggingLevel10;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel10;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.enableLogging = true;
        atomikosProperties0.allowSubTransactions = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
    }

    @Test
    public void test05863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05863");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        boolean boolean31 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery32.maxRetries = (-1);
        recovery32.setRetryInterval((long) (-1));
        java.lang.Object obj38 = properties15.putIfAbsent((java.lang.Object) (-1), (java.lang.Object) "tmlog");
        java.util.Properties properties39 = new java.util.Properties(properties15);
        java.util.Properties properties40 = new java.util.Properties(properties15);
        java.util.Properties properties41 = new java.util.Properties(properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.logBaseDir = "";
        atomikosProperties42.setConsoleFileCount((int) (short) 10);
        long long47 = atomikosProperties42.getMaxTimeout();
        java.util.Properties properties48 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet49 = properties48.keySet();
        atomikosProperties42.set(properties48, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str53 = atomikosProperties42.logBaseDir;
        java.lang.String str54 = atomikosProperties42.logBaseDir;
        java.lang.String str55 = atomikosProperties42.logBaseDir;
        java.lang.String str56 = atomikosProperties42.getService();
        atomikosProperties42.checkpointInterval = 100L;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties42.recovery;
        boolean boolean60 = properties41.containsKey((java.lang.Object) atomikosProperties42);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties41.elements();
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 300000L + "'", long47 == 300000L);
        org.junit.Assert.assertNotNull(objSet49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
    }

    @Test
    public void test05864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05864");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.Object> objSet31 = properties24.keySet();
        java.util.Enumeration<?> wildcardEnumeration32 = properties24.propertyNames();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
    }

    @Test
    public void test05865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05865");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = null;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel12;
        atomikosProperties9.outputDir = "";
        int int16 = atomikosProperties9.maxActives;
        boolean boolean17 = atomikosProperties9.isThreadedTwoPhaseCommit();
        atomikosProperties9.consoleFileLimit = (short) 10;
        java.util.Properties properties20 = atomikosProperties9.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.enableLogging = true;
        long long25 = atomikosProperties22.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties22.getService();
        atomikosProperties22.forceShutdownOnVmExit = false;
        java.lang.Object obj29 = properties7.replace((java.lang.Object) objEnumeration21, (java.lang.Object) atomikosProperties22);
        long long30 = atomikosProperties22.getMaxTimeout();
        long long31 = atomikosProperties22.defaultJtaTimeout;
        int int32 = atomikosProperties22.maxActives;
        atomikosProperties22.maxActives = 'a';
        java.lang.String str35 = atomikosProperties22.service;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test05866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05866");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.service;
        atomikosProperties0.setSerialJtaTransactions(false);
        int int14 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.allowSubTransactions = true;
        long long17 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setService("hi!");
        java.lang.String str20 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseDir("{}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test05867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05867");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean8 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.consoleFileLimit = 50;
        atomikosProperties0.setDefaultJtaTimeout((long) 0);
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05868");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery25.maxRetries = (-1);
        recovery25.setDelay((long) (short) 0);
        long long30 = recovery25.forgetOrphanedLogEntriesDelay;
        recovery25.retryInterval = 500L;
        recovery25.retryInterval = '4';
        long long35 = recovery25.getRetryInterval();
        long long36 = recovery25.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj37 = null;
        java.lang.Object obj38 = properties15.getOrDefault((java.lang.Object) long36, obj37);
        boolean boolean39 = properties15.isEmpty();
        java.util.Properties properties40 = new java.util.Properties(properties15);
        int int41 = properties40.size();
        properties40.clear();
        java.util.Properties properties43 = new java.util.Properties(properties40);
        java.io.Reader reader44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties40.load(reader44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 86400000L + "'", long30 == 86400000L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 52L + "'", long35 == 52L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 86400000L + "'", long36 == 86400000L);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test05869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05869");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setDefaultJtaTimeout((-1L));
        long long21 = atomikosProperties18.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setCheckpointInterval(10000L);
        long long31 = atomikosProperties24.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties24.consoleLogLevel = atomikosLoggingLevel32;
        atomikosProperties22.consoleLogLevel = atomikosLoggingLevel32;
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel32;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel32;
        boolean boolean37 = atomikosProperties0.allowSubTransactions;
        boolean boolean38 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test05870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05870");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.setMaxRetries((int) '#');
        long long9 = recovery0.retryInterval;
        int int10 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay(10L);
        recovery0.setRetryInterval(86400000L);
        long long15 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.forgetOrphanedLogEntriesDelay = (-1L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
    }

    @Test
    public void test05871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05871");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.service = "hi!";
        atomikosProperties0.consoleFileLimit = 5;
        long long8 = atomikosProperties0.maxTimeout;
        java.lang.String str9 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05872");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setService("{}");
        atomikosProperties0.threadedTwoPhaseCommit = true;
        atomikosProperties0.setConsoleFileCount(35);
        atomikosProperties0.maxActives = (byte) 0;
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10000, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=10, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test05873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05873");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        boolean boolean28 = properties21.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj29 = properties19.replace((java.lang.Object) 10.0d, (java.lang.Object) properties21);
        java.util.Properties properties30 = new java.util.Properties(properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setDefaultJtaTimeout((-1L));
        int int35 = atomikosProperties32.getConsoleFileLimit();
        java.util.Properties properties36 = atomikosProperties32.asProperties();
        java.util.Properties properties37 = new java.util.Properties(properties36);
        atomikosProperties0.set(properties30, "hi!", (java.lang.Object) properties36);
        atomikosProperties0.setConsoleFileCount((int) '4');
        long long41 = atomikosProperties0.getCheckpointInterval();
        long long42 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 500L + "'", long41 == 500L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
    }

    @Test
    public void test05874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05874");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties11 = new java.util.Properties();
        java.lang.Object obj13 = properties11.get((java.lang.Object) 0.0d);
        java.lang.Object obj14 = properties11.clone();
        java.lang.String str15 = properties11.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj29 = properties22.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setDefaultJtaTimeout((-1L));
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        boolean boolean38 = properties22.replace((java.lang.Object) (-1L), obj36, (java.lang.Object) 100.0d);
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Properties properties40 = new java.util.Properties(properties39);
        properties40.clear();
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        long long48 = atomikosProperties43.getMaxTimeout();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        atomikosProperties43.set(properties49, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str54 = atomikosProperties43.logBaseDir;
        java.lang.String str55 = atomikosProperties43.logBaseDir;
        java.util.Properties properties56 = atomikosProperties43.asProperties();
        java.lang.Object obj57 = properties11.replace((java.lang.Object) properties40, (java.lang.Object) atomikosProperties43);
        boolean boolean58 = properties6.contains((java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties43.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = atomikosProperties43.recovery;
        long long61 = atomikosProperties43.defaultJtaTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 300000L + "'", long48 == 300000L);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
    }

    @Test
    public void test05875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05875");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setDefaultJtaTimeout((-1L));
        int int9 = atomikosProperties6.getConsoleFileLimit();
        java.util.Properties properties10 = atomikosProperties6.asProperties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.enableLogging = true;
        long long18 = atomikosProperties15.getCheckpointInterval();
        boolean boolean20 = properties13.remove((java.lang.Object) long18, (java.lang.Object) (byte) 100);
        boolean boolean22 = properties13.equals((java.lang.Object) (short) 1);
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.lang.Class<?> wildcardClass24 = properties23.getClass();
        java.lang.Object obj25 = properties0.put((java.lang.Object) properties10, (java.lang.Object) wildcardClass24);
        java.util.Properties properties26 = new java.util.Properties(properties10);
        java.util.Properties properties27 = new java.util.Properties(properties10);
        java.util.Properties properties28 = new java.util.Properties(properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        java.lang.String str34 = atomikosProperties29.logBaseName;
        atomikosProperties29.outputDir = "";
        java.util.Properties properties37 = atomikosProperties29.asProperties();
        java.util.Set<java.lang.String> strSet38 = properties37.stringPropertyNames();
        boolean boolean40 = properties37.contains((java.lang.Object) false);
        properties37.clear();
        java.util.Properties properties42 = new java.util.Properties(properties37);
        boolean boolean43 = properties42.isEmpty();
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        properties42.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setLogBaseDir("{}");
        atomikosProperties46.maxActives = 10;
        boolean boolean51 = properties42.containsValue((java.lang.Object) atomikosProperties46);
        boolean boolean52 = atomikosProperties46.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 500L + "'", long18 == 500L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test05876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05876");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.logBaseDir;
        atomikosProperties0.forceShutdownOnVmExit = true;
        int int10 = atomikosProperties0.maxActives;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
    }

    @Test
    public void test05877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05877");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str4 = atomikosProperties0.getOutputDir();
        atomikosProperties0.defaultJtaTimeout = 'a';
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.logBaseName = "";
        atomikosProperties0.setConsoleFileName("{}");
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.consoleFileLimit = 22;
        long long17 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 97L + "'", long17 == 97L);
    }

    @Test
    public void test05878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05878");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getService();
        java.lang.String str10 = atomikosProperties0.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        recovery11.setDelay((long) 22);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(recovery11);
    }

    @Test
    public void test05879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05879");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setCheckpointInterval((long) (short) 0);
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getService();
        java.lang.String str10 = atomikosProperties0.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        int int12 = recovery11.getMaxRetries();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test05880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05880");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.setService("{}");
        atomikosProperties0.setConsoleFileLimit(10);
        int int10 = atomikosProperties0.getMaxActives();
        boolean boolean11 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.tmlog=-1}";
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.save(outputStream16, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test05881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05881");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.outputDir = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery20 = atomikosProperties0.getRecovery();
        recovery20.setMaxRetries((int) (byte) 0);
        recovery20.setForgetOrphanedLogEntriesDelay((long) 20);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(recovery20);
    }

    @Test
    public void test05882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05882");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        java.lang.String str7 = atomikosProperties0.service;
        long long8 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.hi!=-1.0}");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
    }

    @Test
    public void test05883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05883");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.logBaseDir = "";
        atomikosProperties24.setConsoleFileCount((int) (short) 10);
        atomikosProperties24.setLogBaseDir("{}");
        java.lang.String str31 = atomikosProperties24.getOutputDir();
        atomikosProperties0.set(properties15, "{}", (java.lang.Object) atomikosProperties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getDefaultJtaTimeout();
        atomikosProperties33.logBaseName = "tmlog";
        boolean boolean41 = properties15.contains((java.lang.Object) atomikosProperties33);
        boolean boolean42 = atomikosProperties33.allowSubTransactions;
        int int43 = atomikosProperties33.getMaxActives();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
    }

    @Test
    public void test05884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05884");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties21.keys();
        int int27 = properties21.size();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties21.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery30.maxRetries = (-1);
        recovery30.setDelay((long) (short) 0);
        recovery30.maxRetries = 0;
        atomikosProperties0.set(properties21, "tmlog", (java.lang.Object) recovery30);
        atomikosProperties0.setAllowSubTransactions(false);
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet41 = properties40.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = null;
        atomikosProperties43.consoleLogLevel = atomikosLoggingLevel46;
        atomikosProperties43.outputDir = "";
        java.lang.String str50 = atomikosProperties43.logBaseName;
        java.util.Properties properties51 = atomikosProperties43.asProperties();
        atomikosProperties0.set(properties40, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) atomikosProperties43);
        int int53 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean54 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxActives(0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objSet41);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test05885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05885");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        int int17 = atomikosProperties0.maxActives;
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties0.consoleLogLevel;
        java.lang.String str20 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test05886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05886");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.hi!=-1.0}");
        int int12 = atomikosProperties0.getMaxActives();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test05887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05887");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        long long6 = atomikosProperties0.getMaxTimeout();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str8 = atomikosProperties0.logBaseName;
        atomikosProperties0.setMaxTimeout(52L);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean13 = atomikosProperties0.enableLogging;
        java.lang.String str14 = atomikosProperties0.getService();
        int int15 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test05888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05888");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Properties properties18 = new java.util.Properties();
        java.lang.Object obj20 = properties18.get((java.lang.Object) 0.0d);
        java.lang.Object obj21 = properties18.clone();
        java.lang.String str22 = properties18.toString();
        boolean boolean25 = properties18.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj26 = properties16.replace((java.lang.Object) 10.0d, (java.lang.Object) properties18);
        java.lang.String str27 = properties18.toString();
        java.util.Collection<java.lang.Object> objCollection28 = properties18.values();
        java.util.Properties properties30 = new java.util.Properties();
        java.lang.Object obj32 = properties30.get((java.lang.Object) 0.0d);
        java.lang.Object obj33 = properties30.clone();
        java.lang.String str34 = properties30.toString();
        boolean boolean37 = properties30.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties30.clear();
        boolean boolean39 = properties30.isEmpty();
        atomikosProperties0.set(properties18, "{}", (java.lang.Object) properties30);
        int int41 = properties30.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long43 = recovery42.getRetryInterval();
        recovery42.delay = 10L;
        recovery42.setForgetOrphanedLogEntriesDelay(0L);
        long long48 = recovery42.getRetryInterval();
        recovery42.maxRetries = 1;
        long long51 = recovery42.forgetOrphanedLogEntriesDelay;
        recovery42.maxRetries = (short) -1;
        recovery42.setDelay((long) (short) 100);
        recovery42.setDelay((long) 35);
        boolean boolean58 = properties30.contains((java.lang.Object) 35);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(obj21);
        org.junit.Assert.assertEquals(obj21.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "{}" + "'", str27, "{}");
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "{}" + "'", str34, "{}");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test05889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05889");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        atomikosProperties0.setMaxActives(0);
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
    }

    @Test
    public void test05890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05890");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long1 = recovery0.getRetryInterval();
        recovery0.delay = 10L;
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long6 = recovery0.getRetryInterval();
        recovery0.maxRetries = 1;
        long long9 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 5;
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.forgetOrphanedLogEntriesDelay = 500L;
        int int15 = recovery0.getMaxRetries();
        long long16 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.forgetOrphanedLogEntriesDelay = (-1L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
    }

    @Test
    public void test05891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05891");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        java.lang.String str9 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.logBaseDir = "";
        atomikosProperties10.setConsoleFileCount((int) (short) 10);
        long long15 = atomikosProperties10.getMaxTimeout();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet17 = properties16.keySet();
        atomikosProperties10.set(properties16, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties21 = new java.util.Properties();
        java.lang.Object obj23 = properties21.get((java.lang.Object) 0.0d);
        java.lang.Object obj24 = properties21.clone();
        java.lang.String str25 = properties21.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.logBaseDir = "";
        atomikosProperties26.setConsoleFileCount((int) (short) 10);
        long long31 = atomikosProperties26.getMaxTimeout();
        java.util.Properties properties32 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet33 = properties32.keySet();
        atomikosProperties26.set(properties32, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj39 = properties32.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setDefaultJtaTimeout((-1L));
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.get((java.lang.Object) 0.0d);
        java.lang.Object obj46 = properties43.clone();
        boolean boolean48 = properties32.replace((java.lang.Object) (-1L), obj46, (java.lang.Object) 100.0d);
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        properties50.clear();
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.logBaseDir = "";
        atomikosProperties53.setConsoleFileCount((int) (short) 10);
        long long58 = atomikosProperties53.getMaxTimeout();
        java.util.Properties properties59 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet60 = properties59.keySet();
        atomikosProperties53.set(properties59, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str64 = atomikosProperties53.logBaseDir;
        java.lang.String str65 = atomikosProperties53.logBaseDir;
        java.util.Properties properties66 = atomikosProperties53.asProperties();
        java.lang.Object obj67 = properties21.replace((java.lang.Object) properties50, (java.lang.Object) atomikosProperties53);
        boolean boolean68 = properties16.contains((java.lang.Object) atomikosProperties53);
        boolean boolean69 = properties1.containsValue((java.lang.Object) properties16);
        java.lang.Object obj70 = properties1.clone();
        java.util.Properties properties71 = new java.util.Properties(properties1);
        java.util.Properties properties72 = new java.util.Properties();
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Collection<java.lang.Object> objCollection74 = properties73.values();
        java.lang.Object obj77 = properties73.setProperty("hi!", "{}");
        java.lang.String str79 = properties73.getProperty("tmlog");
        properties73.clear();
        java.util.Set<java.lang.String> strSet81 = properties73.stringPropertyNames();
        java.util.Set<java.lang.String> strSet82 = properties73.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration83 = properties73.keys();
        java.util.Properties properties84 = new java.util.Properties(properties73);
        boolean boolean85 = properties71.containsValue((java.lang.Object) properties84);
        java.io.OutputStream outputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties71.store(outputStream86, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 300000L + "'", long31 == 300000L);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(properties66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNotNull(objCollection74);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(strSet82);
        org.junit.Assert.assertNotNull(objEnumeration83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test05892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05892");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.transactionManagerUniqueName = "tmlog";
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.hi!=-1.0}";
        int int15 = atomikosProperties0.getMaxActives();
        atomikosProperties0.outputDir = "{true=10000}";
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str19 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 50 + "'", int15 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test05893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05893");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileName("{}");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        atomikosProperties0.logBaseName = "";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.enableLogging = true;
        long long16 = atomikosProperties13.getCheckpointInterval();
        java.lang.String str17 = atomikosProperties13.getService();
        java.lang.String str18 = atomikosProperties13.logBaseDir;
        atomikosProperties13.setEnableLogging(false);
        atomikosProperties13.consoleFileCount = 0;
        long long23 = atomikosProperties13.getMaxTimeout();
        boolean boolean24 = atomikosProperties13.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties13.consoleLogLevel;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        java.util.Properties properties27 = atomikosProperties0.asProperties();
        properties27.clear();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 500L + "'", long16 == 500L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties27);
    }

    @Test
    public void test05894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05894");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("");
        long long9 = atomikosProperties0.checkpointInterval;
        boolean boolean10 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=10}";
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 500L + "'", long9 == 500L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test05895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05895");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        java.lang.String str12 = atomikosProperties0.service;
        atomikosProperties0.setMaxTimeout((long) 35);
        long long15 = atomikosProperties0.maxTimeout;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 35L + "'", long15 == 35L);
    }

    @Test
    public void test05896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05896");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        int int15 = atomikosProperties12.getConsoleFileLimit();
        java.util.Properties properties16 = atomikosProperties12.asProperties();
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        java.lang.String str21 = properties17.toString();
        java.util.Properties properties22 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.keys();
        java.util.Collection<java.lang.Object> objCollection24 = properties22.values();
        boolean boolean25 = properties16.contains((java.lang.Object) objCollection24);
        properties16.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = null;
        atomikosProperties36.consoleLogLevel = atomikosLoggingLevel39;
        atomikosProperties36.outputDir = "";
        int int43 = atomikosProperties36.maxActives;
        boolean boolean44 = atomikosProperties36.isThreadedTwoPhaseCommit();
        atomikosProperties36.consoleFileLimit = (short) 10;
        java.util.Properties properties47 = atomikosProperties36.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.enableLogging = true;
        long long52 = atomikosProperties49.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties49.getService();
        atomikosProperties49.forceShutdownOnVmExit = false;
        java.lang.Object obj56 = properties34.replace((java.lang.Object) objEnumeration48, (java.lang.Object) atomikosProperties49);
        java.lang.Object obj57 = properties1.putIfAbsent((java.lang.Object) properties16, (java.lang.Object) atomikosProperties49);
        atomikosProperties49.setMaxActives(19);
        atomikosProperties49.setLogBaseName("{true=10000}");
        atomikosProperties49.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=hi!, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 50 + "'", int43 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 500L + "'", long52 == 500L);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test05897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05897");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        atomikosProperties0.setOutputDir("hi!");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.logBaseDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={true=10000}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test05898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05898");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        atomikosProperties0.setLogBaseName("tm.out");
        int int19 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseDir = "";
        int int22 = atomikosProperties0.maxActives;
        atomikosProperties0.allowSubTransactions = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
    }

    @Test
    public void test05899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05899");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
    }

    @Test
    public void test05900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05900");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        java.util.Properties properties8 = new java.util.Properties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Properties properties13 = new java.util.Properties();
        java.lang.Object obj15 = properties13.get((java.lang.Object) 0.0d);
        java.lang.Object obj16 = properties13.clone();
        java.lang.String str17 = properties13.toString();
        boolean boolean20 = properties13.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj21 = properties11.replace((java.lang.Object) 10.0d, (java.lang.Object) properties13);
        java.lang.String str22 = properties13.toString();
        java.util.Properties properties23 = new java.util.Properties(properties13);
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Properties properties27 = new java.util.Properties();
        java.lang.Object obj29 = properties27.get((java.lang.Object) 0.0d);
        java.lang.Object obj30 = properties27.clone();
        java.lang.String str31 = properties27.toString();
        boolean boolean34 = properties27.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj35 = properties25.replace((java.lang.Object) 10.0d, (java.lang.Object) properties27);
        java.util.Properties properties36 = new java.util.Properties(properties25);
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        boolean boolean38 = properties8.contains((java.lang.Object) properties23);
        boolean boolean39 = properties23.isEmpty();
        java.util.Properties properties40 = new java.util.Properties();
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Collection<java.lang.Object> objCollection42 = properties41.values();
        java.lang.Object obj45 = properties41.setProperty("hi!", "{}");
        java.lang.String str47 = properties41.getProperty("tmlog");
        properties41.clear();
        java.util.Set<java.lang.String> strSet49 = properties41.stringPropertyNames();
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.enableLogging = true;
        int int55 = atomikosProperties52.consoleFileLimit;
        atomikosProperties52.logBaseName = "hi!";
        atomikosProperties52.enableLogging = false;
        atomikosProperties52.setMaxTimeout((long) '4');
        atomikosProperties52.setMaxTimeout((long) 1);
        atomikosProperties0.set(properties23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) 1);
        atomikosProperties0.setConsoleFileLimit((int) (short) 0);
        boolean boolean67 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str68 = atomikosProperties0.getConsoleFileName();
        java.lang.String str69 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(obj16);
        org.junit.Assert.assertEquals(obj16.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj16), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj16), "{}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tm.out" + "'", str68, "tm.out");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test05901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05901");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setOutputDir("tmlog");
        atomikosProperties0.setService("");
        java.lang.String str15 = atomikosProperties0.logBaseName;
        atomikosProperties0.setConsoleFileCount(35);
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        boolean boolean19 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test05902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05902");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Properties properties5 = new java.util.Properties();
        java.lang.Object obj7 = properties5.get((java.lang.Object) 0.0d);
        java.lang.Object obj8 = properties5.clone();
        java.lang.String str9 = properties5.toString();
        boolean boolean12 = properties5.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj13 = properties3.replace((java.lang.Object) 10.0d, (java.lang.Object) properties5);
        java.lang.String str14 = properties5.toString();
        java.util.Properties properties15 = new java.util.Properties(properties5);
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Properties properties19 = new java.util.Properties();
        java.lang.Object obj21 = properties19.get((java.lang.Object) 0.0d);
        java.lang.Object obj22 = properties19.clone();
        java.lang.String str23 = properties19.toString();
        boolean boolean26 = properties19.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj27 = properties17.replace((java.lang.Object) 10.0d, (java.lang.Object) properties19);
        java.util.Properties properties28 = new java.util.Properties(properties17);
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        boolean boolean30 = properties0.contains((java.lang.Object) properties15);
        boolean boolean31 = properties15.isEmpty();
        java.util.Properties properties32 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = null;
        atomikosProperties33.consoleLogLevel = atomikosLoggingLevel36;
        boolean boolean38 = atomikosProperties33.enableLogging;
        atomikosProperties33.logBaseDir = "{}";
        atomikosProperties33.setSerialJtaTransactions(false);
        boolean boolean43 = atomikosProperties33.serialJtaTransactions;
        atomikosProperties33.consoleFileName = "{com.atomikos.icatch.hi!=-1.0}";
        atomikosProperties33.checkpointInterval = (short) 0;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.logBaseDir = "";
        atomikosProperties48.setConsoleFileCount((int) (short) 10);
        java.lang.String str53 = atomikosProperties48.logBaseName;
        java.lang.String str54 = atomikosProperties48.logBaseDir;
        long long55 = atomikosProperties48.defaultJtaTimeout;
        java.util.Properties properties56 = atomikosProperties48.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery57 = atomikosProperties48.getRecovery();
        recovery57.maxRetries = (short) 10;
        long long60 = recovery57.retryInterval;
        recovery57.retryInterval = '4';
        long long63 = recovery57.getRetryInterval();
        java.lang.Object obj64 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = properties32.replace((java.lang.Object) atomikosProperties33, (java.lang.Object) long63, obj64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{}" + "'", str14, "{}");
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "{}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10000L + "'", long55 == 10000L);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNotNull(recovery57);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 52L + "'", long63 == 52L);
    }

    @Test
    public void test05903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05903");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        recovery0.setDelay((long) (short) 1);
        recovery0.forgetOrphanedLogEntriesDelay = 97;
        long long12 = recovery0.delay;
        long long13 = recovery0.getRetryInterval();
        int int14 = recovery0.maxRetries;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test05904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05904");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties0.clear();
        boolean boolean9 = properties0.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setDefaultJtaTimeout((-1L));
        java.lang.String str13 = atomikosProperties10.getTransactionManagerUniqueName();
        java.util.Properties properties14 = atomikosProperties10.asProperties();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.lang.Object obj18 = properties0.setProperty("{true=10000}", "{{}={}}");
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream19, "{com.atomikos.icatch.hi!=-1.0, =hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test05905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05905");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        java.lang.Object obj16 = properties13.getOrDefault((java.lang.Object) (byte) 10, (java.lang.Object) (short) -1);
        boolean boolean17 = properties13.isEmpty();
        java.util.Set<java.lang.Object> objSet18 = properties13.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setDefaultJtaTimeout((-1L));
        atomikosProperties19.allowSubTransactions = true;
        boolean boolean24 = properties13.containsValue((java.lang.Object) true);
        int int25 = properties13.size();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        java.util.Enumeration<?> wildcardEnumeration28 = properties26.propertyNames();
        boolean boolean29 = properties13.contains((java.lang.Object) properties26);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertEquals("'" + obj16 + "' != '" + (short) -1 + "'", obj16, (short) -1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test05906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05906");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.String str15 = atomikosProperties0.getConsoleFileName();
        boolean boolean16 = atomikosProperties0.serialJtaTransactions;
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.maxTimeout = (byte) 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05907");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties6.keys();
        int int12 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties6.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        boolean boolean17 = atomikosProperties14.isForceShutdownOnVmExit();
        int int18 = atomikosProperties14.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties14.getConsoleLogLevel();
        java.lang.Object obj20 = properties6.get((java.lang.Object) atomikosProperties14);
        boolean boolean21 = atomikosProperties14.isAllowSubTransactions();
        int int22 = atomikosProperties14.consoleFileCount;
        java.lang.String str23 = atomikosProperties14.logBaseName;
        atomikosProperties14.allowSubTransactions = false;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
    }

    @Test
    public void test05908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05908");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        boolean boolean4 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.logBaseName;
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        int int14 = properties10.size();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.logBaseDir = "";
        atomikosProperties16.setConsoleFileCount((int) (short) 10);
        long long21 = atomikosProperties16.getMaxTimeout();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet23 = properties22.keySet();
        atomikosProperties16.set(properties22, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str27 = atomikosProperties16.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 1);
        long long33 = recovery28.getForgetOrphanedLogEntriesDelay();
        long long34 = recovery28.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj35 = properties10.put((java.lang.Object) atomikosProperties16, (java.lang.Object) long34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.logBaseDir = "";
        atomikosProperties37.setConsoleFileCount((int) (short) 10);
        atomikosProperties37.setLogBaseDir("{}");
        java.util.Properties properties44 = atomikosProperties37.asProperties();
        java.util.Properties properties45 = new java.util.Properties(properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.logBaseDir = "";
        atomikosProperties46.setConsoleFileCount((int) (short) 10);
        atomikosProperties46.setCheckpointInterval(10000L);
        long long53 = atomikosProperties46.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties46.getConsoleLogLevel();
        boolean boolean55 = properties45.containsValue((java.lang.Object) atomikosProperties46);
        java.util.Properties properties56 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setDefaultJtaTimeout((-1L));
        int int60 = atomikosProperties57.getConsoleFileLimit();
        java.util.Properties properties61 = atomikosProperties57.asProperties();
        atomikosProperties57.consoleFileLimit = 0;
        boolean boolean64 = properties56.containsValue((java.lang.Object) atomikosProperties57);
        properties56.clear();
        java.util.Properties properties66 = new java.util.Properties(properties56);
        atomikosProperties0.set(properties10, "", (java.lang.Object) properties56);
        java.io.OutputStream outputStream68 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties56.storeToXML(outputStream68, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 86400000L + "'", long34 == 86400000L);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(properties44);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test05909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05909");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.setCheckpointInterval((long) (short) 10);
        atomikosProperties0.setLogBaseName("tm.out");
        int int19 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.outputDir = "hi!";
        atomikosProperties0.setDefaultJtaTimeout((long) 20);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test05910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05910");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.enableLogging = true;
        atomikosProperties0.forceShutdownOnVmExit = false;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test05911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05911");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        long long10 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setTransactionManagerUniqueName("{{}={}}");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.Object obj16 = properties13.setProperty("tm.out", "{com.atomikos.icatch.hi!=-1.0, =hi!}");
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties13.elements();
        int int18 = properties13.size();
        java.lang.Object obj21 = properties13.setProperty("", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        java.io.InputStream inputStream22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.loadFromXML(inputStream22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 22 + "'", int18 == 22);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test05912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05912");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        boolean boolean15 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.setLogBaseDir("{}");
        atomikosProperties0.consoleFileCount = (byte) -1;
        atomikosProperties0.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(recovery22);
    }

    @Test
    public void test05913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05913");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        boolean boolean7 = atomikosProperties0.allowSubTransactions;
        java.lang.String str8 = atomikosProperties0.outputDir;
        atomikosProperties0.setConsoleFileName("tmlog");
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.maxTimeout = 10L;
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test05914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05914");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.service = "";
        int int4 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.forceShutdownOnVmExit = true;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 500L + "'", long1 == 500L);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test05915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05915");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.allowSubTransactions = false;
        boolean boolean6 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test05916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05916");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        boolean boolean8 = atomikosProperties0.threadedTwoPhaseCommit;
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.serialJtaTransactions = false;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(properties9);
    }

    @Test
    public void test05917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05917");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setCheckpointInterval(5L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test05918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05918");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.logBaseDir = "";
        atomikosProperties11.setConsoleFileCount((int) (short) 10);
        atomikosProperties11.setService("");
        boolean boolean18 = properties10.equals((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setConsoleFileCount(5);
        atomikosProperties11.transactionManagerUniqueName = "tm.out";
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test05919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05919");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setLogBaseDir("{}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel4);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        int int8 = atomikosProperties0.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        atomikosProperties9.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int18 = atomikosProperties17.getConsoleFileCount();
        int int19 = atomikosProperties17.maxActives;
        atomikosProperties17.setConsoleFileName("");
        atomikosProperties17.transactionManagerUniqueName = "{}";
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        java.lang.String str32 = atomikosProperties27.logBaseName;
        atomikosProperties27.outputDir = "";
        java.util.Properties properties35 = atomikosProperties27.asProperties();
        java.util.Properties properties36 = atomikosProperties27.asProperties();
        atomikosProperties0.set(properties25, "{{}={}}", (java.lang.Object) properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.io.OutputStream outputStream39 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.save(outputStream39, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 500L + "'", long1 == 500L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.DEBUG));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNotNull(properties36);
    }

    @Test
    public void test05920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05920");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        java.util.Collection<java.lang.Object> objCollection17 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int19 = atomikosProperties18.getConsoleFileCount();
        int int20 = atomikosProperties18.maxActives;
        java.lang.String str21 = atomikosProperties18.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        atomikosProperties22.setCheckpointInterval(10000L);
        long long29 = atomikosProperties22.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties22.getConsoleLogLevel();
        atomikosProperties18.consoleLogLevel = atomikosLoggingLevel30;
        java.lang.String str32 = atomikosProperties18.consoleFileName;
        atomikosProperties18.setCheckpointInterval((long) (short) 10);
        atomikosProperties18.setLogBaseName("tm.out");
        int int37 = atomikosProperties18.consoleFileLimit;
        int int38 = atomikosProperties18.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = null;
        atomikosProperties39.consoleLogLevel = atomikosLoggingLevel42;
        atomikosProperties39.outputDir = "";
        atomikosProperties39.allowSubTransactions = true;
        boolean boolean48 = atomikosProperties39.isThreadedTwoPhaseCommit();
        atomikosProperties39.checkpointInterval = 300000L;
        long long51 = atomikosProperties39.maxTimeout;
        atomikosProperties39.logBaseDir = "hi!";
        java.lang.String str54 = atomikosProperties39.getLogBaseDir();
        long long55 = atomikosProperties39.getDefaultJtaTimeout();
        atomikosProperties39.setEnableLogging(false);
        boolean boolean58 = properties8.remove((java.lang.Object) atomikosProperties18, (java.lang.Object) atomikosProperties39);
        boolean boolean59 = atomikosProperties18.enableLogging;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tm.out" + "'", str32, "tm.out");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test05921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05921");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setEnableLogging(false);
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties14.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long19 = recovery18.getRetryInterval();
        recovery18.delay = 10L;
        recovery18.setForgetOrphanedLogEntriesDelay(0L);
        int int24 = recovery18.maxRetries;
        atomikosProperties9.set(properties14, "hi!", (java.lang.Object) recovery18);
        long long26 = recovery18.getDelay();
        boolean boolean27 = properties7.containsValue((java.lang.Object) recovery18);
        long long28 = recovery18.getRetryInterval();
        int int29 = recovery18.maxRetries;
        recovery18.setMaxRetries(100);
        long long32 = recovery18.getDelay();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10L + "'", long26 == 10L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10L + "'", long32 == 10L);
    }

    @Test
    public void test05922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05922");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        atomikosProperties0.setConsoleFileLimit((int) (short) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str15 = atomikosProperties0.logBaseName;
        atomikosProperties0.checkpointInterval = 50;
        atomikosProperties0.consoleFileLimit = (byte) -1;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties0.consoleLogLevel;
        java.lang.String str21 = atomikosProperties0.logBaseDir;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test05923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05923");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        java.lang.String str18 = atomikosProperties0.outputDir;
        atomikosProperties0.allowSubTransactions = true;
        long long21 = atomikosProperties0.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.logBaseDir = "";
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        atomikosProperties22.setLogBaseDir("{}");
        java.util.Properties properties29 = atomikosProperties22.asProperties();
        atomikosProperties22.service = "";
        boolean boolean32 = atomikosProperties22.isEnableLogging();
        atomikosProperties22.maxActives = (byte) 1;
        java.util.Properties properties35 = atomikosProperties22.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.logBaseDir = "";
        boolean boolean40 = atomikosProperties37.isForceShutdownOnVmExit();
        int int41 = atomikosProperties37.consoleFileLimit;
        atomikosProperties37.consoleFileCount = 100;
        boolean boolean44 = atomikosProperties37.threadedTwoPhaseCommit;
        atomikosProperties37.enableLogging = true;
        atomikosProperties0.set(properties35, "", (java.lang.Object) true);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 500L + "'", long21 == 500L);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test05924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05924");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        atomikosProperties0.allowSubTransactions = false;
        atomikosProperties0.enableLogging = true;
        java.lang.String str20 = atomikosProperties0.consoleFileName;
        java.lang.String str21 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.enableLogging = true;
        java.lang.String str24 = atomikosProperties0.service;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test05925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05925");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.outputDir = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        long long7 = recovery6.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 86400000L + "'", long7 == 86400000L);
    }

    @Test
    public void test05926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05926");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.logBaseDir = "";
        atomikosProperties15.setConsoleFileCount((int) (short) 10);
        long long20 = atomikosProperties15.getMaxTimeout();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet22 = properties21.keySet();
        atomikosProperties15.set(properties21, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties21.keys();
        int int27 = properties21.size();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties21.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery30.maxRetries = (-1);
        recovery30.setDelay((long) (short) 0);
        recovery30.maxRetries = 0;
        atomikosProperties0.set(properties21, "tmlog", (java.lang.Object) recovery30);
        atomikosProperties0.setAllowSubTransactions(false);
        int int40 = atomikosProperties0.consoleFileCount;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertNotNull(objSet22);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
    }

    @Test
    public void test05927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05927");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileCount(0);
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test05928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05928");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int5 = atomikosProperties4.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.logBaseDir = "";
        atomikosProperties6.setConsoleFileCount((int) (short) 10);
        atomikosProperties6.setCheckpointInterval(10000L);
        long long13 = atomikosProperties6.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties4.consoleLogLevel = atomikosLoggingLevel14;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel14;
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.service = "{}";
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties21.entrySet();
        java.util.Properties properties23 = new java.util.Properties(properties21);
        java.util.Enumeration<?> wildcardEnumeration24 = properties23.propertyNames();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
    }

    @Test
    public void test05929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05929");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties2 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties2.logBaseDir = "";
        atomikosProperties2.setConsoleFileCount((int) (short) 10);
        atomikosProperties2.setCheckpointInterval(10000L);
        long long9 = atomikosProperties2.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties2.consoleLogLevel = atomikosLoggingLevel10;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel10;
        java.lang.String str13 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(10L);
        int int16 = atomikosProperties0.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties0.recovery;
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(recovery17);
    }

    @Test
    public void test05930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05930");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        int int7 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.checkpointInterval = 'a';
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        int int14 = properties10.size();
        java.util.Set<java.lang.Object> objSet15 = properties10.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        java.lang.String str22 = atomikosProperties17.logBaseName;
        java.lang.String str23 = atomikosProperties17.logBaseDir;
        long long24 = atomikosProperties17.defaultJtaTimeout;
        java.util.Properties properties25 = atomikosProperties17.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = atomikosProperties17.getRecovery();
        boolean boolean27 = atomikosProperties17.isSerialJtaTransactions();
        atomikosProperties17.defaultJtaTimeout = 500L;
        atomikosProperties0.set(properties10, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) atomikosProperties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.logBaseDir = "";
        atomikosProperties31.setConsoleFileCount((int) (short) 10);
        atomikosProperties31.setCheckpointInterval(10000L);
        long long38 = atomikosProperties31.maxTimeout;
        int int39 = atomikosProperties31.maxActives;
        atomikosProperties31.setCheckpointInterval((long) 0);
        java.util.Properties properties42 = atomikosProperties31.asProperties();
        java.util.Properties properties43 = atomikosProperties31.asProperties();
        int int44 = atomikosProperties31.getConsoleFileLimit();
        boolean boolean45 = atomikosProperties31.isEnableLogging();
        atomikosProperties31.outputDir = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}";
        boolean boolean48 = properties10.containsKey((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(recovery26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test05931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05931");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        atomikosProperties0.checkpointInterval = (byte) 100;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        atomikosProperties9.setCheckpointInterval(10000L);
        long long16 = atomikosProperties9.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel17;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        atomikosProperties19.setConsoleFileCount((int) (short) 10);
        long long24 = atomikosProperties19.getMaxTimeout();
        java.util.Properties properties25 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet26 = properties25.keySet();
        atomikosProperties19.set(properties25, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj32 = properties25.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setDefaultJtaTimeout((-1L));
        java.util.Properties properties36 = new java.util.Properties();
        java.lang.Object obj38 = properties36.get((java.lang.Object) 0.0d);
        java.lang.Object obj39 = properties36.clone();
        boolean boolean41 = properties25.replace((java.lang.Object) (-1L), obj39, (java.lang.Object) 100.0d);
        java.util.Properties properties42 = new java.util.Properties();
        java.util.Properties properties43 = new java.util.Properties(properties42);
        properties43.clear();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties43.elements();
        java.lang.String str48 = properties43.getProperty("");
        java.util.Properties properties49 = new java.util.Properties(properties43);
        java.util.Properties properties50 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setDefaultJtaTimeout((-1L));
        long long55 = atomikosProperties52.checkpointInterval;
        boolean boolean56 = atomikosProperties52.forceShutdownOnVmExit;
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setOutputDir("");
        atomikosProperties52.setConsoleFileName("hi!");
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 1);
        atomikosProperties0.set(properties49, "", (java.lang.Object) atomikosProperties52);
        java.util.Properties properties66 = atomikosProperties52.asProperties();
        java.io.PrintStream printStream67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties66.list(printStream67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 500L + "'", long55 == 500L);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties66);
    }

    @Test
    public void test05932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05932");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.logBaseName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test05933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05933");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.outputDir = "hi!";
        long long14 = atomikosProperties0.getMaxTimeout();
        java.lang.String str15 = atomikosProperties0.logBaseName;
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        int int17 = atomikosProperties0.maxActives;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
    }

    @Test
    public void test05934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05934");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        java.lang.String str15 = atomikosProperties0.getTransactionManagerUniqueName();
        int int16 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test05935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05935");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.lang.String str7 = atomikosProperties0.logBaseName;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean9 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        long long11 = recovery10.getForgetOrphanedLogEntriesDelay();
        recovery10.retryInterval = 10000L;
        long long14 = recovery10.getForgetOrphanedLogEntriesDelay();
        recovery10.maxRetries = 50;
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 86400000L + "'", long14 == 86400000L);
    }

    @Test
    public void test05936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05936");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.Object> objSet31 = properties24.keySet();
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        java.lang.String str37 = properties33.toString();
        boolean boolean40 = properties33.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj41 = null;
        boolean boolean42 = properties33.equals(obj41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.enableLogging = true;
        long long46 = atomikosProperties43.getCheckpointInterval();
        java.lang.String str47 = atomikosProperties43.getService();
        java.lang.String str48 = atomikosProperties43.logBaseDir;
        atomikosProperties43.setEnableLogging(false);
        boolean boolean51 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Collection<java.lang.Object> objCollection57 = properties56.values();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Collection<java.lang.Object> objCollection60 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.keys();
        boolean boolean62 = properties56.contains((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.logBaseDir = "";
        atomikosProperties64.setConsoleFileCount((int) (short) 10);
        java.lang.String str69 = atomikosProperties64.logBaseName;
        atomikosProperties64.outputDir = "";
        java.util.Properties properties72 = atomikosProperties64.asProperties();
        java.util.Properties properties73 = atomikosProperties64.asProperties();
        boolean boolean74 = properties56.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties64);
        java.lang.Object obj75 = properties33.getOrDefault((java.lang.Object) atomikosProperties43, (java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.logBaseDir = "";
        atomikosProperties76.setConsoleFileCount((int) (short) 10);
        atomikosProperties76.setLogBaseDir("{}");
        boolean boolean83 = atomikosProperties76.isSerialJtaTransactions();
        boolean boolean84 = atomikosProperties76.allowSubTransactions;
        atomikosProperties76.consoleFileLimit = 50;
        atomikosProperties76.maxActives = (-1);
        java.lang.Object obj89 = properties24.replace(obj75, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery92 = atomikosProperties76.getRecovery();
        long long93 = recovery92.getDelay();
        long long94 = recovery92.getDelay();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(recovery92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 10000L + "'", long93 == 10000L);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10000L + "'", long94 == 10000L);
    }

    @Test
    public void test05937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05937");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Properties properties14 = new java.util.Properties(properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int16 = atomikosProperties15.getConsoleFileCount();
        int int17 = atomikosProperties15.maxActives;
        atomikosProperties15.setConsoleFileName("");
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        int int21 = atomikosProperties15.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties15.getRecovery();
        boolean boolean23 = properties12.containsKey((java.lang.Object) recovery22);
        java.util.Properties properties24 = new java.util.Properties();
        java.lang.Object obj26 = properties24.get((java.lang.Object) 0.0d);
        java.lang.Object obj27 = properties24.clone();
        java.lang.String str28 = properties24.toString();
        boolean boolean31 = properties24.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj32 = null;
        boolean boolean33 = properties24.equals(obj32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.enableLogging = true;
        long long37 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str38 = atomikosProperties34.getService();
        java.lang.String str39 = atomikosProperties34.logBaseDir;
        atomikosProperties34.setEnableLogging(false);
        boolean boolean42 = atomikosProperties34.isEnableLogging();
        atomikosProperties34.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties34.getConsoleLogLevel();
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        java.util.Properties properties49 = new java.util.Properties();
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection51 = properties49.values();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.keys();
        boolean boolean53 = properties47.contains((java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        java.lang.String str60 = atomikosProperties55.logBaseName;
        atomikosProperties55.outputDir = "";
        java.util.Properties properties63 = atomikosProperties55.asProperties();
        java.util.Properties properties64 = atomikosProperties55.asProperties();
        boolean boolean65 = properties47.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties55);
        java.lang.Object obj66 = properties24.getOrDefault((java.lang.Object) atomikosProperties34, (java.lang.Object) properties47);
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.logBaseDir = "";
        atomikosProperties68.setConsoleFileCount((int) (short) 10);
        long long73 = atomikosProperties68.getMaxTimeout();
        atomikosProperties68.service = "";
        java.lang.String str76 = atomikosProperties68.logBaseDir;
        boolean boolean77 = atomikosProperties68.threadedTwoPhaseCommit;
        java.lang.String str78 = atomikosProperties68.getService();
        java.lang.String str79 = atomikosProperties68.consoleFileName;
        java.lang.String str80 = atomikosProperties68.service;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery82 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery82.maxRetries = (-1);
        recovery82.setDelay((long) (short) 0);
        long long87 = recovery82.forgetOrphanedLogEntriesDelay;
        recovery82.setDelay((long) 1);
        int int90 = recovery82.getMaxRetries();
        long long91 = recovery82.retryInterval;
        long long92 = recovery82.getDelay();
        recovery82.retryInterval = 10;
        long long95 = recovery82.getRetryInterval();
        boolean boolean96 = properties12.replace((java.lang.Object) str80, (java.lang.Object) 100L, (java.lang.Object) long95);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection48);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNotNull(properties63);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tm.out" + "'", str79, "tm.out");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 86400000L + "'", long87 == 86400000L);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 10000L + "'", long91 == 10000L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1L + "'", long92 == 1L);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 10L + "'", long95 == 10L);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test05938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05938");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        java.util.Properties properties3 = new java.util.Properties(properties0);
        java.lang.String str5 = properties0.getProperty("hi!");
        java.lang.Object obj6 = properties0.clone();
        java.util.Collection<java.lang.Object> objCollection7 = properties0.values();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertNotNull(objCollection7);
    }

    @Test
    public void test05939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05939");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setCheckpointInterval(10000L);
        long long7 = atomikosProperties0.maxTimeout;
        int int8 = atomikosProperties0.maxActives;
        atomikosProperties0.setCheckpointInterval((long) 0);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        int int13 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties20.keys();
        int int26 = properties20.size();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getConsoleFileCount();
        int int31 = atomikosProperties29.maxActives;
        java.lang.String str32 = atomikosProperties29.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        atomikosProperties33.setCheckpointInterval(10000L);
        long long40 = atomikosProperties33.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties29.consoleLogLevel = atomikosLoggingLevel41;
        atomikosProperties0.set(properties20, "tmlog", (java.lang.Object) atomikosLoggingLevel41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        java.lang.String str49 = atomikosProperties44.logBaseName;
        atomikosProperties44.outputDir = "";
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        java.util.Properties properties53 = atomikosProperties44.asProperties();
        long long54 = atomikosProperties44.defaultJtaTimeout;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.logBaseDir = "";
        atomikosProperties55.setConsoleFileCount((int) (short) 10);
        long long60 = atomikosProperties55.getMaxTimeout();
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet62 = properties61.keySet();
        atomikosProperties55.set(properties61, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str66 = atomikosProperties55.logBaseDir;
        java.lang.String str67 = atomikosProperties55.logBaseDir;
        java.lang.String str68 = atomikosProperties55.logBaseDir;
        boolean boolean69 = atomikosProperties55.isEnableLogging();
        long long70 = atomikosProperties55.checkpointInterval;
        atomikosProperties55.setOutputDir("hi!");
        long long73 = atomikosProperties55.maxTimeout;
        java.lang.String str74 = atomikosProperties55.logBaseName;
        java.util.Properties properties75 = atomikosProperties55.asProperties();
        java.lang.Object obj76 = properties20.putIfAbsent((java.lang.Object) atomikosProperties44, (java.lang.Object) properties75);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.logBaseDir = "";
        atomikosProperties77.setConsoleFileCount((int) (short) 10);
        java.lang.String str82 = atomikosProperties77.transactionManagerUniqueName;
        long long83 = atomikosProperties77.getDefaultJtaTimeout();
        long long84 = atomikosProperties77.checkpointInterval;
        atomikosProperties77.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties77.allowSubTransactions = true;
        java.lang.Object obj89 = properties75.get((java.lang.Object) true);
        java.util.Enumeration<?> wildcardEnumeration90 = properties75.propertyNames();
        int int91 = properties75.size();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 300000L + "'", long40 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(objSet62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 500L + "'", long70 == 500L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 300000L + "'", long73 == 300000L);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "tmlog" + "'", str74, "tmlog");
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10000L + "'", long83 == 10000L);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 500L + "'", long84 == 500L);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(wildcardEnumeration90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 20 + "'", int91 == 20);
    }

    @Test
    public void test05940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05940");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        java.lang.String str12 = atomikosProperties9.getService();
        int int13 = atomikosProperties9.getConsoleFileCount();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Collection<java.lang.Object> objCollection16 = properties15.values();
        java.lang.Object obj19 = properties15.setProperty("hi!", "{}");
        java.lang.String str21 = properties15.getProperty("tmlog");
        properties15.clear();
        java.lang.Object obj23 = properties15.clone();
        java.util.Properties properties24 = new java.util.Properties();
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Collection<java.lang.Object> objCollection26 = properties24.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        atomikosProperties27.service = "";
        atomikosProperties27.setTransactionManagerUniqueName("{}");
        boolean boolean39 = properties24.equals((java.lang.Object) "{}");
        boolean boolean40 = properties8.replace((java.lang.Object) atomikosProperties9, obj23, (java.lang.Object) boolean39);
        java.lang.Object obj41 = properties8.clone();
        java.io.Writer writer42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(writer42, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(obj23);
        org.junit.Assert.assertEquals(obj23.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj23), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj23), "{}");
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(obj41);
// flaky:         org.junit.Assert.assertEquals(obj41.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test05941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05941");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.checkpointInterval = 0;
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setSerialJtaTransactions(false);
        long long8 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.recovery;
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertNotNull(recovery9);
    }

    @Test
    public void test05942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05942");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.lang.Object obj11 = properties8.setProperty("{true=10000}", "hi!");
        java.lang.Object obj12 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.logBaseDir = "";
        atomikosProperties13.setConsoleFileCount((int) (short) 10);
        long long18 = atomikosProperties13.getMaxTimeout();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        atomikosProperties13.set(properties19, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str24 = atomikosProperties13.logBaseDir;
        boolean boolean25 = atomikosProperties13.enableLogging;
        int int26 = atomikosProperties13.maxActives;
        boolean boolean27 = atomikosProperties13.isForceShutdownOnVmExit();
        boolean boolean28 = properties8.contains((java.lang.Object) atomikosProperties13);
        java.lang.String str29 = atomikosProperties13.outputDir;
        java.lang.String str30 = atomikosProperties13.getTransactionManagerUniqueName();
        boolean boolean31 = atomikosProperties13.allowSubTransactions;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{{true=10000}=hi!}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{{true=10000}=hi!}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{{true=10000}=hi!}");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 50 + "'", int26 == 50);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test05943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05943");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setDefaultJtaTimeout((-1L));
        long long15 = atomikosProperties12.checkpointInterval;
        boolean boolean16 = atomikosProperties12.forceShutdownOnVmExit;
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        boolean boolean19 = properties1.contains((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.logBaseDir = "";
        atomikosProperties20.setConsoleFileCount((int) (short) 10);
        long long25 = atomikosProperties20.getMaxTimeout();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet27 = properties26.keySet();
        atomikosProperties20.set(properties26, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str31 = atomikosProperties20.logBaseDir;
        java.lang.String str32 = atomikosProperties20.logBaseDir;
        java.lang.String str33 = atomikosProperties20.logBaseDir;
        boolean boolean34 = atomikosProperties20.isEnableLogging();
        boolean boolean35 = atomikosProperties20.forceShutdownOnVmExit;
        boolean boolean36 = properties1.containsValue((java.lang.Object) atomikosProperties20);
        boolean boolean37 = properties1.isEmpty();
        java.util.Properties properties38 = new java.util.Properties();
        java.lang.Object obj40 = properties38.get((java.lang.Object) 0.0d);
        java.lang.Object obj41 = properties38.clone();
        java.lang.String str42 = properties38.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.logBaseDir = "";
        atomikosProperties43.setConsoleFileCount((int) (short) 10);
        atomikosProperties43.setLogBaseDir("{}");
        boolean boolean50 = atomikosProperties43.isSerialJtaTransactions();
        java.lang.Object obj52 = properties38.putIfAbsent((java.lang.Object) boolean50, (java.lang.Object) 10000L);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties38.entrySet();
        java.lang.String str54 = properties38.toString();
        boolean boolean55 = properties1.containsValue((java.lang.Object) str54);
        java.io.OutputStream outputStream56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream56, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 300000L + "'", long25 == 300000L);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{true=10000}" + "'", str54, "{true=10000}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test05944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05944");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        atomikosProperties0.consoleFileLimit = (byte) 100;
        long long10 = atomikosProperties0.checkpointInterval;
        boolean boolean11 = atomikosProperties0.enableLogging;
        atomikosProperties0.setMaxTimeout((long) 50);
        java.lang.String str14 = atomikosProperties0.logBaseDir;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.lang.String str17 = atomikosProperties0.outputDir;
        atomikosProperties0.allowSubTransactions = true;
        atomikosProperties0.serialJtaTransactions = true;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 500L + "'", long10 == 500L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05945");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        atomikosProperties8.setCheckpointInterval(10000L);
        long long15 = atomikosProperties8.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties8.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties6.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel16;
        atomikosProperties0.checkpointInterval = 35;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setLogBaseDir("tmlog");
        boolean boolean26 = atomikosProperties0.enableLogging;
        java.lang.String str27 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 300000L + "'", long15 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test05946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05946");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str10 = atomikosProperties0.logBaseName;
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        long long12 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
    }

    @Test
    public void test05947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05947");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.transactionManagerUniqueName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = atomikosProperties0.getConsoleLogLevel();
        java.lang.String str7 = atomikosProperties0.transactionManagerUniqueName;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str9 = atomikosProperties0.outputDir;
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05948");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.String> strSet8 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        boolean boolean17 = atomikosProperties9.threadedTwoPhaseCommit;
        atomikosProperties9.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getConsoleFileCount();
        int int22 = atomikosProperties20.maxActives;
        atomikosProperties20.setConsoleFileName("");
        atomikosProperties20.transactionManagerUniqueName = "{}";
        atomikosProperties20.setMaxActives(0);
        boolean boolean29 = atomikosProperties20.forceShutdownOnVmExit;
        java.lang.Object obj30 = properties7.put((java.lang.Object) atomikosProperties9, (java.lang.Object) atomikosProperties20);
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.storeToXML(outputStream31, "{com.atomikos.icatch.tmlog=-1}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test05949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05949");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet3 = properties2.keySet();
        properties2.clear();
        boolean boolean5 = properties1.containsValue((java.lang.Object) properties2);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int7 = atomikosProperties6.getConsoleFileCount();
        int int8 = atomikosProperties6.maxActives;
        atomikosProperties6.setEnableLogging(true);
        java.util.Properties properties11 = atomikosProperties6.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.io.Reader reader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test05950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05950");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean18 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}";
        java.util.Properties properties21 = atomikosProperties0.asProperties();
        java.lang.String str23 = properties21.getProperty("tmlog");
        java.util.Properties properties24 = new java.util.Properties(properties21);
        java.util.Enumeration<?> wildcardEnumeration25 = properties24.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.enableLogging = true;
        long long29 = atomikosProperties26.getCheckpointInterval();
        java.lang.String str30 = atomikosProperties26.getService();
        java.lang.String str31 = atomikosProperties26.logBaseDir;
        atomikosProperties26.setEnableLogging(false);
        atomikosProperties26.consoleFileCount = 0;
        long long36 = atomikosProperties26.getMaxTimeout();
        boolean boolean37 = atomikosProperties26.isEnableLogging();
        atomikosProperties26.maxTimeout = ' ';
        java.util.Properties properties40 = atomikosProperties26.asProperties();
        java.lang.String str41 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.logBaseDir = "";
        atomikosProperties44.setConsoleFileCount((int) (short) 10);
        java.lang.String str49 = atomikosProperties44.logBaseName;
        atomikosProperties44.outputDir = "";
        java.util.Properties properties52 = atomikosProperties44.asProperties();
        int int53 = atomikosProperties44.getConsoleFileLimit();
        java.util.Properties properties54 = atomikosProperties44.asProperties();
        long long55 = atomikosProperties44.getCheckpointInterval();
        java.lang.Object obj56 = properties24.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties44);
        java.util.Set<java.lang.Object> objSet57 = properties24.keySet();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(properties21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 500L + "'", long29 == 500L);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 300000L + "'", long36 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(properties40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertNotNull(properties52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(properties54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 500L + "'", long55 == 500L);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
    }

    @Test
    public void test05951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05951");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        recovery0.maxRetries = 0;
        recovery0.forgetOrphanedLogEntriesDelay = 100;
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.retryInterval = '4';
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        long long15 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.setMaxRetries(5);
        recovery0.forgetOrphanedLogEntriesDelay = 5L;
        long long20 = recovery0.delay;
        recovery0.forgetOrphanedLogEntriesDelay = 0L;
        recovery0.forgetOrphanedLogEntriesDelay = 300000L;
        recovery0.setDelay(300000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test05952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05952");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        int int5 = properties0.size();
        java.lang.String str7 = properties0.getProperty("{{}={}}");
        java.util.Collection<java.lang.Object> objCollection8 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getConsoleFileCount();
        int int11 = atomikosProperties9.maxActives;
        atomikosProperties9.setConsoleFileName("");
        atomikosProperties9.transactionManagerUniqueName = "{}";
        java.util.Properties properties16 = atomikosProperties9.asProperties();
        atomikosProperties9.setDefaultJtaTimeout((long) 0);
        atomikosProperties9.setMaxActives(35);
        boolean boolean21 = properties0.contains((java.lang.Object) atomikosProperties9);
        java.util.Properties properties22 = new java.util.Properties(properties0);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Collection<java.lang.Object> objCollection25 = properties23.values();
        int int26 = properties23.size();
        int int27 = properties23.size();
        java.util.Set<java.lang.Object> objSet28 = properties23.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.logBaseDir = "";
        atomikosProperties29.setConsoleFileCount((int) (short) 10);
        long long34 = atomikosProperties29.getMaxTimeout();
        java.util.Properties properties35 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet36 = properties35.keySet();
        atomikosProperties29.set(properties35, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str40 = atomikosProperties29.logBaseDir;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery41.maxRetries = (-1);
        recovery41.setDelay((long) (short) 1);
        long long46 = recovery41.getForgetOrphanedLogEntriesDelay();
        long long47 = recovery41.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj48 = properties23.put((java.lang.Object) atomikosProperties29, (java.lang.Object) long47);
        atomikosProperties29.setForceShutdownOnVmExit(false);
        int int51 = atomikosProperties29.consoleFileLimit;
        atomikosProperties29.checkpointInterval = 19;
        java.lang.Object obj54 = properties22.remove((java.lang.Object) 19);
        int int55 = properties22.size();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objCollection25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 300000L + "'", long34 == 300000L);
        org.junit.Assert.assertNotNull(objSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 86400000L + "'", long46 == 86400000L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 86400000L + "'", long47 == 86400000L);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test05953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05953");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        int int7 = atomikosProperties0.maxActives;
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        long long9 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str10 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.consoleLogLevel;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.logBaseDir = "";
        atomikosProperties12.setConsoleFileCount((int) (short) 10);
        long long17 = atomikosProperties12.getMaxTimeout();
        java.util.Properties properties18 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet19 = properties18.keySet();
        atomikosProperties12.set(properties18, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties18.keys();
        int int24 = properties18.size();
        java.lang.Object obj27 = properties18.setProperty("{true=10000}", "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setDefaultJtaTimeout((-1L));
        long long32 = atomikosProperties29.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int34 = atomikosProperties33.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.logBaseDir = "";
        atomikosProperties35.setConsoleFileCount((int) (short) 10);
        atomikosProperties35.setCheckpointInterval(10000L);
        long long42 = atomikosProperties35.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties35.consoleLogLevel = atomikosLoggingLevel43;
        atomikosProperties33.consoleLogLevel = atomikosLoggingLevel43;
        atomikosProperties29.consoleLogLevel = atomikosLoggingLevel43;
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) 0.0d);
        java.lang.Object obj53 = properties50.clone();
        java.lang.String str54 = properties50.toString();
        boolean boolean57 = properties50.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj58 = properties48.replace((java.lang.Object) 10.0d, (java.lang.Object) properties50);
        java.util.Properties properties59 = new java.util.Properties(properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setDefaultJtaTimeout((-1L));
        int int64 = atomikosProperties61.getConsoleFileLimit();
        java.util.Properties properties65 = atomikosProperties61.asProperties();
        java.util.Properties properties66 = new java.util.Properties(properties65);
        atomikosProperties29.set(properties59, "hi!", (java.lang.Object) properties65);
        atomikosProperties29.setConsoleFileCount((int) '4');
        int int70 = atomikosProperties29.getMaxActives();
        atomikosProperties0.set(properties18, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1, 0=INFO}", (java.lang.Object) int70);
        java.util.Collection<java.lang.Object> objCollection72 = properties18.values();
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties18.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties18.elements();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(atomikosLoggingLevel11);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertNotNull(objSet19);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 500L + "'", long32 == 500L);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 300000L + "'", long42 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{}" + "'", str54, "{}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertNotNull(objCollection72);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objEnumeration74);
    }

    @Test
    public void test05954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05954");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        long long8 = atomikosProperties0.checkpointInterval;
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.recovery;
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test05955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05955");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        atomikosProperties0.outputDir = "";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = new java.util.Properties();
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Collection<java.lang.Object> objCollection12 = properties10.values();
        int int13 = properties10.size();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties10.elements();
        java.util.Properties properties15 = new java.util.Properties(properties10);
        boolean boolean16 = properties8.containsKey((java.lang.Object) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.maxRetries = (-1);
        recovery17.setDelay((long) (short) 0);
        recovery17.maxRetries = 0;
        recovery17.setMaxRetries((int) '#');
        recovery17.setMaxRetries((int) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery28.maxRetries = (-1);
        recovery28.setDelay((long) (short) 0);
        long long33 = recovery28.forgetOrphanedLogEntriesDelay;
        recovery28.retryInterval = 500L;
        long long36 = recovery28.delay;
        recovery28.setRetryInterval(10000L);
        java.lang.Object obj39 = properties10.put((java.lang.Object) recovery17, (java.lang.Object) 10000L);
        int int40 = recovery17.maxRetries;
        recovery17.forgetOrphanedLogEntriesDelay = 50;
        long long43 = recovery17.delay;
        recovery17.setRetryInterval((long) 18);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objCollection12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 86400000L + "'", long33 == 86400000L);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 35 + "'", int40 == 35);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
    }

    @Test
    public void test05956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05956");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.enableLogging = true;
        long long6 = atomikosProperties3.getCheckpointInterval();
        boolean boolean8 = properties1.remove((java.lang.Object) long6, (java.lang.Object) (byte) 100);
        boolean boolean10 = properties1.equals((java.lang.Object) (short) 1);
        java.util.Properties properties11 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Collection<java.lang.Object> objCollection13 = properties1.values();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties1.keys();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 500L + "'", long6 == 500L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objCollection13);
        org.junit.Assert.assertNotNull(objEnumeration14);
    }

    @Test
    public void test05957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05957");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj13 = properties6.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setDefaultJtaTimeout((-1L));
        java.util.Properties properties17 = new java.util.Properties();
        java.lang.Object obj19 = properties17.get((java.lang.Object) 0.0d);
        java.lang.Object obj20 = properties17.clone();
        boolean boolean22 = properties6.replace((java.lang.Object) (-1L), obj20, (java.lang.Object) 100.0d);
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Properties properties24 = new java.util.Properties(properties23);
        properties24.clear();
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties24.elements();
        java.lang.String str29 = properties24.getProperty("");
        java.util.Properties properties30 = new java.util.Properties(properties24);
        java.util.Set<java.lang.Object> objSet31 = properties24.keySet();
        java.util.Collection<java.lang.Object> objCollection32 = properties24.values();
        java.util.Properties properties33 = new java.util.Properties();
        java.lang.Object obj35 = properties33.get((java.lang.Object) 0.0d);
        java.lang.Object obj36 = properties33.clone();
        java.lang.String str37 = properties33.toString();
        boolean boolean40 = properties33.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj41 = null;
        boolean boolean42 = properties33.equals(obj41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.enableLogging = true;
        long long46 = atomikosProperties43.getCheckpointInterval();
        java.lang.String str47 = atomikosProperties43.getService();
        java.lang.String str48 = atomikosProperties43.logBaseDir;
        atomikosProperties43.setEnableLogging(false);
        boolean boolean51 = atomikosProperties43.isEnableLogging();
        atomikosProperties43.setConsoleFileCount(10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties55 = new java.util.Properties();
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Collection<java.lang.Object> objCollection57 = properties56.values();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Collection<java.lang.Object> objCollection60 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties58.keys();
        boolean boolean62 = properties56.contains((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.logBaseDir = "";
        atomikosProperties64.setConsoleFileCount((int) (short) 10);
        java.lang.String str69 = atomikosProperties64.logBaseName;
        atomikosProperties64.outputDir = "";
        java.util.Properties properties72 = atomikosProperties64.asProperties();
        java.util.Properties properties73 = atomikosProperties64.asProperties();
        boolean boolean74 = properties56.remove((java.lang.Object) (byte) 10, (java.lang.Object) atomikosProperties64);
        java.lang.Object obj75 = properties33.getOrDefault((java.lang.Object) atomikosProperties43, (java.lang.Object) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.logBaseDir = "";
        atomikosProperties76.setConsoleFileCount((int) (short) 10);
        atomikosProperties76.setLogBaseDir("{}");
        boolean boolean83 = atomikosProperties76.isSerialJtaTransactions();
        boolean boolean84 = atomikosProperties76.allowSubTransactions;
        atomikosProperties76.consoleFileLimit = 50;
        atomikosProperties76.maxActives = (-1);
        java.lang.Object obj89 = properties24.replace(obj75, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery92 = atomikosProperties76.getRecovery();
        boolean boolean93 = atomikosProperties76.serialJtaTransactions;
        atomikosProperties76.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objSet31);
        org.junit.Assert.assertNotNull(objCollection32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "{}" + "'", str37, "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 500L + "'", long46 == 500L);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection57);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(obj75);
        org.junit.Assert.assertEquals(obj75.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj75), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj75), "{}");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(recovery92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test05958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05958");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Set<java.lang.Object> objSet10 = properties0.keySet();
        java.util.Properties properties11 = new java.util.Properties(properties0);
        java.util.Properties properties12 = new java.util.Properties();
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Collection<java.lang.Object> objCollection14 = properties13.values();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection17 = properties15.values();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.keys();
        boolean boolean19 = properties13.contains((java.lang.Object) properties15);
        boolean boolean20 = properties13.isEmpty();
        boolean boolean21 = properties13.isEmpty();
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        boolean boolean25 = properties23.isEmpty();
        java.util.Set<java.lang.String> strSet26 = properties23.stringPropertyNames();
        java.lang.String str28 = properties23.getProperty("");
        java.util.Properties properties29 = new java.util.Properties();
        java.lang.Object obj31 = properties29.get((java.lang.Object) 0.0d);
        java.lang.Object obj32 = properties29.clone();
        java.lang.String str33 = properties29.toString();
        boolean boolean36 = properties29.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj37 = null;
        boolean boolean38 = properties29.equals(obj37);
        java.util.Set<java.lang.Object> objSet39 = properties29.keySet();
        boolean boolean40 = properties23.contains((java.lang.Object) properties29);
        java.lang.Object obj41 = properties13.remove((java.lang.Object) properties29);
        java.util.Properties properties42 = new java.util.Properties(properties29);
        java.util.Properties properties43 = new java.util.Properties(properties29);
        java.util.Properties properties44 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.logBaseDir = "";
        boolean boolean48 = atomikosProperties45.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = atomikosProperties45.getRecovery();
        int int50 = recovery49.getMaxRetries();
        int int51 = recovery49.maxRetries;
        recovery49.delay = '4';
        java.lang.Object obj54 = properties0.getOrDefault((java.lang.Object) properties44, (java.lang.Object) recovery49);
        java.util.Set<java.lang.Object> objSet55 = properties0.keySet();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertNotNull(obj32);
        org.junit.Assert.assertEquals(obj32.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj32), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj32), "{}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{}" + "'", str33, "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(recovery49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertNotNull(objSet55);
    }

    @Test
    public void test05959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05959");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.logBaseDir = "";
        atomikosProperties4.setConsoleFileCount((int) (short) 10);
        atomikosProperties4.setCheckpointInterval(10000L);
        long long11 = atomikosProperties4.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel12;
        java.lang.String str14 = atomikosProperties0.consoleFileName;
        atomikosProperties0.forceShutdownOnVmExit = false;
        boolean boolean17 = atomikosProperties0.threadedTwoPhaseCommit;
        atomikosProperties0.consoleFileLimit = (short) 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05960");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.Object obj6 = properties0.setProperty("{}", "{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.logBaseDir = "";
        atomikosProperties7.setConsoleFileCount((int) (short) 10);
        java.lang.String str12 = atomikosProperties7.logBaseName;
        atomikosProperties7.outputDir = "";
        java.util.Properties properties15 = atomikosProperties7.asProperties();
        java.util.Set<java.lang.String> strSet16 = properties15.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties15.elements();
        java.util.Set<java.lang.Object> objSet18 = properties15.keySet();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Collection<java.lang.Object> objCollection20 = properties15.values();
        java.lang.Object obj21 = properties15.clone();
        boolean boolean22 = properties15.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration23 = properties15.propertyNames();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNotNull(objCollection20);
        org.junit.Assert.assertNotNull(obj21);
// flaky:         org.junit.Assert.assertEquals(obj21.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj21), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj21), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration23);
    }

    @Test
    public void test05961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05961");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties1.values();
        boolean boolean3 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long5 = atomikosProperties4.defaultJtaTimeout;
        java.lang.String str6 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.allowSubTransactions = true;
        boolean boolean9 = atomikosProperties4.enableLogging;
        boolean boolean10 = atomikosProperties4.threadedTwoPhaseCommit;
        java.lang.Object obj11 = properties1.remove((java.lang.Object) boolean10);
        java.util.Set<java.lang.String> strSet12 = properties1.stringPropertyNames();
        java.util.Set<java.lang.Object> objSet13 = properties1.keySet();
        java.lang.Class<?> wildcardClass14 = objSet13.getClass();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test05962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05962");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setEnableLogging(true);
        boolean boolean5 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int6 = atomikosProperties0.consoleFileCount;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        recovery7.retryInterval = 18;
        long long10 = recovery7.forgetOrphanedLogEntriesDelay;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 86400000L + "'", long10 == 86400000L);
    }

    @Test
    public void test05963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05963");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        int int4 = properties0.size();
        int int5 = properties0.size();
        java.lang.String str7 = properties0.getProperty("{{}={}}");
        java.lang.String str8 = properties0.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties15.keys();
        int int21 = properties15.size();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        long long28 = atomikosProperties23.getMaxTimeout();
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet30 = properties29.keySet();
        atomikosProperties23.set(properties29, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj36 = properties29.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((-1L));
        java.util.Properties properties40 = new java.util.Properties();
        java.lang.Object obj42 = properties40.get((java.lang.Object) 0.0d);
        java.lang.Object obj43 = properties40.clone();
        boolean boolean45 = properties29.replace((java.lang.Object) (-1L), obj43, (java.lang.Object) 100.0d);
        java.util.Properties properties46 = new java.util.Properties();
        java.util.Properties properties47 = new java.util.Properties(properties46);
        properties47.clear();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.elements();
        java.util.Properties properties51 = new java.util.Properties(properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.logBaseDir = "";
        atomikosProperties52.setConsoleFileCount((int) (short) 10);
        long long57 = atomikosProperties52.getMaxTimeout();
        java.util.Properties properties58 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet59 = properties58.keySet();
        atomikosProperties52.set(properties58, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str63 = atomikosProperties52.logBaseDir;
        boolean boolean64 = atomikosProperties52.enableLogging;
        int int65 = atomikosProperties52.maxActives;
        boolean boolean66 = atomikosProperties52.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.logBaseDir = "";
        atomikosProperties67.setConsoleFileCount((int) (short) 10);
        atomikosProperties67.setLogBaseDir("{}");
        java.lang.String str74 = atomikosProperties67.getOutputDir();
        atomikosProperties67.maxActives = 35;
        java.lang.Object obj77 = properties47.getOrDefault((java.lang.Object) boolean66, (java.lang.Object) 35);
        java.lang.Object obj80 = properties47.setProperty("tm.out", "{com.atomikos.icatch.hi!=-1.0}");
        java.util.Properties properties81 = new java.util.Properties(properties47);
        java.util.Enumeration<?> wildcardEnumeration82 = properties47.propertyNames();
        java.lang.Class<?> wildcardClass83 = wildcardEnumeration82.getClass();
        boolean boolean84 = properties0.remove((java.lang.Object) properties15, (java.lang.Object) wildcardEnumeration82);
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertNotNull(objSet30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 300000L + "'", long57 == 300000L);
        org.junit.Assert.assertNotNull(objSet59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertEquals("'" + obj77 + "' != '" + 35 + "'", obj77, 35);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(wildcardEnumeration82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test05964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05964");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        java.lang.String str5 = atomikosProperties0.logBaseName;
        java.lang.String str6 = atomikosProperties0.logBaseDir;
        long long7 = atomikosProperties0.defaultJtaTimeout;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.logBaseDir = "";
        atomikosProperties9.setConsoleFileCount((int) (short) 10);
        long long14 = atomikosProperties9.getMaxTimeout();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        atomikosProperties9.set(properties15, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj22 = properties15.setProperty("", "hi!");
        java.util.Set<java.lang.String> strSet23 = properties15.stringPropertyNames();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.logBaseDir = "";
        atomikosProperties25.setConsoleFileCount((int) (short) 10);
        atomikosProperties25.setCheckpointInterval(10000L);
        long long32 = atomikosProperties25.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties25.consoleLogLevel = atomikosLoggingLevel33;
        atomikosProperties25.consoleFileLimit = (byte) 1;
        boolean boolean37 = atomikosProperties25.isSerialJtaTransactions();
        java.lang.String str38 = atomikosProperties25.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.logBaseDir = "";
        atomikosProperties39.setConsoleFileCount((int) (short) 10);
        java.lang.String str44 = atomikosProperties39.logBaseName;
        java.lang.String str45 = atomikosProperties39.logBaseDir;
        java.lang.String str46 = atomikosProperties39.getOutputDir();
        java.util.Properties properties47 = atomikosProperties39.asProperties();
        java.util.Collection<java.lang.Object> objCollection48 = properties47.values();
        java.lang.String str49 = properties47.toString();
        java.lang.Object obj50 = properties15.put((java.lang.Object) str38, (java.lang.Object) properties47);
        java.util.Properties properties51 = new java.util.Properties();
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Collection<java.lang.Object> objCollection53 = properties52.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.enableLogging = true;
        long long57 = atomikosProperties54.getCheckpointInterval();
        boolean boolean59 = properties52.remove((java.lang.Object) long57, (java.lang.Object) (byte) 100);
        boolean boolean61 = properties52.equals((java.lang.Object) (short) 1);
        java.lang.Object obj64 = properties52.setProperty("{}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties52.keys();
        boolean boolean66 = properties47.contains((java.lang.Object) objEnumeration65);
        java.util.Properties properties67 = new java.util.Properties(properties47);
        java.util.Properties properties68 = new java.util.Properties();
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Collection<java.lang.Object> objCollection70 = properties68.values();
        int int71 = properties68.size();
        boolean boolean72 = properties68.isEmpty();
        java.util.Properties properties73 = new java.util.Properties(properties68);
        java.util.Properties properties74 = new java.util.Properties();
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Properties properties77 = new java.util.Properties();
        java.lang.Object obj79 = properties77.get((java.lang.Object) 0.0d);
        java.lang.Object obj80 = properties77.clone();
        java.lang.String str81 = properties77.toString();
        boolean boolean84 = properties77.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj85 = properties75.replace((java.lang.Object) 10.0d, (java.lang.Object) properties77);
        java.lang.String str86 = properties77.toString();
        java.util.Properties properties87 = new java.util.Properties(properties77);
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Enumeration<?> wildcardEnumeration89 = properties77.propertyNames();
        java.lang.Object obj91 = properties47.getOrDefault((java.lang.Object) properties77, (java.lang.Object) 21L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 300000L + "'", long32 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(properties47);
        org.junit.Assert.assertNotNull(objCollection48);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str49, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + obj50 + "' != '" + "hi!" + "'", obj50, "hi!");
        org.junit.Assert.assertNotNull(objCollection53);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objCollection70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertEquals(obj80.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{}");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "{}" + "'", str81, "{}");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "{}" + "'", str86, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration89);
        org.junit.Assert.assertEquals("'" + obj91 + "' != '" + 21L + "'", obj91, 21L);
    }

    @Test
    public void test05965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05965");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        int int3 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties4 = atomikosProperties0.asProperties();
        boolean boolean5 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean6 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setOutputDir("tmlog");
        long long9 = atomikosProperties0.maxTimeout;
        java.lang.String str10 = atomikosProperties0.service;
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        long long13 = recovery12.retryInterval;
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(properties4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test05966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05966");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileName("hi!");
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setService("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test05967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05967");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        boolean boolean8 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tmlog=tmlog, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=10, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=-1}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05968");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.outputDir = "{}";
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str6 = atomikosProperties0.service;
        atomikosProperties0.transactionManagerUniqueName = "{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=10, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.service=tmlog, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}";
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
    }

    @Test
    public void test05969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05969");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.outputDir;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int18 = atomikosProperties0.maxActives;
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str21 = atomikosProperties0.transactionManagerUniqueName;
        java.lang.String str22 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test05970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05970");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.outputDir;
        atomikosProperties0.setCheckpointInterval(50L);
        int int11 = atomikosProperties0.maxActives;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.getConsoleLogLevel();
        long long13 = atomikosProperties0.maxTimeout;
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.maxTimeout = (byte) 0;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
    }

    @Test
    public void test05971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05971");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        boolean boolean13 = atomikosProperties0.forceShutdownOnVmExit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.enableLogging = true;
        long long17 = atomikosProperties14.getCheckpointInterval();
        java.lang.String str18 = atomikosProperties14.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties14.recovery;
        atomikosProperties14.checkpointInterval = 'a';
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties14.getConsoleLogLevel();
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel22;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 500L + "'", long17 == 500L);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(recovery19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05972");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.enableLogging;
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Set<java.lang.Object> objSet10 = properties8.keySet();
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.io.Reader reader12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties11.load(reader12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objSet10);
    }

    @Test
    public void test05973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05973");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Collection<java.lang.Object> objCollection8 = properties6.values();
        int int9 = properties6.size();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties6.elements();
        boolean boolean11 = properties5.equals((java.lang.Object) objEnumeration10);
        java.util.Set<java.lang.Object> objSet12 = properties5.keySet();
        java.util.Properties properties13 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties5.keys();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Collection<java.lang.Object> objCollection17 = properties15.values();
        int int18 = properties15.size();
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties15.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Collection<java.lang.Object> objCollection24 = properties23.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.enableLogging = true;
        long long28 = atomikosProperties25.getCheckpointInterval();
        boolean boolean30 = properties23.remove((java.lang.Object) long28, (java.lang.Object) (byte) 100);
        java.lang.String str31 = properties23.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.logBaseDir = "";
        atomikosProperties32.setConsoleFileCount((int) (short) 10);
        long long37 = atomikosProperties32.getMaxTimeout();
        java.util.Properties properties38 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet39 = properties38.keySet();
        atomikosProperties32.set(properties38, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties43 = new java.util.Properties();
        java.lang.Object obj45 = properties43.get((java.lang.Object) 0.0d);
        java.lang.Object obj46 = properties43.clone();
        java.lang.String str47 = properties43.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.logBaseDir = "";
        atomikosProperties48.setConsoleFileCount((int) (short) 10);
        long long53 = atomikosProperties48.getMaxTimeout();
        java.util.Properties properties54 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet55 = properties54.keySet();
        atomikosProperties48.set(properties54, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj61 = properties54.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setDefaultJtaTimeout((-1L));
        java.util.Properties properties65 = new java.util.Properties();
        java.lang.Object obj67 = properties65.get((java.lang.Object) 0.0d);
        java.lang.Object obj68 = properties65.clone();
        boolean boolean70 = properties54.replace((java.lang.Object) (-1L), obj68, (java.lang.Object) 100.0d);
        java.util.Properties properties71 = new java.util.Properties();
        java.util.Properties properties72 = new java.util.Properties(properties71);
        properties72.clear();
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.logBaseDir = "";
        atomikosProperties75.setConsoleFileCount((int) (short) 10);
        long long80 = atomikosProperties75.getMaxTimeout();
        java.util.Properties properties81 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet82 = properties81.keySet();
        atomikosProperties75.set(properties81, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str86 = atomikosProperties75.logBaseDir;
        java.lang.String str87 = atomikosProperties75.logBaseDir;
        java.util.Properties properties88 = atomikosProperties75.asProperties();
        java.lang.Object obj89 = properties43.replace((java.lang.Object) properties72, (java.lang.Object) atomikosProperties75);
        boolean boolean90 = properties38.contains((java.lang.Object) atomikosProperties75);
        boolean boolean91 = properties23.containsValue((java.lang.Object) properties38);
        boolean boolean92 = properties15.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel21, (java.lang.Object) boolean91);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet93 = properties15.entrySet();
        java.lang.String str95 = properties15.getProperty("");
        boolean boolean96 = properties5.containsKey((java.lang.Object) properties15);
        boolean boolean97 = properties5.isEmpty();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objCollection17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 500L + "'", long28 == 500L);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 300000L + "'", long37 == 300000L);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertEquals(obj46.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj46), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj46), "{}");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "{}" + "'", str47, "{}");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 300000L + "'", long53 == 300000L);
        org.junit.Assert.assertNotNull(objSet55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(obj68);
        org.junit.Assert.assertEquals(obj68.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj68), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj68), "{}");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 300000L + "'", long80 == 300000L);
        org.junit.Assert.assertNotNull(objSet82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(properties88);
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objEntrySet93);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test05974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05974");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        atomikosProperties0.outputDir = "hi!";
        atomikosProperties0.maxActives = ' ';
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test05975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05975");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Collection<java.lang.Object> objCollection2 = properties0.values();
        int int3 = properties0.size();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties0.elements();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel6 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN;
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Collection<java.lang.Object> objCollection9 = properties8.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.enableLogging = true;
        long long13 = atomikosProperties10.getCheckpointInterval();
        boolean boolean15 = properties8.remove((java.lang.Object) long13, (java.lang.Object) (byte) 100);
        java.lang.String str16 = properties8.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.logBaseDir = "";
        atomikosProperties17.setConsoleFileCount((int) (short) 10);
        long long22 = atomikosProperties17.getMaxTimeout();
        java.util.Properties properties23 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet24 = properties23.keySet();
        atomikosProperties17.set(properties23, "hi!", (java.lang.Object) (-1.0f));
        java.util.Properties properties28 = new java.util.Properties();
        java.lang.Object obj30 = properties28.get((java.lang.Object) 0.0d);
        java.lang.Object obj31 = properties28.clone();
        java.lang.String str32 = properties28.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.logBaseDir = "";
        atomikosProperties33.setConsoleFileCount((int) (short) 10);
        long long38 = atomikosProperties33.getMaxTimeout();
        java.util.Properties properties39 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet40 = properties39.keySet();
        atomikosProperties33.set(properties39, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj46 = properties39.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setDefaultJtaTimeout((-1L));
        java.util.Properties properties50 = new java.util.Properties();
        java.lang.Object obj52 = properties50.get((java.lang.Object) 0.0d);
        java.lang.Object obj53 = properties50.clone();
        boolean boolean55 = properties39.replace((java.lang.Object) (-1L), obj53, (java.lang.Object) 100.0d);
        java.util.Properties properties56 = new java.util.Properties();
        java.util.Properties properties57 = new java.util.Properties(properties56);
        properties57.clear();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.logBaseDir = "";
        atomikosProperties60.setConsoleFileCount((int) (short) 10);
        long long65 = atomikosProperties60.getMaxTimeout();
        java.util.Properties properties66 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet67 = properties66.keySet();
        atomikosProperties60.set(properties66, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str71 = atomikosProperties60.logBaseDir;
        java.lang.String str72 = atomikosProperties60.logBaseDir;
        java.util.Properties properties73 = atomikosProperties60.asProperties();
        java.lang.Object obj74 = properties28.replace((java.lang.Object) properties57, (java.lang.Object) atomikosProperties60);
        boolean boolean75 = properties23.contains((java.lang.Object) atomikosProperties60);
        boolean boolean76 = properties8.containsValue((java.lang.Object) properties23);
        boolean boolean77 = properties0.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel6, (java.lang.Object) boolean76);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties0.entrySet();
        int int79 = properties0.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.logBaseDir = "";
        boolean boolean83 = atomikosProperties80.isForceShutdownOnVmExit();
        int int84 = atomikosProperties80.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel85 = atomikosProperties80.getConsoleLogLevel();
        atomikosProperties80.consoleFileLimit = ' ';
        atomikosProperties80.setAllowSubTransactions(false);
        boolean boolean90 = properties0.equals((java.lang.Object) false);
        java.util.Set<java.lang.String> strSet91 = properties0.stringPropertyNames();
        java.lang.Object obj94 = properties0.setProperty("{tmlog={com.atomikos.icatch.hi!=-1.0}}", "{com.atomikos.icatch.hi!=-1.0}");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet95 = properties0.entrySet();
        org.junit.Assert.assertNotNull(objCollection2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel6 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel6.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(obj31);
        org.junit.Assert.assertEquals(obj31.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj31), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj31), "{}");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(objSet40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(properties73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel85 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel85.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(objEntrySet95);
    }

    @Test
    public void test05976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05976");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        boolean boolean7 = properties0.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj8 = null;
        boolean boolean9 = properties0.equals(obj8);
        java.util.Properties properties10 = new java.util.Properties();
        java.lang.Object obj12 = properties10.get((java.lang.Object) 0.0d);
        java.lang.Object obj13 = properties10.clone();
        java.lang.Object obj16 = properties10.setProperty("{}", "{}");
        int int17 = properties10.size();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.logBaseDir = "";
        boolean boolean22 = atomikosProperties19.isForceShutdownOnVmExit();
        atomikosProperties19.allowSubTransactions = false;
        boolean boolean25 = atomikosProperties19.serialJtaTransactions;
        boolean boolean26 = properties0.containsKey((java.lang.Object) boolean25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.logBaseDir = "";
        atomikosProperties27.setConsoleFileCount((int) (short) 10);
        atomikosProperties27.setLogBaseDir("{}");
        java.util.Properties properties34 = atomikosProperties27.asProperties();
        java.util.Set<java.lang.String> strSet35 = properties34.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int37 = atomikosProperties36.getConsoleFileCount();
        int int38 = atomikosProperties36.maxActives;
        atomikosProperties36.setConsoleFileName("");
        atomikosProperties36.transactionManagerUniqueName = "{}";
        java.util.Properties properties43 = atomikosProperties36.asProperties();
        boolean boolean44 = atomikosProperties36.threadedTwoPhaseCommit;
        atomikosProperties36.enableLogging = true;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int48 = atomikosProperties47.getConsoleFileCount();
        int int49 = atomikosProperties47.maxActives;
        atomikosProperties47.setConsoleFileName("");
        atomikosProperties47.transactionManagerUniqueName = "{}";
        atomikosProperties47.setMaxActives(0);
        boolean boolean56 = atomikosProperties47.forceShutdownOnVmExit;
        java.lang.Object obj57 = properties34.put((java.lang.Object) atomikosProperties36, (java.lang.Object) atomikosProperties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.logBaseDir = "";
        boolean boolean61 = atomikosProperties58.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = atomikosProperties58.getRecovery();
        boolean boolean63 = properties34.contains((java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int65 = atomikosProperties64.getConsoleFileCount();
        int int66 = atomikosProperties64.maxActives;
        int int67 = atomikosProperties64.getMaxActives();
        boolean boolean68 = properties0.remove((java.lang.Object) atomikosProperties58, (java.lang.Object) int67);
        int int69 = atomikosProperties58.getConsoleFileLimit();
        java.lang.String str70 = atomikosProperties58.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = atomikosProperties58.recovery;
        recovery71.maxRetries = 5;
        long long74 = recovery71.getDelay();
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(properties34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(recovery62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertNotNull(recovery71);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 10000L + "'", long74 == 10000L);
    }

    @Test
    public void test05977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05977");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.logBaseDir = "{}";
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = properties8.size();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(outputStream10, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}={com.atomikos.icatch.hi!=-1.0, =hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 18 + "'", int9 == 18);
    }

    @Test
    public void test05978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05978");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.enableLogging = true;
        int int3 = atomikosProperties0.consoleFileLimit;
        atomikosProperties0.logBaseName = "hi!";
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str7 = atomikosProperties0.service;
        boolean boolean8 = atomikosProperties0.enableLogging;
        java.lang.String str9 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.consoleLogLevel;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 500L + "'", long13 == 500L);
    }

    @Test
    public void test05979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05979");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet1 = properties0.keySet();
        properties0.clear();
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        properties3.clear();
        java.util.Properties properties12 = new java.util.Properties(properties3);
        java.lang.Object obj13 = properties0.get((java.lang.Object) properties3);
        properties3.clear();
        properties3.clear();
        org.junit.Assert.assertNotNull(objSet1);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test05980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05980");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = new java.util.Properties();
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Collection<java.lang.Object> objCollection4 = properties2.values();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties2.keys();
        java.lang.Object obj7 = properties0.put((java.lang.Object) objEnumeration5, (java.lang.Object) (-1.0d));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.logBaseDir = "";
        atomikosProperties8.setConsoleFileCount((int) (short) 10);
        long long13 = atomikosProperties8.getMaxTimeout();
        java.util.Properties properties14 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet15 = properties14.keySet();
        atomikosProperties8.set(properties14, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str19 = atomikosProperties8.service;
        atomikosProperties8.setSerialJtaTransactions(false);
        int int22 = atomikosProperties8.consoleFileLimit;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.logBaseDir = "";
        atomikosProperties23.setConsoleFileCount((int) (short) 10);
        java.lang.String str28 = atomikosProperties23.logBaseName;
        java.lang.String str29 = atomikosProperties23.logBaseDir;
        int int30 = atomikosProperties23.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel31 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel31);
        long long33 = atomikosProperties8.checkpointInterval;
        boolean boolean34 = properties0.contains((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setOutputDir("");
        atomikosProperties8.transactionManagerUniqueName = "{hi!={}}";
        java.lang.String str39 = atomikosProperties8.getOutputDir();
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel31 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel31.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 500L + "'", long33 == 500L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test05981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05981");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties3 = new java.util.Properties();
        java.lang.Object obj5 = properties3.get((java.lang.Object) 0.0d);
        java.lang.Object obj6 = properties3.clone();
        java.lang.String str7 = properties3.toString();
        boolean boolean10 = properties3.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj11 = properties1.replace((java.lang.Object) 10.0d, (java.lang.Object) properties3);
        java.lang.String str12 = properties3.toString();
        java.util.Properties properties13 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.logBaseDir = "";
        atomikosProperties14.setConsoleFileCount((int) (short) 10);
        long long19 = atomikosProperties14.getMaxTimeout();
        java.util.Properties properties20 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet21 = properties20.keySet();
        atomikosProperties14.set(properties20, "hi!", (java.lang.Object) (-1.0f));
        java.lang.Object obj27 = properties20.setProperty("", "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setDefaultJtaTimeout((-1L));
        java.util.Properties properties31 = new java.util.Properties();
        java.lang.Object obj33 = properties31.get((java.lang.Object) 0.0d);
        java.lang.Object obj34 = properties31.clone();
        boolean boolean36 = properties20.replace((java.lang.Object) (-1L), obj34, (java.lang.Object) 100.0d);
        java.util.Properties properties37 = new java.util.Properties();
        java.util.Properties properties38 = new java.util.Properties(properties37);
        properties38.clear();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        boolean boolean41 = properties3.equals((java.lang.Object) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = null;
        atomikosProperties42.consoleLogLevel = atomikosLoggingLevel45;
        atomikosProperties42.outputDir = "";
        int int49 = atomikosProperties42.maxActives;
        boolean boolean50 = atomikosProperties42.isThreadedTwoPhaseCommit();
        atomikosProperties42.consoleFileLimit = (short) 10;
        java.util.Properties properties53 = atomikosProperties42.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.enableLogging = true;
        long long57 = atomikosProperties54.getCheckpointInterval();
        java.lang.String str58 = atomikosProperties54.getOutputDir();
        atomikosProperties54.defaultJtaTimeout = 'a';
        java.lang.Object obj61 = properties20.replace((java.lang.Object) properties53, (java.lang.Object) 'a');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.logBaseDir = "";
        atomikosProperties62.setConsoleFileCount((int) (short) 10);
        atomikosProperties62.setService("");
        atomikosProperties62.service = "tmlog";
        atomikosProperties62.setService("tmlog");
        atomikosProperties62.setService("{}");
        atomikosProperties62.enableLogging = true;
        boolean boolean77 = properties20.containsValue((java.lang.Object) atomikosProperties62);
        java.util.Properties properties78 = new java.util.Properties(properties20);
        java.util.Properties properties79 = new java.util.Properties(properties78);
        org.junit.Assert.assertNull(obj5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(obj34);
        org.junit.Assert.assertEquals(obj34.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj34), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj34), "{}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 500L + "'", long57 == 500L);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test05982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05982");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.retryInterval = 10000L;
        recovery0.setMaxRetries((int) 'a');
        recovery0.maxRetries = 'a';
        recovery0.retryInterval = (byte) -1;
        long long11 = recovery0.getRetryInterval();
        long long12 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test05983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05983");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.consoleFileName = "hi!";
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.consoleLogLevel;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05984");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        java.lang.String str16 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setLogBaseName("tm.out");
        atomikosProperties0.setDefaultJtaTimeout(500L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
    }

    @Test
    public void test05985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05985");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        int int2 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.consoleFileCount = 'a';
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.threadedTwoPhaseCommit = true;
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test05986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05986");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("hi!");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean12 = atomikosProperties0.forceShutdownOnVmExit;
        boolean boolean13 = atomikosProperties0.enableLogging;
        java.lang.String str14 = atomikosProperties0.logBaseName;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = atomikosProperties0.recovery;
        atomikosProperties0.threadedTwoPhaseCommit = false;
        int int18 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(recovery15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }

    @Test
    public void test05987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05987");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        boolean boolean9 = atomikosProperties0.threadedTwoPhaseCommit;
        java.lang.String str10 = atomikosProperties0.getService();
        java.lang.String str11 = atomikosProperties0.consoleFileName;
        boolean boolean12 = atomikosProperties0.serialJtaTransactions;
        atomikosProperties0.service = "{com.atomikos.icatch.hi!=-1.0}";
        int int15 = atomikosProperties0.getConsoleFileCount();
        boolean boolean16 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.allowSubTransactions = true;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test05988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05988");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setAllowSubTransactions(true);
        boolean boolean17 = atomikosProperties0.isEnableLogging();
        boolean boolean18 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.hi!=-1.0}");
        java.lang.String str21 = atomikosProperties0.logBaseDir;
        java.util.Properties properties22 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.storeToXML(outputStream23, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(properties22);
    }

    @Test
    public void test05989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05989");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        boolean boolean12 = atomikosProperties0.enableLogging;
        int int13 = atomikosProperties0.maxActives;
        atomikosProperties0.consoleFileLimit = 100;
        java.lang.String str16 = atomikosProperties0.getLogBaseName();
        java.lang.String str17 = atomikosProperties0.consoleFileName;
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tm.out" + "'", str17, "tm.out");
    }

    @Test
    public void test05990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05990");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        long long3 = atomikosProperties0.checkpointInterval;
        boolean boolean4 = atomikosProperties0.forceShutdownOnVmExit;
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str9 = atomikosProperties0.getService();
        atomikosProperties0.threadedTwoPhaseCommit = false;
        atomikosProperties0.setMaxActives(50);
        boolean boolean14 = atomikosProperties0.serialJtaTransactions;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test05991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05991");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = null;
        atomikosProperties0.consoleLogLevel = atomikosLoggingLevel3;
        atomikosProperties0.outputDir = "";
        atomikosProperties0.maxActives = (short) 100;
        atomikosProperties0.maxActives = 100;
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        int int12 = properties11.size();
        java.util.Properties properties13 = new java.util.Properties();
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Properties properties16 = new java.util.Properties();
        java.lang.Object obj18 = properties16.get((java.lang.Object) 0.0d);
        java.lang.Object obj19 = properties16.clone();
        java.lang.String str20 = properties16.toString();
        boolean boolean23 = properties16.remove((java.lang.Object) 0, (java.lang.Object) 'a');
        java.lang.Object obj24 = properties14.replace((java.lang.Object) 10.0d, (java.lang.Object) properties16);
        java.util.Properties properties25 = new java.util.Properties(properties16);
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int29 = atomikosProperties28.getConsoleFileCount();
        int int30 = atomikosProperties28.maxActives;
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getOutputDir();
        int int34 = atomikosProperties28.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = atomikosProperties28.getRecovery();
        boolean boolean36 = properties25.containsKey((java.lang.Object) recovery35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel40 = null;
        atomikosProperties37.consoleLogLevel = atomikosLoggingLevel40;
        atomikosProperties37.outputDir = "";
        int int44 = atomikosProperties37.maxActives;
        boolean boolean45 = atomikosProperties37.isThreadedTwoPhaseCommit();
        java.util.Properties properties46 = atomikosProperties37.asProperties();
        java.lang.Object obj47 = properties11.putIfAbsent((java.lang.Object) recovery35, (java.lang.Object) atomikosProperties37);
        atomikosProperties37.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir={}, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=hi!, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 18 + "'", int12 == 18);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(recovery35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(properties46);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test05992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05992");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test05993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05993");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        atomikosProperties0.setLogBaseDir("{}");
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.service = "";
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        long long12 = atomikosProperties0.getMaxTimeout();
        boolean boolean13 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxTimeout((long) (short) 1);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.checkpointInterval = 300000L;
        int int22 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
    }

    @Test
    public void test05994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05994");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        int int5 = recovery4.getMaxRetries();
        int int6 = recovery4.maxRetries;
        recovery4.setDelay(0L);
        recovery4.maxRetries = '#';
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 5 + "'", int6 == 5);
    }

    @Test
    public void test05995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05995");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.Object obj2 = properties0.get((java.lang.Object) 0.0d);
        java.lang.Object obj3 = properties0.clone();
        java.lang.String str4 = properties0.toString();
        java.util.Properties properties5 = new java.util.Properties(properties0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties0.entrySet();
        java.util.Set<java.lang.String> strSet7 = properties0.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties0.keys();
        java.lang.Object obj11 = properties0.setProperty("", "{hi!={}}");
        java.lang.String str13 = properties0.getProperty("");
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertEquals(obj3.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj3), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj3), "{}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "{}" + "'", str4, "{}");
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{hi!={}}" + "'", str13, "{hi!={}}");
    }

    @Test
    public void test05996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05996");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        long long1 = atomikosProperties0.defaultJtaTimeout;
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.allowSubTransactions = true;
        boolean boolean5 = atomikosProperties0.enableLogging;
        atomikosProperties0.transactionManagerUniqueName = "{}";
        atomikosProperties0.setCheckpointInterval(52L);
        boolean boolean10 = atomikosProperties0.enableLogging;
        atomikosProperties0.setService("{hi!={}}");
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 10000L + "'", long1 == 10000L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test05997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05997");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.maxRetries = (-1);
        recovery0.setDelay((long) (short) 0);
        long long5 = recovery0.forgetOrphanedLogEntriesDelay;
        recovery0.retryInterval = 500L;
        recovery0.retryInterval = '4';
        long long10 = recovery0.getRetryInterval();
        recovery0.maxRetries = (byte) 10;
        long long13 = recovery0.getRetryInterval();
        long long14 = recovery0.delay;
        recovery0.setDelay(35L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 86400000L + "'", long5 == 86400000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 52L + "'", long10 == 52L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test05998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05998");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Set<java.lang.Object> objSet7 = properties6.keySet();
        atomikosProperties0.set(properties6, "hi!", (java.lang.Object) (-1.0f));
        java.lang.String str11 = atomikosProperties0.logBaseDir;
        java.lang.String str12 = atomikosProperties0.logBaseDir;
        java.lang.String str13 = atomikosProperties0.logBaseDir;
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        long long15 = atomikosProperties0.checkpointInterval;
        atomikosProperties0.setOutputDir("hi!");
        long long18 = atomikosProperties0.maxTimeout;
        java.lang.String str19 = atomikosProperties0.logBaseName;
        java.util.Properties properties20 = atomikosProperties0.asProperties();
        java.util.Collection<java.lang.Object> objCollection21 = properties20.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setDefaultJtaTimeout((-1L));
        long long25 = atomikosProperties22.checkpointInterval;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int27 = atomikosProperties26.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.logBaseDir = "";
        atomikosProperties28.setConsoleFileCount((int) (short) 10);
        atomikosProperties28.setCheckpointInterval(10000L);
        long long35 = atomikosProperties28.maxTimeout;
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO;
        atomikosProperties28.consoleLogLevel = atomikosLoggingLevel36;
        atomikosProperties26.consoleLogLevel = atomikosLoggingLevel36;
        atomikosProperties22.consoleLogLevel = atomikosLoggingLevel36;
        atomikosProperties22.forceShutdownOnVmExit = false;
        atomikosProperties22.checkpointInterval = (short) 1;
        atomikosProperties22.consoleFileCount = 0;
        atomikosProperties22.maxActives = (short) 1;
        atomikosProperties22.setTransactionManagerUniqueName("");
        java.util.Properties properties50 = atomikosProperties22.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties50.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        long long53 = recovery52.getRetryInterval();
        recovery52.setForgetOrphanedLogEntriesDelay((-1L));
        int int56 = recovery52.getMaxRetries();
        long long57 = recovery52.forgetOrphanedLogEntriesDelay;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setDefaultJtaTimeout((-1L));
        long long61 = atomikosProperties58.checkpointInterval;
        java.lang.String str62 = atomikosProperties58.getLogBaseName();
        atomikosProperties58.consoleFileLimit = (short) 10;
        boolean boolean65 = atomikosProperties58.isThreadedTwoPhaseCommit();
        boolean boolean66 = properties50.remove((java.lang.Object) long57, (java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setDefaultJtaTimeout((-1L));
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel70 = null;
        atomikosProperties67.consoleLogLevel = atomikosLoggingLevel70;
        atomikosProperties67.outputDir = "";
        int int74 = atomikosProperties67.maxActives;
        boolean boolean75 = atomikosProperties67.isThreadedTwoPhaseCommit();
        atomikosProperties67.consoleFileLimit = (short) 10;
        java.util.Properties properties78 = atomikosProperties67.asProperties();
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Properties properties80 = new java.util.Properties(properties79);
        java.util.Enumeration<java.lang.Object> objEnumeration81 = properties80.elements();
        boolean boolean82 = properties20.remove((java.lang.Object) properties50, (java.lang.Object) objEnumeration81);
        java.io.InputStream inputStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties50.loadFromXML(inputStream83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 500L + "'", long15 == 500L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tmlog" + "'", str19, "tmlog");
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(objCollection21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 300000L + "'", long35 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.INFO));
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 10000L + "'", long53 == 10000L);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 500L + "'", long61 == 500L);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(properties78);
        org.junit.Assert.assertNotNull(objEnumeration81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test05999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05999");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.logBaseDir = "";
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.service = "";
        java.lang.String str8 = atomikosProperties0.logBaseDir;
        atomikosProperties0.logBaseName = "tmlog";
        atomikosProperties0.transactionManagerUniqueName = "{}";
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        java.lang.String str14 = atomikosProperties0.logBaseDir;
        java.lang.String str15 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
    }

    @Test
    public void test06000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test06000");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getConsoleFileCount();
        int int2 = atomikosProperties0.maxActives;
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.service = "tmlog";
        java.lang.String str8 = atomikosProperties0.transactionManagerUniqueName;
        boolean boolean9 = atomikosProperties0.allowSubTransactions;
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.io.Reader reader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.load(reader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 1 + "'", int1 == 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 50 + "'", int2 == 50);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties12);
    }
}
