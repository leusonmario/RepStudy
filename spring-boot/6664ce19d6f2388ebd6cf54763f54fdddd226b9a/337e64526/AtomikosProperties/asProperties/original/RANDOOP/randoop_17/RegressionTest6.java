import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        recovery11.setForgetOrphanedLogEntriesDelay(0L);
        long long14 = recovery11.getRetryInterval();
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((-1));
        long long3 = recovery0.getRetryInterval();
        recovery0.setMaxRetries((int) (byte) 10);
        int int6 = recovery0.getMaxRetries();
        recovery0.setMaxRetries(50);
        recovery0.setMaxRetries((int) ' ');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str18 = atomikosProperties8.getLogBaseDir();
        java.util.Properties properties19 = atomikosProperties8.asProperties();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean24 = properties21.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet25 = properties21.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties26.getRecovery();
        atomikosProperties26.setEnableLogging(false);
        atomikosProperties26.setSerialJtaTransactions(true);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        boolean boolean46 = properties34.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean45);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        boolean boolean56 = properties34.contains((java.lang.Object) properties48);
        java.util.Set<java.lang.Object> objSet57 = properties48.keySet();
        java.lang.Object obj58 = properties21.getOrDefault((java.lang.Object) true, (java.lang.Object) properties48);
        properties48.clear();
        java.lang.String str61 = properties48.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties48.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setConsoleFileName("");
        atomikosProperties63.setCheckpointInterval((long) 100);
        atomikosProperties63.setConsoleFileName("tm.out");
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties73.elements();
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        java.lang.String str79 = properties76.getProperty("");
        properties73.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj85 = properties73.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties82);
        atomikosProperties82.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel88 = atomikosProperties82.getConsoleLogLevel();
        atomikosProperties63.setConsoleLogLevel(atomikosLoggingLevel88);
        boolean boolean90 = atomikosProperties63.isEnableLogging();
        int int91 = atomikosProperties63.getConsoleFileCount();
        atomikosProperties63.setAllowSubTransactions(false);
        java.lang.Object obj94 = properties19.getOrDefault((java.lang.Object) properties48, (java.lang.Object) atomikosProperties63);
        java.io.InputStream inputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties19.load(inputStream95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel88 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel88.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean32 = properties29.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet33 = properties29.keySet();
        java.lang.Object obj35 = properties29.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj36 = properties29.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long40 = recovery37.getDelay();
        recovery37.setMaxRetries((int) (short) 0);
        long long43 = recovery37.getDelay();
        recovery37.setForgetOrphanedLogEntriesDelay(1L);
        long long46 = recovery37.getDelay();
        recovery37.setForgetOrphanedLogEntriesDelay(0L);
        recovery37.setMaxRetries((int) (byte) 100);
        boolean boolean51 = properties25.remove(obj36, (java.lang.Object) (byte) 100);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties25.keys();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        boolean boolean57 = properties54.containsKey((java.lang.Object) 10.0f);
        java.lang.String str59 = properties54.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str62 = atomikosProperties61.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery63 = atomikosProperties61.getRecovery();
        atomikosProperties61.setEnableLogging(false);
        atomikosProperties61.setSerialJtaTransactions(true);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.lang.String str75 = properties72.getProperty("");
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj81 = properties69.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties78);
        atomikosProperties78.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel84 = atomikosProperties78.getConsoleLogLevel();
        atomikosProperties61.setConsoleLogLevel(atomikosLoggingLevel84);
        java.lang.Object obj86 = properties54.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel84);
        java.lang.Object obj87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj88 = properties25.put((java.lang.Object) 500L, obj87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(recovery63);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel84 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel84.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setService("");
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setEnableLogging(false);
        atomikosProperties4.setEnableLogging(false);
        boolean boolean19 = atomikosProperties4.isAllowSubTransactions();
        atomikosProperties4.setMaxTimeout((-1L));
        long long22 = atomikosProperties4.getMaxTimeout();
        boolean boolean23 = properties3.containsKey((java.lang.Object) long22);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.lang.String str31 = properties28.getProperty("");
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj37 = properties25.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties34);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.lang.Object obj42 = properties25.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str44 = atomikosProperties43.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = atomikosProperties43.getRecovery();
        atomikosProperties43.setEnableLogging(false);
        boolean boolean48 = properties25.equals((java.lang.Object) atomikosProperties43);
        java.lang.String str49 = atomikosProperties43.getOutputDir();
        java.lang.String str50 = atomikosProperties43.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery51 = atomikosProperties43.getRecovery();
        boolean boolean52 = properties3.containsValue((java.lang.Object) recovery51);
        long long53 = recovery51.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(obj42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(recovery45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(recovery51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 86400000L + "'", long53 == 86400000L);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setConsoleFileName("tm.out");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj22 = properties10.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties19.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        boolean boolean27 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setConsoleFileCount((int) (short) 100);
        int int30 = atomikosProperties0.getConsoleFileCount();
        long long31 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 100L + "'", long31 == 100L);
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long25 = atomikosProperties16.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties16.getOutputDir();
        long long27 = atomikosProperties16.getMaxTimeout();
        java.lang.String str28 = atomikosProperties16.getLogBaseName();
        boolean boolean29 = atomikosProperties16.isEnableLogging();
        boolean boolean30 = atomikosProperties16.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 300000L + "'", long27 == 300000L);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties10.getRecovery();
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties10.getOutputDir();
        java.lang.Object obj18 = properties1.get((java.lang.Object) atomikosProperties10);
        int int19 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setOutputDir("{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        atomikosProperties43.setOutputDir("");
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setThreadedTwoPhaseCommit(false);
        atomikosProperties43.setCheckpointInterval((long) (short) 1);
        boolean boolean58 = atomikosProperties43.isThreadedTwoPhaseCommit();
        java.lang.Object obj59 = properties38.remove((java.lang.Object) atomikosProperties43);
        properties38.clear();
        java.util.Set<java.lang.Object> objSet61 = properties38.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties38.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setConsoleFileName("");
        java.lang.String str68 = atomikosProperties63.getLogBaseName();
        atomikosProperties63.setForceShutdownOnVmExit(true);
        boolean boolean71 = properties38.contains((java.lang.Object) atomikosProperties63);
        java.util.Set<java.lang.String> strSet72 = properties38.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setSerialJtaTransactions(false);
        java.lang.String str80 = atomikosProperties73.getOutputDir();
        atomikosProperties73.setLogBaseDir("tmlog");
        atomikosProperties73.setMaxTimeout((long) 'a');
        atomikosProperties73.setForceShutdownOnVmExit(true);
        java.util.Properties properties87 = atomikosProperties73.asProperties();
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties87);
        java.io.InputStream inputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.load(inputStream89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objEntrySet62);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(properties87);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        atomikosProperties0.setLogBaseDir("{10=#}");
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int17 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setService("tm.out");
        boolean boolean20 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseDir("{{}=}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        boolean boolean47 = properties35.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean46);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Set<java.lang.String> strSet57 = properties52.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties52.entrySet();
        java.lang.Object obj59 = properties35.get((java.lang.Object) objEntrySet58);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.elements();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.lang.String str67 = properties64.getProperty("");
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        boolean boolean72 = properties71.isEmpty();
        boolean boolean73 = properties61.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean72);
        boolean boolean74 = properties61.isEmpty();
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        boolean boolean79 = properties76.containsKey((java.lang.Object) 10.0f);
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.util.Set<java.lang.String> strSet81 = properties61.stringPropertyNames();
        java.lang.Object obj82 = properties1.replace((java.lang.Object) properties35, (java.lang.Object) strSet81);
        java.io.InputStream inputStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties35.loadFromXML(inputStream83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setMaxTimeout(300000L);
        atomikosProperties4.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setMaxTimeout((long) (byte) -1);
        boolean boolean25 = properties1.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties16);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties1.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties1.elements();
        java.lang.Object obj28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = properties1.contains(obj28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration27);
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        int int24 = properties1.size();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj38 = properties26.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties35);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties35.getConsoleLogLevel();
        atomikosProperties35.setConsoleFileLimit((int) '4');
        atomikosProperties35.setMaxActives((int) ' ');
        long long44 = atomikosProperties35.getDefaultJtaTimeout();
        atomikosProperties35.setAllowSubTransactions(false);
        int int47 = atomikosProperties35.getConsoleFileLimit();
        boolean boolean48 = properties1.contains((java.lang.Object) atomikosProperties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = atomikosProperties35.getRecovery();
        long long50 = recovery49.getRetryInterval();
        recovery49.setRetryInterval(35L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(recovery49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10000L + "'", long50 == 10000L);
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        long long12 = atomikosProperties0.getMaxTimeout();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        int int14 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = properties7.size();
        java.io.PrintStream printStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.list(printStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 18 + "'", int8 == 18);
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Collection<java.lang.Object> objCollection9 = properties4.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties20.getConsoleLogLevel();
        atomikosProperties20.setConsoleFileLimit((int) '4');
        atomikosProperties20.setEnableLogging(false);
        int int29 = atomikosProperties20.getConsoleFileLimit();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        boolean boolean48 = properties31.contains((java.lang.Object) objEnumeration47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.String str55 = atomikosProperties52.getLogBaseDir();
        atomikosProperties52.setSerialJtaTransactions(true);
        long long58 = atomikosProperties52.getMaxTimeout();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        boolean boolean61 = properties60.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties60.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties60.entrySet();
        boolean boolean64 = properties50.remove((java.lang.Object) atomikosProperties52, (java.lang.Object) objEntrySet63);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.lang.Object obj66 = properties4.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties31);
        java.io.Reader reader67 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.load(reader67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        atomikosProperties21.setSerialJtaTransactions(false);
        int int27 = atomikosProperties21.getConsoleFileCount();
        atomikosProperties21.setTransactionManagerUniqueName("tm.out");
        boolean boolean30 = atomikosProperties21.isEnableLogging();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.lang.String str35 = properties32.getProperty("hi!");
        java.util.Set<java.lang.String> strSet36 = properties32.stringPropertyNames();
        java.lang.Object obj37 = properties32.clone();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        java.util.Properties properties41 = new java.util.Properties(properties39);
        java.util.Collection<java.lang.Object> objCollection42 = properties39.values();
        java.lang.Object obj43 = properties39.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int45 = atomikosProperties44.getMaxActives();
        java.lang.String str46 = atomikosProperties44.getTransactionManagerUniqueName();
        java.lang.String str47 = atomikosProperties44.getLogBaseName();
        boolean boolean48 = atomikosProperties44.isThreadedTwoPhaseCommit();
        atomikosProperties44.setCheckpointInterval((long) 'a');
        atomikosProperties44.setTransactionManagerUniqueName("tmlog");
        java.lang.Object obj53 = properties32.getOrDefault(obj43, (java.lang.Object) "tmlog");
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        boolean boolean56 = properties55.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties55.entrySet();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Object obj60 = properties55.replace((java.lang.Object) "hi!", obj59);
        boolean boolean62 = properties55.equals((java.lang.Object) 1.0f);
        java.util.Properties properties63 = new java.util.Properties(properties55);
        properties55.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties55.elements();
        boolean boolean66 = properties9.replace((java.lang.Object) atomikosProperties21, (java.lang.Object) properties32, (java.lang.Object) objEnumeration65);
        atomikosProperties21.setLogBaseDir("");
        atomikosProperties21.setEnableLogging(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "{}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertEquals(obj43.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj43), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj43), "{}");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + obj53 + "' != '" + "tmlog" + "'", obj53, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        long long11 = atomikosProperties6.getMaxTimeout();
        atomikosProperties6.setConsoleFileLimit(100);
        atomikosProperties6.setConsoleFileLimit((int) ' ');
        boolean boolean16 = properties5.containsValue((java.lang.Object) ' ');
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties5.elements();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.store(outputStream18, "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int8 = atomikosProperties0.getMaxActives();
        int int9 = atomikosProperties0.getConsoleFileLimit();
        long long10 = atomikosProperties0.getMaxTimeout();
        long long11 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str7 = properties3.toString();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        boolean boolean12 = properties9.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet13 = properties9.keySet();
        java.lang.Object obj15 = properties9.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj17 = properties9.remove((java.lang.Object) "");
        boolean boolean18 = properties3.contains((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        atomikosProperties19.setForceShutdownOnVmExit(false);
        atomikosProperties19.setTransactionManagerUniqueName("tmlog");
        atomikosProperties19.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties19.getRecovery();
        boolean boolean33 = atomikosProperties19.isSerialJtaTransactions();
        boolean boolean34 = properties3.containsValue((java.lang.Object) boolean33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.lang.String str42 = properties39.getProperty("");
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        boolean boolean48 = properties36.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean47);
        boolean boolean49 = properties36.isEmpty();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int54 = recovery53.getMaxRetries();
        boolean boolean55 = properties51.containsKey((java.lang.Object) recovery53);
        properties51.clear();
        boolean boolean58 = properties51.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        boolean boolean61 = properties60.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        atomikosProperties62.setConsoleFileName("");
        java.lang.String str67 = atomikosProperties62.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.elements();
        java.lang.String str80 = properties77.getProperty("");
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties83 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties83.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj86 = properties74.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties83);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel87 = atomikosProperties83.getConsoleLogLevel();
        atomikosProperties68.setConsoleLogLevel(atomikosLoggingLevel87);
        atomikosProperties62.setConsoleLogLevel(atomikosLoggingLevel87);
        boolean boolean91 = properties51.replace((java.lang.Object) properties60, (java.lang.Object) atomikosProperties62, (java.lang.Object) 10.0d);
        java.util.Properties properties92 = new java.util.Properties(properties51);
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties92);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.io.InputStream inputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(inputStream95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{10=#}" + "'", str7, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objSet13);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 5 + "'", int54 == 5);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tmlog" + "'", str67, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel87 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel87.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setConsoleFileCount((int) (byte) 1);
        int int10 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.lang.String str16 = properties1.getProperty("");
        java.io.PrintStream printStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Set<java.lang.Object> objSet39 = properties1.keySet();
        boolean boolean40 = properties1.isEmpty();
        java.io.PrintWriter printWriter41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.String str25 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseDir("tmlog");
        atomikosProperties18.setMaxTimeout((long) 'a');
        int int30 = atomikosProperties18.getConsoleFileLimit();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        recovery34.setRetryInterval((long) (short) -1);
        recovery34.setRetryInterval((long) 0);
        recovery34.setMaxRetries((int) (byte) 10);
        recovery34.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery34.setMaxRetries(52);
        long long47 = recovery34.getRetryInterval();
        recovery34.setDelay((long) (short) -1);
        java.lang.Object obj50 = properties17.getOrDefault((java.lang.Object) atomikosProperties18, (java.lang.Object) recovery34);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery51 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery51.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long54 = recovery51.getDelay();
        recovery51.setMaxRetries((int) (short) 0);
        long long57 = recovery51.getDelay();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        java.util.Properties properties61 = new java.util.Properties(properties59);
        java.util.Collection<java.lang.Object> objCollection62 = properties59.values();
        java.lang.Object obj63 = properties59.clone();
        java.util.Properties properties64 = new java.util.Properties(properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean66 = properties64.containsValue((java.lang.Object) atomikosProperties65);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties64.entrySet();
        java.util.Properties properties68 = new java.util.Properties(properties64);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        boolean boolean71 = properties70.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery72 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int73 = recovery72.getMaxRetries();
        boolean boolean74 = properties70.containsKey((java.lang.Object) recovery72);
        recovery72.setMaxRetries((int) '4');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setCheckpointInterval((long) (byte) -1);
        atomikosProperties77.setConsoleFileName("");
        atomikosProperties77.setCheckpointInterval((long) 100);
        atomikosProperties77.setConsoleFileName("tm.out");
        atomikosProperties77.setForceShutdownOnVmExit(false);
        int int88 = atomikosProperties77.getConsoleFileLimit();
        atomikosProperties77.setConsoleFileName("{10=#}");
        java.lang.String str91 = atomikosProperties77.getTransactionManagerUniqueName();
        atomikosProperties77.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean94 = properties68.remove((java.lang.Object) recovery72, (java.lang.Object) atomikosProperties77);
        java.lang.Object obj95 = properties17.getOrDefault((java.lang.Object) long57, (java.lang.Object) boolean94);
        java.io.Writer writer96 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.store(writer96, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10000L + "'", long57 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 5 + "'", int73 == 5);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + obj95 + "' != '" + false + "'", obj95, false);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setConsoleFileName("");
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        long long15 = atomikosProperties9.getCheckpointInterval();
        java.lang.String str16 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setOutputDir("");
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        int int21 = atomikosProperties9.getConsoleFileLimit();
        java.lang.String str22 = atomikosProperties9.getTransactionManagerUniqueName();
        boolean boolean23 = properties3.remove((java.lang.Object) atomikosProperties4, (java.lang.Object) str22);
        java.util.Enumeration<?> wildcardEnumeration24 = properties3.propertyNames();
        java.util.Collection<java.lang.Object> objCollection25 = properties3.values();
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.save(outputStream26, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration24);
        org.junit.Assert.assertNotNull(objCollection25);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean28 = properties11.contains((java.lang.Object) objEnumeration27);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.util.Properties properties32 = new java.util.Properties(properties30);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        java.lang.String str37 = properties34.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet38 = properties34.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties34.entrySet();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        java.util.Properties properties46 = new java.util.Properties(properties44);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet47 = properties44.entrySet();
        java.lang.Object obj48 = properties34.getOrDefault((java.lang.Object) properties41, (java.lang.Object) objEntrySet47);
        boolean boolean49 = properties30.containsKey((java.lang.Object) objEntrySet47);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.lang.Object obj56 = properties53.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet57 = properties53.keySet();
        java.lang.Object obj58 = properties11.put((java.lang.Object) objEntrySet47, (java.lang.Object) objSet57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str60 = atomikosProperties59.getLogBaseDir();
        java.lang.String str61 = atomikosProperties59.getLogBaseDir();
        boolean boolean62 = atomikosProperties59.isAllowSubTransactions();
        boolean boolean63 = atomikosProperties59.isSerialJtaTransactions();
        atomikosProperties59.setService("");
        int int66 = atomikosProperties59.getConsoleFileCount();
        boolean boolean67 = atomikosProperties59.isThreadedTwoPhaseCommit();
        boolean boolean68 = properties11.containsKey((java.lang.Object) atomikosProperties59);
        atomikosProperties59.setMaxActives(10);
        java.util.Properties properties71 = atomikosProperties59.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setConsoleFileName("");
        java.lang.String str77 = atomikosProperties72.getLogBaseName();
        java.lang.String str78 = atomikosProperties72.getConsoleFileName();
        atomikosProperties72.setForceShutdownOnVmExit(false);
        atomikosProperties72.setDefaultJtaTimeout((long) (byte) 100);
        java.lang.Object obj83 = properties8.putIfAbsent((java.lang.Object) atomikosProperties59, (java.lang.Object) atomikosProperties72);
        long long84 = atomikosProperties59.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objSet38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEntrySet47);
        org.junit.Assert.assertNotNull(obj48);
// flaky:         org.junit.Assert.assertEquals(obj48.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 300000L + "'", long84 == 300000L);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str4 = properties1.getProperty("");
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties6.entrySet();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties6.replace((java.lang.Object) "hi!", obj10);
        boolean boolean13 = properties6.equals((java.lang.Object) 1.0f);
        boolean boolean14 = properties1.containsKey((java.lang.Object) boolean13);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.elements();
        java.lang.Object obj19 = properties1.remove((java.lang.Object) objEnumeration18);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int24 = recovery23.getMaxRetries();
        boolean boolean25 = properties21.containsKey((java.lang.Object) recovery23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setLogBaseDir("");
        java.lang.Object obj29 = properties1.put((java.lang.Object) properties21, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        boolean boolean44 = properties32.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean43);
        boolean boolean45 = properties32.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties32.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setConsoleFileName("");
        java.lang.String str52 = atomikosProperties47.getLogBaseName();
        long long53 = atomikosProperties47.getCheckpointInterval();
        java.lang.String str54 = atomikosProperties47.getLogBaseDir();
        atomikosProperties47.setEnableLogging(true);
        java.lang.Object obj57 = properties30.putIfAbsent((java.lang.Object) objEnumeration46, (java.lang.Object) atomikosProperties47);
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.io.InputStream inputStream59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.load(inputStream59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(1L);
        long long9 = recovery0.getDelay();
        recovery0.setRetryInterval(500L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery53.setMaxRetries((-1));
        long long56 = recovery53.getRetryInterval();
        java.lang.Object obj57 = properties1.replace((java.lang.Object) 5, (java.lang.Object) long56);
        java.util.Set<java.lang.Object> objSet58 = properties1.keySet();
        java.io.Reader reader59 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objSet58);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        java.lang.String str26 = atomikosProperties21.getOutputDir();
        java.lang.String str27 = atomikosProperties21.getTransactionManagerUniqueName();
        java.lang.Object obj28 = properties1.get((java.lang.Object) atomikosProperties21);
        boolean boolean29 = atomikosProperties21.isForceShutdownOnVmExit();
        boolean boolean30 = atomikosProperties21.isThreadedTwoPhaseCommit();
        atomikosProperties21.setForceShutdownOnVmExit(false);
        atomikosProperties21.setLogBaseDir("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxTimeout((-1L));
        long long18 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setService("");
        long long21 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setOutputDir("{10=#}");
        int int20 = atomikosProperties10.getConsoleFileCount();
        java.util.Properties properties21 = atomikosProperties10.asProperties();
        atomikosProperties10.setMaxTimeout(0L);
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        atomikosProperties10.setConsoleFileCount(32);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(properties21);
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int5 = atomikosProperties0.getConsoleFileCount();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str4 = properties1.getProperty("");
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties6.entrySet();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties6.replace((java.lang.Object) "hi!", obj10);
        boolean boolean13 = properties6.equals((java.lang.Object) 1.0f);
        boolean boolean14 = properties1.containsKey((java.lang.Object) boolean13);
        properties1.clear();
        java.util.Collection<java.lang.Object> objCollection16 = properties1.values();
        java.util.Properties properties17 = new java.util.Properties(properties1);
        java.lang.Object obj18 = properties1.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertEquals(obj18.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj18), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj18), "{}");
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Set<java.lang.Object> objSet34 = properties1.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        java.lang.String str39 = properties36.getProperty("hi!");
        boolean boolean41 = properties36.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet42 = properties36.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        boolean boolean45 = properties36.equals((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int48 = atomikosProperties43.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setConsoleFileName("");
        java.lang.String str54 = atomikosProperties49.getLogBaseName();
        long long55 = atomikosProperties49.getCheckpointInterval();
        java.lang.String str56 = atomikosProperties49.getLogBaseDir();
        java.lang.String str57 = atomikosProperties49.getConsoleFileName();
        boolean boolean58 = atomikosProperties49.isThreadedTwoPhaseCommit();
        java.lang.Object obj59 = properties1.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties61.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery63 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int64 = recovery63.getMaxRetries();
        boolean boolean65 = properties61.containsKey((java.lang.Object) recovery63);
        properties61.clear();
        boolean boolean68 = properties61.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj69 = null;
        boolean boolean70 = properties61.equals(obj69);
        java.lang.String str71 = properties61.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet73 = properties1.entrySet();
        java.io.Reader reader74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertNotNull(objEntrySet73);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties6.entrySet();
        int int8 = properties6.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties6.entrySet();
        int int10 = properties6.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getLogBaseName();
        long long12 = atomikosProperties6.getCheckpointInterval();
        atomikosProperties6.setForceShutdownOnVmExit(false);
        atomikosProperties6.setTransactionManagerUniqueName("tmlog");
        atomikosProperties6.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties6.getRecovery();
        atomikosProperties6.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj22 = properties1.get((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        atomikosProperties23.setCheckpointInterval((long) 100);
        boolean boolean30 = atomikosProperties23.isAllowSubTransactions();
        java.util.Properties properties31 = atomikosProperties23.asProperties();
        java.lang.String str32 = atomikosProperties23.getLogBaseName();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet36 = properties34.entrySet();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Object obj39 = properties34.replace((java.lang.Object) "hi!", obj38);
        boolean boolean41 = properties34.equals((java.lang.Object) 1.0f);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        boolean boolean45 = properties43.isEmpty();
        java.util.Set<java.lang.String> strSet46 = properties43.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties47.getOutputDir();
        java.util.Properties properties53 = atomikosProperties47.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setSerialJtaTransactions(false);
        atomikosProperties54.setOutputDir("");
        java.lang.String str63 = atomikosProperties54.getConsoleFileName();
        java.lang.String str64 = atomikosProperties54.getLogBaseName();
        atomikosProperties54.setDefaultJtaTimeout(0L);
        java.lang.Object obj67 = properties43.putIfAbsent((java.lang.Object) atomikosProperties47, (java.lang.Object) atomikosProperties54);
        atomikosProperties54.setSerialJtaTransactions(false);
        int int70 = atomikosProperties54.getMaxActives();
        boolean boolean71 = properties1.replace((java.lang.Object) str32, (java.lang.Object) properties34, (java.lang.Object) int70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setOutputDir("");
        java.lang.String str81 = atomikosProperties72.getConsoleFileName();
        java.util.Properties properties82 = atomikosProperties72.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties82);
        java.io.PrintStream printStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties82.list(printStream84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNotNull(recovery19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet36);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "tm.out" + "'", str63, "tm.out");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tm.out" + "'", str81, "tm.out");
        org.junit.Assert.assertNotNull(properties82);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int12 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        boolean boolean25 = properties22.contains((java.lang.Object) 1L);
        int int26 = properties22.size();
        java.util.Enumeration<?> wildcardEnumeration27 = properties22.propertyNames();
        java.lang.Object obj28 = properties20.remove((java.lang.Object) properties22);
        java.lang.Object obj29 = null;
        boolean boolean30 = properties22.equals(obj29);
        java.io.PrintStream printStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.list(printStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.lang.Object obj27 = properties1.clone();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties29.entrySet();
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setConsoleFileName("");
        java.lang.String str38 = atomikosProperties33.getLogBaseName();
        long long39 = atomikosProperties33.getCheckpointInterval();
        java.lang.String str40 = atomikosProperties33.getLogBaseDir();
        atomikosProperties33.setEnableLogging(true);
        long long43 = atomikosProperties33.getDefaultJtaTimeout();
        boolean boolean44 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str45 = atomikosProperties33.getOutputDir();
        atomikosProperties33.setTransactionManagerUniqueName("{}");
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        boolean boolean52 = properties49.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Enumeration<?> wildcardEnumeration62 = properties54.propertyNames();
        boolean boolean63 = properties49.containsValue((java.lang.Object) wildcardEnumeration62);
        java.lang.Object obj64 = properties29.put((java.lang.Object) atomikosProperties33, (java.lang.Object) properties49);
        boolean boolean65 = atomikosProperties33.isAllowSubTransactions();
        atomikosProperties33.setCheckpointInterval((long) 1);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties69.entrySet();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Object obj74 = properties69.replace((java.lang.Object) "hi!", obj73);
        boolean boolean76 = properties69.equals((java.lang.Object) 1.0f);
        java.util.Properties properties77 = new java.util.Properties(properties69);
        properties69.clear();
        boolean boolean79 = properties1.remove((java.lang.Object) atomikosProperties33, (java.lang.Object) properties69);
        java.lang.Object obj82 = properties69.setProperty("{10=#}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str83 = properties69.toString();
        java.lang.String str85 = properties69.getProperty("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}" + "'", str83, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setService("hi!");
        int int51 = atomikosProperties40.getConsoleFileCount();
        atomikosProperties40.setAllowSubTransactions(false);
        atomikosProperties40.setDefaultJtaTimeout((long) 50);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = new java.util.Properties(properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties39.entrySet();
        java.util.Enumeration<?> wildcardEnumeration41 = properties39.propertyNames();
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.lang.Object obj27 = properties1.clone();
        java.util.Collection<java.lang.Object> objCollection28 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setConsoleFileName("");
        java.lang.String str34 = atomikosProperties29.getLogBaseName();
        long long35 = atomikosProperties29.getCheckpointInterval();
        java.lang.String str36 = atomikosProperties29.getLogBaseDir();
        atomikosProperties29.setMaxTimeout(300000L);
        java.lang.String str39 = atomikosProperties29.getLogBaseName();
        boolean boolean40 = atomikosProperties29.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = atomikosProperties29.getRecovery();
        java.lang.Object obj42 = properties1.get((java.lang.Object) recovery41);
        java.io.Reader reader43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(recovery41);
        org.junit.Assert.assertNull(obj42);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setService("");
        long long4 = atomikosProperties0.getMaxTimeout();
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 300000L + "'", long4 == 300000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Set<java.lang.String> strSet23 = properties18.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties18.entrySet();
        java.lang.Object obj25 = properties1.get((java.lang.Object) objEntrySet24);
        java.io.OutputStream outputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream26, "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setAllowSubTransactions(false);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        int int16 = atomikosProperties8.getConsoleFileLimit();
        atomikosProperties8.setMaxTimeout(500L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        int int14 = atomikosProperties0.getMaxActives();
        boolean boolean15 = atomikosProperties0.isEnableLogging();
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int14 = recovery13.getMaxRetries();
        boolean boolean15 = properties11.containsKey((java.lang.Object) recovery13);
        properties11.clear();
        boolean boolean18 = properties11.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setConsoleFileName("");
        java.lang.String str27 = atomikosProperties22.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = atomikosProperties43.getConsoleLogLevel();
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel47);
        atomikosProperties22.setConsoleLogLevel(atomikosLoggingLevel47);
        boolean boolean51 = properties11.replace((java.lang.Object) properties20, (java.lang.Object) atomikosProperties22, (java.lang.Object) 10.0d);
        java.lang.String str52 = atomikosProperties22.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties22.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties0.setConsoleFileName("{[]=WARN}");
        atomikosProperties0.setMaxTimeout(50L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.lang.String str43 = properties42.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties42.elements();
        boolean boolean45 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        int int51 = atomikosProperties46.getConsoleFileLimit();
        java.lang.String str52 = atomikosProperties46.getTransactionManagerUniqueName();
        atomikosProperties46.setConsoleFileLimit(50);
        atomikosProperties46.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties46.setConsoleFileLimit((int) (byte) -1);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.lang.String str66 = properties63.getProperty("");
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        java.util.Set<java.lang.String> strSet68 = properties63.stringPropertyNames();
        java.lang.String str70 = properties63.getProperty("tmlog");
        java.util.Set<java.lang.String> strSet71 = properties63.stringPropertyNames();
        java.lang.Object obj72 = properties42.put((java.lang.Object) (byte) -1, (java.lang.Object) properties63);
        java.lang.Object obj75 = properties63.setProperty("tmlog", "tmlog");
        java.io.InputStream inputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties63.loadFromXML(inputStream76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{}" + "'", str43, "{}");
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setMaxTimeout((long) 'a');
        int int12 = atomikosProperties0.getConsoleFileLimit();
        int int13 = atomikosProperties0.getConsoleFileCount();
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str15 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        atomikosProperties37.setForceShutdownOnVmExit(true);
        java.lang.Object obj45 = properties1.remove((java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setConsoleFileName("tm.out");
        atomikosProperties46.setMaxActives((-1));
        boolean boolean51 = properties1.containsValue((java.lang.Object) atomikosProperties46);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int56 = recovery55.getMaxRetries();
        boolean boolean57 = properties53.containsKey((java.lang.Object) recovery55);
        properties53.clear();
        boolean boolean60 = properties53.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj61 = null;
        boolean boolean62 = properties53.equals(obj61);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        int int8 = properties7.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setConsoleFileName("");
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        long long15 = atomikosProperties9.getCheckpointInterval();
        java.lang.String str16 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties9.setAllowSubTransactions(false);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        properties23.clear();
        int int37 = properties23.size();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj51 = properties39.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties48);
        java.lang.String str52 = atomikosProperties48.getConsoleFileName();
        java.lang.String str53 = atomikosProperties48.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties48.getConsoleLogLevel();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.lang.String str62 = properties59.getProperty("");
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj68 = properties56.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setSerialJtaTransactions(false);
        int int71 = atomikosProperties65.getConsoleFileCount();
        atomikosProperties65.setForceShutdownOnVmExit(false);
        boolean boolean74 = properties23.remove((java.lang.Object) atomikosProperties48, (java.lang.Object) false);
        java.util.Properties properties75 = atomikosProperties48.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.lang.Object obj77 = properties7.putIfAbsent((java.lang.Object) atomikosProperties9, (java.lang.Object) properties75);
        java.io.PrintStream printStream78 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties75.list(printStream78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 18 + "'", int8 == 18);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval(35L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isAllowSubTransactions();
        java.lang.String str15 = atomikosProperties8.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties8.getConsoleLogLevel();
        boolean boolean17 = atomikosProperties8.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean31 = properties19.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean30);
        boolean boolean32 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        atomikosProperties34.setEnableLogging(true);
        java.lang.Object obj44 = properties17.putIfAbsent((java.lang.Object) objEnumeration33, (java.lang.Object) atomikosProperties34);
        boolean boolean45 = atomikosProperties34.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties34.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel46);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj45 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery48 = atomikosProperties46.getRecovery();
        atomikosProperties46.setEnableLogging(false);
        boolean boolean51 = properties28.equals((java.lang.Object) atomikosProperties46);
        boolean boolean52 = properties25.contains((java.lang.Object) atomikosProperties46);
        java.util.Enumeration<?> wildcardEnumeration53 = properties25.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties25.entrySet();
        java.io.PrintStream printStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.list(printStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(recovery48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
        org.junit.Assert.assertNotNull(objEntrySet54);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setMaxActives((int) '4');
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setMaxActives(0);
        java.lang.String str16 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(recovery17);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        int int20 = properties1.size();
        java.lang.Object obj23 = properties1.setProperty("{10=#}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setOutputDir("");
        java.lang.String str33 = atomikosProperties24.getConsoleFileName();
        java.lang.String str34 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setEnableLogging(false);
        atomikosProperties24.setEnableLogging(false);
        java.lang.String str39 = atomikosProperties24.getLogBaseDir();
        long long40 = atomikosProperties24.getCheckpointInterval();
        atomikosProperties24.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        long long49 = atomikosProperties43.getCheckpointInterval();
        java.lang.String str50 = atomikosProperties43.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.lang.String str63 = properties60.getProperty("");
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj69 = properties57.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties66);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel70 = atomikosProperties66.getConsoleLogLevel();
        atomikosProperties51.setConsoleLogLevel(atomikosLoggingLevel70);
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel70);
        atomikosProperties43.setCheckpointInterval(10L);
        boolean boolean75 = atomikosProperties43.isThreadedTwoPhaseCommit();
        boolean boolean76 = atomikosProperties43.isEnableLogging();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        java.lang.String str81 = properties78.getProperty("hi!");
        boolean boolean83 = properties78.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet84 = properties78.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int86 = atomikosProperties85.getMaxActives();
        boolean boolean87 = properties78.equals((java.lang.Object) atomikosProperties85);
        atomikosProperties85.setSerialJtaTransactions(false);
        int int90 = atomikosProperties85.getMaxActives();
        boolean boolean91 = atomikosProperties85.isEnableLogging();
        java.lang.String str92 = atomikosProperties85.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery93 = atomikosProperties85.getRecovery();
        long long94 = recovery93.getDelay();
        boolean boolean95 = properties1.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) boolean76, (java.lang.Object) recovery93);
        boolean boolean96 = atomikosProperties24.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel70 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel70.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "tmlog" + "'", str92, "tmlog");
        org.junit.Assert.assertNotNull(recovery93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10000L + "'", long94 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileName("tm.out");
        atomikosProperties0.setMaxActives((-1));
        atomikosProperties0.setConsoleFileCount(0);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj22 = properties10.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties19);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.lang.Object obj27 = properties10.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str29 = atomikosProperties28.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties28.getRecovery();
        atomikosProperties28.setEnableLogging(false);
        boolean boolean33 = properties10.equals((java.lang.Object) atomikosProperties28);
        int int34 = atomikosProperties28.getConsoleFileCount();
        atomikosProperties28.setSerialJtaTransactions(false);
        atomikosProperties28.setSerialJtaTransactions(true);
        boolean boolean39 = atomikosProperties28.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel40 = atomikosProperties28.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel40);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel40 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel40.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties10.getConsoleLogLevel();
        boolean boolean20 = atomikosProperties10.isAllowSubTransactions();
        java.lang.String str21 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        atomikosProperties0.setDefaultJtaTimeout((long) (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(recovery10);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str19 = atomikosProperties10.getService();
        atomikosProperties10.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties10.setConsoleFileName("{{}=}");
        atomikosProperties10.setConsoleFileCount(2);
        atomikosProperties10.setCheckpointInterval((long) (byte) 0);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        recovery31.setRetryInterval((long) (short) -1);
        recovery31.setDelay(10L);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        java.lang.Object obj41 = properties0.getOrDefault((java.lang.Object) recovery31, (java.lang.Object) properties39);
        java.util.Properties properties42 = new java.util.Properties(properties0);
        java.util.Set<java.lang.Object> objSet43 = properties0.keySet();
        java.util.Collection<java.lang.Object> objCollection44 = properties0.values();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(objCollection44);
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean18 = properties1.equals((java.lang.Object) false);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getConsoleFileName();
        long long46 = atomikosProperties38.getCheckpointInterval();
        java.lang.Object obj47 = properties23.remove((java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int49 = atomikosProperties48.getMaxActives();
        java.lang.String str50 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean51 = atomikosProperties48.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setOutputDir("");
        java.lang.String str61 = atomikosProperties52.getConsoleFileName();
        java.lang.String str62 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties48.getConsoleLogLevel();
        int int68 = atomikosProperties48.getMaxActives();
        java.lang.Object obj69 = properties1.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties48);
        java.lang.String str70 = properties1.toString();
        properties1.clear();
        java.lang.String str73 = properties1.getProperty("{[]=WARN}");
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream74, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{}" + "'", str70, "{}");
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setLogBaseDir("tm.out");
        int int9 = atomikosProperties0.getConsoleFileCount();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        boolean boolean14 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setService("tmlog");
        int int7 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setOutputDir("");
        atomikosProperties10.setService("");
        atomikosProperties10.setCheckpointInterval(300000L);
        int int22 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setService("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setOutputDir("");
        java.lang.String str16 = atomikosProperties7.getConsoleFileName();
        java.lang.String str17 = atomikosProperties7.getLogBaseName();
        atomikosProperties7.setConsoleFileCount((int) (byte) -1);
        atomikosProperties7.setService("");
        boolean boolean22 = properties3.containsKey((java.lang.Object) "");
        java.lang.String str24 = properties3.getProperty("{10=#}");
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream25, "", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        atomikosProperties8.setEnableLogging(false);
        boolean boolean15 = atomikosProperties8.isAllowSubTransactions();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setConsoleFileLimit((int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setConsoleFileName("");
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Set<java.lang.Object> objSet14 = properties1.keySet();
        int int15 = properties1.size();
        java.lang.String str18 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{10=#}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{10=#}" + "'", str18, "{10=#}");
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        java.lang.String str17 = atomikosProperties15.getLogBaseDir();
        int int18 = atomikosProperties15.getConsoleFileCount();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties20.entrySet();
        boolean boolean25 = properties5.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) properties20, (java.lang.Object) 1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties27.isEmpty();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.io.PrintStream printStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.list(printStream31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj6 = properties1.setProperty("tm.out", "hi!");
        boolean boolean7 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties1.entrySet();
        java.lang.String str9 = properties1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{tm.out=hi!}" + "'", str9, "{tm.out=hi!}");
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) -1);
        atomikosProperties0.setMaxTimeout((long) 5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.lang.String str25 = atomikosProperties22.getLogBaseDir();
        atomikosProperties22.setSerialJtaTransactions(true);
        long long28 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties30.entrySet();
        boolean boolean34 = properties20.remove((java.lang.Object) atomikosProperties22, (java.lang.Object) objEntrySet33);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setConsoleFileName("");
        java.lang.String str41 = atomikosProperties36.getLogBaseName();
        long long42 = atomikosProperties36.getCheckpointInterval();
        java.lang.String str43 = atomikosProperties36.getLogBaseDir();
        atomikosProperties36.setEnableLogging(true);
        atomikosProperties36.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setForceShutdownOnVmExit(true);
        atomikosProperties48.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties48.getConsoleLogLevel();
        atomikosProperties36.setConsoleLogLevel(atomikosLoggingLevel57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        atomikosProperties59.setConsoleFileName("");
        java.lang.String str64 = atomikosProperties59.getLogBaseName();
        long long65 = atomikosProperties59.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties59.getConsoleFileName();
        atomikosProperties59.setForceShutdownOnVmExit(false);
        atomikosProperties59.setConsoleFileName("tmlog");
        boolean boolean71 = properties20.remove((java.lang.Object) atomikosLoggingLevel57, (java.lang.Object) "tmlog");
        java.lang.String str73 = properties20.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str75 = properties20.getProperty("tmlog");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        java.lang.String str50 = atomikosProperties43.getOutputDir();
        atomikosProperties43.setLogBaseDir("tmlog");
        java.lang.String str53 = atomikosProperties43.getOutputDir();
        java.lang.String str54 = atomikosProperties43.getOutputDir();
        boolean boolean55 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setDefaultJtaTimeout((long) ' ');
        int int58 = atomikosProperties43.getConsoleFileCount();
        boolean boolean59 = atomikosProperties43.isSerialJtaTransactions();
        boolean boolean60 = properties42.containsValue((java.lang.Object) atomikosProperties43);
        java.io.Writer writer61 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.store(writer61, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int3 = recovery0.getMaxRetries();
        int int4 = recovery0.getMaxRetries();
        long long5 = recovery0.getRetryInterval();
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long7 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        long long10 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(86400000L);
        recovery0.setMaxRetries((int) '4');
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount(0);
        java.lang.String str5 = atomikosProperties0.getService();
        long long6 = atomikosProperties0.getMaxTimeout();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseDir("hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Set<java.lang.Object> objSet21 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setAllowSubTransactions(false);
        atomikosProperties22.setTransactionManagerUniqueName("tmlog");
        boolean boolean29 = properties1.containsKey((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        java.lang.String str33 = atomikosProperties30.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties30.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        atomikosProperties35.setConsoleFileName("");
        java.lang.String str40 = atomikosProperties35.getLogBaseName();
        long long41 = atomikosProperties35.getCheckpointInterval();
        java.lang.String str42 = atomikosProperties35.getLogBaseDir();
        atomikosProperties35.setEnableLogging(true);
        long long45 = atomikosProperties35.getDefaultJtaTimeout();
        boolean boolean46 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setTransactionManagerUniqueName("{}");
        java.lang.String str50 = atomikosProperties35.getLogBaseName();
        long long51 = atomikosProperties35.getMaxTimeout();
        atomikosProperties35.setCheckpointInterval((long) 0);
        int int54 = atomikosProperties35.getConsoleFileLimit();
        int int55 = atomikosProperties35.getMaxActives();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties57.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.keys();
        int int61 = properties57.size();
        java.lang.Object obj62 = properties57.clone();
        boolean boolean63 = properties1.replace((java.lang.Object) recovery34, (java.lang.Object) int55, (java.lang.Object) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery64 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery64.setMaxRetries((-1));
        long long67 = recovery64.getRetryInterval();
        recovery64.setForgetOrphanedLogEntriesDelay(300000L);
        recovery64.setDelay((-1L));
        recovery64.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery64.setRetryInterval(100L);
        boolean boolean76 = properties57.contains((java.lang.Object) recovery64);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 10000L + "'", long67 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setRetryInterval((long) 0);
        recovery3.setMaxRetries((int) (byte) 10);
        long long12 = recovery3.getDelay();
        long long13 = recovery3.getRetryInterval();
        long long14 = recovery3.getDelay();
        int int15 = recovery3.getMaxRetries();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        boolean boolean24 = properties1.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.keys();
        int int30 = properties26.size();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.io.Reader reader32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.load(reader32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setMaxActives((int) (byte) 10);
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(100L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.lang.Object obj27 = properties1.clone();
        java.util.Collection<java.lang.Object> objCollection28 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setConsoleFileName("");
        java.lang.String str34 = atomikosProperties29.getLogBaseName();
        long long35 = atomikosProperties29.getCheckpointInterval();
        java.lang.String str36 = atomikosProperties29.getLogBaseDir();
        atomikosProperties29.setMaxTimeout(300000L);
        java.lang.String str39 = atomikosProperties29.getLogBaseName();
        boolean boolean40 = atomikosProperties29.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = atomikosProperties29.getRecovery();
        java.lang.Object obj42 = properties1.get((java.lang.Object) recovery41);
        recovery41.setDelay(500L);
        long long45 = recovery41.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(recovery41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 86400000L + "'", long45 == 86400000L);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        recovery10.setDelay((long) 10);
        long long13 = recovery10.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(1L);
        long long9 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(0L);
        long long12 = recovery0.getDelay();
        recovery0.setDelay(0L);
        recovery0.setDelay((long) '#');
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setMaxRetries((-1));
        recovery3.setDelay((-1L));
        recovery3.setDelay((long) 19);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setConsoleFileName("tm.out");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setCheckpointInterval((long) (byte) -1);
        atomikosProperties13.setConsoleFileName("");
        java.lang.String str18 = atomikosProperties13.getLogBaseName();
        long long19 = atomikosProperties13.getCheckpointInterval();
        java.lang.String str20 = atomikosProperties13.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.lang.String str33 = properties30.getProperty("");
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj39 = properties27.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties36);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel40 = atomikosProperties36.getConsoleLogLevel();
        atomikosProperties21.setConsoleLogLevel(atomikosLoggingLevel40);
        atomikosProperties13.setConsoleLogLevel(atomikosLoggingLevel40);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel40);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel40 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel40.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<?> wildcardEnumeration14 = properties6.propertyNames();
        boolean boolean15 = properties1.containsValue((java.lang.Object) wildcardEnumeration14);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        boolean boolean18 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int20 = recovery19.getMaxRetries();
        boolean boolean21 = properties17.containsKey((java.lang.Object) recovery19);
        properties17.clear();
        boolean boolean24 = properties17.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties40.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel53);
        boolean boolean57 = properties17.replace((java.lang.Object) properties26, (java.lang.Object) atomikosProperties28, (java.lang.Object) 10.0d);
        java.lang.Object obj58 = properties1.remove((java.lang.Object) properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties17.elements();
        java.util.Enumeration<?> wildcardEnumeration60 = properties17.propertyNames();
        int int61 = properties17.size();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties17.keys();
        java.io.InputStream inputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.loadFromXML(inputStream63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(wildcardEnumeration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(objEnumeration62);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        java.lang.Object obj14 = properties7.setProperty("", "");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.lang.String str19 = properties16.getProperty("hi!");
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        recovery24.setRetryInterval((long) (short) -1);
        recovery24.setRetryInterval((long) 0);
        recovery24.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass33 = recovery24.getClass();
        java.lang.Object obj34 = properties16.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        java.lang.String str39 = properties36.getProperty("hi!");
        java.util.Set<java.lang.String> strSet40 = properties36.stringPropertyNames();
        java.lang.Object obj41 = new java.lang.Object();
        boolean boolean42 = properties7.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties36, obj41);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        atomikosProperties53.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties53.getConsoleLogLevel();
        boolean boolean60 = properties7.containsValue((java.lang.Object) atomikosProperties53);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.lang.String str69 = properties66.getProperty("");
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj75 = properties63.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties72);
        atomikosProperties72.setSerialJtaTransactions(false);
        boolean boolean78 = atomikosProperties72.isForceShutdownOnVmExit();
        java.util.Properties properties79 = atomikosProperties72.asProperties();
        java.lang.Object obj80 = properties79.clone();
        java.util.Properties properties81 = new java.util.Properties(properties79);
        boolean boolean82 = properties7.equals((java.lang.Object) properties79);
        java.lang.String str85 = properties79.getProperty("{{}=}", "{10=#}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNotNull(obj80);
// flaky:         org.junit.Assert.assertEquals(obj80.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj80), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj80), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "{10=#}" + "'", str85, "{10=#}");
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("");
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        boolean boolean9 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        java.lang.String str23 = properties1.toString();
        java.io.PrintStream printStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("{10=#}");
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean14 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int20 = recovery17.getMaxRetries();
        int int21 = recovery17.getMaxRetries();
        long long22 = recovery17.getRetryInterval();
        long long23 = recovery17.getForgetOrphanedLogEntriesDelay();
        int int24 = recovery17.getMaxRetries();
        recovery17.setRetryInterval((long) 1);
        long long27 = recovery17.getForgetOrphanedLogEntriesDelay();
        boolean boolean28 = properties16.containsKey((java.lang.Object) long27);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        recovery32.setRetryInterval((long) (short) -1);
        recovery32.setRetryInterval((long) 0);
        boolean boolean39 = properties16.containsKey((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int41 = recovery40.getMaxRetries();
        recovery40.setForgetOrphanedLogEntriesDelay((-1L));
        long long44 = recovery40.getForgetOrphanedLogEntriesDelay();
        recovery40.setRetryInterval((long) 52);
        recovery40.setForgetOrphanedLogEntriesDelay((long) ' ');
        java.lang.Object obj49 = properties16.remove((java.lang.Object) recovery40);
        java.io.InputStream inputStream50 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.loadFromXML(inputStream50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNull(obj49);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Set<java.lang.Object> objSet14 = properties1.keySet();
        int int15 = properties1.size();
        java.io.InputStream inputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj7 = properties1.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj9 = properties1.remove((java.lang.Object) "");
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.lang.Object obj28 = properties11.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.lang.String str34 = atomikosProperties29.getOutputDir();
        java.util.Properties properties35 = atomikosProperties29.asProperties();
        java.lang.Object obj36 = properties11.remove((java.lang.Object) properties35);
        java.lang.Object obj37 = properties11.clone();
        java.util.Collection<java.lang.Object> objCollection38 = properties11.values();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.lang.String str41 = properties1.getProperty("{tm.out=hi!}");
        properties1.clear();
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream43, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass10 = atomikosProperties0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        boolean boolean36 = properties34.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration37 = properties34.propertyNames();
        java.io.OutputStream outputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties34.store(outputStream38, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.io.Writer writer7 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer7, "{10=#}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.lang.String str27 = properties1.toString();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount(0);
        java.lang.String str5 = atomikosProperties0.getService();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setConsoleFileName("");
        atomikosProperties15.setCheckpointInterval((long) 100);
        boolean boolean22 = atomikosProperties15.isAllowSubTransactions();
        java.util.Properties properties23 = atomikosProperties15.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        java.lang.String str32 = atomikosProperties24.getConsoleFileName();
        java.util.Properties properties33 = atomikosProperties24.asProperties();
        atomikosProperties24.setConsoleFileCount(10);
        java.lang.Object obj36 = properties1.replace((java.lang.Object) properties23, (java.lang.Object) atomikosProperties24);
        java.io.OutputStream outputStream37 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties23.save(outputStream37, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setEnableLogging(false);
        atomikosProperties4.setEnableLogging(false);
        boolean boolean19 = atomikosProperties4.isAllowSubTransactions();
        atomikosProperties4.setMaxTimeout((-1L));
        long long22 = atomikosProperties4.getMaxTimeout();
        boolean boolean23 = properties3.containsKey((java.lang.Object) long22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        atomikosProperties24.setForceShutdownOnVmExit(false);
        atomikosProperties24.setTransactionManagerUniqueName("tmlog");
        atomikosProperties24.setLogBaseDir("");
        int int37 = atomikosProperties24.getConsoleFileCount();
        atomikosProperties24.setSerialJtaTransactions(true);
        atomikosProperties24.setMaxTimeout((long) (byte) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setConsoleFileName("");
        java.lang.String str47 = atomikosProperties42.getLogBaseName();
        long long48 = atomikosProperties42.getCheckpointInterval();
        java.lang.String str49 = atomikosProperties42.getLogBaseDir();
        java.lang.String str50 = atomikosProperties42.getConsoleFileName();
        boolean boolean51 = atomikosProperties42.isThreadedTwoPhaseCommit();
        atomikosProperties42.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj54 = properties3.getOrDefault((java.lang.Object) (byte) -1, (java.lang.Object) atomikosProperties42);
        boolean boolean55 = atomikosProperties42.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties10.isForceShutdownOnVmExit();
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.Object obj25 = properties17.remove((java.lang.Object) false);
        java.util.Enumeration<?> wildcardEnumeration26 = properties17.propertyNames();
        java.util.Set<java.lang.Object> objSet27 = properties17.keySet();
        java.util.Enumeration<?> wildcardEnumeration28 = properties17.propertyNames();
        java.lang.Object obj31 = properties17.setProperty("", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(wildcardEnumeration28);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setLogBaseName("hi!");
        atomikosProperties10.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties10.setCheckpointInterval((long) 18);
        int int25 = atomikosProperties10.getConsoleFileLimit();
        java.util.Properties properties26 = atomikosProperties10.asProperties();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties37.getConsoleLogLevel();
        atomikosProperties37.setConsoleFileLimit((int) '4');
        atomikosProperties37.setMaxActives((int) ' ');
        atomikosProperties37.setLogBaseName("hi!");
        atomikosProperties37.setAllowSubTransactions(false);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Collection<java.lang.Object> objCollection54 = properties51.values();
        java.lang.Object obj55 = properties51.clone();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean58 = properties56.containsValue((java.lang.Object) atomikosProperties57);
        boolean boolean59 = atomikosProperties57.isForceShutdownOnVmExit();
        atomikosProperties57.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj62 = properties26.put((java.lang.Object) atomikosProperties37, (java.lang.Object) atomikosProperties57);
        java.io.InputStream inputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.load(inputStream63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties7);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        atomikosProperties5.setMaxTimeout((-1L));
        boolean boolean28 = atomikosProperties5.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.lang.String str11 = properties1.getProperty("hi!", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str11, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int22 = recovery21.getMaxRetries();
        boolean boolean23 = properties19.containsKey((java.lang.Object) recovery21);
        properties19.clear();
        boolean boolean26 = properties19.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setConsoleFileName("");
        java.lang.String str35 = atomikosProperties30.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj54 = properties42.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties36.setConsoleLogLevel(atomikosLoggingLevel55);
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel55);
        boolean boolean59 = properties19.replace((java.lang.Object) properties28, (java.lang.Object) atomikosProperties30, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet60 = properties28.keySet();
        java.lang.Object obj61 = properties15.remove((java.lang.Object) objSet60);
        java.lang.Object obj62 = properties15.clone();
        java.io.InputStream inputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.load(inputStream63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int20 = recovery17.getMaxRetries();
        int int21 = recovery17.getMaxRetries();
        long long22 = recovery17.getRetryInterval();
        long long23 = recovery17.getForgetOrphanedLogEntriesDelay();
        int int24 = recovery17.getMaxRetries();
        recovery17.setRetryInterval((long) 1);
        long long27 = recovery17.getForgetOrphanedLogEntriesDelay();
        boolean boolean28 = properties16.containsKey((java.lang.Object) long27);
        int int29 = properties16.size();
        java.io.PrintWriter printWriter30 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.list(printWriter30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 18 + "'", int29 == 18);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties27 = atomikosProperties14.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        boolean boolean31 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        boolean boolean33 = properties27.containsValue((java.lang.Object) properties29);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        java.lang.String str38 = properties35.getProperty("hi!");
        java.util.Set<java.lang.String> strSet39 = properties35.stringPropertyNames();
        java.lang.Object obj40 = properties35.clone();
        boolean boolean41 = properties29.containsKey(obj40);
        java.lang.Object obj42 = properties13.remove((java.lang.Object) properties29);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        recovery46.setRetryInterval((long) (short) -1);
        recovery46.setRetryInterval((long) 0);
        recovery46.setMaxRetries((int) (byte) 10);
        long long55 = recovery46.getDelay();
        recovery46.setRetryInterval((long) '4');
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        boolean boolean68 = properties59.contains((java.lang.Object) 0);
        int int69 = properties59.size();
        java.lang.Object obj70 = properties13.replace((java.lang.Object) '4', (java.lang.Object) properties59);
        java.util.Set<java.lang.Object> objSet71 = properties59.keySet();
        int int72 = properties59.size();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 10000L + "'", long55 == 10000L);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNotNull(objSet71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        boolean boolean24 = properties1.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.keys();
        int int30 = properties26.size();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.storeToXML(outputStream32, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str11 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        java.lang.String str23 = properties1.toString();
        java.lang.String str25 = properties1.getProperty("");
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int30 = recovery29.getMaxRetries();
        boolean boolean31 = properties27.containsKey((java.lang.Object) recovery29);
        properties27.clear();
        java.util.Properties properties33 = new java.util.Properties(properties27);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        boolean boolean37 = properties35.isEmpty();
        java.util.Set<java.lang.String> strSet38 = properties35.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.lang.String str44 = atomikosProperties39.getOutputDir();
        java.util.Properties properties45 = atomikosProperties39.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setSerialJtaTransactions(false);
        atomikosProperties46.setOutputDir("");
        java.lang.String str55 = atomikosProperties46.getConsoleFileName();
        java.lang.String str56 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setDefaultJtaTimeout(0L);
        java.lang.Object obj59 = properties35.putIfAbsent((java.lang.Object) atomikosProperties39, (java.lang.Object) atomikosProperties46);
        java.lang.String str61 = properties35.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties35.keys();
        boolean boolean63 = properties27.contains((java.lang.Object) properties35);
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        boolean boolean67 = properties66.isEmpty();
        boolean boolean69 = properties66.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet70 = properties66.keySet();
        java.lang.Object obj73 = properties66.setProperty("", "");
        java.lang.Object obj74 = properties35.putIfAbsent((java.lang.Object) properties64, (java.lang.Object) properties66);
        boolean boolean75 = properties64.isEmpty();
        java.lang.Object obj76 = properties1.remove((java.lang.Object) boolean75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties1.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties1.keys();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tm.out" + "'", str55, "tm.out");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEnumeration78);
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        properties44.clear();
        java.util.Properties properties50 = new java.util.Properties(properties44);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        boolean boolean54 = properties52.isEmpty();
        java.util.Set<java.lang.String> strSet55 = properties52.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        atomikosProperties56.setThreadedTwoPhaseCommit(true);
        java.lang.String str61 = atomikosProperties56.getOutputDir();
        java.util.Properties properties62 = atomikosProperties56.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        atomikosProperties63.setSerialJtaTransactions(false);
        atomikosProperties63.setOutputDir("");
        java.lang.String str72 = atomikosProperties63.getConsoleFileName();
        java.lang.String str73 = atomikosProperties63.getLogBaseName();
        atomikosProperties63.setDefaultJtaTimeout(0L);
        java.lang.Object obj76 = properties52.putIfAbsent((java.lang.Object) atomikosProperties56, (java.lang.Object) atomikosProperties63);
        java.lang.String str78 = properties52.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties52.keys();
        boolean boolean80 = properties44.contains((java.lang.Object) properties52);
        java.util.Properties properties81 = new java.util.Properties();
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        boolean boolean84 = properties83.isEmpty();
        boolean boolean86 = properties83.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet87 = properties83.keySet();
        java.lang.Object obj90 = properties83.setProperty("", "");
        java.lang.Object obj91 = properties52.putIfAbsent((java.lang.Object) properties81, (java.lang.Object) properties83);
        boolean boolean92 = properties81.isEmpty();
        boolean boolean93 = properties1.containsValue((java.lang.Object) properties81);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet94 = properties1.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(properties62);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tm.out" + "'", str72, "tm.out");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objSet87);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(objEntrySet94);
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        java.lang.Object obj20 = null;
        boolean boolean21 = properties1.equals(obj20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties1.keys();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties12.getConsoleLogLevel();
        java.lang.Object obj19 = properties0.putIfAbsent((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        long long20 = atomikosProperties12.getDefaultJtaTimeout();
        java.lang.String str21 = atomikosProperties12.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int23 = atomikosProperties22.getMaxActives();
        java.lang.String str24 = atomikosProperties22.getTransactionManagerUniqueName();
        atomikosProperties22.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties22.setMaxTimeout((long) '#');
        atomikosProperties22.setLogBaseDir("tm.out");
        int int31 = atomikosProperties22.getConsoleFileCount();
        int int32 = atomikosProperties22.getConsoleFileLimit();
        java.util.Properties properties33 = atomikosProperties22.asProperties();
        atomikosProperties22.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties22.getConsoleLogLevel();
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel36);
        atomikosProperties12.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = new java.util.Properties(properties36);
        java.io.Reader reader40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.load(reader40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties30.isEmpty();
        java.lang.Object obj33 = properties13.replace((java.lang.Object) 100.0f, (java.lang.Object) boolean32);
        java.lang.String str36 = properties13.getProperty("{tm.out=hi!}", "tm.out");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long5 = recovery0.getRetryInterval();
        recovery0.setDelay((long) 18);
        long long8 = recovery0.getRetryInterval();
        long long9 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        boolean boolean7 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setCheckpointInterval((long) (byte) -1);
        atomikosProperties8.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties8.getLogBaseName();
        long long14 = atomikosProperties8.getCheckpointInterval();
        atomikosProperties8.setForceShutdownOnVmExit(false);
        int int17 = atomikosProperties8.getConsoleFileLimit();
        int int18 = atomikosProperties8.getConsoleFileCount();
        atomikosProperties8.setMaxActives((int) ' ');
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.lang.String str9 = properties6.getProperty("hi!");
        boolean boolean11 = properties6.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet12 = properties6.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int14 = atomikosProperties13.getMaxActives();
        boolean boolean15 = properties6.equals((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setSerialJtaTransactions(false);
        int int18 = atomikosProperties13.getMaxActives();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int23 = recovery22.getMaxRetries();
        boolean boolean24 = properties20.containsKey((java.lang.Object) recovery22);
        long long25 = recovery22.getRetryInterval();
        java.lang.Object obj26 = properties1.getOrDefault((java.lang.Object) atomikosProperties13, (java.lang.Object) recovery22);
        atomikosProperties13.setConsoleFileName("{tm.out=hi!}");
        atomikosProperties13.setLogBaseDir("{tm.out=hi!}");
        atomikosProperties13.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNotNull(obj26);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int14 = recovery11.getMaxRetries();
        int int15 = recovery11.getMaxRetries();
        java.lang.Object obj16 = properties1.get((java.lang.Object) recovery11);
        long long17 = recovery11.getRetryInterval();
        int int18 = recovery11.getMaxRetries();
        long long19 = recovery11.getDelay();
        long long20 = recovery11.getRetryInterval();
        long long21 = recovery11.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int28 = recovery27.getMaxRetries();
        boolean boolean29 = properties25.containsKey((java.lang.Object) recovery27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties40.getConsoleLogLevel();
        int int45 = atomikosProperties40.getConsoleFileCount();
        java.lang.Object obj46 = properties25.get((java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(true);
        java.util.Properties properties49 = atomikosProperties40.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream52, "{tm.out=hi!}", "{{}=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(objEnumeration50);
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setConsoleFileName("");
        java.lang.String str23 = atomikosProperties18.getLogBaseName();
        long long24 = atomikosProperties18.getCheckpointInterval();
        atomikosProperties18.setForceShutdownOnVmExit(false);
        java.util.Properties properties27 = atomikosProperties18.asProperties();
        boolean boolean28 = atomikosProperties18.isAllowSubTransactions();
        java.lang.Object obj29 = null;
        java.lang.Object obj30 = properties1.getOrDefault((java.lang.Object) boolean28, obj29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        properties32.clear();
        boolean boolean39 = properties32.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj67 = properties55.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties64.getConsoleLogLevel();
        atomikosProperties49.setConsoleLogLevel(atomikosLoggingLevel68);
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel68);
        boolean boolean72 = properties32.replace((java.lang.Object) properties41, (java.lang.Object) atomikosProperties43, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet73 = properties41.keySet();
        boolean boolean74 = properties1.containsValue((java.lang.Object) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setCheckpointInterval((long) (byte) -1);
        atomikosProperties75.setConsoleFileName("");
        java.lang.String str80 = atomikosProperties75.getLogBaseName();
        long long81 = atomikosProperties75.getCheckpointInterval();
        java.lang.String str82 = atomikosProperties75.getLogBaseDir();
        atomikosProperties75.setEnableLogging(true);
        long long85 = atomikosProperties75.getDefaultJtaTimeout();
        java.lang.String str86 = atomikosProperties75.getService();
        atomikosProperties75.setAllowSubTransactions(true);
        boolean boolean89 = atomikosProperties75.isThreadedTwoPhaseCommit();
        java.lang.Object obj90 = properties41.get((java.lang.Object) atomikosProperties75);
        java.util.Properties properties91 = new java.util.Properties(properties41);
        boolean boolean92 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration93 = properties41.keys();
        java.io.OutputStream outputStream94 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties41.storeToXML(outputStream94, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "tmlog" + "'", str80, "tmlog");
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + (-1L) + "'", long81 == (-1L));
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 10000L + "'", long85 == 10000L);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(objEnumeration93);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("");
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setConsoleFileCount(19);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        atomikosProperties0.setOutputDir("{{}=}");
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setService("tm.out");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int14 = recovery11.getMaxRetries();
        int int15 = recovery11.getMaxRetries();
        java.lang.Object obj16 = properties1.get((java.lang.Object) recovery11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.String str35 = properties32.getProperty("");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj41 = properties29.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties38.getConsoleLogLevel();
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties17.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties17.setConsoleFileCount(5);
        atomikosProperties17.setAllowSubTransactions(true);
        boolean boolean49 = properties1.containsValue((java.lang.Object) true);
        java.util.Set<java.lang.String> strSet50 = properties1.stringPropertyNames();
        java.util.Set<java.lang.String> strSet51 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        java.lang.String str59 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setOutputDir("");
        java.lang.String str71 = atomikosProperties62.getConsoleFileName();
        java.lang.String str72 = atomikosProperties62.getLogBaseName();
        atomikosProperties62.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties62.getConsoleLogLevel();
        atomikosProperties52.setConsoleLogLevel(atomikosLoggingLevel75);
        int int77 = atomikosProperties52.getMaxActives();
        atomikosProperties52.setAllowSubTransactions(true);
        int int80 = atomikosProperties52.getConsoleFileCount();
        long long81 = atomikosProperties52.getDefaultJtaTimeout();
        java.lang.Object obj82 = properties1.get((java.lang.Object) atomikosProperties52);
        atomikosProperties52.setAllowSubTransactions(true);
        atomikosProperties52.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tm.out" + "'", str71, "tm.out");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77 == 50);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10000L + "'", long81 == 10000L);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean8 = properties6.containsValue((java.lang.Object) atomikosProperties7);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties6.entrySet();
        java.util.Properties properties10 = new java.util.Properties(properties6);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int15 = recovery14.getMaxRetries();
        boolean boolean16 = properties12.containsKey((java.lang.Object) recovery14);
        recovery14.setMaxRetries((int) '4');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        atomikosProperties19.setCheckpointInterval((long) 100);
        atomikosProperties19.setConsoleFileName("tm.out");
        atomikosProperties19.setForceShutdownOnVmExit(false);
        int int30 = atomikosProperties19.getConsoleFileLimit();
        atomikosProperties19.setConsoleFileName("{10=#}");
        java.lang.String str33 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean36 = properties10.remove((java.lang.Object) recovery14, (java.lang.Object) atomikosProperties19);
        java.util.Collection<java.lang.Object> objCollection37 = properties10.values();
        java.lang.String str40 = properties10.getProperty("tm.out", "{{}=false}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{{}=false}" + "'", str40, "{{}=false}");
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties4.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setConsoleFileName("");
        java.lang.String str15 = atomikosProperties10.getLogBaseName();
        long long16 = atomikosProperties10.getCheckpointInterval();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        java.util.Properties properties19 = atomikosProperties10.asProperties();
        boolean boolean20 = atomikosProperties10.isAllowSubTransactions();
        atomikosProperties10.setMaxActives((-1));
        atomikosProperties10.setMaxTimeout((long) '4');
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        boolean boolean27 = properties4.containsKey((java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties10.getRecovery();
        recovery28.setRetryInterval((long) 1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(recovery28);
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        long long26 = atomikosProperties5.getMaxTimeout();
        boolean boolean27 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str28 = atomikosProperties5.getService();
        atomikosProperties5.setMaxTimeout((long) 19);
        atomikosProperties5.setThreadedTwoPhaseCommit(false);
        java.lang.String str33 = atomikosProperties5.getLogBaseName();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties1.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean15 = properties12.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet16 = properties12.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        atomikosProperties17.setSerialJtaTransactions(false);
        atomikosProperties17.setOutputDir("");
        java.lang.String str26 = atomikosProperties17.getConsoleFileName();
        java.lang.String str27 = atomikosProperties17.getLogBaseName();
        atomikosProperties17.setEnableLogging(false);
        boolean boolean30 = properties12.containsKey((java.lang.Object) atomikosProperties17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties12.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        java.lang.String str34 = atomikosProperties32.getTransactionManagerUniqueName();
        atomikosProperties32.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties32.setMaxActives((int) (short) 10);
        java.lang.String str39 = atomikosProperties32.getConsoleFileName();
        java.lang.Object obj40 = properties1.replace((java.lang.Object) properties12, (java.lang.Object) atomikosProperties32);
        java.lang.Object obj41 = properties12.clone();
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties12.storeToXML(outputStream42, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(obj41);
        org.junit.Assert.assertEquals(obj41.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj41), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj41), "{}");
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        atomikosProperties37.setForceShutdownOnVmExit(true);
        java.lang.Object obj45 = properties1.remove((java.lang.Object) true);
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream46, "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.String str25 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseDir("tmlog");
        atomikosProperties18.setMaxTimeout((long) 'a');
        int int30 = atomikosProperties18.getConsoleFileLimit();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        recovery34.setRetryInterval((long) (short) -1);
        recovery34.setRetryInterval((long) 0);
        recovery34.setMaxRetries((int) (byte) 10);
        recovery34.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery34.setMaxRetries(52);
        long long47 = recovery34.getRetryInterval();
        recovery34.setDelay((long) (short) -1);
        java.lang.Object obj50 = properties17.getOrDefault((java.lang.Object) atomikosProperties18, (java.lang.Object) recovery34);
        boolean boolean51 = atomikosProperties18.isAllowSubTransactions();
        atomikosProperties18.setLogBaseName("tmlog");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.String str10 = properties1.getProperty("{}");
        java.io.InputStream inputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        int int20 = properties1.size();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        properties22.clear();
        java.util.Properties properties28 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.keys();
        java.util.Set<java.lang.String> strSet30 = properties28.stringPropertyNames();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        recovery34.setRetryInterval((long) (short) -1);
        recovery34.setDelay(10L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setThreadedTwoPhaseCommit(true);
        atomikosProperties41.setSerialJtaTransactions(false);
        atomikosProperties41.setOutputDir("");
        atomikosProperties41.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj52 = properties28.getOrDefault((java.lang.Object) recovery34, (java.lang.Object) atomikosProperties41);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj66 = properties54.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties63);
        atomikosProperties63.setSerialJtaTransactions(false);
        int int69 = atomikosProperties63.getConsoleFileCount();
        atomikosProperties63.setForceShutdownOnVmExit(false);
        atomikosProperties63.setForceShutdownOnVmExit(false);
        java.lang.Object obj74 = properties1.putIfAbsent((java.lang.Object) atomikosProperties41, (java.lang.Object) false);
        int int75 = atomikosProperties41.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 50 + "'", int75 == 50);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval((long) 52);
        recovery0.setDelay((long) ' ');
        long long9 = recovery0.getRetryInterval();
        int int10 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 52L + "'", long9 == 52L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        atomikosProperties0.setLogBaseDir("{10=#}");
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        atomikosProperties0.setLogBaseDir("hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setMaxRetries((int) '4');
        recovery3.setForgetOrphanedLogEntriesDelay((long) 100);
        recovery3.setMaxRetries((int) 'a');
        long long12 = recovery3.getRetryInterval();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setMaxTimeout(100L);
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setTransactionManagerUniqueName("{{}=}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout(0L);
        atomikosProperties0.setDefaultJtaTimeout(0L);
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setMaxActives(10);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setService("{10=#}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties0.getRecovery();
        int int31 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj52 = properties35.clone();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.String str57 = properties54.getProperty("hi!");
        boolean boolean59 = properties54.contains((java.lang.Object) 10.0f);
        java.lang.Object obj60 = properties7.replace(obj52, (java.lang.Object) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int62 = atomikosProperties61.getMaxActives();
        java.lang.String str63 = atomikosProperties61.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel64 = atomikosProperties61.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties61.getConsoleLogLevel();
        atomikosProperties61.setConsoleFileName("");
        java.lang.Class<?> wildcardClass68 = atomikosProperties61.getClass();
        boolean boolean69 = properties7.containsKey((java.lang.Object) atomikosProperties61);
        java.io.InputStream inputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.load(inputStream70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 50 + "'", int62 == 50);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel64 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel64.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        int int24 = properties1.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties1.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties1.elements();
        java.lang.Object obj27 = properties1.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objEntrySet25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        boolean boolean5 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getLogBaseName();
        long long12 = atomikosProperties6.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties6.getLogBaseDir();
        atomikosProperties6.setEnableLogging(true);
        long long16 = atomikosProperties6.getDefaultJtaTimeout();
        boolean boolean17 = atomikosProperties6.isSerialJtaTransactions();
        java.lang.String str18 = atomikosProperties6.getOutputDir();
        java.lang.String str19 = atomikosProperties6.getOutputDir();
        java.util.Properties properties20 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        java.lang.String str25 = properties22.getProperty("hi!");
        boolean boolean27 = properties22.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet28 = properties22.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getMaxActives();
        boolean boolean31 = properties22.equals((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setSerialJtaTransactions(false);
        int int34 = atomikosProperties29.getMaxActives();
        boolean boolean35 = atomikosProperties29.isEnableLogging();
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = atomikosProperties29.getRecovery();
        boolean boolean38 = properties1.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) recovery37);
        java.util.Enumeration<?> wildcardEnumeration39 = properties1.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties1.keys();
        java.io.InputStream inputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(recovery37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration40);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        boolean boolean13 = properties1.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration14 = properties1.propertyNames();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream15, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        boolean boolean47 = properties44.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.lang.String str49 = properties44.toString();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.lang.Object obj56 = properties53.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str57 = properties53.toString();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        boolean boolean62 = properties59.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet63 = properties59.keySet();
        java.lang.Object obj65 = properties59.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj67 = properties59.remove((java.lang.Object) "");
        boolean boolean68 = properties53.contains((java.lang.Object) "");
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties53.elements();
        java.lang.Object obj70 = properties44.remove((java.lang.Object) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery71.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int74 = recovery71.getMaxRetries();
        boolean boolean75 = properties53.containsKey((java.lang.Object) recovery71);
        java.io.OutputStream outputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.storeToXML(outputStream76, "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{10=#}" + "'", str57, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("{10=#}");
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setMaxTimeout(1L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(recovery19);
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        java.lang.String str26 = atomikosProperties21.getOutputDir();
        java.lang.String str27 = atomikosProperties21.getTransactionManagerUniqueName();
        java.lang.Object obj28 = properties1.get((java.lang.Object) atomikosProperties21);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties29.keys();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        int int73 = atomikosProperties68.getConsoleFileCount();
        java.lang.Class<?> wildcardClass74 = atomikosProperties68.getClass();
        java.lang.Object obj75 = properties1.put((java.lang.Object) properties29, (java.lang.Object) atomikosProperties68);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet76 = properties1.entrySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(objEntrySet76);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        long long8 = atomikosProperties0.getCheckpointInterval();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        java.lang.String str10 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int14 = recovery11.getMaxRetries();
        int int15 = recovery11.getMaxRetries();
        java.lang.Object obj16 = properties1.get((java.lang.Object) recovery11);
        long long17 = recovery11.getRetryInterval();
        recovery11.setRetryInterval((long) 100);
        long long20 = recovery11.getDelay();
        recovery11.setMaxRetries((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        long long8 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) 100);
        java.lang.Class<?> wildcardClass13 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties1.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj21 = properties9.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties18);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties18.getConsoleLogLevel();
        atomikosProperties18.setConsoleFileLimit((int) '4');
        atomikosProperties18.setMaxActives((int) ' ');
        atomikosProperties18.setForceShutdownOnVmExit(true);
        atomikosProperties18.setMaxTimeout(0L);
        atomikosProperties18.setService("");
        java.lang.Object obj33 = properties1.remove((java.lang.Object) "");
        java.lang.Object obj36 = properties1.setProperty("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", "tmlog");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        long long49 = atomikosProperties40.getMaxTimeout();
        java.lang.String str50 = atomikosProperties40.getOutputDir();
        java.lang.Class<?> wildcardClass51 = atomikosProperties40.getClass();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str10 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        properties1.clear();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        java.lang.String str55 = properties52.getProperty("hi!");
        boolean boolean57 = properties52.contains((java.lang.Object) 10.0f);
        boolean boolean58 = properties52.isEmpty();
        boolean boolean59 = properties1.containsValue((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str61 = atomikosProperties60.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = atomikosProperties60.getRecovery();
        atomikosProperties60.setEnableLogging(false);
        long long65 = atomikosProperties60.getMaxTimeout();
        atomikosProperties60.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties60.setLogBaseDir("hi!");
        boolean boolean70 = atomikosProperties60.isForceShutdownOnVmExit();
        atomikosProperties60.setDefaultJtaTimeout((long) 0);
        java.lang.Object obj73 = properties1.get((java.lang.Object) 0);
        java.lang.String str76 = properties1.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(recovery62);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 300000L + "'", long65 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{{}={}}" + "'", str76, "{{}={}}");
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration10 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getLogBaseDir();
        atomikosProperties18.setLogBaseDir("");
        java.lang.String str22 = atomikosProperties18.getService();
        boolean boolean23 = atomikosProperties18.isEnableLogging();
        boolean boolean24 = atomikosProperties18.isThreadedTwoPhaseCommit();
        atomikosProperties18.setService("hi!");
        boolean boolean27 = properties4.equals((java.lang.Object) atomikosProperties18);
        java.lang.String str29 = properties4.getProperty("tmlog");
        java.lang.String str32 = properties4.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str32, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        boolean boolean43 = properties1.isEmpty();
        int int44 = properties1.size();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Enumeration<?> wildcardEnumeration54 = properties46.propertyNames();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.lang.String str62 = properties59.getProperty("");
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj68 = properties56.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setOutputDir("");
        boolean boolean73 = properties46.containsKey((java.lang.Object) "");
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties79.elements();
        java.lang.String str82 = properties79.getProperty("");
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj88 = properties76.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties85);
        atomikosProperties85.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel91 = atomikosProperties85.getConsoleLogLevel();
        java.lang.String str92 = atomikosProperties85.getTransactionManagerUniqueName();
        java.lang.Object obj93 = properties46.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties85);
        atomikosProperties85.setService("hi!");
        boolean boolean96 = properties1.contains((java.lang.Object) atomikosProperties85);
        atomikosProperties85.setSerialJtaTransactions(false);
        boolean boolean99 = atomikosProperties85.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel91 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel91.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setOutputDir("tmlog");
        long long12 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNotNull(recovery13);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount(0);
        java.lang.Class<?> wildcardClass5 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties0.getConsoleLogLevel();
        int int20 = atomikosProperties0.getMaxActives();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel35);
        long long37 = atomikosProperties0.getCheckpointInterval();
        boolean boolean38 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 500L + "'", long37 == 500L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Collection<java.lang.Object> objCollection5 = properties1.values();
        java.util.Properties properties6 = new java.util.Properties();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        boolean boolean20 = properties8.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean19);
        boolean boolean21 = properties8.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        long long29 = atomikosProperties23.getCheckpointInterval();
        java.lang.String str30 = atomikosProperties23.getLogBaseDir();
        atomikosProperties23.setEnableLogging(true);
        java.lang.Object obj33 = properties6.putIfAbsent((java.lang.Object) objEnumeration22, (java.lang.Object) atomikosProperties23);
        boolean boolean34 = atomikosProperties23.isEnableLogging();
        boolean boolean35 = atomikosProperties23.isEnableLogging();
        boolean boolean36 = properties1.equals((java.lang.Object) atomikosProperties23);
        atomikosProperties23.setMaxActives(52);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout(300000L);
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) (short) 100);
        long long13 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 300000L + "'", long13 == 300000L);
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        boolean boolean28 = atomikosProperties17.isSerialJtaTransactions();
        boolean boolean29 = atomikosProperties17.isForceShutdownOnVmExit();
        java.lang.String str30 = atomikosProperties17.getLogBaseName();
        java.util.Properties properties31 = atomikosProperties17.asProperties();
        java.io.InputStream inputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.loadFromXML(inputStream32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNotNull(properties31);
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.lang.Object obj7 = properties1.clone();
        java.util.Properties properties8 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.keys();
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream10, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNotNull(objEnumeration9);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        boolean boolean47 = properties44.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.lang.String str49 = properties44.toString();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.lang.Object obj56 = properties53.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str57 = properties53.toString();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        boolean boolean62 = properties59.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet63 = properties59.keySet();
        java.lang.Object obj65 = properties59.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj67 = properties59.remove((java.lang.Object) "");
        boolean boolean68 = properties53.contains((java.lang.Object) "");
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties53.elements();
        java.lang.Object obj70 = properties44.remove((java.lang.Object) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery71.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int74 = recovery71.getMaxRetries();
        boolean boolean75 = properties53.containsKey((java.lang.Object) recovery71);
        java.lang.String str78 = properties53.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tm.out");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{10=#}" + "'", str57, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tm.out" + "'", str78, "tm.out");
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setOutputDir("{{}=}");
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(properties11);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.lang.String str7 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setCheckpointInterval((long) (byte) -1);
        atomikosProperties8.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties8.getOutputDir();
        int int14 = atomikosProperties8.getConsoleFileCount();
        atomikosProperties8.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int18 = recovery17.getMaxRetries();
        recovery17.setForgetOrphanedLogEntriesDelay((-1L));
        recovery17.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery17.setForgetOrphanedLogEntriesDelay(100L);
        recovery17.setMaxRetries((int) (byte) 0);
        long long27 = recovery17.getForgetOrphanedLogEntriesDelay();
        java.lang.Object obj28 = properties1.getOrDefault((java.lang.Object) "", (java.lang.Object) recovery17);
        long long29 = recovery17.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{}" + "'", str7, "{}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 100L + "'", long27 == 100L);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 100L + "'", long29 == 100L);
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setMaxRetries((int) (byte) 100);
        recovery0.setDelay((long) (short) 10);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        long long29 = atomikosProperties23.getCheckpointInterval();
        java.lang.Object obj30 = properties1.get((java.lang.Object) atomikosProperties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        atomikosProperties31.setConsoleFileName("");
        java.lang.String str36 = atomikosProperties31.getLogBaseName();
        long long37 = atomikosProperties31.getCheckpointInterval();
        java.lang.String str38 = atomikosProperties31.getConsoleFileName();
        long long39 = atomikosProperties31.getCheckpointInterval();
        java.lang.String str40 = atomikosProperties31.getLogBaseName();
        atomikosProperties31.setOutputDir("tmlog");
        atomikosProperties31.setDefaultJtaTimeout((long) 100);
        atomikosProperties31.setForceShutdownOnVmExit(false);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        java.util.Enumeration<?> wildcardEnumeration56 = properties48.propertyNames();
        java.lang.Object obj57 = properties1.put((java.lang.Object) atomikosProperties31, (java.lang.Object) wildcardEnumeration56);
        boolean boolean58 = atomikosProperties31.isEnableLogging();
        java.lang.String str59 = atomikosProperties31.getOutputDir();
        boolean boolean60 = atomikosProperties31.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37 == (-1L));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(wildcardEnumeration56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        long long4 = recovery0.getRetryInterval();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 10000L + "'", long4 == 10000L);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setMaxRetries((int) '4');
        recovery3.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.keys();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        boolean boolean22 = properties10.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean21);
        boolean boolean23 = properties10.isEmpty();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        boolean boolean28 = properties25.containsKey((java.lang.Object) 10.0f);
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.lang.String str30 = properties10.toString();
        java.lang.String str32 = properties10.getProperty("hi!");
        boolean boolean33 = properties10.isEmpty();
        java.util.Set<java.lang.Object> objSet34 = properties10.keySet();
        java.lang.Object obj37 = properties10.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tmlog");
        java.util.Collection<java.lang.Object> objCollection38 = properties10.values();
        java.lang.Object obj39 = properties7.get((java.lang.Object) properties10);
        java.io.OutputStream outputStream40 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties7.store(outputStream40, "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objCollection38);
        org.junit.Assert.assertNull(obj39);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties19.getConsoleFileName();
        long long27 = atomikosProperties19.getCheckpointInterval();
        java.lang.Object obj28 = properties4.remove((java.lang.Object) atomikosProperties19);
        long long29 = atomikosProperties19.getMaxTimeout();
        atomikosProperties19.setDefaultJtaTimeout((long) 5);
        long long32 = atomikosProperties19.getCheckpointInterval();
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        java.io.InputStream inputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.load(inputStream18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setConsoleFileName("");
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        int int11 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str14 = atomikosProperties0.getConsoleFileName();
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean28 = atomikosProperties12.isForceShutdownOnVmExit();
        java.lang.String str29 = atomikosProperties12.getService();
        atomikosProperties12.setOutputDir("{10=#}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.io.InputStream inputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.load(inputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(1L);
        long long9 = recovery0.getDelay();
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay(35L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        java.lang.Object obj20 = null;
        boolean boolean21 = properties1.equals(obj20);
        java.util.Properties properties22 = new java.util.Properties(properties1);
        java.io.PrintWriter printWriter23 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties22.list(printWriter23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int8 = recovery7.getMaxRetries();
        boolean boolean9 = properties5.containsKey((java.lang.Object) recovery7);
        properties5.clear();
        boolean boolean12 = properties5.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj13 = null;
        boolean boolean14 = properties5.equals(obj13);
        java.lang.String str15 = properties5.toString();
        java.util.Collection<java.lang.Object> objCollection16 = properties5.values();
        java.util.Set<java.lang.Object> objSet17 = properties5.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties5.elements();
        java.lang.String str20 = properties5.getProperty("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        boolean boolean36 = atomikosProperties31.isForceShutdownOnVmExit();
        boolean boolean37 = properties1.remove((java.lang.Object) "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", (java.lang.Object) boolean36);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "{}" + "'", str15, "{}");
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties12.getConsoleLogLevel();
        java.lang.Object obj19 = properties0.putIfAbsent((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setLogBaseDir("");
        atomikosProperties20.setForceShutdownOnVmExit(false);
        long long25 = atomikosProperties20.getCheckpointInterval();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj32 = properties29.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str34 = atomikosProperties33.getLogBaseDir();
        atomikosProperties33.setLogBaseDir("");
        java.lang.String str37 = atomikosProperties33.getService();
        boolean boolean38 = atomikosProperties33.isEnableLogging();
        boolean boolean39 = atomikosProperties33.isThreadedTwoPhaseCommit();
        boolean boolean40 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.String str41 = atomikosProperties33.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.lang.String str47 = atomikosProperties42.getOutputDir();
        java.lang.String str48 = atomikosProperties42.getTransactionManagerUniqueName();
        int int49 = atomikosProperties42.getConsoleFileCount();
        java.lang.String str50 = atomikosProperties42.getLogBaseDir();
        java.lang.String str51 = atomikosProperties42.getConsoleFileName();
        java.lang.Object obj52 = properties29.putIfAbsent((java.lang.Object) str41, (java.lang.Object) atomikosProperties42);
        java.lang.Object obj53 = properties0.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties42);
        int int54 = properties0.size();
        java.io.PrintStream printStream55 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 500L + "'", long25 == 500L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tm.out" + "'", str51, "tm.out");
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj7 = properties1.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj9 = properties1.remove((java.lang.Object) "");
        java.util.Set<java.lang.Object> objSet10 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getCheckpointInterval();
        atomikosProperties11.setForceShutdownOnVmExit(false);
        atomikosProperties11.setTransactionManagerUniqueName("tmlog");
        atomikosProperties11.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties11.getRecovery();
        boolean boolean25 = properties1.containsKey((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setConsoleFileName("");
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        long long32 = atomikosProperties26.getCheckpointInterval();
        java.lang.String str33 = atomikosProperties26.getLogBaseDir();
        atomikosProperties26.setEnableLogging(true);
        long long36 = atomikosProperties26.getDefaultJtaTimeout();
        java.lang.String str37 = atomikosProperties26.getService();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.lang.String str48 = atomikosProperties43.getOutputDir();
        java.util.Properties properties49 = atomikosProperties43.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setOutputDir("");
        java.lang.String str59 = atomikosProperties50.getConsoleFileName();
        java.lang.String str60 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setDefaultJtaTimeout(0L);
        java.lang.Object obj63 = properties39.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties50);
        atomikosProperties50.setSerialJtaTransactions(false);
        java.lang.Object obj66 = properties1.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties50);
        java.lang.Object obj69 = properties1.setProperty("tmlog", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str72 = properties1.getProperty("", "tm.out");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(recovery24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tm.out" + "'", str72, "tm.out");
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.io.PrintStream printStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery15 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery15.setRetryInterval((long) 100);
        int int18 = recovery15.getMaxRetries();
        recovery15.setDelay((long) (short) 100);
        recovery15.setDelay((long) (byte) 1);
        boolean boolean23 = properties14.containsKey((java.lang.Object) (byte) 1);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties25.entrySet();
        java.lang.Object obj30 = properties25.setProperty("tm.out", "hi!");
        boolean boolean31 = properties25.isEmpty();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery35 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int36 = recovery35.getMaxRetries();
        boolean boolean37 = properties33.containsKey((java.lang.Object) recovery35);
        recovery35.setRetryInterval((long) (short) -1);
        recovery35.setRetryInterval((long) 0);
        recovery35.setMaxRetries((int) (byte) 10);
        long long44 = recovery35.getDelay();
        long long45 = recovery35.getRetryInterval();
        long long46 = recovery35.getRetryInterval();
        long long47 = recovery35.getDelay();
        java.lang.Object obj48 = properties14.replace((java.lang.Object) boolean31, (java.lang.Object) long47);
        java.util.Properties properties49 = new java.util.Properties(properties14);
        java.util.Set<java.lang.Object> objSet50 = properties49.keySet();
        java.io.OutputStream outputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.save(outputStream51, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 5 + "'", int36 == 5);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objSet50);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        int int13 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) 100);
        int int3 = recovery0.getMaxRetries();
        int int4 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) 50);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) 10);
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        int int14 = atomikosProperties0.getMaxActives();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.save(outputStream15, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval((long) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int25 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str4 = properties1.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        atomikosProperties5.setForceShutdownOnVmExit(false);
        java.util.Properties properties14 = atomikosProperties5.asProperties();
        boolean boolean15 = atomikosProperties5.isAllowSubTransactions();
        int int16 = atomikosProperties5.getConsoleFileLimit();
        boolean boolean17 = properties1.containsKey((java.lang.Object) int16);
        java.lang.String str19 = properties1.getProperty("tmlog");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        java.lang.String str24 = properties21.getProperty("hi!");
        boolean boolean26 = properties21.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet27 = properties21.keySet();
        java.lang.Object obj28 = properties21.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setConsoleFileName("");
        java.lang.String str34 = atomikosProperties29.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.lang.String str47 = properties44.getProperty("");
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj53 = properties41.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties50);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties50.getConsoleLogLevel();
        atomikosProperties35.setConsoleLogLevel(atomikosLoggingLevel54);
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel54);
        atomikosProperties29.setConsoleFileCount(5);
        boolean boolean59 = atomikosProperties29.isAllowSubTransactions();
        atomikosProperties29.setTransactionManagerUniqueName("{}");
        java.lang.String str62 = atomikosProperties29.getLogBaseDir();
        java.lang.Object obj63 = properties1.getOrDefault((java.lang.Object) properties21, (java.lang.Object) str62);
        java.lang.Object obj64 = properties21.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        boolean boolean43 = properties1.isEmpty();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        boolean boolean56 = properties55.isEmpty();
        boolean boolean57 = properties45.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean56);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        boolean boolean67 = properties45.contains((java.lang.Object) properties59);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.io.Writer writer69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer69, "{{}=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        boolean boolean10 = properties6.containsKey((java.lang.Object) recovery8);
        recovery8.setRetryInterval((long) (short) -1);
        recovery8.setRetryInterval((long) 0);
        recovery8.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass17 = recovery8.getClass();
        boolean boolean18 = properties1.contains((java.lang.Object) recovery8);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties20.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Set<java.lang.String> strSet42 = properties37.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties37.entrySet();
        java.lang.Object obj44 = properties20.get((java.lang.Object) objEntrySet43);
        boolean boolean45 = properties1.contains((java.lang.Object) objEntrySet43);
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream46, "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setCheckpointInterval((long) (byte) -1);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj26 = properties14.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties23);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties8.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setCheckpointInterval(10L);
        java.lang.String str32 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties0.getConsoleLogLevel();
        java.lang.Class<?> wildcardClass34 = atomikosProperties0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        java.lang.String str30 = atomikosProperties26.getConsoleFileName();
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int49 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        boolean boolean52 = properties1.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) false);
        java.util.Properties properties53 = atomikosProperties26.asProperties();
        long long54 = atomikosProperties26.getMaxTimeout();
        atomikosProperties26.setCheckpointInterval(97L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 300000L + "'", long54 == 300000L);
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setConsoleFileCount(100);
        int int11 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = null;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        atomikosProperties0.setMaxActives(32);
        atomikosProperties0.setConsoleFileCount((int) 'a');
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        long long5 = atomikosProperties0.getCheckpointInterval();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileCount((int) (short) 1);
        int int9 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet24 = properties15.keySet();
        java.lang.Object obj27 = properties15.setProperty("tm.out", "{10=#}");
        java.util.Set<java.lang.Object> objSet28 = properties15.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.lang.String str34 = atomikosProperties29.getOutputDir();
        java.lang.String str35 = atomikosProperties29.getTransactionManagerUniqueName();
        int int36 = atomikosProperties29.getConsoleFileCount();
        java.lang.String str37 = atomikosProperties29.getLogBaseDir();
        java.lang.String str38 = atomikosProperties29.getConsoleFileName();
        java.lang.Class<?> wildcardClass39 = atomikosProperties29.getClass();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.lang.String str47 = properties44.getProperty("");
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj53 = properties41.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties50);
        atomikosProperties50.setSerialJtaTransactions(false);
        int int56 = atomikosProperties50.getConsoleFileCount();
        atomikosProperties50.setForceShutdownOnVmExit(false);
        atomikosProperties50.setForceShutdownOnVmExit(false);
        atomikosProperties50.setLogBaseName("hi!");
        java.lang.Object obj63 = properties15.replace((java.lang.Object) wildcardClass39, (java.lang.Object) atomikosProperties50);
        java.lang.Class<?> wildcardClass64 = properties15.getClass();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tm.out" + "'", str38, "tm.out");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = new java.util.Properties(properties36);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.lang.String str47 = properties44.getProperty("");
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj53 = properties41.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties50);
        atomikosProperties50.setSerialJtaTransactions(false);
        boolean boolean56 = atomikosProperties50.isForceShutdownOnVmExit();
        java.util.Properties properties57 = atomikosProperties50.asProperties();
        java.lang.Object obj58 = properties57.clone();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.lang.Object obj62 = properties39.setProperty("hi!", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.InputStream inputStream63 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties39.loadFromXML(inputStream63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertNotNull(obj58);
// flaky:         org.junit.Assert.assertEquals(obj58.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        java.lang.Object obj46 = properties1.setProperty("{10=#}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties47 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties1.elements();
        java.util.Set<java.lang.Object> objSet49 = properties1.keySet();
        java.lang.Object obj50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj51 = properties1.get(obj50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objSet49);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        java.util.Properties properties0 = new java.util.Properties();
        java.lang.String str2 = properties0.getProperty("{10=#}");
        boolean boolean3 = properties0.isEmpty();
        java.lang.Object obj4 = properties0.clone();
        java.lang.Class<?> wildcardClass5 = obj4.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(obj4);
        org.junit.Assert.assertEquals(obj4.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj4), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj4), "{}");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount(0);
        atomikosProperties0.setConsoleFileCount((int) ' ');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        long long49 = atomikosProperties43.getCheckpointInterval();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        atomikosProperties43.setTransactionManagerUniqueName("tmlog");
        atomikosProperties43.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties43.getRecovery();
        java.lang.Object obj57 = properties38.get((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean60 = atomikosProperties43.isThreadedTwoPhaseCommit();
        long long61 = atomikosProperties43.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 300000L + "'", long61 == 300000L);
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setSerialJtaTransactions(true);
        atomikosProperties19.setLogBaseName("{10=#}");
        atomikosProperties19.setEnableLogging(false);
        boolean boolean32 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.setMaxActives((int) '4');
        atomikosProperties19.setTransactionManagerUniqueName("{[]=WARN}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.lang.String str5 = atomikosProperties0.getService();
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setCheckpointInterval(100L);
        atomikosProperties0.setDefaultJtaTimeout((long) 10);
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties1.keys();
        java.lang.String str15 = properties1.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties1.entrySet();
        java.util.Properties properties17 = new java.util.Properties(properties1);
        java.io.Writer writer18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties17.store(writer18, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEntrySet16);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Set<java.lang.Object> objSet21 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setAllowSubTransactions(false);
        atomikosProperties22.setTransactionManagerUniqueName("tmlog");
        boolean boolean29 = properties1.containsKey((java.lang.Object) "tmlog");
        java.lang.String str30 = properties1.toString();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{}" + "'", str30, "{}");
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties6.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties6.getConsoleLogLevel();
        boolean boolean17 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties6.getConsoleLogLevel();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        boolean boolean24 = properties1.isEmpty();
        java.util.Set<java.lang.Object> objSet25 = properties1.keySet();
        java.io.Reader reader26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objSet25);
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int22 = recovery21.getMaxRetries();
        boolean boolean23 = properties19.containsKey((java.lang.Object) recovery21);
        properties19.clear();
        boolean boolean26 = properties19.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setConsoleFileName("");
        java.lang.String str35 = atomikosProperties30.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj54 = properties42.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties51);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties51.getConsoleLogLevel();
        atomikosProperties36.setConsoleLogLevel(atomikosLoggingLevel55);
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel55);
        boolean boolean59 = properties19.replace((java.lang.Object) properties28, (java.lang.Object) atomikosProperties30, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet60 = properties28.keySet();
        java.lang.Object obj61 = properties15.remove((java.lang.Object) objSet60);
        java.lang.Object obj62 = properties15.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str64 = atomikosProperties63.getLogBaseDir();
        java.lang.String str65 = atomikosProperties63.getLogBaseDir();
        boolean boolean66 = atomikosProperties63.isAllowSubTransactions();
        boolean boolean67 = atomikosProperties63.isSerialJtaTransactions();
        atomikosProperties63.setEnableLogging(false);
        atomikosProperties63.setTransactionManagerUniqueName("tmlog");
        atomikosProperties63.setAllowSubTransactions(false);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        boolean boolean76 = properties75.isEmpty();
        java.lang.String str78 = properties75.getProperty("hi!");
        boolean boolean80 = properties75.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet81 = properties75.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int83 = atomikosProperties82.getMaxActives();
        boolean boolean84 = properties75.equals((java.lang.Object) atomikosProperties82);
        atomikosProperties82.setSerialJtaTransactions(false);
        int int87 = atomikosProperties82.getMaxActives();
        boolean boolean88 = atomikosProperties82.isEnableLogging();
        java.lang.String str89 = atomikosProperties82.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery90 = atomikosProperties82.getRecovery();
        java.lang.Object obj91 = properties15.putIfAbsent((java.lang.Object) atomikosProperties63, (java.lang.Object) recovery90);
        atomikosProperties63.setLogBaseDir("{10=#}");
        atomikosProperties63.setMaxActives(50);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objSet81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 50 + "'", int83 == 50);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 50 + "'", int87 == 50);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tmlog" + "'", str89, "tmlog");
        org.junit.Assert.assertNotNull(recovery90);
        org.junit.Assert.assertNull(obj91);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties0.getConsoleLogLevel();
        int int17 = atomikosProperties0.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setMaxRetries((int) '4');
        recovery3.setMaxRetries((int) (short) -1);
        long long10 = recovery3.getRetryInterval();
        recovery3.setMaxRetries((int) '#');
        long long13 = recovery3.getForgetOrphanedLogEntriesDelay();
        recovery3.setForgetOrphanedLogEntriesDelay((long) 2);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 86400000L + "'", long13 == 86400000L);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getService();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        boolean boolean15 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties1.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int19 = atomikosProperties18.getMaxActives();
        java.lang.String str20 = atomikosProperties18.getTransactionManagerUniqueName();
        java.lang.String str21 = atomikosProperties18.getLogBaseName();
        boolean boolean22 = atomikosProperties18.isThreadedTwoPhaseCommit();
        atomikosProperties18.setService("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = atomikosProperties18.getRecovery();
        boolean boolean26 = properties1.contains((java.lang.Object) atomikosProperties18);
        java.lang.String str29 = properties1.getProperty("", "{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(recovery25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{{}={}}" + "'", str29, "{{}={}}");
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("{{}=}");
        int int10 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        boolean boolean26 = properties1.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        java.lang.String str31 = properties28.getProperty("hi!");
        boolean boolean33 = properties28.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet34 = properties28.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int36 = atomikosProperties35.getMaxActives();
        boolean boolean37 = properties28.equals((java.lang.Object) atomikosProperties35);
        atomikosProperties35.setSerialJtaTransactions(false);
        int int40 = atomikosProperties35.getMaxActives();
        atomikosProperties35.setConsoleFileCount(52);
        java.util.Properties properties43 = atomikosProperties35.asProperties();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Set<java.lang.String> strSet45 = properties1.stringPropertyNames();
        java.io.OutputStream outputStream46 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream46, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 50 + "'", int36 == 50);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 50 + "'", int40 == 50);
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.lang.String str49 = properties46.getProperty("");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj55 = properties43.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties52.getConsoleLogLevel();
        java.lang.String str59 = atomikosProperties52.getTransactionManagerUniqueName();
        atomikosProperties52.setOutputDir("{10=#}");
        long long62 = atomikosProperties52.getDefaultJtaTimeout();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.lang.Object obj81 = properties64.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str83 = atomikosProperties82.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery84 = atomikosProperties82.getRecovery();
        atomikosProperties82.setEnableLogging(false);
        boolean boolean87 = properties64.equals((java.lang.Object) atomikosProperties82);
        java.util.Set<java.lang.String> strSet88 = properties64.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery89 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery89.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        boolean boolean92 = properties1.replace((java.lang.Object) atomikosProperties52, (java.lang.Object) properties64, (java.lang.Object) recovery89);
        long long93 = recovery89.getDelay();
        recovery89.setForgetOrphanedLogEntriesDelay((long) 4);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(recovery84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 10000L + "'", long93 == 10000L);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        java.lang.String str28 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties12.setCheckpointInterval(50L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<?> wildcardEnumeration14 = properties6.propertyNames();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.lang.String str22 = properties19.getProperty("");
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj28 = properties16.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties25);
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setOutputDir("");
        boolean boolean33 = properties6.containsKey((java.lang.Object) "");
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.lang.String str42 = properties39.getProperty("");
        properties36.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties39);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj48 = properties36.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties45);
        atomikosProperties45.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties45.getConsoleLogLevel();
        java.lang.String str52 = atomikosProperties45.getTransactionManagerUniqueName();
        java.lang.Object obj53 = properties6.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties45);
        boolean boolean54 = properties6.isEmpty();
        boolean boolean55 = properties1.equals((java.lang.Object) properties6);
        java.lang.String str56 = properties1.toString();
        properties1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "{}" + "'", str56, "{}");
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj18 = properties6.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel19);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str23 = atomikosProperties0.getLogBaseDir();
        java.lang.String str24 = atomikosProperties0.getLogBaseDir();
        int int25 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str28 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tm.out" + "'", str28, "tm.out");
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        java.lang.String str28 = atomikosProperties12.getLogBaseName();
        java.lang.String str29 = atomikosProperties12.getService();
        java.lang.String str30 = atomikosProperties12.getTransactionManagerUniqueName();
        boolean boolean31 = atomikosProperties12.isForceShutdownOnVmExit();
        long long32 = atomikosProperties12.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileName("{}");
        atomikosProperties0.setMaxTimeout((long) 2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.keys();
        properties3.clear();
        java.util.Enumeration<?> wildcardEnumeration6 = properties3.propertyNames();
        java.lang.String str9 = properties3.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str9, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties27 = atomikosProperties14.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        boolean boolean31 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        boolean boolean33 = properties27.containsValue((java.lang.Object) properties29);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        java.lang.String str38 = properties35.getProperty("hi!");
        java.util.Set<java.lang.String> strSet39 = properties35.stringPropertyNames();
        java.lang.Object obj40 = properties35.clone();
        boolean boolean41 = properties29.containsKey(obj40);
        java.lang.Object obj42 = properties13.remove((java.lang.Object) properties29);
        int int43 = properties13.size();
        java.util.Properties properties44 = new java.util.Properties(properties13);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 19 + "'", int43 == 19);
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setConsoleFileName("tm.out");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj22 = properties10.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties19.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        boolean boolean27 = atomikosProperties0.isEnableLogging();
        int int28 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str29 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setConsoleFileName("");
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Set<java.lang.Object> objSet28 = properties0.keySet();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.storeToXML(outputStream29, "{{}={}}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objSet28);
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.String str10 = properties1.getProperty("{}");
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        boolean boolean14 = properties12.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.keys();
        java.util.Collection<java.lang.Object> objCollection16 = properties12.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean31 = properties19.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean30);
        boolean boolean32 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        atomikosProperties34.setEnableLogging(true);
        java.lang.Object obj44 = properties17.putIfAbsent((java.lang.Object) objEnumeration33, (java.lang.Object) atomikosProperties34);
        boolean boolean45 = atomikosProperties34.isEnableLogging();
        boolean boolean46 = atomikosProperties34.isEnableLogging();
        boolean boolean47 = properties12.equals((java.lang.Object) atomikosProperties34);
        boolean boolean48 = properties1.containsKey((java.lang.Object) properties12);
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream49, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        java.lang.String str30 = atomikosProperties26.getConsoleFileName();
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int49 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        boolean boolean52 = properties1.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) false);
        atomikosProperties26.setConsoleFileLimit((int) (short) 0);
        atomikosProperties26.setConsoleFileName("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        boolean boolean47 = properties44.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.lang.String str49 = properties44.toString();
        java.lang.String str50 = properties44.toString();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int55 = recovery54.getMaxRetries();
        boolean boolean56 = properties52.containsKey((java.lang.Object) recovery54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.elements();
        java.lang.String str64 = properties61.getProperty("");
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj70 = properties58.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties67);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = atomikosProperties67.getConsoleLogLevel();
        int int72 = atomikosProperties67.getConsoleFileCount();
        java.lang.Object obj73 = properties52.get((java.lang.Object) atomikosProperties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        atomikosProperties74.setConsoleFileName("");
        java.lang.String str79 = atomikosProperties74.getLogBaseName();
        long long80 = atomikosProperties74.getCheckpointInterval();
        java.lang.String str81 = atomikosProperties74.getLogBaseDir();
        atomikosProperties74.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel84 = atomikosProperties74.getConsoleLogLevel();
        boolean boolean85 = properties52.equals((java.lang.Object) atomikosProperties74);
        atomikosProperties74.setThreadedTwoPhaseCommit(false);
        boolean boolean88 = properties44.containsKey((java.lang.Object) atomikosProperties74);
        java.lang.String str89 = atomikosProperties74.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "{}" + "'", str50, "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 5 + "'", int55 == 5);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel71 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel71.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 1 + "'", int72 == 1);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + (-1L) + "'", long80 == (-1L));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel84 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel84.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tmlog" + "'", str89, "tmlog");
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        int int31 = atomikosProperties26.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int33 = atomikosProperties32.getMaxActives();
        java.lang.String str34 = atomikosProperties32.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties32.getConsoleLogLevel();
        boolean boolean36 = properties25.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosLoggingLevel35);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.setMaxRetries((-1));
        long long40 = recovery37.getRetryInterval();
        long long41 = recovery37.getDelay();
        recovery37.setDelay((long) 52);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties45.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet51 = properties49.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int53 = recovery52.getMaxRetries();
        recovery52.setForgetOrphanedLogEntriesDelay((-1L));
        recovery52.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean58 = properties45.remove((java.lang.Object) properties49, (java.lang.Object) (-1));
        boolean boolean59 = properties45.isEmpty();
        java.util.Set<java.lang.Object> objSet60 = properties45.keySet();
        java.lang.Object obj61 = properties25.putIfAbsent((java.lang.Object) 52, (java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int63 = recovery62.getMaxRetries();
        recovery62.setForgetOrphanedLogEntriesDelay((-1L));
        recovery62.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery62.setForgetOrphanedLogEntriesDelay(100L);
        long long70 = recovery62.getDelay();
        boolean boolean71 = properties25.contains((java.lang.Object) recovery62);
        properties25.clear();
        java.io.OutputStream outputStream73 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.storeToXML(outputStream73, "{}", "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 50 + "'", int33 == 50);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEntrySet51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 5 + "'", int53 == 5);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objSet60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 10000L + "'", long70 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Collection<java.lang.Object> objCollection39 = properties1.values();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties1.keys();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        boolean boolean45 = properties42.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet46 = properties42.keySet();
        java.lang.Object obj48 = properties42.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj49 = properties42.clone();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.io.PrintStream printStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objCollection39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objSet46);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(obj49);
        org.junit.Assert.assertEquals(obj49.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj49), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj49), "{}");
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int5 = atomikosProperties0.getConsoleFileCount();
        long long6 = atomikosProperties0.getMaxTimeout();
        int int7 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 300000L + "'", long6 == 300000L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxActives((int) (short) 1);
        java.lang.Class<?> wildcardClass13 = atomikosProperties0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        boolean boolean44 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int46 = recovery45.getMaxRetries();
        boolean boolean47 = properties43.containsKey((java.lang.Object) recovery45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.String str51 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setMaxTimeout(0L);
        java.lang.Object obj54 = properties43.remove((java.lang.Object) atomikosProperties48);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int59 = recovery58.getMaxRetries();
        boolean boolean60 = properties56.containsKey((java.lang.Object) recovery58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.lang.String str68 = properties65.getProperty("");
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj74 = properties62.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties71);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties71.getConsoleLogLevel();
        int int76 = atomikosProperties71.getConsoleFileCount();
        java.lang.Object obj77 = properties56.get((java.lang.Object) atomikosProperties71);
        long long78 = atomikosProperties71.getMaxTimeout();
        java.lang.Object obj79 = properties1.put((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties71);
        atomikosProperties71.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setCheckpointInterval((long) 100);
        boolean boolean20 = atomikosProperties10.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str22 = atomikosProperties10.getLogBaseName();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setConsoleFileCount((int) 'a');
        int int7 = atomikosProperties0.getMaxActives();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setCheckpointInterval((long) 5);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int27 = atomikosProperties26.getMaxActives();
        java.lang.String str28 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setConsoleFileCount(0);
        boolean boolean31 = properties1.containsValue((java.lang.Object) atomikosProperties26);
        int int32 = atomikosProperties26.getConsoleFileLimit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.lang.String str14 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setMaxTimeout(300000L);
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        atomikosProperties10.setLogBaseName("");
        atomikosProperties10.setOutputDir("hi!");
        long long23 = atomikosProperties10.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        int int17 = atomikosProperties10.getConsoleFileCount();
        atomikosProperties10.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str20 = atomikosProperties10.getLogBaseName();
        boolean boolean21 = atomikosProperties10.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str20, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean3 = properties1.isEmpty();
        int int4 = properties1.size();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties6.entrySet();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties6.replace((java.lang.Object) "hi!", obj10);
        boolean boolean13 = properties6.equals((java.lang.Object) 1.0f);
        java.util.Properties properties14 = new java.util.Properties(properties6);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        int int36 = atomikosProperties31.getConsoleFileCount();
        java.lang.Object obj37 = properties16.get((java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        java.lang.String str56 = properties53.getProperty("");
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj62 = properties50.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties59);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel63 = atomikosProperties59.getConsoleLogLevel();
        atomikosProperties44.setConsoleLogLevel(atomikosLoggingLevel63);
        atomikosProperties38.setConsoleLogLevel(atomikosLoggingLevel63);
        atomikosProperties38.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery68 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery68.setMaxRetries((-1));
        long long71 = recovery68.getRetryInterval();
        java.lang.Object obj72 = properties16.replace((java.lang.Object) 5, (java.lang.Object) long71);
        java.lang.Object obj73 = properties16.clone();
        boolean boolean74 = properties14.contains((java.lang.Object) properties16);
        int int75 = properties14.size();
        boolean boolean76 = properties1.containsKey((java.lang.Object) properties14);
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream77, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel63 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel63.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 10000L + "'", long71 == 10000L);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(obj73);
        org.junit.Assert.assertEquals(obj73.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj73), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj73), "{}");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.util.Set<java.lang.String> strSet27 = properties1.stringPropertyNames();
        java.lang.String str29 = properties1.getProperty("tmlog");
        java.lang.Object obj32 = properties1.setProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Enumeration<?> wildcardEnumeration42 = properties34.propertyNames();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setOutputDir("");
        boolean boolean61 = properties34.containsKey((java.lang.Object) "");
        boolean boolean62 = properties1.containsKey((java.lang.Object) properties34);
        properties34.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((-1));
        long long3 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay(300000L);
        recovery0.setDelay((-1L));
        long long8 = recovery0.getRetryInterval();
        int int9 = recovery0.getMaxRetries();
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) '#');
        recovery0.setForgetOrphanedLogEntriesDelay(10000L);
        int int15 = recovery0.getMaxRetries();
        recovery0.setMaxRetries(52);
        recovery0.setForgetOrphanedLogEntriesDelay(300000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        boolean boolean37 = atomikosProperties5.isAllowSubTransactions();
        atomikosProperties5.setCheckpointInterval((long) 1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setTransactionManagerUniqueName("");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties5.getConsoleLogLevel();
        atomikosProperties5.setLogBaseDir("{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties1.entrySet();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties11.entrySet();
        java.lang.Object obj15 = properties1.getOrDefault((java.lang.Object) properties8, (java.lang.Object) objEntrySet14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setAllowSubTransactions(false);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setForceShutdownOnVmExit(true);
        atomikosProperties27.setConsoleFileName("hi!");
        atomikosProperties27.setAllowSubTransactions(true);
        java.lang.Object obj38 = properties8.put((java.lang.Object) atomikosProperties16, (java.lang.Object) true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = atomikosProperties39.getRecovery();
        atomikosProperties39.setEnableLogging(false);
        long long44 = atomikosProperties39.getMaxTimeout();
        atomikosProperties39.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties39.setLogBaseDir("hi!");
        atomikosProperties39.setTransactionManagerUniqueName("hi!");
        atomikosProperties39.setSerialJtaTransactions(true);
        int int53 = atomikosProperties39.getMaxActives();
        atomikosProperties39.setConsoleFileName("{[]=WARN}");
        boolean boolean56 = properties8.containsValue((java.lang.Object) "{[]=WARN}");
        java.io.OutputStream outputStream57 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.save(outputStream57, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(recovery41);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 50 + "'", int53 == 50);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        boolean boolean17 = properties15.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.keys();
        boolean boolean19 = properties13.containsValue((java.lang.Object) properties15);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        java.lang.String str24 = properties21.getProperty("hi!");
        java.util.Set<java.lang.String> strSet25 = properties21.stringPropertyNames();
        java.lang.Object obj26 = properties21.clone();
        boolean boolean27 = properties15.containsKey(obj26);
        java.lang.String str28 = properties15.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties15.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties15.keys();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertEquals(obj26.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj26), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj26), "{}");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "{}" + "'", str28, "{}");
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration30);
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setRetryInterval((long) 0);
        recovery3.setMaxRetries((int) (byte) 10);
        long long12 = recovery3.getDelay();
        long long13 = recovery3.getRetryInterval();
        long long14 = recovery3.getRetryInterval();
        long long15 = recovery3.getDelay();
        int int16 = recovery3.getMaxRetries();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        java.lang.String str28 = atomikosProperties12.getLogBaseName();
        java.lang.String str29 = atomikosProperties12.getOutputDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.lang.String str8 = properties5.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet9 = properties5.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties5.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties15.entrySet();
        java.lang.Object obj19 = properties5.getOrDefault((java.lang.Object) properties12, (java.lang.Object) objEntrySet18);
        boolean boolean20 = properties1.containsKey((java.lang.Object) objEntrySet18);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties23.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.setEnableLogging(true);
        java.lang.Object obj48 = properties21.putIfAbsent((java.lang.Object) objEnumeration37, (java.lang.Object) atomikosProperties38);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties21.keys();
        java.lang.String str51 = properties21.getProperty("tm.out");
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties21.get((java.lang.Object) properties55);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.elements();
        java.lang.String str64 = properties61.getProperty("");
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        boolean boolean70 = properties58.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean69);
        boolean boolean71 = properties58.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties58.keys();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties21.keys();
        boolean boolean75 = properties1.equals((java.lang.Object) properties21);
        java.util.Set<java.lang.String> strSet76 = properties21.stringPropertyNames();
        java.io.OutputStream outputStream77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties21.save(outputStream77, "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals(obj19.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(strSet76);
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        java.lang.String str45 = atomikosProperties43.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        atomikosProperties57.setSerialJtaTransactions(false);
        int int63 = atomikosProperties57.getConsoleFileCount();
        int int64 = atomikosProperties57.getConsoleFileLimit();
        java.lang.String str65 = atomikosProperties57.getLogBaseName();
        atomikosProperties57.setService("tmlog");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        java.lang.String str72 = properties69.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet73 = properties69.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties69.entrySet();
        boolean boolean75 = properties42.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) "tmlog", (java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        boolean boolean79 = atomikosProperties76.isSerialJtaTransactions();
        java.lang.String str80 = atomikosProperties76.getOutputDir();
        boolean boolean81 = properties69.containsValue((java.lang.Object) atomikosProperties76);
        java.util.Collection<java.lang.Object> objCollection82 = properties69.values();
        java.util.Collection<java.lang.Object> objCollection83 = properties69.values();
        java.io.OutputStream outputStream84 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties69.storeToXML(outputStream84, "{tm.out=hi!}", "{{}=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNotNull(objCollection83);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("");
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setLogBaseName("{[]=WARN}");
        atomikosProperties0.setEnableLogging(true);
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        long long14 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 500L + "'", long14 == 500L);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Set<java.lang.Object> objSet6 = properties1.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objSet6);
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj9 = null;
        boolean boolean10 = properties1.equals(obj9);
        java.lang.String str11 = properties1.toString();
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties1.elements();
        boolean boolean14 = properties1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj25 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties26.getRecovery();
        atomikosProperties26.setEnableLogging(false);
        boolean boolean31 = properties8.equals((java.lang.Object) atomikosProperties26);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties8.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties8.entrySet();
        java.lang.String str34 = properties8.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        int int36 = properties8.size();
        properties8.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties8.keys();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int43 = recovery42.getMaxRetries();
        boolean boolean44 = properties40.containsKey((java.lang.Object) recovery42);
        recovery42.setMaxRetries((int) '4');
        recovery42.setForgetOrphanedLogEntriesDelay((long) 100);
        long long49 = recovery42.getDelay();
        recovery42.setForgetOrphanedLogEntriesDelay((long) (short) 0);
        int int52 = recovery42.getMaxRetries();
        recovery42.setRetryInterval((long) (byte) 1);
        boolean boolean55 = properties8.contains((java.lang.Object) recovery42);
        int int56 = recovery42.getMaxRetries();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 10000L + "'", long49 == 10000L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.lang.Object obj38 = properties0.setProperty("", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties0.keys();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        java.lang.String str44 = properties41.getProperty("hi!");
        boolean boolean46 = properties41.contains((java.lang.Object) 10.0f);
        java.util.Properties properties47 = new java.util.Properties();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        boolean boolean61 = properties49.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean60);
        boolean boolean62 = properties49.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties49.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties64.getLogBaseName();
        long long70 = atomikosProperties64.getCheckpointInterval();
        java.lang.String str71 = atomikosProperties64.getLogBaseDir();
        atomikosProperties64.setEnableLogging(true);
        java.lang.Object obj74 = properties47.putIfAbsent((java.lang.Object) objEnumeration63, (java.lang.Object) atomikosProperties64);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        boolean boolean77 = properties76.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery78 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int79 = recovery78.getMaxRetries();
        boolean boolean80 = properties76.containsKey((java.lang.Object) recovery78);
        recovery78.setRetryInterval((long) (short) -1);
        recovery78.setDelay(10L);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        boolean boolean87 = properties86.isEmpty();
        java.lang.Object obj88 = properties47.getOrDefault((java.lang.Object) recovery78, (java.lang.Object) properties86);
        java.lang.Object obj89 = properties41.remove((java.lang.Object) recovery78);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties41.elements();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 5 + "'", int79 == 5);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "{}");
        org.junit.Assert.assertNull(obj89);
        org.junit.Assert.assertNotNull(objEnumeration90);
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj7 = properties1.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj8 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int10 = atomikosProperties9.getMaxActives();
        java.lang.String str11 = atomikosProperties9.getTransactionManagerUniqueName();
        boolean boolean12 = atomikosProperties9.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties9.getConsoleLogLevel();
        atomikosProperties9.setAllowSubTransactions(true);
        int int16 = atomikosProperties9.getConsoleFileCount();
        atomikosProperties9.setAllowSubTransactions(false);
        java.lang.String str19 = atomikosProperties9.getTransactionManagerUniqueName();
        java.lang.String str20 = atomikosProperties9.getLogBaseName();
        java.lang.Object obj21 = properties1.get((java.lang.Object) atomikosProperties9);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(obj8);
        org.junit.Assert.assertEquals(obj8.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj8), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj8), "{}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tmlog" + "'", str20, "tmlog");
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setRetryInterval((long) 0);
        recovery3.setMaxRetries((int) (byte) 10);
        long long12 = recovery3.getDelay();
        recovery3.setRetryInterval(0L);
        recovery3.setDelay((long) 5);
        recovery3.setMaxRetries((int) (short) 100);
        recovery3.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int5 = atomikosProperties0.getConsoleFileLimit();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean8 = atomikosProperties0.isEnableLogging();
        int int9 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setLogBaseName("hi!");
        atomikosProperties6.setMaxActives(32);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setLogBaseDir("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        int int25 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setService("tm.out");
        atomikosProperties19.setConsoleFileLimit((int) (short) 10);
        long long30 = atomikosProperties19.getMaxTimeout();
        boolean boolean31 = atomikosProperties19.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        properties1.clear();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        java.lang.String str55 = properties52.getProperty("hi!");
        boolean boolean57 = properties52.contains((java.lang.Object) 10.0f);
        boolean boolean58 = properties52.isEmpty();
        boolean boolean59 = properties1.containsValue((java.lang.Object) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setOutputDir("");
        java.lang.String str69 = atomikosProperties60.getConsoleFileName();
        java.lang.String str70 = atomikosProperties60.getLogBaseName();
        atomikosProperties60.setConsoleFileCount((int) (byte) -1);
        atomikosProperties60.setConsoleFileName("hi!");
        java.lang.Object obj75 = properties52.remove((java.lang.Object) "hi!");
        java.lang.String str77 = properties52.getProperty("tmlog");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        boolean boolean13 = properties1.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration14 = properties1.propertyNames();
        java.util.Properties properties15 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setSerialJtaTransactions(false);
        java.lang.String str23 = atomikosProperties16.getLogBaseName();
        atomikosProperties16.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties16.setConsoleFileCount((int) (byte) -1);
        atomikosProperties16.setConsoleFileLimit((int) ' ');
        atomikosProperties16.setThreadedTwoPhaseCommit(false);
        atomikosProperties16.setMaxActives(10);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int38 = recovery37.getMaxRetries();
        boolean boolean39 = properties35.containsKey((java.lang.Object) recovery37);
        recovery37.setRetryInterval((long) (short) -1);
        recovery37.setMaxRetries((-1));
        recovery37.setRetryInterval((long) (byte) -1);
        long long46 = recovery37.getDelay();
        java.lang.Object obj47 = properties15.getOrDefault((java.lang.Object) 10, (java.lang.Object) long46);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 5 + "'", int38 == 5);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertEquals("'" + obj47 + "' != '" + 10000L + "'", obj47, 10000L);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj18 = properties6.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel19);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str23 = atomikosProperties0.getLogBaseDir();
        java.lang.String str24 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setCheckpointInterval((long) 52);
        atomikosProperties0.setCheckpointInterval((long) '4');
        int int31 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str32 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setLogBaseDir("{tm.out=hi!}");
        boolean boolean15 = atomikosProperties0.isSerialJtaTransactions();
        int int16 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.keys();
        java.io.PrintWriter printWriter8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.list(printWriter8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(objEnumeration7);
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet46 = properties44.entrySet();
        java.util.Set<java.lang.String> strSet47 = properties44.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setConsoleFileName("");
        java.lang.String str53 = atomikosProperties48.getLogBaseName();
        long long54 = atomikosProperties48.getCheckpointInterval();
        java.lang.String str55 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setEnableLogging(true);
        long long58 = atomikosProperties48.getDefaultJtaTimeout();
        boolean boolean59 = atomikosProperties48.isSerialJtaTransactions();
        java.lang.String str60 = atomikosProperties48.getOutputDir();
        atomikosProperties48.setTransactionManagerUniqueName("{}");
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        boolean boolean67 = properties64.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.lang.String str75 = properties72.getProperty("");
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.util.Enumeration<?> wildcardEnumeration77 = properties69.propertyNames();
        boolean boolean78 = properties64.containsValue((java.lang.Object) wildcardEnumeration77);
        java.lang.Object obj79 = properties44.put((java.lang.Object) atomikosProperties48, (java.lang.Object) properties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setCheckpointInterval((long) (byte) -1);
        atomikosProperties80.setConsoleFileName("");
        java.lang.String str85 = atomikosProperties80.getLogBaseName();
        atomikosProperties80.setForceShutdownOnVmExit(true);
        java.lang.Object obj88 = properties44.remove((java.lang.Object) true);
        java.lang.Object obj89 = properties44.clone();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration91 = properties1.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration92 = properties1.elements();
        java.util.Set<java.lang.String> strSet93 = properties1.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEntrySet46);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(wildcardEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "tmlog" + "'", str85, "tmlog");
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(obj89);
        org.junit.Assert.assertNotNull(objEnumeration91);
        org.junit.Assert.assertNotNull(objEnumeration92);
        org.junit.Assert.assertNotNull(strSet93);
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.keys();
        properties3.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties3.entrySet();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int11 = recovery10.getMaxRetries();
        boolean boolean12 = properties8.containsKey((java.lang.Object) recovery10);
        properties8.clear();
        boolean boolean15 = properties8.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        boolean boolean18 = properties17.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties40.getConsoleLogLevel();
        atomikosProperties25.setConsoleLogLevel(atomikosLoggingLevel44);
        atomikosProperties19.setConsoleLogLevel(atomikosLoggingLevel44);
        boolean boolean48 = properties8.replace((java.lang.Object) properties17, (java.lang.Object) atomikosProperties19, (java.lang.Object) 10.0d);
        java.util.Properties properties49 = new java.util.Properties(properties8);
        boolean boolean50 = properties8.isEmpty();
        java.lang.Object obj51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj52 = properties3.put((java.lang.Object) boolean50, obj51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.Object obj23 = properties1.setProperty("hi!", "tmlog");
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.lang.String str31 = properties28.getProperty("");
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties28);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        boolean boolean37 = properties25.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean36);
        boolean boolean38 = properties25.isEmpty();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        boolean boolean43 = properties40.containsKey((java.lang.Object) 10.0f);
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Set<java.lang.Object> objSet45 = properties25.keySet();
        java.lang.Object obj46 = properties1.remove((java.lang.Object) objSet45);
        java.io.PrintWriter printWriter47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties0.getRecovery();
        recovery16.setMaxRetries((int) (byte) 100);
        long long19 = recovery16.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 86400000L + "'", long19 == 86400000L);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        java.lang.String str45 = atomikosProperties43.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        atomikosProperties57.setSerialJtaTransactions(false);
        int int63 = atomikosProperties57.getConsoleFileCount();
        int int64 = atomikosProperties57.getConsoleFileLimit();
        java.lang.String str65 = atomikosProperties57.getLogBaseName();
        atomikosProperties57.setService("tmlog");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        java.lang.String str72 = properties69.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet73 = properties69.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties69.entrySet();
        boolean boolean75 = properties42.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) "tmlog", (java.lang.Object) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        boolean boolean79 = atomikosProperties76.isSerialJtaTransactions();
        java.lang.String str80 = atomikosProperties76.getOutputDir();
        boolean boolean81 = properties69.containsValue((java.lang.Object) atomikosProperties76);
        java.util.Collection<java.lang.Object> objCollection82 = properties69.values();
        java.io.OutputStream outputStream83 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties69.storeToXML(outputStream83, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(objCollection82);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxActives((int) (byte) 10);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setEnableLogging(true);
        long long14 = atomikosProperties4.getDefaultJtaTimeout();
        boolean boolean15 = atomikosProperties4.isSerialJtaTransactions();
        java.lang.String str16 = atomikosProperties4.getOutputDir();
        java.lang.String str17 = atomikosProperties4.getOutputDir();
        java.util.Properties properties18 = atomikosProperties4.asProperties();
        boolean boolean19 = properties1.equals((java.lang.Object) atomikosProperties4);
        atomikosProperties4.setConsoleFileLimit(0);
        atomikosProperties4.setLogBaseName("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties4.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setEnableLogging(false);
        int int11 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        atomikosProperties8.setEnableLogging(false);
        boolean boolean15 = atomikosProperties8.isAllowSubTransactions();
        atomikosProperties8.setConsoleFileName("tm.out");
        java.lang.String str18 = atomikosProperties8.getLogBaseName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 100);
        boolean boolean23 = atomikosProperties10.isSerialJtaTransactions();
        long long24 = atomikosProperties10.getMaxTimeout();
        int int25 = atomikosProperties10.getConsoleFileCount();
        atomikosProperties10.setMaxTimeout((long) 5);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setService("");
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        int int7 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean32 = properties29.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet33 = properties29.keySet();
        java.lang.Object obj35 = properties29.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj36 = properties29.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long40 = recovery37.getDelay();
        recovery37.setMaxRetries((int) (short) 0);
        long long43 = recovery37.getDelay();
        recovery37.setForgetOrphanedLogEntriesDelay(1L);
        long long46 = recovery37.getDelay();
        recovery37.setForgetOrphanedLogEntriesDelay(0L);
        recovery37.setMaxRetries((int) (byte) 100);
        boolean boolean51 = properties25.remove(obj36, (java.lang.Object) (byte) 100);
        java.lang.String str52 = properties25.toString();
        java.lang.Object obj55 = properties25.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objSet33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertEquals(obj36.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj36), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj36), "{}");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 10000L + "'", long40 == 10000L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str52, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int14 = recovery11.getMaxRetries();
        int int15 = recovery11.getMaxRetries();
        java.lang.Object obj16 = properties1.get((java.lang.Object) recovery11);
        java.lang.Object obj19 = properties1.setProperty("{=}", "{=}");
        java.util.Enumeration<?> wildcardEnumeration20 = properties1.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setOutputDir("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long16 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.lang.String str8 = properties5.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet9 = properties5.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties5.entrySet();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        java.util.Properties properties17 = new java.util.Properties(properties15);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties15.entrySet();
        java.lang.Object obj19 = properties5.getOrDefault((java.lang.Object) properties12, (java.lang.Object) objEntrySet18);
        boolean boolean20 = properties1.containsKey((java.lang.Object) objEntrySet18);
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties23.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.setEnableLogging(true);
        java.lang.Object obj48 = properties21.putIfAbsent((java.lang.Object) objEnumeration37, (java.lang.Object) atomikosProperties38);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties21.keys();
        java.lang.String str51 = properties21.getProperty("tm.out");
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        java.util.Properties properties55 = new java.util.Properties(properties53);
        java.lang.Object obj56 = properties21.get((java.lang.Object) properties55);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.elements();
        java.lang.String str64 = properties61.getProperty("");
        properties58.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        boolean boolean70 = properties58.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean69);
        boolean boolean71 = properties58.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties58.keys();
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties21.keys();
        boolean boolean75 = properties1.equals((java.lang.Object) properties21);
        java.lang.String str76 = properties1.toString();
        java.io.Writer writer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer77, "{[]=WARN}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(objSet9);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNotNull(obj19);
// flaky:         org.junit.Assert.assertEquals(obj19.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "{}" + "'", str76, "{}");
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        atomikosProperties37.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties37.getConsoleLogLevel();
        java.lang.String str44 = atomikosProperties37.getTransactionManagerUniqueName();
        atomikosProperties37.setCheckpointInterval((long) 100);
        atomikosProperties37.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = atomikosProperties37.getRecovery();
        recovery49.setForgetOrphanedLogEntriesDelay(10000L);
        recovery49.setMaxRetries((-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setSerialJtaTransactions(false);
        java.lang.String str61 = atomikosProperties54.getOutputDir();
        atomikosProperties54.setLogBaseDir("tmlog");
        atomikosProperties54.setService("tmlog");
        java.lang.Object obj66 = properties1.getOrDefault((java.lang.Object) recovery49, (java.lang.Object) atomikosProperties54);
        int int67 = recovery49.getMaxRetries();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(recovery49);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties25.entrySet();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Object obj30 = properties25.replace((java.lang.Object) "hi!", obj29);
        boolean boolean32 = properties25.equals((java.lang.Object) 1.0f);
        java.util.Properties properties33 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        java.lang.String str42 = atomikosProperties34.getConsoleFileName();
        java.util.Properties properties43 = atomikosProperties34.asProperties();
        java.lang.Object obj44 = properties1.replace((java.lang.Object) properties33, (java.lang.Object) properties43);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        boolean boolean58 = properties46.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean57);
        boolean boolean59 = properties46.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setConsoleFileName("tm.out");
        java.util.Properties properties64 = new java.util.Properties();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties71.elements();
        java.lang.String str74 = properties71.getProperty("");
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        boolean boolean80 = properties68.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean79);
        boolean boolean81 = properties68.isEmpty();
        boolean boolean82 = properties64.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties68);
        boolean boolean83 = properties46.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean82);
        java.util.Properties properties84 = new java.util.Properties(properties46);
        boolean boolean85 = properties43.containsKey((java.lang.Object) properties84);
        java.util.Properties properties86 = new java.util.Properties(properties43);
        java.lang.String str87 = properties86.toString();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "{}" + "'", str87, "{}");
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Set<java.lang.Object> objSet21 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setAllowSubTransactions(false);
        atomikosProperties22.setTransactionManagerUniqueName("tmlog");
        boolean boolean29 = properties1.containsKey((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        java.lang.String str33 = atomikosProperties30.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties30.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        atomikosProperties35.setConsoleFileName("");
        java.lang.String str40 = atomikosProperties35.getLogBaseName();
        long long41 = atomikosProperties35.getCheckpointInterval();
        java.lang.String str42 = atomikosProperties35.getLogBaseDir();
        atomikosProperties35.setEnableLogging(true);
        long long45 = atomikosProperties35.getDefaultJtaTimeout();
        boolean boolean46 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setTransactionManagerUniqueName("{}");
        java.lang.String str50 = atomikosProperties35.getLogBaseName();
        long long51 = atomikosProperties35.getMaxTimeout();
        atomikosProperties35.setCheckpointInterval((long) 0);
        int int54 = atomikosProperties35.getConsoleFileLimit();
        int int55 = atomikosProperties35.getMaxActives();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties57.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.keys();
        int int61 = properties57.size();
        java.lang.Object obj62 = properties57.clone();
        boolean boolean63 = properties1.replace((java.lang.Object) recovery34, (java.lang.Object) int55, (java.lang.Object) properties57);
        recovery34.setDelay(0L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int18 = recovery17.getMaxRetries();
        boolean boolean19 = properties15.containsKey((java.lang.Object) recovery17);
        properties15.clear();
        java.util.Properties properties21 = new java.util.Properties(properties15);
        int int22 = properties15.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        long long29 = atomikosProperties23.getCheckpointInterval();
        atomikosProperties23.setAllowSubTransactions(false);
        long long32 = atomikosProperties23.getCheckpointInterval();
        java.lang.Object obj33 = properties15.remove((java.lang.Object) long32);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.String str36 = properties15.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        long long13 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str16 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxTimeout((long) 1);
        boolean boolean20 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        int int24 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery25.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long28 = recovery25.getDelay();
        recovery25.setMaxRetries((int) (short) 0);
        long long31 = recovery25.getDelay();
        recovery25.setMaxRetries(0);
        long long34 = recovery25.getRetryInterval();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        properties36.clear();
        java.util.Properties properties42 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.Object obj44 = properties1.getOrDefault((java.lang.Object) recovery25, (java.lang.Object) objEnumeration43);
        java.io.PrintWriter printWriter45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10000L + "'", long31 == 10000L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 10000L + "'", long34 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(obj44);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        int int13 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("tm.out");
        long long17 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setSerialJtaTransactions(false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.String str6 = properties3.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setMaxActives(100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        recovery12.setRetryInterval((long) '#');
        recovery12.setForgetOrphanedLogEntriesDelay((long) (short) -1);
        long long17 = recovery12.getDelay();
        long long18 = recovery12.getRetryInterval();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35L + "'", long18 == 35L);
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        long long5 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 100);
        int int10 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-1L) + "'", long5 == (-1L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties19.getConsoleFileName();
        long long27 = atomikosProperties19.getCheckpointInterval();
        java.lang.Object obj28 = properties4.remove((java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = atomikosProperties19.getRecovery();
        recovery29.setDelay(1L);
        long long32 = recovery29.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(recovery29);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 86400000L + "'", long32 == 86400000L);
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Collection<java.lang.Object> objCollection9 = properties4.values();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties4.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Enumeration<?> wildcardEnumeration20 = properties12.propertyNames();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        atomikosProperties31.setSerialJtaTransactions(false);
        atomikosProperties31.setOutputDir("");
        boolean boolean39 = properties12.containsKey((java.lang.Object) "");
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj54 = properties42.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties51);
        atomikosProperties51.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties51.getConsoleLogLevel();
        java.lang.String str58 = atomikosProperties51.getTransactionManagerUniqueName();
        java.lang.Object obj59 = properties12.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties51);
        java.util.Collection<java.lang.Object> objCollection60 = properties12.values();
        java.lang.Object obj61 = properties12.clone();
        java.util.Collection<java.lang.Object> objCollection62 = properties12.values();
        boolean boolean63 = properties4.equals((java.lang.Object) objCollection62);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        boolean boolean66 = properties65.isEmpty();
        java.util.Properties properties67 = new java.util.Properties(properties65);
        java.lang.Object obj70 = properties67.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setOutputDir("");
        java.lang.String str80 = atomikosProperties71.getConsoleFileName();
        java.lang.String str81 = atomikosProperties71.getLogBaseName();
        atomikosProperties71.setConsoleFileCount((int) (byte) -1);
        atomikosProperties71.setService("");
        boolean boolean86 = properties67.containsKey((java.lang.Object) "");
        properties67.clear();
        boolean boolean88 = properties4.containsKey((java.lang.Object) properties67);
        java.io.InputStream inputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties4.loadFromXML(inputStream89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(wildcardEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objCollection60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "{}");
        org.junit.Assert.assertNotNull(objCollection62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "tm.out" + "'", str80, "tm.out");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj18 = properties6.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel19);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        java.lang.String str25 = properties23.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        java.lang.String str30 = atomikosProperties26.getConsoleFileName();
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int49 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        boolean boolean52 = properties1.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) false);
        atomikosProperties26.setMaxActives(100);
        java.lang.String str55 = atomikosProperties26.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties26.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<?> wildcardEnumeration6 = properties1.propertyNames();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.String str12 = properties8.toString();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet16 = properties14.entrySet();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Object obj19 = properties14.replace((java.lang.Object) "hi!", obj18);
        boolean boolean21 = properties14.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties14.keys();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        boolean boolean36 = properties24.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean35);
        properties24.clear();
        int int38 = properties24.size();
        java.util.Set<java.lang.Object> objSet39 = properties24.keySet();
        java.lang.Object obj40 = properties8.putIfAbsent((java.lang.Object) properties14, (java.lang.Object) properties24);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj54 = properties42.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties51);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        java.lang.Object obj59 = properties42.clone();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties61.isEmpty();
        java.lang.String str64 = properties61.getProperty("hi!");
        boolean boolean66 = properties61.contains((java.lang.Object) 10.0f);
        java.lang.Object obj67 = properties14.replace(obj59, (java.lang.Object) properties61);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        java.io.Reader reader69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties61.load(reader69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{}" + "'", str12, "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEntrySet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(obj67);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int16 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        long long19 = atomikosProperties0.getMaxTimeout();
        long long20 = atomikosProperties0.getMaxTimeout();
        long long21 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setCheckpointInterval(0L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setMaxRetries((-1));
        recovery3.setRetryInterval((long) (byte) -1);
        long long12 = recovery3.getForgetOrphanedLogEntriesDelay();
        int int13 = recovery3.getMaxRetries();
        recovery3.setMaxRetries(10);
        recovery3.setRetryInterval((long) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 86400000L + "'", long12 == 86400000L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        boolean boolean44 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int46 = recovery45.getMaxRetries();
        boolean boolean47 = properties43.containsKey((java.lang.Object) recovery45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.String str51 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setMaxTimeout(0L);
        java.lang.Object obj54 = properties43.remove((java.lang.Object) atomikosProperties48);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int59 = recovery58.getMaxRetries();
        boolean boolean60 = properties56.containsKey((java.lang.Object) recovery58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.lang.String str68 = properties65.getProperty("");
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj74 = properties62.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties71);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties71.getConsoleLogLevel();
        int int76 = atomikosProperties71.getConsoleFileCount();
        java.lang.Object obj77 = properties56.get((java.lang.Object) atomikosProperties71);
        long long78 = atomikosProperties71.getMaxTimeout();
        java.lang.Object obj79 = properties1.put((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties71);
        boolean boolean80 = atomikosProperties71.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties71.getService();
        atomikosProperties71.setLogBaseDir("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        atomikosProperties71.setMaxTimeout((long) (byte) -1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Set<java.lang.Object> objSet21 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setAllowSubTransactions(false);
        atomikosProperties22.setTransactionManagerUniqueName("tmlog");
        boolean boolean29 = properties1.containsKey((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        java.lang.String str33 = atomikosProperties30.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = atomikosProperties30.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        atomikosProperties35.setConsoleFileName("");
        java.lang.String str40 = atomikosProperties35.getLogBaseName();
        long long41 = atomikosProperties35.getCheckpointInterval();
        java.lang.String str42 = atomikosProperties35.getLogBaseDir();
        atomikosProperties35.setEnableLogging(true);
        long long45 = atomikosProperties35.getDefaultJtaTimeout();
        boolean boolean46 = atomikosProperties35.isSerialJtaTransactions();
        java.lang.String str47 = atomikosProperties35.getOutputDir();
        atomikosProperties35.setTransactionManagerUniqueName("{}");
        java.lang.String str50 = atomikosProperties35.getLogBaseName();
        long long51 = atomikosProperties35.getMaxTimeout();
        atomikosProperties35.setCheckpointInterval((long) 0);
        int int54 = atomikosProperties35.getConsoleFileLimit();
        int int55 = atomikosProperties35.getMaxActives();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties57.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties57.keys();
        int int61 = properties57.size();
        java.lang.Object obj62 = properties57.clone();
        boolean boolean63 = properties1.replace((java.lang.Object) recovery34, (java.lang.Object) int55, (java.lang.Object) properties57);
        java.io.InputStream inputStream64 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(recovery34);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-1L) + "'", long41 == (-1L));
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 300000L + "'", long51 == 300000L);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 50 + "'", int55 == 50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertEquals(obj62.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj62), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj62), "{}");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setConsoleFileName("");
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) 100);
        int int3 = recovery0.getMaxRetries();
        long long4 = recovery0.getRetryInterval();
        recovery0.setDelay(10L);
        int int7 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 100L + "'", long4 == 100L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        int int9 = properties1.size();
        java.io.PrintWriter printWriter10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printWriter10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int11 = recovery10.getMaxRetries();
        boolean boolean12 = properties8.containsKey((java.lang.Object) recovery10);
        properties8.clear();
        boolean boolean15 = properties8.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj16 = null;
        boolean boolean17 = properties8.equals(obj16);
        java.util.Properties properties18 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery19.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int22 = recovery19.getMaxRetries();
        int int23 = recovery19.getMaxRetries();
        long long24 = recovery19.getRetryInterval();
        long long25 = recovery19.getForgetOrphanedLogEntriesDelay();
        int int26 = recovery19.getMaxRetries();
        boolean boolean27 = properties1.remove((java.lang.Object) properties18, (java.lang.Object) int26);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        atomikosProperties32.setForceShutdownOnVmExit(false);
        java.util.Properties properties41 = atomikosProperties32.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties41.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setConsoleFileName("");
        java.lang.String str49 = atomikosProperties44.getLogBaseName();
        long long50 = atomikosProperties44.getCheckpointInterval();
        java.lang.String str51 = atomikosProperties44.getLogBaseDir();
        atomikosProperties44.setLogBaseName("hi!");
        boolean boolean54 = properties29.remove((java.lang.Object) properties41, (java.lang.Object) "hi!");
        java.util.Properties properties55 = new java.util.Properties(properties29);
        boolean boolean56 = properties18.equals((java.lang.Object) properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties29.entrySet();
        java.io.InputStream inputStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.load(inputStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEntrySet57);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isEnableLogging();
        java.lang.String str15 = atomikosProperties8.getLogBaseName();
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        java.util.Collection<java.lang.Object> objCollection18 = properties17.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objCollection18);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        atomikosProperties0.setLogBaseDir("{10=#}");
        boolean boolean12 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long5 = recovery0.getRetryInterval();
        long long6 = recovery0.getDelay();
        recovery0.setDelay((long) (byte) 10);
        recovery0.setForgetOrphanedLogEntriesDelay(10000L);
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("{}");
        long long28 = atomikosProperties19.getMaxTimeout();
        int int29 = atomikosProperties19.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties19.getRecovery();
        atomikosProperties19.setMaxActives(32);
        atomikosProperties19.setAllowSubTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(recovery30);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        int int14 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.io.OutputStream outputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream4, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{[]=WARN}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 0);
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("{}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("{}");
        long long28 = atomikosProperties19.getMaxTimeout();
        int int29 = atomikosProperties19.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties19.getRecovery();
        atomikosProperties19.setMaxActives(32);
        atomikosProperties19.setThreadedTwoPhaseCommit(false);
        java.lang.String str35 = atomikosProperties19.getLogBaseDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties0.getConsoleLogLevel();
        int int20 = atomikosProperties0.getMaxActives();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel35);
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        int int24 = properties1.size();
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream25, "{10=#}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj7 = properties1.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj9 = properties1.remove((java.lang.Object) "");
        java.util.Set<java.lang.Object> objSet10 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getCheckpointInterval();
        atomikosProperties11.setForceShutdownOnVmExit(false);
        atomikosProperties11.setTransactionManagerUniqueName("tmlog");
        atomikosProperties11.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties11.getRecovery();
        boolean boolean25 = properties1.containsKey((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setConsoleFileName("");
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        long long32 = atomikosProperties26.getCheckpointInterval();
        java.lang.String str33 = atomikosProperties26.getLogBaseDir();
        atomikosProperties26.setEnableLogging(true);
        long long36 = atomikosProperties26.getDefaultJtaTimeout();
        java.lang.String str37 = atomikosProperties26.getService();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.lang.String str48 = atomikosProperties43.getOutputDir();
        java.util.Properties properties49 = atomikosProperties43.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setOutputDir("");
        java.lang.String str59 = atomikosProperties50.getConsoleFileName();
        java.lang.String str60 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setDefaultJtaTimeout(0L);
        java.lang.Object obj63 = properties39.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties50);
        atomikosProperties50.setSerialJtaTransactions(false);
        java.lang.Object obj66 = properties1.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties50);
        java.lang.Object obj69 = properties1.setProperty("tmlog", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str72 = properties1.getProperty("{{}=}", "{=}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(recovery24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "{=}" + "'", str72, "{=}");
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setLogBaseName("hi!");
        atomikosProperties10.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties10.setCheckpointInterval((long) 18);
        int int25 = atomikosProperties10.getConsoleFileLimit();
        java.util.Properties properties26 = atomikosProperties10.asProperties();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties37.getConsoleLogLevel();
        atomikosProperties37.setConsoleFileLimit((int) '4');
        atomikosProperties37.setMaxActives((int) ' ');
        atomikosProperties37.setLogBaseName("hi!");
        atomikosProperties37.setAllowSubTransactions(false);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.util.Collection<java.lang.Object> objCollection54 = properties51.values();
        java.lang.Object obj55 = properties51.clone();
        java.util.Properties properties56 = new java.util.Properties(properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean58 = properties56.containsValue((java.lang.Object) atomikosProperties57);
        boolean boolean59 = atomikosProperties57.isForceShutdownOnVmExit();
        atomikosProperties57.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj62 = properties26.put((java.lang.Object) atomikosProperties37, (java.lang.Object) atomikosProperties57);
        long long63 = atomikosProperties37.getCheckpointInterval();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objCollection54);
        org.junit.Assert.assertNotNull(obj55);
        org.junit.Assert.assertEquals(obj55.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj55), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj55), "{}");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + (-1L) + "'", long63 == (-1L));
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        boolean boolean30 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        java.lang.Object obj42 = properties15.putIfAbsent((java.lang.Object) objEnumeration31, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        recovery46.setRetryInterval((long) (short) -1);
        recovery46.setDelay(10L);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.Object obj56 = properties15.getOrDefault((java.lang.Object) recovery46, (java.lang.Object) properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.lang.String str61 = properties58.getProperty("hi!");
        java.util.Set<java.lang.String> strSet62 = properties58.stringPropertyNames();
        java.lang.Object obj63 = properties58.clone();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.getConsoleLogLevel();
        java.lang.String str81 = atomikosProperties74.getTransactionManagerUniqueName();
        atomikosProperties74.setOutputDir("{10=#}");
        boolean boolean84 = properties1.replace((java.lang.Object) properties54, (java.lang.Object) properties58, (java.lang.Object) "{10=#}");
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties86.elements();
        java.lang.Object obj88 = properties1.get((java.lang.Object) properties86);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties86.storeToXML(outputStream89, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        boolean boolean5 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getOutputDir();
        int int12 = atomikosProperties6.getConsoleFileCount();
        java.lang.String str13 = atomikosProperties6.getService();
        boolean boolean14 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean15 = properties1.containsValue((java.lang.Object) atomikosProperties6);
        java.io.InputStream inputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout(500L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str10 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        long long12 = recovery11.getRetryInterval();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setTransactionManagerUniqueName("{}");
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives(35);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.lang.String str9 = properties6.getProperty("hi!");
        boolean boolean11 = properties6.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet12 = properties6.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int14 = atomikosProperties13.getMaxActives();
        boolean boolean15 = properties6.equals((java.lang.Object) atomikosProperties13);
        atomikosProperties13.setSerialJtaTransactions(false);
        int int18 = atomikosProperties13.getMaxActives();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int23 = recovery22.getMaxRetries();
        boolean boolean24 = properties20.containsKey((java.lang.Object) recovery22);
        long long25 = recovery22.getRetryInterval();
        java.lang.Object obj26 = properties1.getOrDefault((java.lang.Object) atomikosProperties13, (java.lang.Object) recovery22);
        long long27 = recovery22.getDelay();
        long long28 = recovery22.getDelay();
        recovery22.setDelay(300000L);
        recovery22.setMaxRetries((int) 'a');
        recovery22.setDelay((long) (byte) 1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertNotNull(obj26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.keys();
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.storeToXML(outputStream27, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{10=#}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setMaxActives(100);
        int int11 = atomikosProperties0.getConsoleFileCount();
        boolean boolean12 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = new java.util.Properties(properties1);
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean31 = properties19.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean30);
        boolean boolean32 = properties19.isEmpty();
        boolean boolean33 = properties15.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getConsoleFileName();
        long long42 = atomikosProperties34.getCheckpointInterval();
        java.lang.Object obj43 = properties19.remove((java.lang.Object) atomikosProperties34);
        atomikosProperties34.setSerialJtaTransactions(true);
        java.lang.String str46 = atomikosProperties34.getTransactionManagerUniqueName();
        java.lang.Object obj47 = properties14.get((java.lang.Object) atomikosProperties34);
        java.io.PrintStream printStream48 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printStream48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = new java.util.Properties(properties1);
        java.lang.String str17 = properties1.getProperty("", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str17, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.util.Properties properties12 = new java.util.Properties(properties1);
        java.lang.String str14 = properties12.getProperty("tmlog");
        java.lang.Object obj17 = properties12.setProperty("{=}", "{tm.out=hi!}");
        java.lang.Object obj20 = properties12.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        java.lang.String str21 = properties12.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}" + "'", str21, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str7 = properties3.toString();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        boolean boolean14 = properties13.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties13.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int17 = recovery16.getMaxRetries();
        recovery16.setForgetOrphanedLogEntriesDelay((-1L));
        recovery16.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean22 = properties9.remove((java.lang.Object) properties13, (java.lang.Object) (-1));
        boolean boolean23 = properties9.isEmpty();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Properties properties25 = new java.util.Properties(properties3);
        java.lang.String str26 = properties25.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{10=#}" + "'", str7, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<?> wildcardEnumeration39 = properties31.propertyNames();
        boolean boolean40 = properties26.containsValue((java.lang.Object) wildcardEnumeration39);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int45 = recovery44.getMaxRetries();
        boolean boolean46 = properties42.containsKey((java.lang.Object) recovery44);
        properties42.clear();
        boolean boolean49 = properties42.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setConsoleFileName("");
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel78 = atomikosProperties74.getConsoleLogLevel();
        atomikosProperties59.setConsoleLogLevel(atomikosLoggingLevel78);
        atomikosProperties53.setConsoleLogLevel(atomikosLoggingLevel78);
        boolean boolean82 = properties42.replace((java.lang.Object) properties51, (java.lang.Object) atomikosProperties53, (java.lang.Object) 10.0d);
        java.lang.Object obj83 = properties26.remove((java.lang.Object) properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties42.elements();
        java.lang.Object obj85 = properties1.remove((java.lang.Object) properties42);
        java.util.Set<java.lang.String> strSet86 = properties1.stringPropertyNames();
        java.io.OutputStream outputStream87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream87, "{{}=}", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel78 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel78.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(strSet86);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        long long6 = recovery3.getRetryInterval();
        recovery3.setDelay(0L);
        recovery3.setRetryInterval((long) (short) -1);
        long long11 = recovery3.getForgetOrphanedLogEntriesDelay();
        recovery3.setDelay((long) (short) 0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 86400000L + "'", long11 == 86400000L);
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int13 = recovery12.getMaxRetries();
        boolean boolean14 = properties10.containsKey((java.lang.Object) recovery12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        java.lang.String str18 = atomikosProperties15.getLogBaseDir();
        atomikosProperties15.setMaxTimeout(0L);
        java.lang.Object obj21 = properties10.remove((java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel22);
        atomikosProperties0.setService("hi!");
        atomikosProperties0.setCheckpointInterval((long) 1);
        java.lang.String str28 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setDefaultJtaTimeout((long) ' ');
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setOutputDir("");
        java.lang.String str25 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setAllowSubTransactions(false);
        int int28 = atomikosProperties16.getMaxActives();
        boolean boolean29 = properties15.containsKey((java.lang.Object) int28);
        int int30 = properties15.size();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 19 + "'", int30 == 19);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Set<java.lang.Object> objSet39 = properties1.keySet();
        boolean boolean40 = properties1.isEmpty();
        java.lang.Object obj43 = properties1.setProperty("{{}={}}", "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(obj43);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        boolean boolean11 = properties9.isEmpty();
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setCheckpointInterval((long) (byte) -1);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        java.lang.String str18 = atomikosProperties13.getOutputDir();
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        java.lang.String str29 = atomikosProperties20.getConsoleFileName();
        java.lang.String str30 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setDefaultJtaTimeout(0L);
        java.lang.Object obj33 = properties9.putIfAbsent((java.lang.Object) atomikosProperties13, (java.lang.Object) atomikosProperties20);
        java.lang.String str35 = properties9.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties9.keys();
        boolean boolean37 = properties1.contains((java.lang.Object) properties9);
        java.util.Enumeration<?> wildcardEnumeration38 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet39 = properties1.entrySet();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery43 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int44 = recovery43.getMaxRetries();
        boolean boolean45 = properties41.containsKey((java.lang.Object) recovery43);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        java.lang.String str53 = properties50.getProperty("");
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj59 = properties47.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties56);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties56.getConsoleLogLevel();
        int int61 = atomikosProperties56.getConsoleFileCount();
        java.lang.Object obj62 = properties41.get((java.lang.Object) atomikosProperties56);
        atomikosProperties56.setSerialJtaTransactions(true);
        java.util.Properties properties65 = atomikosProperties56.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        atomikosProperties66.setThreadedTwoPhaseCommit(true);
        int int71 = atomikosProperties66.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int73 = atomikosProperties72.getMaxActives();
        java.lang.String str74 = atomikosProperties72.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties72.getConsoleLogLevel();
        boolean boolean76 = properties65.remove((java.lang.Object) atomikosProperties66, (java.lang.Object) atomikosLoggingLevel75);
        java.util.Collection<java.lang.Object> objCollection77 = properties65.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet78 = properties65.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setCheckpointInterval((long) (byte) -1);
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setOutputDir("");
        atomikosProperties79.setThreadedTwoPhaseCommit(true);
        atomikosProperties79.setMaxTimeout((long) 50);
        boolean boolean92 = atomikosProperties79.isForceShutdownOnVmExit();
        java.lang.Object obj93 = properties1.put((java.lang.Object) objEntrySet78, (java.lang.Object) boolean92);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertNotNull(objEntrySet39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(properties65);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNotNull(objEntrySet78);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj93);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval((long) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        java.lang.String str21 = atomikosProperties10.getOutputDir();
        boolean boolean22 = atomikosProperties10.isAllowSubTransactions();
        atomikosProperties10.setOutputDir("{{}=}");
        atomikosProperties10.setTransactionManagerUniqueName("tm.out");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str15 = atomikosProperties10.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties16.getRecovery();
        atomikosProperties16.setEnableLogging(false);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties16.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel39);
        atomikosProperties10.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        boolean boolean10 = properties6.containsKey((java.lang.Object) recovery8);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        int int26 = atomikosProperties21.getConsoleFileCount();
        java.lang.Object obj27 = properties6.get((java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        atomikosProperties28.setConsoleFileName("");
        java.lang.String str33 = atomikosProperties28.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties40.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties49);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel53 = atomikosProperties49.getConsoleLogLevel();
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties28.setConsoleLogLevel(atomikosLoggingLevel53);
        atomikosProperties28.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery58.setMaxRetries((-1));
        long long61 = recovery58.getRetryInterval();
        java.lang.Object obj62 = properties6.replace((java.lang.Object) 5, (java.lang.Object) long61);
        java.lang.Object obj63 = properties6.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet64 = properties6.entrySet();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.lang.String str72 = properties69.getProperty("");
        properties66.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj78 = properties66.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties75);
        atomikosProperties75.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel81 = atomikosProperties75.getConsoleLogLevel();
        atomikosProperties75.setCheckpointInterval((long) 1);
        atomikosProperties75.setAllowSubTransactions(false);
        atomikosProperties75.setForceShutdownOnVmExit(true);
        atomikosProperties75.setSerialJtaTransactions(false);
        java.lang.Object obj90 = properties1.replace((java.lang.Object) objEntrySet64, (java.lang.Object) atomikosProperties75);
        java.io.InputStream inputStream91 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tmlog" + "'", str33, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel53 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel53.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 10000L + "'", long61 == 10000L);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNotNull(objEntrySet64);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel81 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel81.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) 1);
        recovery38.setForgetOrphanedLogEntriesDelay((long) 52);
        long long54 = recovery38.getForgetOrphanedLogEntriesDelay();
        long long55 = recovery38.getForgetOrphanedLogEntriesDelay();
        long long56 = recovery38.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 52L + "'", long54 == 52L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 52L + "'", long55 == 52L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 52L + "'", long56 == 52L);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileCount();
        int int7 = atomikosProperties0.getMaxActives();
        java.lang.String str8 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setLogBaseName("tmlog");
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setOutputDir("{}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        java.lang.String str17 = atomikosProperties15.getLogBaseDir();
        int int18 = atomikosProperties15.getConsoleFileCount();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties20.entrySet();
        boolean boolean25 = properties5.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) properties20, (java.lang.Object) 1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj32 = properties29.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str33 = properties29.toString();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties35.elements();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        boolean boolean40 = properties39.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties39.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int43 = recovery42.getMaxRetries();
        recovery42.setForgetOrphanedLogEntriesDelay((-1L));
        recovery42.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean48 = properties35.remove((java.lang.Object) properties39, (java.lang.Object) (-1));
        boolean boolean49 = properties35.isEmpty();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Set<java.lang.Object> objSet51 = properties29.keySet();
        java.lang.String str52 = properties29.toString();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream54, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{10=#}" + "'", str33, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{10=#}" + "'", str52, "{10=#}");
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long25 = atomikosProperties16.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        java.lang.String str31 = atomikosProperties26.getOutputDir();
        atomikosProperties26.setConsoleFileName("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties26.getConsoleLogLevel();
        atomikosProperties16.setConsoleLogLevel(atomikosLoggingLevel34);
        atomikosProperties16.setMaxTimeout(50L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        boolean boolean43 = properties1.isEmpty();
        int int44 = properties1.size();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Enumeration<?> wildcardEnumeration54 = properties46.propertyNames();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.lang.String str62 = properties59.getProperty("");
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj68 = properties56.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setSerialJtaTransactions(false);
        atomikosProperties65.setOutputDir("");
        boolean boolean73 = properties46.containsKey((java.lang.Object) "");
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties79.elements();
        java.lang.String str82 = properties79.getProperty("");
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj88 = properties76.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties85);
        atomikosProperties85.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel91 = atomikosProperties85.getConsoleLogLevel();
        java.lang.String str92 = atomikosProperties85.getTransactionManagerUniqueName();
        java.lang.Object obj93 = properties46.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties85);
        atomikosProperties85.setService("hi!");
        boolean boolean96 = properties1.contains((java.lang.Object) atomikosProperties85);
        int int97 = properties1.size();
        java.util.Set<java.lang.String> strSet98 = properties1.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel91 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel91.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
        org.junit.Assert.assertNotNull(strSet98);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Set<java.lang.String> strSet11 = properties1.stringPropertyNames();
        java.io.PrintStream printStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        properties1.clear();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj29 = properties12.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        java.lang.String str35 = atomikosProperties30.getOutputDir();
        java.util.Properties properties36 = atomikosProperties30.asProperties();
        java.lang.Object obj37 = properties12.remove((java.lang.Object) properties36);
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj51 = properties39.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties48);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        java.lang.Object obj56 = properties39.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str58 = atomikosProperties57.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery59 = atomikosProperties57.getRecovery();
        atomikosProperties57.setEnableLogging(false);
        boolean boolean62 = properties39.equals((java.lang.Object) atomikosProperties57);
        boolean boolean63 = properties36.contains((java.lang.Object) atomikosProperties57);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        boolean boolean68 = properties65.containsKey((java.lang.Object) 10.0f);
        java.lang.String str70 = properties65.getProperty("hi!");
        boolean boolean71 = properties36.contains((java.lang.Object) properties65);
        java.util.Set<java.lang.String> strSet72 = properties65.stringPropertyNames();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.elements();
        java.lang.String str80 = properties77.getProperty("");
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Properties properties83 = null;
        java.util.Properties properties84 = new java.util.Properties(properties83);
        boolean boolean85 = properties84.isEmpty();
        boolean boolean86 = properties74.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean85);
        boolean boolean87 = properties74.isEmpty();
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties89.elements();
        boolean boolean92 = properties89.containsKey((java.lang.Object) 10.0f);
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties89);
        java.lang.Object obj94 = properties1.putIfAbsent((java.lang.Object) properties65, (java.lang.Object) properties89);
        boolean boolean95 = properties65.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration96 = properties65.propertyNames();
        int int97 = properties65.size();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(recovery59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setService("tm.out");
        int int18 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setConsoleFileName("");
        java.lang.String str26 = atomikosProperties21.getLogBaseName();
        long long27 = atomikosProperties21.getCheckpointInterval();
        atomikosProperties21.setForceShutdownOnVmExit(false);
        java.util.Properties properties30 = atomikosProperties21.asProperties();
        atomikosProperties21.setConsoleFileCount(10);
        atomikosProperties21.setEnableLogging(true);
        boolean boolean35 = atomikosProperties21.isEnableLogging();
        atomikosProperties21.setTransactionManagerUniqueName("{[]=WARN}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int39 = atomikosProperties38.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setConsoleFileName("");
        java.lang.String str45 = atomikosProperties40.getLogBaseName();
        long long46 = atomikosProperties40.getCheckpointInterval();
        atomikosProperties40.setForceShutdownOnVmExit(false);
        int int49 = atomikosProperties40.getConsoleFileLimit();
        int int50 = atomikosProperties40.getConsoleFileCount();
        atomikosProperties40.setConsoleFileLimit((int) (byte) 10);
        java.lang.String str53 = atomikosProperties40.getLogBaseDir();
        int int54 = atomikosProperties40.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties40.getConsoleLogLevel();
        atomikosProperties38.setConsoleLogLevel(atomikosLoggingLevel55);
        atomikosProperties21.setConsoleLogLevel(atomikosLoggingLevel55);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel55);
        atomikosProperties10.setAllowSubTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        java.lang.String str13 = atomikosProperties8.getLogBaseDir();
        atomikosProperties8.setMaxActives((int) (short) 10);
        long long16 = atomikosProperties8.getDefaultJtaTimeout();
        atomikosProperties8.setDefaultJtaTimeout((long) 52);
        java.lang.String str19 = atomikosProperties8.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties12.getRecovery();
        atomikosProperties12.setEnableLogging(false);
        atomikosProperties12.setSerialJtaTransactions(true);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties20.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        boolean boolean42 = properties20.contains((java.lang.Object) properties34);
        java.util.Set<java.lang.Object> objSet43 = properties34.keySet();
        java.lang.Object obj44 = properties7.getOrDefault((java.lang.Object) true, (java.lang.Object) properties34);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setSerialJtaTransactions(false);
        java.lang.String str53 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setAllowSubTransactions(false);
        java.lang.String str56 = atomikosProperties46.getService();
        atomikosProperties46.setSerialJtaTransactions(true);
        atomikosProperties46.setAllowSubTransactions(true);
        boolean boolean61 = properties1.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties62 = new java.util.Properties(properties1);
        java.util.Set<java.lang.Object> objSet63 = properties62.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objSet63);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Set<java.lang.Object> objSet21 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setAllowSubTransactions(false);
        atomikosProperties22.setTransactionManagerUniqueName("tmlog");
        boolean boolean29 = properties1.containsKey((java.lang.Object) "tmlog");
        java.lang.String str31 = properties1.getProperty("{}");
        java.lang.String str32 = properties1.toString();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        boolean boolean49 = properties48.isEmpty();
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.lang.Object obj51 = properties34.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = atomikosProperties52.getRecovery();
        atomikosProperties52.setEnableLogging(false);
        boolean boolean57 = properties34.equals((java.lang.Object) atomikosProperties52);
        java.lang.String str58 = atomikosProperties52.getOutputDir();
        atomikosProperties52.setSerialJtaTransactions(false);
        java.lang.String str61 = atomikosProperties52.getOutputDir();
        long long62 = atomikosProperties52.getMaxTimeout();
        atomikosProperties52.setMaxTimeout((long) '4');
        atomikosProperties52.setMaxActives((int) (short) 10);
        int int67 = atomikosProperties52.getConsoleFileCount();
        boolean boolean68 = properties1.containsKey((java.lang.Object) int67);
        java.io.Reader reader69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(recovery54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 300000L + "'", long62 == 300000L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxActives((-1));
        java.lang.String str13 = atomikosProperties0.getService();
        atomikosProperties0.setMaxActives((int) '#');
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str18 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isEnableLogging();
        java.lang.String str15 = atomikosProperties8.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties8.getRecovery();
        recovery16.setRetryInterval((long) (byte) 10);
        long long19 = recovery16.getDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNotNull(recovery16);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration10 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setConsoleFileLimit((int) '#');
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        int int2 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setLogBaseName("");
        atomikosProperties6.setSerialJtaTransactions(true);
        atomikosProperties6.setTransactionManagerUniqueName("{10=#}");
        java.lang.String str26 = atomikosProperties6.getOutputDir();
        atomikosProperties6.setConsoleFileName("tmlog");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties6.entrySet();
        int int8 = properties6.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties6.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setOutputDir("");
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        atomikosProperties10.setCheckpointInterval((long) (short) 1);
        boolean boolean25 = atomikosProperties10.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = atomikosProperties10.getConsoleLogLevel();
        int int27 = atomikosProperties10.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties10.getRecovery();
        boolean boolean29 = properties6.containsKey((java.lang.Object) recovery28);
        recovery28.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 50 + "'", int27 == 50);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties19.getConsoleFileName();
        long long27 = atomikosProperties19.getCheckpointInterval();
        java.lang.Object obj28 = properties4.remove((java.lang.Object) atomikosProperties19);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.String str31 = atomikosProperties19.getTransactionManagerUniqueName();
        java.lang.String str32 = atomikosProperties19.getService();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel33 = atomikosProperties19.getConsoleLogLevel();
        boolean boolean34 = atomikosProperties19.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel33 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel33.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        boolean boolean15 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties1.keys();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        java.lang.String str24 = properties21.getProperty("");
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Collection<java.lang.Object> objCollection26 = properties21.values();
        java.lang.Object obj27 = properties1.remove((java.lang.Object) objCollection26);
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream28, "tm.out", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(objCollection26);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.util.Set<java.lang.String> strSet10 = properties7.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getCheckpointInterval();
        java.lang.String str18 = atomikosProperties11.getLogBaseDir();
        atomikosProperties11.setEnableLogging(true);
        long long21 = atomikosProperties11.getDefaultJtaTimeout();
        boolean boolean22 = atomikosProperties11.isSerialJtaTransactions();
        java.lang.String str23 = atomikosProperties11.getOutputDir();
        atomikosProperties11.setTransactionManagerUniqueName("{}");
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        boolean boolean30 = properties27.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Enumeration<?> wildcardEnumeration40 = properties32.propertyNames();
        boolean boolean41 = properties27.containsValue((java.lang.Object) wildcardEnumeration40);
        java.lang.Object obj42 = properties7.put((java.lang.Object) atomikosProperties11, (java.lang.Object) properties27);
        java.lang.Object obj43 = properties7.clone();
        java.lang.Object obj44 = properties1.get((java.lang.Object) properties7);
        java.io.OutputStream outputStream45 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream45, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(wildcardEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(obj43);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        boolean boolean25 = properties22.contains((java.lang.Object) 1L);
        int int26 = properties22.size();
        java.util.Enumeration<?> wildcardEnumeration27 = properties22.propertyNames();
        java.lang.Object obj28 = properties20.remove((java.lang.Object) properties22);
        java.lang.Object obj29 = null;
        boolean boolean30 = properties22.equals(obj29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int32 = atomikosProperties31.getMaxActives();
        java.lang.String str33 = atomikosProperties31.getTransactionManagerUniqueName();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties31.setMaxTimeout((long) '#');
        atomikosProperties31.setLogBaseDir("tm.out");
        atomikosProperties31.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.lang.String str49 = properties46.getProperty("");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        boolean boolean55 = properties43.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean54);
        boolean boolean56 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setConsoleFileName("tm.out");
        java.util.Properties properties61 = new java.util.Properties();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        boolean boolean76 = properties75.isEmpty();
        boolean boolean77 = properties65.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean76);
        boolean boolean78 = properties65.isEmpty();
        boolean boolean79 = properties61.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties65);
        boolean boolean80 = properties43.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean79);
        java.util.Collection<java.lang.Object> objCollection81 = properties43.values();
        java.util.Collection<java.lang.Object> objCollection82 = properties43.values();
        java.lang.Object obj83 = properties22.putIfAbsent((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) objCollection82);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 50 + "'", int32 == 50);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objCollection81);
        org.junit.Assert.assertNotNull(objCollection82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        properties1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int15 = recovery14.getMaxRetries();
        boolean boolean16 = properties12.containsKey((java.lang.Object) recovery14);
        properties12.clear();
        boolean boolean19 = properties12.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel48);
        boolean boolean52 = properties12.replace((java.lang.Object) properties21, (java.lang.Object) atomikosProperties23, (java.lang.Object) 10.0d);
        java.util.Properties properties53 = new java.util.Properties(properties12);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties12.entrySet();
        java.lang.Object obj57 = properties12.setProperty("{10=#}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties58 = new java.util.Properties(properties12);
        java.lang.Object obj59 = properties1.get((java.lang.Object) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setOutputDir("");
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        int int71 = atomikosProperties60.getMaxActives();
        atomikosProperties60.setLogBaseDir("");
        atomikosProperties60.setCheckpointInterval((long) (short) -1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int77 = atomikosProperties76.getMaxActives();
        java.lang.String str78 = atomikosProperties76.getTransactionManagerUniqueName();
        java.lang.String str79 = atomikosProperties76.getLogBaseName();
        java.lang.String str80 = atomikosProperties76.getLogBaseDir();
        atomikosProperties76.setCheckpointInterval(300000L);
        java.lang.Object obj83 = properties1.getOrDefault((java.lang.Object) atomikosProperties60, (java.lang.Object) 300000L);
        java.lang.String str85 = properties1.getProperty("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 50 + "'", int71 == 50);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77 == 50);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + obj83 + "' != '" + 300000L + "'", obj83, 300000L);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = new java.util.Properties(properties36);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties39.entrySet();
        java.util.Enumeration<?> wildcardEnumeration41 = properties39.propertyNames();
        java.lang.Object obj42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj43 = properties39.remove(obj42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        boolean boolean15 = properties14.isEmpty();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<?> wildcardEnumeration25 = properties17.propertyNames();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.lang.String str33 = properties30.getProperty("");
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj39 = properties27.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setOutputDir("");
        boolean boolean44 = properties17.containsKey((java.lang.Object) "");
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        java.lang.String str53 = properties50.getProperty("");
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj59 = properties47.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties56);
        atomikosProperties56.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties56.getConsoleLogLevel();
        java.lang.String str63 = atomikosProperties56.getTransactionManagerUniqueName();
        java.lang.Object obj64 = properties17.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        java.util.Collection<java.lang.Object> objCollection65 = properties17.values();
        java.lang.Object obj66 = properties17.clone();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setConsoleFileName("");
        java.lang.String str77 = atomikosProperties72.getLogBaseName();
        long long78 = atomikosProperties72.getCheckpointInterval();
        atomikosProperties72.setForceShutdownOnVmExit(false);
        java.util.Properties properties81 = atomikosProperties72.asProperties();
        boolean boolean82 = atomikosProperties72.isAllowSubTransactions();
        int int83 = atomikosProperties72.getConsoleFileLimit();
        boolean boolean84 = properties68.containsKey((java.lang.Object) int83);
        java.util.Enumeration<?> wildcardEnumeration85 = properties68.propertyNames();
        boolean boolean86 = properties17.containsValue((java.lang.Object) properties68);
        boolean boolean87 = properties14.contains((java.lang.Object) properties17);
        boolean boolean88 = properties17.isEmpty();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        long long12 = atomikosProperties0.getMaxTimeout();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 300000L + "'", long12 == 300000L);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery5 = atomikosProperties0.getRecovery();
        recovery5.setDelay((long) (-1));
        long long8 = recovery5.getForgetOrphanedLogEntriesDelay();
        recovery5.setMaxRetries(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(recovery5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        int int12 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.Object obj16 = properties13.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.store(outputStream17, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties12.getRecovery();
        atomikosProperties12.setEnableLogging(false);
        atomikosProperties12.setSerialJtaTransactions(true);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties20.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        boolean boolean42 = properties20.contains((java.lang.Object) properties34);
        java.util.Set<java.lang.Object> objSet43 = properties34.keySet();
        java.lang.Object obj44 = properties7.getOrDefault((java.lang.Object) true, (java.lang.Object) properties34);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setSerialJtaTransactions(false);
        java.lang.String str53 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setAllowSubTransactions(false);
        java.lang.String str56 = atomikosProperties46.getService();
        atomikosProperties46.setSerialJtaTransactions(true);
        atomikosProperties46.setAllowSubTransactions(true);
        boolean boolean61 = properties1.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties46);
        int int62 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setConsoleFileName("");
        java.lang.String str68 = atomikosProperties63.getLogBaseName();
        long long69 = atomikosProperties63.getCheckpointInterval();
        java.lang.String str70 = atomikosProperties63.getLogBaseDir();
        java.lang.String str71 = atomikosProperties63.getConsoleFileName();
        java.util.Properties properties72 = atomikosProperties63.asProperties();
        java.lang.String str73 = properties72.toString();
        java.util.Enumeration<?> wildcardEnumeration74 = properties72.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setCheckpointInterval((long) (byte) -1);
        atomikosProperties75.setThreadedTwoPhaseCommit(true);
        atomikosProperties75.setSerialJtaTransactions(false);
        atomikosProperties75.setOutputDir("");
        atomikosProperties75.setMaxActives(52);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery86 = atomikosProperties75.getRecovery();
        boolean boolean87 = properties1.remove((java.lang.Object) wildcardEnumeration74, (java.lang.Object) atomikosProperties75);
        java.io.OutputStream outputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream88, "{{}=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + (-1L) + "'", long69 == (-1L));
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNotNull(properties72);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str73, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(wildcardEnumeration74);
        org.junit.Assert.assertNotNull(recovery86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        long long6 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long16 = atomikosProperties0.getMaxTimeout();
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str18 = atomikosProperties0.getConsoleFileName();
        boolean boolean19 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str8 = properties6.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setConsoleFileName("");
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        long long15 = atomikosProperties9.getCheckpointInterval();
        java.lang.String str16 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setMaxTimeout(300000L);
        atomikosProperties9.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setConsoleFileName("");
        atomikosProperties21.setCheckpointInterval((long) 100);
        atomikosProperties21.setMaxTimeout((long) (byte) -1);
        boolean boolean30 = properties6.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties21);
        atomikosProperties21.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean33 = atomikosProperties21.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel34);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        java.lang.String str37 = atomikosProperties5.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setAllowSubTransactions(true);
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        int int16 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setSerialJtaTransactions(true);
        java.lang.String str21 = atomikosProperties10.getConsoleFileName();
        java.lang.String str22 = atomikosProperties10.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = atomikosProperties10.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(recovery23);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setConsoleFileCount(32);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties13.elements();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.storeToXML(outputStream29, "hi!", "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setOutputDir("tmlog");
        atomikosProperties0.setDefaultJtaTimeout((long) 100);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setConsoleFileLimit(50);
        java.lang.Class<?> wildcardClass18 = atomikosProperties0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        java.lang.Object obj46 = properties1.setProperty("{10=#}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties47 = new java.util.Properties(properties1);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        boolean boolean51 = properties49.isEmpty();
        java.util.Set<java.lang.String> strSet52 = properties49.stringPropertyNames();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int57 = recovery56.getMaxRetries();
        boolean boolean58 = properties54.containsKey((java.lang.Object) recovery56);
        recovery56.setRetryInterval((long) (short) -1);
        recovery56.setRetryInterval((long) 0);
        recovery56.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass65 = recovery56.getClass();
        boolean boolean66 = properties49.contains((java.lang.Object) recovery56);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties71.elements();
        java.lang.String str74 = properties71.getProperty("");
        properties68.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties71);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        boolean boolean80 = properties68.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean79);
        java.util.Properties properties81 = null;
        java.util.Properties properties82 = new java.util.Properties(properties81);
        java.util.Enumeration<java.lang.Object> objEnumeration83 = properties82.elements();
        java.util.Properties properties84 = null;
        java.util.Properties properties85 = new java.util.Properties(properties84);
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties85.elements();
        java.lang.String str88 = properties85.getProperty("");
        properties82.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties85);
        java.util.Set<java.lang.String> strSet90 = properties85.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet91 = properties85.entrySet();
        java.lang.Object obj92 = properties68.get((java.lang.Object) objEntrySet91);
        boolean boolean93 = properties49.contains((java.lang.Object) objEntrySet91);
        java.lang.Object obj94 = properties47.get((java.lang.Object) objEntrySet91);
        java.lang.String str95 = properties47.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objEnumeration83);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertNotNull(objEntrySet91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "{}" + "'", str95, "{}");
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        atomikosProperties4.setForceShutdownOnVmExit(false);
        java.util.Properties properties13 = atomikosProperties4.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.util.Collection<java.lang.Object> objCollection15 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        java.lang.String str23 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseName("hi!");
        boolean boolean26 = properties1.remove((java.lang.Object) properties13, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setConsoleFileName("");
        java.lang.String str32 = atomikosProperties27.getLogBaseName();
        java.lang.String str33 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setForceShutdownOnVmExit(false);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        java.lang.String str40 = properties37.getProperty("hi!");
        boolean boolean42 = properties37.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet43 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int45 = atomikosProperties44.getMaxActives();
        boolean boolean46 = properties37.equals((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.lang.String str49 = atomikosProperties44.getLogBaseDir();
        java.lang.String str50 = atomikosProperties44.getLogBaseName();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        java.util.Properties properties54 = new java.util.Properties(properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setConsoleFileName("");
        java.lang.String str65 = atomikosProperties60.getLogBaseName();
        long long66 = atomikosProperties60.getCheckpointInterval();
        java.lang.String str67 = atomikosProperties60.getLogBaseDir();
        atomikosProperties60.setOutputDir("");
        atomikosProperties60.setTransactionManagerUniqueName("hi!");
        int int72 = atomikosProperties60.getConsoleFileLimit();
        java.lang.String str73 = atomikosProperties60.getTransactionManagerUniqueName();
        boolean boolean74 = properties54.remove((java.lang.Object) atomikosProperties55, (java.lang.Object) str73);
        java.util.Enumeration<?> wildcardEnumeration75 = properties54.propertyNames();
        java.util.Collection<java.lang.Object> objCollection76 = properties54.values();
        boolean boolean77 = properties1.replace((java.lang.Object) atomikosProperties27, (java.lang.Object) atomikosProperties44, (java.lang.Object) objCollection76);
        boolean boolean78 = atomikosProperties44.isAllowSubTransactions();
        atomikosProperties44.setLogBaseDir("{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj11 = properties8.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{tm.out=hi!}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj26 = properties14.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties23);
        atomikosProperties23.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties23.getConsoleLogLevel();
        java.lang.String str30 = atomikosProperties23.getTransactionManagerUniqueName();
        atomikosProperties23.setCheckpointInterval((long) 100);
        boolean boolean33 = atomikosProperties23.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties23.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel34);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        atomikosProperties19.setCheckpointInterval((long) 100);
        atomikosProperties19.setMaxTimeout((long) (byte) -1);
        java.lang.String str28 = atomikosProperties19.getLogBaseDir();
        boolean boolean29 = properties4.equals((java.lang.Object) atomikosProperties19);
        int int30 = atomikosProperties19.getConsoleFileCount();
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setConsoleFileName("");
        int int25 = atomikosProperties16.getConsoleFileCount();
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties16.getTransactionManagerUniqueName();
        boolean boolean29 = atomikosProperties16.isEnableLogging();
        java.lang.String str30 = atomikosProperties16.getLogBaseName();
        java.lang.String str31 = atomikosProperties16.getLogBaseName();
        java.lang.String str32 = atomikosProperties16.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        properties1.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(objEnumeration6);
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties11.getRecovery();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean24 = properties15.contains((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        atomikosProperties25.setThreadedTwoPhaseCommit(true);
        atomikosProperties25.setSerialJtaTransactions(false);
        atomikosProperties25.setOutputDir("");
        java.lang.String str34 = atomikosProperties25.getConsoleFileName();
        java.lang.String str35 = atomikosProperties25.getLogBaseName();
        atomikosProperties25.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel38 = atomikosProperties25.getConsoleLogLevel();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int43 = recovery42.getMaxRetries();
        boolean boolean44 = properties40.containsKey((java.lang.Object) recovery42);
        properties40.clear();
        boolean boolean47 = properties40.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setConsoleFileName("");
        java.lang.String str56 = atomikosProperties51.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.lang.String str69 = properties66.getProperty("");
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj75 = properties63.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties72);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel76 = atomikosProperties72.getConsoleLogLevel();
        atomikosProperties57.setConsoleLogLevel(atomikosLoggingLevel76);
        atomikosProperties51.setConsoleLogLevel(atomikosLoggingLevel76);
        boolean boolean80 = properties40.replace((java.lang.Object) properties49, (java.lang.Object) atomikosProperties51, (java.lang.Object) 10.0d);
        java.util.Properties properties81 = new java.util.Properties(properties40);
        boolean boolean82 = properties40.isEmpty();
        int int83 = properties40.size();
        java.lang.Object obj84 = properties15.replace((java.lang.Object) atomikosLoggingLevel38, (java.lang.Object) properties40);
        atomikosProperties11.setConsoleLogLevel(atomikosLoggingLevel38);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel38);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tm.out" + "'", str34, "tm.out");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel38 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel38.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel76 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel76.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties6.entrySet();
        java.io.InputStream inputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties6.loadFromXML(inputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertNotNull(objEntrySet7);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setService("{10=#}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = atomikosProperties0.getRecovery();
        recovery30.setMaxRetries((int) 'a');
        long long33 = recovery30.getDelay();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery30);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 10000L + "'", long33 == 10000L);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseDir("");
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        long long11 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setConsoleFileCount((int) (byte) 10);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj25 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties26.getRecovery();
        atomikosProperties26.setEnableLogging(false);
        boolean boolean31 = properties8.equals((java.lang.Object) atomikosProperties26);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties8.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties8.entrySet();
        java.lang.String str34 = properties8.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        int int36 = properties8.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int38 = atomikosProperties37.getMaxActives();
        java.lang.String str39 = atomikosProperties37.getTransactionManagerUniqueName();
        java.lang.String str40 = atomikosProperties37.getLogBaseName();
        boolean boolean41 = atomikosProperties37.isThreadedTwoPhaseCommit();
        atomikosProperties37.setService("tmlog");
        long long44 = atomikosProperties37.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setCheckpointInterval((long) (byte) -1);
        atomikosProperties45.setThreadedTwoPhaseCommit(true);
        atomikosProperties45.setSerialJtaTransactions(false);
        atomikosProperties45.setOutputDir("");
        java.lang.String str54 = atomikosProperties45.getConsoleFileName();
        java.lang.String str55 = atomikosProperties45.getLogBaseName();
        atomikosProperties45.setCheckpointInterval((long) (short) 100);
        atomikosProperties45.setLogBaseDir("{10=#}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties45.getConsoleLogLevel();
        java.lang.Object obj61 = properties8.replace((java.lang.Object) atomikosProperties37, (java.lang.Object) atomikosProperties45);
        java.io.PrintWriter printWriter62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printWriter62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 50 + "'", int38 == 50);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 10000L + "'", long44 == 10000L);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tm.out" + "'", str54, "tm.out");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "tmlog" + "'", str55, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        boolean boolean25 = properties22.contains((java.lang.Object) 1L);
        int int26 = properties22.size();
        java.util.Enumeration<?> wildcardEnumeration27 = properties22.propertyNames();
        java.lang.Object obj28 = properties20.remove((java.lang.Object) properties22);
        java.util.Enumeration<?> wildcardEnumeration29 = properties22.propertyNames();
        java.util.Properties properties30 = new java.util.Properties(properties22);
        java.io.OutputStream outputStream31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties30.storeToXML(outputStream31, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{tm.out=hi!}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties12.getConsoleLogLevel();
        java.lang.Object obj19 = properties0.putIfAbsent((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.lang.String str27 = properties24.getProperty("");
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties24.values();
        boolean boolean30 = properties0.containsValue((java.lang.Object) objCollection29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        boolean boolean44 = properties32.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean43);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        boolean boolean54 = properties32.contains((java.lang.Object) properties46);
        int int55 = properties32.size();
        boolean boolean56 = properties0.equals((java.lang.Object) properties32);
        java.lang.Object obj57 = properties0.clone();
        java.lang.String str60 = properties0.getProperty("", "{}");
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{}" + "'", str60, "{}");
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setLogBaseName("{}");
        boolean boolean28 = atomikosProperties19.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setDefaultJtaTimeout((long) (short) -1);
        atomikosProperties10.setAllowSubTransactions(true);
        java.lang.String str25 = atomikosProperties10.getLogBaseDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Collection<java.lang.Object> objCollection9 = properties4.values();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties20.getConsoleLogLevel();
        atomikosProperties20.setConsoleFileLimit((int) '4');
        atomikosProperties20.setEnableLogging(false);
        int int29 = atomikosProperties20.getConsoleFileLimit();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        boolean boolean48 = properties31.contains((java.lang.Object) objEnumeration47);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.String str55 = atomikosProperties52.getLogBaseDir();
        atomikosProperties52.setSerialJtaTransactions(true);
        long long58 = atomikosProperties52.getMaxTimeout();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        boolean boolean61 = properties60.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties60.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties60.entrySet();
        boolean boolean64 = properties50.remove((java.lang.Object) atomikosProperties52, (java.lang.Object) objEntrySet63);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        java.lang.Object obj66 = properties4.getOrDefault((java.lang.Object) atomikosProperties20, (java.lang.Object) properties31);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet70 = properties68.entrySet();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Object obj73 = properties68.replace((java.lang.Object) "hi!", obj72);
        boolean boolean75 = properties68.equals((java.lang.Object) 1.0f);
        java.util.Properties properties76 = new java.util.Properties(properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str78 = atomikosProperties77.getLogBaseDir();
        atomikosProperties77.setLogBaseDir("");
        java.lang.String str81 = atomikosProperties77.getTransactionManagerUniqueName();
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        boolean boolean84 = properties83.isEmpty();
        java.util.Properties properties85 = new java.util.Properties(properties83);
        java.util.Collection<java.lang.Object> objCollection86 = properties83.values();
        java.lang.Object obj87 = properties83.clone();
        java.util.Properties properties88 = new java.util.Properties(properties83);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties89 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean90 = properties88.containsValue((java.lang.Object) atomikosProperties89);
        boolean boolean91 = atomikosProperties89.isForceShutdownOnVmExit();
        java.lang.Object obj92 = properties76.getOrDefault((java.lang.Object) atomikosProperties77, (java.lang.Object) atomikosProperties89);
        atomikosProperties77.setMaxActives(19);
        java.lang.Object obj95 = properties31.get((java.lang.Object) atomikosProperties77);
        atomikosProperties77.setService("");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objCollection9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 300000L + "'", long58 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(objEntrySet70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objCollection86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{}");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        java.lang.String str17 = atomikosProperties11.getConsoleFileName();
        atomikosProperties11.setForceShutdownOnVmExit(false);
        long long20 = atomikosProperties11.getDefaultJtaTimeout();
        java.lang.String str21 = atomikosProperties11.getService();
        boolean boolean22 = properties1.equals((java.lang.Object) atomikosProperties11);
        atomikosProperties11.setConsoleFileName("{10=#}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        java.lang.String str26 = atomikosProperties21.getOutputDir();
        java.lang.String str27 = atomikosProperties21.getTransactionManagerUniqueName();
        java.lang.Object obj28 = properties1.get((java.lang.Object) atomikosProperties21);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties29.keys();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        int int73 = atomikosProperties68.getConsoleFileCount();
        java.lang.Class<?> wildcardClass74 = atomikosProperties68.getClass();
        java.lang.Object obj75 = properties1.put((java.lang.Object) properties29, (java.lang.Object) atomikosProperties68);
        java.util.Properties properties76 = new java.util.Properties(properties1);
        java.lang.String str79 = properties76.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "hi!");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        java.lang.String str26 = atomikosProperties21.getOutputDir();
        java.lang.String str27 = atomikosProperties21.getTransactionManagerUniqueName();
        java.lang.Object obj28 = properties1.get((java.lang.Object) atomikosProperties21);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties29.keys();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        int int73 = atomikosProperties68.getConsoleFileCount();
        java.lang.Class<?> wildcardClass74 = atomikosProperties68.getClass();
        java.lang.Object obj75 = properties1.put((java.lang.Object) properties29, (java.lang.Object) atomikosProperties68);
        java.util.Properties properties76 = new java.util.Properties(properties29);
        java.lang.Object obj77 = properties76.clone();
        java.lang.Object obj78 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery79 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery79.setRetryInterval((long) 100);
        int int82 = recovery79.getMaxRetries();
        long long83 = recovery79.getDelay();
        recovery79.setRetryInterval((long) 52);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = properties76.put(obj78, (java.lang.Object) recovery79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "{}");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10000L + "'", long83 == 10000L);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        boolean boolean44 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int46 = recovery45.getMaxRetries();
        boolean boolean47 = properties43.containsKey((java.lang.Object) recovery45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.String str51 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setMaxTimeout(0L);
        java.lang.Object obj54 = properties43.remove((java.lang.Object) atomikosProperties48);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int59 = recovery58.getMaxRetries();
        boolean boolean60 = properties56.containsKey((java.lang.Object) recovery58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.lang.String str68 = properties65.getProperty("");
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj74 = properties62.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties71);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties71.getConsoleLogLevel();
        int int76 = atomikosProperties71.getConsoleFileCount();
        java.lang.Object obj77 = properties56.get((java.lang.Object) atomikosProperties71);
        long long78 = atomikosProperties71.getMaxTimeout();
        java.lang.Object obj79 = properties1.put((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties71);
        boolean boolean80 = atomikosProperties71.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties71.getConsoleFileName();
        java.lang.String str82 = atomikosProperties71.getService();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tm.out" + "'", str81, "tm.out");
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties10.getRecovery();
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties10.getOutputDir();
        java.lang.Object obj18 = properties1.get((java.lang.Object) atomikosProperties10);
        atomikosProperties10.setLogBaseName("{}");
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str23 = atomikosProperties10.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties21.entrySet();
        java.lang.Object obj26 = properties21.setProperty("tm.out", "hi!");
        boolean boolean27 = properties21.isEmpty();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.String str35 = properties32.getProperty("");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        boolean boolean38 = properties29.contains((java.lang.Object) 0);
        boolean boolean39 = properties21.containsValue((java.lang.Object) boolean38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.lang.String str47 = properties44.getProperty("");
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj53 = properties41.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties50);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel54 = atomikosProperties50.getConsoleLogLevel();
        atomikosProperties50.setConsoleFileLimit((int) '4');
        atomikosProperties50.setMaxActives((int) ' ');
        atomikosProperties50.setForceShutdownOnVmExit(true);
        java.lang.Object obj61 = properties1.replace((java.lang.Object) boolean38, (java.lang.Object) true);
        java.io.OutputStream outputStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream62, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel54 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel54.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setConsoleFileLimit(0);
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties1.keys();
        java.util.Properties properties5 = new java.util.Properties(properties1);
        java.io.Reader reader6 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.load(reader6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration4);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties7.setCheckpointInterval((long) (byte) -1);
        atomikosProperties7.setThreadedTwoPhaseCommit(true);
        atomikosProperties7.setSerialJtaTransactions(false);
        atomikosProperties7.setOutputDir("");
        java.lang.String str16 = atomikosProperties7.getConsoleFileName();
        java.lang.String str17 = atomikosProperties7.getLogBaseName();
        atomikosProperties7.setConsoleFileCount((int) (byte) -1);
        atomikosProperties7.setService("");
        boolean boolean22 = properties3.containsKey((java.lang.Object) "");
        properties3.clear();
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream24, "{}", "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        properties1.clear();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        boolean boolean30 = properties26.containsKey((java.lang.Object) recovery28);
        properties26.clear();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        java.lang.String str36 = properties33.getProperty("hi!");
        boolean boolean38 = properties33.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet39 = properties33.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        java.lang.String str45 = atomikosProperties40.getOutputDir();
        atomikosProperties40.setConsoleFileName("tmlog");
        boolean boolean48 = properties33.contains((java.lang.Object) "tmlog");
        java.lang.Object obj49 = properties26.get((java.lang.Object) properties33);
        java.lang.String str51 = properties26.getProperty("{}");
        java.lang.Object obj52 = properties26.clone();
        java.util.Enumeration<?> wildcardEnumeration53 = properties26.propertyNames();
        boolean boolean54 = properties1.contains((java.lang.Object) wildcardEnumeration53);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.lang.String str62 = properties59.getProperty("");
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj68 = properties56.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties65);
        atomikosProperties65.setSerialJtaTransactions(false);
        boolean boolean71 = atomikosProperties65.isForceShutdownOnVmExit();
        java.util.Properties properties72 = atomikosProperties65.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        atomikosProperties73.setThreadedTwoPhaseCommit(true);
        atomikosProperties73.setSerialJtaTransactions(false);
        java.lang.Object obj80 = properties72.remove((java.lang.Object) false);
        java.util.Enumeration<?> wildcardEnumeration81 = properties72.propertyNames();
        java.lang.Object obj82 = null;
        java.lang.Object obj83 = properties1.getOrDefault((java.lang.Object) properties72, obj82);
        java.lang.String str85 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Collection<java.lang.Object> objCollection86 = properties1.values();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(properties72);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(wildcardEnumeration81);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(objCollection86);
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int28 = recovery27.getMaxRetries();
        boolean boolean29 = properties25.containsKey((java.lang.Object) recovery27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties40.getConsoleLogLevel();
        int int45 = atomikosProperties40.getConsoleFileCount();
        java.lang.Object obj46 = properties25.get((java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(true);
        java.util.Properties properties49 = atomikosProperties40.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.io.InputStream inputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.loadFromXML(inputStream52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(objEnumeration50);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        int int9 = properties1.size();
        java.lang.Object obj10 = null;
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.Object obj29 = properties12.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        java.lang.String str35 = atomikosProperties30.getOutputDir();
        java.util.Properties properties36 = atomikosProperties30.asProperties();
        java.lang.Object obj37 = properties12.remove((java.lang.Object) properties36);
        java.util.Properties properties38 = new java.util.Properties(properties36);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int43 = recovery42.getMaxRetries();
        boolean boolean44 = properties40.containsKey((java.lang.Object) recovery42);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj58 = properties46.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties55);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties55.getConsoleLogLevel();
        int int60 = atomikosProperties55.getConsoleFileCount();
        java.lang.Object obj61 = properties40.get((java.lang.Object) atomikosProperties55);
        atomikosProperties55.setSerialJtaTransactions(true);
        java.util.Properties properties64 = atomikosProperties55.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.lang.Object obj68 = properties64.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties64.elements();
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties71.elements();
        boolean boolean73 = properties71.isEmpty();
        java.util.Set<java.lang.String> strSet74 = properties71.stringPropertyNames();
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        boolean boolean77 = properties76.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery78 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int79 = recovery78.getMaxRetries();
        boolean boolean80 = properties76.containsKey((java.lang.Object) recovery78);
        recovery78.setRetryInterval((long) (short) -1);
        recovery78.setRetryInterval((long) 0);
        recovery78.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass87 = recovery78.getClass();
        boolean boolean88 = properties71.contains((java.lang.Object) recovery78);
        boolean boolean89 = properties64.equals((java.lang.Object) boolean88);
        int int90 = properties64.size();
        boolean boolean91 = properties64.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration92 = properties64.keys();
        java.util.Set<java.lang.String> strSet93 = properties64.stringPropertyNames();
        boolean boolean94 = properties36.containsValue((java.lang.Object) properties64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj95 = properties1.getOrDefault(obj10, (java.lang.Object) boolean94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 5 + "'", int43 == 5);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(properties64);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 5 + "'", int79 == 5);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 19 + "'", int90 == 19);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(objEnumeration92);
        org.junit.Assert.assertNotNull(strSet93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxTimeout((long) 10);
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        int int14 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxTimeout((long) (byte) -1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        java.util.Collection<java.lang.Object> objCollection49 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int51 = atomikosProperties50.getMaxActives();
        atomikosProperties50.setMaxTimeout((long) (short) 0);
        boolean boolean54 = properties1.containsKey((java.lang.Object) atomikosProperties50);
        java.util.Set<java.lang.String> strSet55 = properties1.stringPropertyNames();
        java.util.Properties properties56 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection57 = properties1.values();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(objCollection57);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        atomikosProperties0.setLogBaseDir("{10=#}");
        long long15 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setOutputDir("{tm.out=hi!}");
        atomikosProperties0.setCheckpointInterval((long) 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setMaxRetries((int) '4');
        recovery3.setMaxRetries((int) (short) -1);
        recovery3.setRetryInterval((long) 0);
        recovery3.setForgetOrphanedLogEntriesDelay(300000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        atomikosProperties31.setConsoleFileName("");
        atomikosProperties31.setConsoleFileName("");
        long long38 = atomikosProperties31.getDefaultJtaTimeout();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean41 = properties0.containsKey((java.lang.Object) atomikosProperties31);
        java.lang.Object obj42 = null;
        boolean boolean43 = properties0.equals(obj42);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        boolean boolean48 = properties45.containsKey((java.lang.Object) 10.0f);
        java.lang.String str50 = properties45.getProperty("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = atomikosProperties52.getRecovery();
        atomikosProperties52.setEnableLogging(false);
        atomikosProperties52.setSerialJtaTransactions(true);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.lang.String str66 = properties63.getProperty("");
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj72 = properties60.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties69);
        atomikosProperties69.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties69.getConsoleLogLevel();
        atomikosProperties52.setConsoleLogLevel(atomikosLoggingLevel75);
        java.lang.Object obj77 = properties45.replace((java.lang.Object) 500L, (java.lang.Object) atomikosLoggingLevel75);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean78 = properties0.contains(obj77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(recovery54);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj77);
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        java.lang.String str30 = atomikosProperties26.getConsoleFileName();
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int49 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        boolean boolean52 = properties1.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) false);
        java.io.InputStream inputStream53 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setConsoleFileCount(32);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        java.lang.String str12 = atomikosProperties10.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties10.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileName("");
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.String str25 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseDir("tmlog");
        java.lang.String str28 = atomikosProperties18.getOutputDir();
        java.lang.String str29 = atomikosProperties18.getOutputDir();
        boolean boolean30 = atomikosProperties18.isThreadedTwoPhaseCommit();
        atomikosProperties18.setDefaultJtaTimeout((long) ' ');
        java.util.Properties properties33 = atomikosProperties18.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setOutputDir("");
        java.lang.String str43 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setAllowSubTransactions(false);
        int int46 = atomikosProperties34.getMaxActives();
        boolean boolean47 = properties33.containsKey((java.lang.Object) int46);
        java.lang.Object obj48 = properties8.put((java.lang.Object) boolean17, (java.lang.Object) boolean47);
        java.io.InputStream inputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(inputStream49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj48);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 10);
        atomikosProperties0.setSerialJtaTransactions(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setSerialJtaTransactions(false);
        java.lang.String str12 = atomikosProperties5.getLogBaseName();
        atomikosProperties5.setMaxTimeout((long) (short) -1);
        java.lang.String str15 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setService("tmlog");
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj31 = properties19.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties28);
        atomikosProperties28.setSerialJtaTransactions(false);
        int int34 = atomikosProperties28.getConsoleFileCount();
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setForceShutdownOnVmExit(false);
        atomikosProperties28.setLogBaseName("hi!");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) "tmlog", (java.lang.Object) atomikosProperties28);
        atomikosProperties28.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str44 = atomikosProperties28.getService();
        atomikosProperties28.setOutputDir("{{}={}}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("");
        int int7 = atomikosProperties0.getConsoleFileCount();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        int int9 = properties8.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setConsoleFileName("");
        java.lang.String str15 = atomikosProperties10.getLogBaseName();
        long long16 = atomikosProperties10.getCheckpointInterval();
        java.lang.String str17 = atomikosProperties10.getLogBaseDir();
        atomikosProperties10.setEnableLogging(true);
        long long20 = atomikosProperties10.getDefaultJtaTimeout();
        java.lang.String str21 = atomikosProperties10.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setConsoleFileName("");
        java.lang.String str27 = atomikosProperties22.getLogBaseName();
        long long28 = atomikosProperties22.getCheckpointInterval();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int49 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.setTransactionManagerUniqueName("tm.out");
        boolean boolean52 = atomikosProperties43.isEnableLogging();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.String str57 = properties54.getProperty("hi!");
        java.util.Set<java.lang.String> strSet58 = properties54.stringPropertyNames();
        java.lang.Object obj59 = properties54.clone();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties61.isEmpty();
        java.util.Properties properties63 = new java.util.Properties(properties61);
        java.util.Collection<java.lang.Object> objCollection64 = properties61.values();
        java.lang.Object obj65 = properties61.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int67 = atomikosProperties66.getMaxActives();
        java.lang.String str68 = atomikosProperties66.getTransactionManagerUniqueName();
        java.lang.String str69 = atomikosProperties66.getLogBaseName();
        boolean boolean70 = atomikosProperties66.isThreadedTwoPhaseCommit();
        atomikosProperties66.setCheckpointInterval((long) 'a');
        atomikosProperties66.setTransactionManagerUniqueName("tmlog");
        java.lang.Object obj75 = properties54.getOrDefault(obj65, (java.lang.Object) "tmlog");
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        boolean boolean78 = properties77.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = properties77.entrySet();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Object obj82 = properties77.replace((java.lang.Object) "hi!", obj81);
        boolean boolean84 = properties77.equals((java.lang.Object) 1.0f);
        java.util.Properties properties85 = new java.util.Properties(properties77);
        properties77.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties77.elements();
        boolean boolean88 = properties31.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) properties54, (java.lang.Object) objEnumeration87);
        atomikosProperties43.setLogBaseDir("");
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean91 = properties8.remove((java.lang.Object) str21, (java.lang.Object) atomikosProperties43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 19 + "'", int9 == 19);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(obj59);
        org.junit.Assert.assertEquals(obj59.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj59), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj59), "{}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objCollection64);
        org.junit.Assert.assertNotNull(obj65);
        org.junit.Assert.assertEquals(obj65.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj65), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj65), "{}");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + obj75 + "' != '" + "tmlog" + "'", obj75, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        java.lang.String str27 = properties1.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties1.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        boolean boolean33 = properties30.containsKey((java.lang.Object) 10.0f);
        java.lang.String str35 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet36 = properties30.stringPropertyNames();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean39 = properties38.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet40 = properties38.entrySet();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Object obj43 = properties38.replace((java.lang.Object) "hi!", obj42);
        boolean boolean45 = properties38.equals((java.lang.Object) 1.0f);
        java.lang.String str47 = properties38.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery48 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery48.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int51 = recovery48.getMaxRetries();
        int int52 = recovery48.getMaxRetries();
        java.lang.Object obj53 = properties38.get((java.lang.Object) recovery48);
        java.lang.Object obj54 = properties1.putIfAbsent((java.lang.Object) strSet36, (java.lang.Object) recovery48);
        recovery48.setForgetOrphanedLogEntriesDelay((long) 10);
        long long57 = recovery48.getRetryInterval();
        recovery48.setForgetOrphanedLogEntriesDelay((long) (-1));
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEntrySet40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 5 + "'", int52 == 5);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10000L + "'", long57 == 10000L);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.util.Set<java.lang.String> strSet27 = properties1.stringPropertyNames();
        java.lang.String str29 = properties1.getProperty("tmlog");
        java.lang.Object obj32 = properties1.setProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Enumeration<?> wildcardEnumeration42 = properties34.propertyNames();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        atomikosProperties53.setSerialJtaTransactions(false);
        atomikosProperties53.setOutputDir("");
        boolean boolean61 = properties34.containsKey((java.lang.Object) "");
        boolean boolean62 = properties1.containsKey((java.lang.Object) properties34);
        java.lang.Class<?> wildcardClass63 = properties1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(wildcardEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        boolean boolean18 = properties9.contains((java.lang.Object) 0);
        java.util.Collection<java.lang.Object> objCollection19 = properties9.values();
        java.lang.String str20 = properties9.toString();
        java.lang.Object obj21 = properties7.get((java.lang.Object) str20);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{}" + "'", str20, "{}");
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel7 = atomikosProperties0.getConsoleLogLevel();
        java.lang.Class<?> wildcardClass8 = atomikosLoggingLevel7.getClass();
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel7 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel7.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        boolean boolean13 = properties1.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration14 = properties1.propertyNames();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.lang.String str22 = properties19.getProperty("");
        properties16.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties25 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties25.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj28 = properties16.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties25);
        atomikosProperties25.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel31 = atomikosProperties25.getConsoleLogLevel();
        java.lang.String str32 = atomikosProperties25.getTransactionManagerUniqueName();
        atomikosProperties25.setCheckpointInterval((long) 100);
        int int35 = atomikosProperties25.getMaxActives();
        atomikosProperties25.setCheckpointInterval(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel38 = atomikosProperties25.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setSerialJtaTransactions(false);
        boolean boolean46 = atomikosProperties39.isEnableLogging();
        boolean boolean47 = atomikosProperties39.isThreadedTwoPhaseCommit();
        atomikosProperties39.setSerialJtaTransactions(false);
        java.lang.Object obj50 = properties1.put((java.lang.Object) atomikosLoggingLevel38, (java.lang.Object) atomikosProperties39);
        java.io.OutputStream outputStream51 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream51, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}", "{=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel31 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel31.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 50 + "'", int35 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel38 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel38.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        properties1.clear();
        java.util.Properties properties27 = new java.util.Properties(properties1);
        java.lang.Object obj28 = properties1.clone();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream29, "{{}=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.util.Set<java.lang.String> strSet7 = properties1.stringPropertyNames();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties9.entrySet();
        java.lang.Object obj14 = properties9.setProperty("tm.out", "hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        int int36 = atomikosProperties31.getConsoleFileCount();
        java.lang.Object obj37 = properties16.get((java.lang.Object) atomikosProperties31);
        long long38 = atomikosProperties31.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setConsoleFileName("");
        java.lang.String str44 = atomikosProperties39.getLogBaseName();
        long long45 = atomikosProperties39.getCheckpointInterval();
        atomikosProperties39.setForceShutdownOnVmExit(false);
        atomikosProperties39.setTransactionManagerUniqueName("tmlog");
        atomikosProperties39.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = atomikosProperties39.getRecovery();
        boolean boolean53 = atomikosProperties39.isSerialJtaTransactions();
        atomikosProperties39.setConsoleFileLimit(100);
        boolean boolean56 = properties1.replace((java.lang.Object) "tm.out", (java.lang.Object) atomikosProperties31, (java.lang.Object) 100);
        java.lang.Object obj57 = properties1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(recovery52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setDelay(10L);
        long long10 = recovery3.getRetryInterval();
        recovery3.setForgetOrphanedLogEntriesDelay((long) (short) 1);
        recovery3.setRetryInterval((long) (byte) 1);
        recovery3.setRetryInterval((long) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        java.lang.Class<?> wildcardClass15 = atomikosProperties0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setConsoleFileLimit(1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setSerialJtaTransactions(true);
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str12 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseName("{{}=}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties30.isEmpty();
        java.lang.Object obj33 = properties13.replace((java.lang.Object) 100.0f, (java.lang.Object) boolean32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel61 = atomikosProperties57.getConsoleLogLevel();
        atomikosProperties42.setConsoleLogLevel(atomikosLoggingLevel61);
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel61);
        atomikosProperties34.setCheckpointInterval(10L);
        boolean boolean66 = properties13.equals((java.lang.Object) atomikosProperties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties13.entrySet();
        java.lang.String str69 = properties13.getProperty("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        java.io.InputStream inputStream70 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties13.loadFromXML(inputStream70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel61 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel61.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getConsoleFileName();
        atomikosProperties38.setForceShutdownOnVmExit(false);
        atomikosProperties38.setAllowSubTransactions(false);
        long long50 = atomikosProperties38.getCheckpointInterval();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.lang.String str58 = properties55.getProperty("");
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj64 = properties52.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties61);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        boolean boolean67 = properties66.isEmpty();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.lang.Object obj69 = properties52.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str71 = atomikosProperties70.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery72 = atomikosProperties70.getRecovery();
        atomikosProperties70.setEnableLogging(false);
        boolean boolean75 = properties52.equals((java.lang.Object) atomikosProperties70);
        int int76 = atomikosProperties70.getConsoleFileCount();
        atomikosProperties70.setSerialJtaTransactions(false);
        java.lang.Object obj79 = properties36.replace((java.lang.Object) long50, (java.lang.Object) false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str81 = atomikosProperties80.getLogBaseDir();
        java.lang.String str82 = atomikosProperties80.getLogBaseDir();
        java.lang.String str83 = atomikosProperties80.getService();
        atomikosProperties80.setLogBaseName("");
        atomikosProperties80.setConsoleFileName("tmlog");
        java.lang.Object obj88 = properties36.get((java.lang.Object) atomikosProperties80);
        java.util.Set<java.lang.Object> objSet89 = properties36.keySet();
        java.io.Writer writer90 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties36.store(writer90, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(recovery72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertNotNull(objSet89);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties25.entrySet();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Object obj30 = properties25.replace((java.lang.Object) "hi!", obj29);
        boolean boolean32 = properties25.equals((java.lang.Object) 1.0f);
        java.util.Properties properties33 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        java.lang.String str42 = atomikosProperties34.getConsoleFileName();
        java.util.Properties properties43 = atomikosProperties34.asProperties();
        java.lang.Object obj44 = properties1.replace((java.lang.Object) properties33, (java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setConsoleFileName("tm.out");
        atomikosProperties45.setMaxActives((-1));
        atomikosProperties45.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setEnableLogging(true);
        atomikosProperties52.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setConsoleFileName("");
        java.lang.String str66 = atomikosProperties61.getLogBaseName();
        java.lang.String str67 = atomikosProperties61.getConsoleFileName();
        boolean boolean68 = properties1.replace((java.lang.Object) false, (java.lang.Object) atomikosProperties52, (java.lang.Object) atomikosProperties61);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties73.elements();
        java.lang.String str76 = properties73.getProperty("");
        properties70.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj82 = properties70.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties79);
        atomikosProperties79.setSerialJtaTransactions(false);
        atomikosProperties79.setMaxTimeout((long) (short) 1);
        long long87 = atomikosProperties79.getCheckpointInterval();
        java.lang.Object obj88 = properties1.remove((java.lang.Object) long87);
        java.io.PrintStream printStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + (-1L) + "'", long87 == (-1L));
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        java.lang.String str27 = properties24.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet28 = properties24.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties24.entrySet();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties34.entrySet();
        java.lang.Object obj38 = properties24.getOrDefault((java.lang.Object) properties31, (java.lang.Object) objEntrySet37);
        boolean boolean39 = properties20.containsKey((java.lang.Object) objEntrySet37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.lang.Object obj46 = properties43.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet47 = properties43.keySet();
        java.lang.Object obj48 = properties1.put((java.lang.Object) objEntrySet37, (java.lang.Object) objSet47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getLogBaseDir();
        java.lang.String str51 = atomikosProperties49.getLogBaseDir();
        boolean boolean52 = atomikosProperties49.isAllowSubTransactions();
        boolean boolean53 = atomikosProperties49.isSerialJtaTransactions();
        atomikosProperties49.setService("");
        int int56 = atomikosProperties49.getConsoleFileCount();
        boolean boolean57 = atomikosProperties49.isThreadedTwoPhaseCommit();
        boolean boolean58 = properties1.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setMaxActives(10);
        java.util.Properties properties61 = atomikosProperties49.asProperties();
        int int62 = atomikosProperties49.getConsoleFileLimit();
        boolean boolean63 = atomikosProperties49.isEnableLogging();
        atomikosProperties49.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(obj38);
// flaky:         org.junit.Assert.assertEquals(obj38.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setConsoleFileName("tmlog");
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        int int11 = atomikosProperties0.getConsoleFileLimit();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        java.lang.Object obj19 = properties0.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        java.lang.String str27 = atomikosProperties20.getOutputDir();
        boolean boolean28 = atomikosProperties20.isEnableLogging();
        java.lang.Object obj29 = properties0.get((java.lang.Object) atomikosProperties20);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean32 = properties31.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery33 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int34 = recovery33.getMaxRetries();
        boolean boolean35 = properties31.containsKey((java.lang.Object) recovery33);
        properties31.clear();
        boolean boolean38 = properties31.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj39 = null;
        boolean boolean40 = properties31.equals(obj39);
        java.lang.String str41 = properties31.toString();
        java.util.Collection<java.lang.Object> objCollection42 = properties31.values();
        java.util.Set<java.lang.String> strSet43 = properties31.stringPropertyNames();
        java.lang.Object obj44 = properties0.remove((java.lang.Object) properties31);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        boolean boolean58 = properties46.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean57);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.lang.String str66 = properties63.getProperty("");
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        boolean boolean68 = properties46.contains((java.lang.Object) properties60);
        java.util.Set<java.lang.Object> objSet69 = properties60.keySet();
        java.lang.Object obj72 = properties60.setProperty("tm.out", "{10=#}");
        java.lang.Object obj75 = properties60.setProperty("{10=#}", "{}");
        boolean boolean76 = properties0.containsKey((java.lang.Object) properties60);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(obj19);
        org.junit.Assert.assertEquals(obj19.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj19), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj19), "{}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "{}" + "'", str41, "{}");
        org.junit.Assert.assertNotNull(objCollection42);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objSet69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setMaxRetries((int) 'a');
        long long8 = recovery0.getRetryInterval();
        recovery0.setRetryInterval((long) 0);
        long long11 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(10L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseDir("{[]=WARN}");
        atomikosProperties0.setCheckpointInterval(1L);
        atomikosProperties0.setMaxTimeout((long) 10);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj14 = properties2.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties11.setConsoleFileLimit((int) '4');
        atomikosProperties11.setForceShutdownOnVmExit(true);
        int int20 = atomikosProperties11.getMaxActives();
        boolean boolean21 = properties0.contains((java.lang.Object) int20);
        int int22 = properties0.size();
        java.util.Set<java.lang.Object> objSet23 = properties0.keySet();
        java.util.Properties properties24 = new java.util.Properties(properties0);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        java.util.Properties properties28 = new java.util.Properties(properties26);
        java.util.Collection<java.lang.Object> objCollection29 = properties26.values();
        java.lang.Object obj30 = properties26.clone();
        java.util.Properties properties31 = new java.util.Properties(properties26);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties31.entrySet();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        boolean boolean46 = properties34.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean45);
        boolean boolean47 = properties34.isEmpty();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        boolean boolean52 = properties49.containsKey((java.lang.Object) 10.0f);
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Set<java.lang.String> strSet54 = properties49.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setSerialJtaTransactions(false);
        java.lang.String str62 = atomikosProperties55.getLogBaseName();
        atomikosProperties55.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties55.setConsoleFileCount((int) (byte) -1);
        atomikosProperties55.setConsoleFileLimit((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel69 = null;
        atomikosProperties55.setConsoleLogLevel(atomikosLoggingLevel69);
        atomikosProperties55.setMaxActives((int) (short) 1);
        boolean boolean73 = atomikosProperties55.isForceShutdownOnVmExit();
        java.lang.Object obj74 = properties31.getOrDefault((java.lang.Object) strSet54, (java.lang.Object) atomikosProperties55);
        boolean boolean75 = properties0.contains((java.lang.Object) atomikosProperties55);
        java.io.OutputStream outputStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.save(outputStream76, "tmlog");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertNotNull(obj30);
        org.junit.Assert.assertEquals(obj30.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj30), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj30), "{}");
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.elements();
        java.lang.Object obj16 = properties1.remove((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setThreadedTwoPhaseCommit(true);
        java.lang.String str22 = atomikosProperties17.getOutputDir();
        boolean boolean23 = atomikosProperties17.isForceShutdownOnVmExit();
        java.util.Properties properties24 = atomikosProperties17.asProperties();
        atomikosProperties17.setCheckpointInterval((long) 50);
        java.lang.Object obj28 = properties9.replace((java.lang.Object) 50, (java.lang.Object) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setConsoleFileName("");
        java.lang.String str34 = atomikosProperties29.getLogBaseName();
        long long35 = atomikosProperties29.getCheckpointInterval();
        atomikosProperties29.setAllowSubTransactions(false);
        long long38 = atomikosProperties29.getCheckpointInterval();
        boolean boolean39 = properties9.equals((java.lang.Object) long38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        boolean boolean43 = properties41.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties41.keys();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.String str49 = properties46.getProperty("hi!");
        boolean boolean51 = properties46.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet52 = properties46.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int54 = atomikosProperties53.getMaxActives();
        boolean boolean55 = properties46.equals((java.lang.Object) atomikosProperties53);
        atomikosProperties53.setSerialJtaTransactions(false);
        int int58 = atomikosProperties53.getMaxActives();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        boolean boolean61 = properties60.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery62 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int63 = recovery62.getMaxRetries();
        boolean boolean64 = properties60.containsKey((java.lang.Object) recovery62);
        long long65 = recovery62.getRetryInterval();
        java.lang.Object obj66 = properties41.getOrDefault((java.lang.Object) atomikosProperties53, (java.lang.Object) recovery62);
        atomikosProperties53.setDefaultJtaTimeout((long) '4');
        atomikosProperties53.setConsoleFileCount(32);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = atomikosProperties53.getRecovery();
        boolean boolean72 = properties9.containsValue((java.lang.Object) recovery71);
        java.lang.String str75 = properties9.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-1L) + "'", long35 == (-1L));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 5 + "'", int63 == 5);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 10000L + "'", long65 == 10000L);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNotNull(recovery71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str75, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 5);
        atomikosProperties0.setConsoleFileLimit((int) 'a');
        atomikosProperties0.setLogBaseName("{10=#}");
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setCheckpointInterval((long) (byte) -1);
        atomikosProperties13.setConsoleFileName("");
        java.lang.String str18 = atomikosProperties13.getService();
        atomikosProperties13.setDefaultJtaTimeout((long) 'a');
        long long21 = atomikosProperties13.getMaxTimeout();
        boolean boolean22 = atomikosProperties13.isAllowSubTransactions();
        java.util.Properties properties23 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties13.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel24);
        java.lang.String str26 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 300000L + "'", long21 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(properties23);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        int int25 = atomikosProperties19.getConsoleFileCount();
        boolean boolean26 = atomikosProperties19.isForceShutdownOnVmExit();
        java.lang.String str27 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setCheckpointInterval((long) ' ');
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        boolean boolean43 = properties1.isEmpty();
        java.io.InputStream inputStream44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int13 = recovery12.getMaxRetries();
        boolean boolean14 = properties10.containsKey((java.lang.Object) recovery12);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        java.lang.String str18 = atomikosProperties15.getLogBaseDir();
        atomikosProperties15.setMaxTimeout(0L);
        java.lang.Object obj21 = properties10.remove((java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel22);
        atomikosProperties0.setConsoleFileLimit(5);
        atomikosProperties0.setLogBaseName("tmlog");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection15 = properties14.values();
        java.lang.Object obj18 = properties14.setProperty("{10=#}", "tm.out");
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties14.keys();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(objEnumeration19);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties0.getConsoleLogLevel();
        int int17 = atomikosProperties0.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxActives(4);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isAllowSubTransactions();
        java.lang.String str15 = atomikosProperties8.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties8.getConsoleLogLevel();
        java.lang.Class<?> wildcardClass17 = atomikosLoggingLevel16.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.lang.String str26 = properties25.toString();
        int int27 = properties25.size();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.keys();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.storeToXML(outputStream29, "{10=#}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str26, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 18 + "'", int27 == 18);
        org.junit.Assert.assertNotNull(objEnumeration28);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        boolean boolean13 = properties4.contains((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties14.getConsoleLogLevel();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        properties29.clear();
        boolean boolean36 = properties29.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean39 = properties38.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setConsoleFileName("");
        java.lang.String str45 = atomikosProperties40.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.lang.String str58 = properties55.getProperty("");
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj64 = properties52.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties61);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties61.getConsoleLogLevel();
        atomikosProperties46.setConsoleLogLevel(atomikosLoggingLevel65);
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel65);
        boolean boolean69 = properties29.replace((java.lang.Object) properties38, (java.lang.Object) atomikosProperties40, (java.lang.Object) 10.0d);
        java.util.Properties properties70 = new java.util.Properties(properties29);
        boolean boolean71 = properties29.isEmpty();
        int int72 = properties29.size();
        java.lang.Object obj73 = properties4.replace((java.lang.Object) atomikosLoggingLevel27, (java.lang.Object) properties29);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setSerialJtaTransactions(false);
        int int77 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str84 = atomikosProperties0.getService();
        java.lang.String str85 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        long long23 = atomikosProperties16.getMaxTimeout();
        atomikosProperties16.setMaxTimeout((long) 100);
        atomikosProperties16.setConsoleFileCount((int) 'a');
        java.lang.String str28 = atomikosProperties16.getOutputDir();
        long long29 = atomikosProperties16.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 300000L + "'", long23 == 300000L);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        boolean boolean15 = properties14.isEmpty();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<?> wildcardEnumeration25 = properties17.propertyNames();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.lang.String str33 = properties30.getProperty("");
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj39 = properties27.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setOutputDir("");
        boolean boolean44 = properties17.containsKey((java.lang.Object) "");
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        java.lang.String str53 = properties50.getProperty("");
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj59 = properties47.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties56);
        atomikosProperties56.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties56.getConsoleLogLevel();
        java.lang.String str63 = atomikosProperties56.getTransactionManagerUniqueName();
        java.lang.Object obj64 = properties17.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        java.util.Collection<java.lang.Object> objCollection65 = properties17.values();
        java.lang.Object obj66 = properties17.clone();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setConsoleFileName("");
        java.lang.String str77 = atomikosProperties72.getLogBaseName();
        long long78 = atomikosProperties72.getCheckpointInterval();
        atomikosProperties72.setForceShutdownOnVmExit(false);
        java.util.Properties properties81 = atomikosProperties72.asProperties();
        boolean boolean82 = atomikosProperties72.isAllowSubTransactions();
        int int83 = atomikosProperties72.getConsoleFileLimit();
        boolean boolean84 = properties68.containsKey((java.lang.Object) int83);
        java.util.Enumeration<?> wildcardEnumeration85 = properties68.propertyNames();
        boolean boolean86 = properties17.containsValue((java.lang.Object) properties68);
        boolean boolean87 = properties14.contains((java.lang.Object) properties17);
        int int88 = properties14.size();
        java.io.PrintWriter printWriter89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.list(printWriter89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 18 + "'", int88 == 18);
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean16 = properties4.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean15);
        boolean boolean17 = properties4.isEmpty();
        boolean boolean18 = properties0.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setConsoleFileName("");
        java.lang.String str24 = atomikosProperties19.getLogBaseName();
        long long25 = atomikosProperties19.getCheckpointInterval();
        java.lang.String str26 = atomikosProperties19.getConsoleFileName();
        long long27 = atomikosProperties19.getCheckpointInterval();
        java.lang.Object obj28 = properties4.remove((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.String> strSet29 = properties4.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setConsoleFileName("");
        java.lang.String str35 = atomikosProperties30.getLogBaseName();
        long long36 = atomikosProperties30.getCheckpointInterval();
        atomikosProperties30.setForceShutdownOnVmExit(false);
        java.util.Properties properties39 = atomikosProperties30.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery41.setRetryInterval((long) 100);
        int int44 = recovery41.getMaxRetries();
        long long45 = recovery41.getDelay();
        long long46 = recovery41.getDelay();
        recovery41.setForgetOrphanedLogEntriesDelay(0L);
        long long49 = recovery41.getRetryInterval();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        boolean boolean54 = properties51.contains((java.lang.Object) 1L);
        int int55 = properties51.size();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        boolean boolean58 = properties57.isEmpty();
        java.lang.String str60 = properties57.getProperty("hi!");
        boolean boolean62 = properties57.contains((java.lang.Object) 10.0f);
        boolean boolean63 = properties57.isEmpty();
        java.util.Set<java.lang.String> strSet64 = properties57.stringPropertyNames();
        java.lang.Object obj65 = properties51.get((java.lang.Object) strSet64);
        java.util.Collection<java.lang.Object> objCollection66 = properties51.values();
        java.lang.Object obj67 = properties39.getOrDefault((java.lang.Object) recovery41, (java.lang.Object) objCollection66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setConsoleFileName("");
        java.lang.String str73 = atomikosProperties68.getLogBaseName();
        long long74 = atomikosProperties68.getCheckpointInterval();
        atomikosProperties68.setForceShutdownOnVmExit(false);
        atomikosProperties68.setTransactionManagerUniqueName("tmlog");
        atomikosProperties68.setLogBaseDir("");
        int int81 = atomikosProperties68.getConsoleFileCount();
        int int82 = atomikosProperties68.getMaxActives();
        int int83 = atomikosProperties68.getConsoleFileCount();
        java.lang.Object obj84 = properties4.put(obj67, (java.lang.Object) int83);
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties86.elements();
        java.util.Properties properties88 = null;
        java.util.Properties properties89 = new java.util.Properties(properties88);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties89.elements();
        java.lang.String str92 = properties89.getProperty("");
        properties86.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties89);
        int int94 = properties86.size();
        java.lang.Object obj97 = properties86.setProperty("{}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int98 = properties86.size();
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties86);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + (-1L) + "'", long25 == (-1L));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "tmlog" + "'", str35, "tmlog");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + (-1L) + "'", long36 == (-1L));
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 5 + "'", int44 == 5);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 10000L + "'", long45 == 10000L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 100L + "'", long49 == 100L);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "[]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "tmlog" + "'", str73, "tmlog");
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 50 + "'", int82 == 50);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertNotNull(objEnumeration90);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        properties1.clear();
        java.util.Properties properties27 = new java.util.Properties(properties1);
        java.lang.Object obj28 = properties1.clone();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties1.keys();
        boolean boolean30 = properties1.isEmpty();
        java.io.Writer writer31 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer31, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertEquals(obj28.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj28), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj28), "{}");
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.lang.String str5 = atomikosProperties0.getService();
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        boolean boolean7 = atomikosProperties0.isEnableLogging();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.Object obj9 = properties8.clone();
        java.lang.Object obj10 = properties8.clone();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.store(outputStream11, "{{}={}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNotNull(obj9);
// flaky:         org.junit.Assert.assertEquals(obj9.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj9), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj9), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(obj10);
// flaky:         org.junit.Assert.assertEquals(obj10.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj10), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj10), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.lang.String str11 = properties1.toString();
        boolean boolean12 = properties1.isEmpty();
        int int13 = properties1.size();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        boolean boolean27 = properties15.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean26);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.String str35 = properties32.getProperty("");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        boolean boolean37 = properties15.contains((java.lang.Object) properties29);
        boolean boolean38 = properties29.isEmpty();
        java.util.Properties properties39 = new java.util.Properties(properties29);
        java.lang.Object obj40 = properties1.remove((java.lang.Object) properties29);
        java.io.Reader reader41 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.load(reader41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(obj40);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.lang.Object obj11 = properties1.setProperty("tmlog", "");
        java.lang.Object obj14 = properties1.setProperty("{10=#}", "");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        java.lang.String str30 = atomikosProperties26.getConsoleFileName();
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int49 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        boolean boolean52 = properties1.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) false);
        java.util.Properties properties53 = atomikosProperties26.asProperties();
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties53.save(outputStream54, "{{}=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties53);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setConsoleFileCount((int) 'a');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getLogBaseDir();
        atomikosProperties7.setLogBaseDir("");
        java.lang.String str11 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setDefaultJtaTimeout((long) 5);
        atomikosProperties7.setConsoleFileLimit((int) 'a');
        atomikosProperties7.setLogBaseName("{10=#}");
        atomikosProperties7.setDefaultJtaTimeout((long) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setConsoleFileName("");
        java.lang.String str25 = atomikosProperties20.getService();
        atomikosProperties20.setDefaultJtaTimeout((long) 'a');
        long long28 = atomikosProperties20.getMaxTimeout();
        boolean boolean29 = atomikosProperties20.isAllowSubTransactions();
        java.util.Properties properties30 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel31 = atomikosProperties20.getConsoleLogLevel();
        atomikosProperties7.setConsoleLogLevel(atomikosLoggingLevel31);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel31);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(properties30);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel31 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel31.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setOutputDir("");
        java.lang.String str19 = atomikosProperties10.getConsoleFileName();
        boolean boolean20 = atomikosProperties10.isThreadedTwoPhaseCommit();
        boolean boolean21 = atomikosProperties10.isSerialJtaTransactions();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        boolean boolean24 = properties23.isEmpty();
        java.lang.String str26 = properties23.getProperty("hi!");
        boolean boolean28 = properties23.contains((java.lang.Object) 10.0f);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int61 = recovery60.getMaxRetries();
        boolean boolean62 = properties58.containsKey((java.lang.Object) recovery60);
        recovery60.setRetryInterval((long) (short) -1);
        recovery60.setDelay(10L);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        java.lang.Object obj70 = properties29.getOrDefault((java.lang.Object) recovery60, (java.lang.Object) properties68);
        java.lang.Object obj71 = properties23.remove((java.lang.Object) recovery60);
        recovery60.setMaxRetries((int) (byte) -1);
        java.lang.Object obj74 = properties9.getOrDefault((java.lang.Object) atomikosProperties10, (java.lang.Object) recovery60);
        long long75 = recovery60.getDelay();
        recovery60.setDelay(1L);
        recovery60.setForgetOrphanedLogEntriesDelay((long) '4');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj25 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setThreadedTwoPhaseCommit(true);
        java.lang.String str31 = atomikosProperties26.getOutputDir();
        java.util.Properties properties32 = atomikosProperties26.asProperties();
        java.lang.Object obj33 = properties8.remove((java.lang.Object) properties32);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.lang.Object obj52 = properties35.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = atomikosProperties53.getRecovery();
        atomikosProperties53.setEnableLogging(false);
        boolean boolean58 = properties35.equals((java.lang.Object) atomikosProperties53);
        boolean boolean59 = properties32.contains((java.lang.Object) atomikosProperties53);
        long long60 = atomikosProperties53.getMaxTimeout();
        java.lang.Object obj61 = properties1.get((java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setSerialJtaTransactions(false);
        java.lang.String str69 = atomikosProperties62.getLogBaseName();
        atomikosProperties62.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties62.setConsoleFileCount((int) (byte) -1);
        atomikosProperties62.setConsoleFileLimit((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel76 = null;
        atomikosProperties62.setConsoleLogLevel(atomikosLoggingLevel76);
        atomikosProperties62.setMaxActives((int) (short) 1);
        boolean boolean80 = atomikosProperties62.isForceShutdownOnVmExit();
        atomikosProperties62.setConsoleFileCount((int) '4');
        boolean boolean83 = properties1.containsKey((java.lang.Object) atomikosProperties62);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(properties32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(recovery55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setMaxTimeout(100L);
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setOutputDir("");
        java.lang.String str20 = atomikosProperties11.getConsoleFileName();
        java.lang.String str21 = atomikosProperties11.getLogBaseName();
        atomikosProperties11.setEnableLogging(false);
        atomikosProperties11.setEnableLogging(false);
        int int26 = atomikosProperties11.getConsoleFileLimit();
        atomikosProperties11.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str30 = atomikosProperties29.getLogBaseDir();
        atomikosProperties29.setLogBaseDir("");
        java.lang.String str33 = atomikosProperties29.getTransactionManagerUniqueName();
        atomikosProperties29.setDefaultJtaTimeout((long) 5);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties29.getConsoleLogLevel();
        atomikosProperties11.setConsoleLogLevel(atomikosLoggingLevel36);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel36);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = null;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        boolean boolean16 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        boolean boolean19 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setConsoleFileName("{tm.out=hi!}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setEnableLogging(false);
        java.util.Properties properties19 = atomikosProperties10.asProperties();
        int int20 = atomikosProperties10.getConsoleFileCount();
        boolean boolean21 = atomikosProperties10.isEnableLogging();
        java.lang.String str22 = atomikosProperties10.getService();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.util.Set<java.lang.String> strSet7 = properties1.stringPropertyNames();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties9.entrySet();
        java.lang.Object obj14 = properties9.setProperty("tm.out", "hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        int int36 = atomikosProperties31.getConsoleFileCount();
        java.lang.Object obj37 = properties16.get((java.lang.Object) atomikosProperties31);
        long long38 = atomikosProperties31.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setConsoleFileName("");
        java.lang.String str44 = atomikosProperties39.getLogBaseName();
        long long45 = atomikosProperties39.getCheckpointInterval();
        atomikosProperties39.setForceShutdownOnVmExit(false);
        atomikosProperties39.setTransactionManagerUniqueName("tmlog");
        atomikosProperties39.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery52 = atomikosProperties39.getRecovery();
        boolean boolean53 = atomikosProperties39.isSerialJtaTransactions();
        atomikosProperties39.setConsoleFileLimit(100);
        boolean boolean56 = properties1.replace((java.lang.Object) "tm.out", (java.lang.Object) atomikosProperties31, (java.lang.Object) 100);
        java.lang.String str58 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEntrySet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNotNull(recovery52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        boolean boolean26 = properties1.isEmpty();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        java.lang.String str31 = properties28.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet32 = properties28.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties28.entrySet();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean39 = properties38.isEmpty();
        java.util.Properties properties40 = new java.util.Properties(properties38);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet41 = properties38.entrySet();
        java.lang.Object obj42 = properties28.getOrDefault((java.lang.Object) properties35, (java.lang.Object) objEntrySet41);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.lang.Object obj47 = properties44.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties44.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery51 = atomikosProperties49.getRecovery();
        atomikosProperties49.setEnableLogging(false);
        long long54 = atomikosProperties49.getMaxTimeout();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.lang.String str59 = properties56.getProperty("");
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties61.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties61.entrySet();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Object obj66 = properties61.replace((java.lang.Object) "hi!", obj65);
        boolean boolean68 = properties61.equals((java.lang.Object) 1.0f);
        boolean boolean69 = properties56.containsKey((java.lang.Object) boolean68);
        java.lang.Object obj70 = properties44.put((java.lang.Object) atomikosProperties49, (java.lang.Object) properties56);
        java.lang.String str71 = atomikosProperties49.getLogBaseName();
        java.lang.Object obj72 = properties1.replace(obj42, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        boolean boolean75 = properties74.isEmpty();
        boolean boolean76 = properties74.isEmpty();
        java.util.Collection<java.lang.Object> objCollection77 = properties74.values();
        java.lang.Object obj78 = null;
        java.lang.Object obj79 = properties1.getOrDefault((java.lang.Object) objCollection77, obj78);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objEntrySet41);
        org.junit.Assert.assertNotNull(obj42);
// flaky:         org.junit.Assert.assertEquals(obj42.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj42), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj42), "[]");
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(recovery51);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 300000L + "'", long54 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEntrySet63);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tmlog" + "'", str71, "tmlog");
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(objCollection77);
        org.junit.Assert.assertNull(obj79);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.io.Reader reader4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        java.util.Properties properties7 = atomikosProperties0.asProperties();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str10 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(properties7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj6 = properties1.setProperty("tm.out", "hi!");
        boolean boolean7 = properties1.isEmpty();
        java.lang.String str8 = properties1.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setLogBaseName("{10=#}");
        boolean boolean22 = atomikosProperties10.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties10.getConsoleLogLevel();
        boolean boolean24 = properties1.containsKey((java.lang.Object) atomikosProperties10);
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{tm.out=hi!}" + "'", str8, "{tm.out=hi!}");
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration10 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getLogBaseDir();
        atomikosProperties18.setLogBaseDir("");
        java.lang.String str22 = atomikosProperties18.getService();
        boolean boolean23 = atomikosProperties18.isEnableLogging();
        boolean boolean24 = atomikosProperties18.isThreadedTwoPhaseCommit();
        atomikosProperties18.setService("hi!");
        boolean boolean27 = properties4.equals((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setForceShutdownOnVmExit(false);
        int int30 = atomikosProperties18.getMaxActives();
        atomikosProperties18.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        long long8 = recovery0.getDelay();
        recovery0.setDelay((long) (short) 10);
        recovery0.setRetryInterval((long) (byte) 0);
        long long13 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long14 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setService("{}");
        java.lang.String str17 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.lang.String str22 = properties19.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet23 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties19.entrySet();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties29.entrySet();
        java.lang.Object obj33 = properties19.getOrDefault((java.lang.Object) properties26, (java.lang.Object) objEntrySet32);
        java.util.Set<java.lang.Object> objSet34 = properties26.keySet();
        java.lang.Object obj35 = properties1.get((java.lang.Object) objSet34);
        java.lang.String str38 = properties1.getProperty("{=}", "");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.lang.String str43 = properties42.toString();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        boolean boolean56 = properties55.isEmpty();
        boolean boolean57 = properties45.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean56);
        boolean boolean58 = properties45.isEmpty();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        boolean boolean63 = properties60.containsKey((java.lang.Object) 10.0f);
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        java.lang.String str65 = properties45.toString();
        java.lang.String str67 = properties45.getProperty("hi!");
        boolean boolean68 = properties45.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties45.keys();
        java.util.Set<java.lang.String> strSet70 = properties45.stringPropertyNames();
        boolean boolean71 = properties42.contains((java.lang.Object) properties45);
        java.lang.String str73 = properties42.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "{}" + "'", str43, "{}");
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "{}" + "'", str65, "{}");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setService("");
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        boolean boolean40 = properties1.equals((java.lang.Object) ' ');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setConsoleFileName("");
        java.lang.String str46 = atomikosProperties41.getLogBaseName();
        long long47 = atomikosProperties41.getCheckpointInterval();
        atomikosProperties41.setForceShutdownOnVmExit(false);
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.lang.String str57 = properties54.getProperty("");
        properties51.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Enumeration<?> wildcardEnumeration59 = properties51.propertyNames();
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.elements();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.lang.String str67 = properties64.getProperty("");
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        boolean boolean72 = properties71.isEmpty();
        boolean boolean73 = properties61.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean72);
        boolean boolean74 = properties61.isEmpty();
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        boolean boolean79 = properties76.containsKey((java.lang.Object) 10.0f);
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.util.Set<java.lang.String> strSet81 = properties61.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setCheckpointInterval((long) (byte) -1);
        atomikosProperties82.setThreadedTwoPhaseCommit(true);
        atomikosProperties82.setSerialJtaTransactions(false);
        atomikosProperties82.setOutputDir("");
        java.lang.Object obj91 = properties51.putIfAbsent((java.lang.Object) properties61, (java.lang.Object) "");
        java.lang.Object obj92 = properties1.putIfAbsent((java.lang.Object) false, (java.lang.Object) properties51);
        java.lang.Object obj95 = properties51.setProperty("", "{10=#}");
        java.util.Enumeration<java.lang.Object> objEnumeration96 = properties51.keys();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tmlog" + "'", str46, "tmlog");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(wildcardEnumeration59);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(obj91);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(objEnumeration96);
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        atomikosProperties10.setTransactionManagerUniqueName("tm.out");
        atomikosProperties10.setConsoleFileLimit((int) (short) -1);
        java.lang.String str21 = atomikosProperties10.getLogBaseDir();
        atomikosProperties10.setEnableLogging(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        atomikosProperties0.setMaxActives((int) (short) 10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) 100);
        long long18 = atomikosProperties0.getMaxTimeout();
        java.lang.String str19 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 300000L + "'", long18 == 300000L);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        java.lang.String str26 = atomikosProperties21.getOutputDir();
        java.lang.String str27 = atomikosProperties21.getTransactionManagerUniqueName();
        java.lang.Object obj28 = properties1.get((java.lang.Object) atomikosProperties21);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties29.keys();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        int int73 = atomikosProperties68.getConsoleFileCount();
        java.lang.Class<?> wildcardClass74 = atomikosProperties68.getClass();
        java.lang.Object obj75 = properties1.put((java.lang.Object) properties29, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        atomikosProperties76.setConsoleFileName("");
        java.lang.String str81 = atomikosProperties76.getService();
        atomikosProperties76.setDefaultJtaTimeout((long) 'a');
        boolean boolean84 = atomikosProperties76.isSerialJtaTransactions();
        boolean boolean85 = atomikosProperties76.isEnableLogging();
        java.lang.Object obj86 = properties1.remove((java.lang.Object) atomikosProperties76);
        java.io.Writer writer87 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer87, "{10=#}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isEnableLogging();
        java.lang.String str15 = atomikosProperties8.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties8.getRecovery();
        boolean boolean17 = atomikosProperties8.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNotNull(recovery16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        boolean boolean47 = properties35.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean46);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Set<java.lang.String> strSet57 = properties52.stringPropertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties52.entrySet();
        java.lang.Object obj59 = properties35.get((java.lang.Object) objEntrySet58);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties61.elements();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.lang.String str67 = properties64.getProperty("");
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties64);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        boolean boolean72 = properties71.isEmpty();
        boolean boolean73 = properties61.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean72);
        boolean boolean74 = properties61.isEmpty();
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        boolean boolean79 = properties76.containsKey((java.lang.Object) 10.0f);
        properties61.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties76);
        java.util.Set<java.lang.String> strSet81 = properties61.stringPropertyNames();
        java.lang.Object obj82 = properties1.replace((java.lang.Object) properties35, (java.lang.Object) strSet81);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet83 = properties35.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(objEnumeration62);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(obj82);
        org.junit.Assert.assertEquals(obj82.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj82), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj82), "{}");
        org.junit.Assert.assertNotNull(objEntrySet83);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int28 = recovery27.getMaxRetries();
        boolean boolean29 = properties25.containsKey((java.lang.Object) recovery27);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel44 = atomikosProperties40.getConsoleLogLevel();
        int int45 = atomikosProperties40.getConsoleFileCount();
        java.lang.Object obj46 = properties25.get((java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(true);
        java.util.Properties properties49 = atomikosProperties40.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties52 = new java.util.Properties(properties49);
        java.lang.Object obj53 = properties49.clone();
        java.io.OutputStream outputStream54 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties49.store(outputStream54, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel44 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel44.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(obj53);
// flaky:         org.junit.Assert.assertEquals(obj53.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.String str25 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseDir("tmlog");
        atomikosProperties18.setMaxTimeout((long) 'a');
        int int30 = atomikosProperties18.getConsoleFileLimit();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        recovery34.setRetryInterval((long) (short) -1);
        recovery34.setRetryInterval((long) 0);
        recovery34.setMaxRetries((int) (byte) 10);
        recovery34.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery34.setMaxRetries(52);
        long long47 = recovery34.getRetryInterval();
        recovery34.setDelay((long) (short) -1);
        java.lang.Object obj50 = properties17.getOrDefault((java.lang.Object) atomikosProperties18, (java.lang.Object) recovery34);
        java.lang.String str51 = atomikosProperties18.getLogBaseName();
        atomikosProperties18.setConsoleFileLimit(50);
        java.lang.String str54 = atomikosProperties18.getLogBaseName();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.keys();
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.lang.String str7 = properties5.getProperty("");
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.storeToXML(outputStream8, "{}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties12.getConsoleLogLevel();
        java.lang.Object obj19 = properties0.putIfAbsent((java.lang.Object) 1, (java.lang.Object) atomikosProperties12);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.lang.String str27 = properties24.getProperty("");
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Collection<java.lang.Object> objCollection29 = properties24.values();
        boolean boolean30 = properties0.containsValue((java.lang.Object) objCollection29);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        boolean boolean44 = properties32.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean43);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        boolean boolean54 = properties32.contains((java.lang.Object) properties46);
        int int55 = properties32.size();
        boolean boolean56 = properties0.equals((java.lang.Object) properties32);
        java.util.Set<java.lang.Object> objSet57 = properties32.keySet();
        java.util.Set<java.lang.String> strSet58 = properties32.stringPropertyNames();
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objCollection29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objSet57);
        org.junit.Assert.assertNotNull(strSet58);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties1.remove((java.lang.Object) "", (java.lang.Object) boolean42);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.lang.Object obj62 = properties45.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.String str68 = atomikosProperties63.getOutputDir();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        java.lang.Object obj70 = properties45.remove((java.lang.Object) properties69);
        boolean boolean71 = properties1.containsKey((java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setForceShutdownOnVmExit(true);
        boolean boolean79 = atomikosProperties72.isAllowSubTransactions();
        boolean boolean80 = properties45.equals((java.lang.Object) atomikosProperties72);
        java.util.Set<java.lang.Object> objSet81 = properties45.keySet();
        java.io.OutputStream outputStream82 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties45.storeToXML(outputStream82, "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(objSet81);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Set<java.lang.String> strSet19 = properties14.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(false);
        long long25 = atomikosProperties20.getDefaultJtaTimeout();
        java.lang.Object obj26 = properties9.getOrDefault((java.lang.Object) strSet19, (java.lang.Object) long25);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertEquals("'" + obj26 + "' != '" + 10000L + "'", obj26, 10000L);
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        java.lang.String str45 = atomikosProperties43.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        atomikosProperties57.setSerialJtaTransactions(false);
        int int63 = atomikosProperties57.getConsoleFileCount();
        int int64 = atomikosProperties57.getConsoleFileLimit();
        java.lang.String str65 = atomikosProperties57.getLogBaseName();
        atomikosProperties57.setService("tmlog");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        java.lang.String str72 = properties69.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet73 = properties69.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties69.entrySet();
        boolean boolean75 = properties42.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) "tmlog", (java.lang.Object) properties69);
        java.lang.Object obj78 = properties42.setProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{}=false}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setSerialJtaTransactions(true);
        atomikosProperties19.setLogBaseName("{10=#}");
        atomikosProperties19.setEnableLogging(false);
        boolean boolean32 = atomikosProperties19.isThreadedTwoPhaseCommit();
        boolean boolean33 = atomikosProperties19.isThreadedTwoPhaseCommit();
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        atomikosProperties19.setAllowSubTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean7 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        boolean boolean9 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        java.lang.String str3 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        java.lang.String str7 = atomikosProperties0.getService();
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tm.out" + "'", str6, "tm.out");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long13 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        boolean boolean13 = properties1.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration14 = properties1.propertyNames();
        java.util.Properties properties15 = new java.util.Properties(properties1);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties26.getConsoleLogLevel();
        atomikosProperties26.setConsoleFileLimit((int) '4');
        atomikosProperties26.setMaxActives((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties26.getConsoleLogLevel();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj49 = properties37.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties46);
        atomikosProperties46.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = atomikosProperties46.getConsoleLogLevel();
        atomikosProperties46.setCheckpointInterval((long) 1);
        atomikosProperties46.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery57 = atomikosProperties46.getRecovery();
        recovery57.setMaxRetries(10);
        long long60 = recovery57.getRetryInterval();
        java.lang.Object obj61 = properties1.putIfAbsent((java.lang.Object) atomikosLoggingLevel35, (java.lang.Object) recovery57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery57);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertNull(obj61);
    }
}
