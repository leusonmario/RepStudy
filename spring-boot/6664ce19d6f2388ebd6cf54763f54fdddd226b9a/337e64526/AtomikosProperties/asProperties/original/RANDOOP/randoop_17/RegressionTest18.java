import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setOutputDir("");
        java.lang.String str19 = atomikosProperties10.getConsoleFileName();
        boolean boolean20 = atomikosProperties10.isThreadedTwoPhaseCommit();
        boolean boolean21 = atomikosProperties10.isSerialJtaTransactions();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        boolean boolean24 = properties23.isEmpty();
        java.lang.String str26 = properties23.getProperty("hi!");
        boolean boolean28 = properties23.contains((java.lang.Object) 10.0f);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int61 = recovery60.getMaxRetries();
        boolean boolean62 = properties58.containsKey((java.lang.Object) recovery60);
        recovery60.setRetryInterval((long) (short) -1);
        recovery60.setDelay(10L);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        java.lang.Object obj70 = properties29.getOrDefault((java.lang.Object) recovery60, (java.lang.Object) properties68);
        java.lang.Object obj71 = properties23.remove((java.lang.Object) recovery60);
        recovery60.setMaxRetries((int) (byte) -1);
        java.lang.Object obj74 = properties9.getOrDefault((java.lang.Object) atomikosProperties10, (java.lang.Object) recovery60);
        java.lang.String str76 = properties9.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 5);
        atomikosProperties0.setConsoleFileLimit((int) 'a');
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str13 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxActives(52);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean15 = properties12.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet16 = properties12.keySet();
        java.lang.Object obj19 = properties12.setProperty("", "");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        java.lang.String str24 = properties21.getProperty("hi!");
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int30 = recovery29.getMaxRetries();
        boolean boolean31 = properties27.containsKey((java.lang.Object) recovery29);
        recovery29.setRetryInterval((long) (short) -1);
        recovery29.setRetryInterval((long) 0);
        recovery29.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass38 = recovery29.getClass();
        java.lang.Object obj39 = properties21.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery29);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        java.lang.String str44 = properties41.getProperty("hi!");
        java.util.Set<java.lang.String> strSet45 = properties41.stringPropertyNames();
        java.lang.Object obj46 = new java.lang.Object();
        boolean boolean47 = properties12.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties41, obj46);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        boolean boolean51 = properties49.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties49.keys();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj67 = properties55.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties64.getConsoleLogLevel();
        boolean boolean69 = atomikosProperties64.isForceShutdownOnVmExit();
        java.lang.String str70 = atomikosProperties64.getService();
        boolean boolean71 = properties49.containsKey((java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int73 = atomikosProperties72.getMaxActives();
        java.lang.String str74 = atomikosProperties72.getTransactionManagerUniqueName();
        boolean boolean75 = atomikosProperties72.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        atomikosProperties76.setThreadedTwoPhaseCommit(true);
        atomikosProperties76.setSerialJtaTransactions(false);
        atomikosProperties76.setOutputDir("");
        java.lang.String str85 = atomikosProperties76.getConsoleFileName();
        java.lang.String str86 = atomikosProperties76.getLogBaseName();
        atomikosProperties76.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel89 = atomikosProperties76.getConsoleLogLevel();
        atomikosProperties72.setConsoleLogLevel(atomikosLoggingLevel89);
        atomikosProperties72.setConsoleFileCount((int) (byte) 0);
        atomikosProperties72.setMaxActives((int) (byte) 100);
        boolean boolean95 = properties49.containsKey((java.lang.Object) (byte) 100);
        java.lang.Object obj96 = properties1.get((java.lang.Object) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 5 + "'", int30 == 5);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 50 + "'", int73 == 50);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "tm.out" + "'", str85, "tm.out");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "tmlog" + "'", str86, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel89 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel89.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        int int17 = atomikosProperties10.getConsoleFileLimit();
        java.lang.String str18 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setService("tmlog");
        java.lang.String str21 = atomikosProperties10.getLogBaseDir();
        atomikosProperties10.setAllowSubTransactions(true);
        atomikosProperties10.setAllowSubTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int28 = recovery27.getMaxRetries();
        boolean boolean29 = properties25.containsKey((java.lang.Object) recovery27);
        recovery27.setRetryInterval((long) (short) -1);
        recovery27.setRetryInterval((long) 0);
        recovery27.setMaxRetries((int) (byte) 10);
        recovery27.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery27.setMaxRetries(52);
        long long40 = recovery27.getRetryInterval();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        boolean boolean54 = properties42.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean53);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.lang.String str62 = properties59.getProperty("");
        properties56.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        boolean boolean64 = properties42.contains((java.lang.Object) properties56);
        int int65 = properties42.size();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        java.lang.String str73 = properties70.getProperty("");
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj79 = properties67.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties76);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties76.getConsoleLogLevel();
        atomikosProperties76.setConsoleFileLimit((int) '4');
        atomikosProperties76.setMaxActives((int) ' ');
        long long85 = atomikosProperties76.getDefaultJtaTimeout();
        atomikosProperties76.setAllowSubTransactions(false);
        int int88 = atomikosProperties76.getConsoleFileLimit();
        boolean boolean89 = properties42.contains((java.lang.Object) atomikosProperties76);
        java.lang.Object obj90 = properties1.replace((java.lang.Object) long40, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setCheckpointInterval((long) (byte) 10);
        java.util.Properties properties93 = atomikosProperties76.asProperties();
        java.lang.Object obj96 = properties93.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tm.out");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 10000L + "'", long85 == 10000L);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 52 + "'", int88 == 52);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(properties93);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.keys();
        java.util.Properties properties5 = new java.util.Properties(properties3);
        java.lang.String str7 = properties5.getProperty("");
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties5.store(outputStream8, "{{10=#}=tm.out}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setMaxRetries((int) '4');
        long long8 = recovery3.getRetryInterval();
        recovery3.setDelay((long) (byte) 1);
        recovery3.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        recovery3.setMaxRetries(100);
        int int15 = recovery3.getMaxRetries();
        recovery3.setMaxRetries(10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setRetryInterval((long) 0);
        recovery3.setMaxRetries((int) (byte) 10);
        long long12 = recovery3.getDelay();
        long long13 = recovery3.getRetryInterval();
        recovery3.setDelay((long) (byte) 0);
        recovery3.setDelay(18L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setConsoleFileCount((int) 'a');
        boolean boolean7 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        boolean boolean10 = properties1.contains((java.lang.Object) 0);
        int int11 = properties1.size();
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream12, "{{}={}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        long long4 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval((long) 52);
        recovery0.setForgetOrphanedLogEntriesDelay((long) ' ');
        long long9 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setDelay((long) (byte) 1);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + (-1L) + "'", long4 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 32L + "'", long9 == 32L);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        int int25 = atomikosProperties19.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel26 = atomikosProperties19.getConsoleLogLevel();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel26 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel26.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet10 = properties8.entrySet();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Object obj13 = properties8.replace((java.lang.Object) "hi!", obj12);
        boolean boolean15 = properties8.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties8.keys();
        boolean boolean17 = properties3.containsKey((java.lang.Object) objEnumeration16);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet21 = properties19.entrySet();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Object obj24 = properties19.replace((java.lang.Object) "hi!", obj23);
        boolean boolean26 = properties19.equals((java.lang.Object) 1.0f);
        java.util.Properties properties27 = new java.util.Properties(properties19);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        int int49 = atomikosProperties44.getConsoleFileCount();
        java.lang.Object obj50 = properties29.get((java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setConsoleFileName("");
        java.lang.String str56 = atomikosProperties51.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.lang.String str69 = properties66.getProperty("");
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj75 = properties63.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties72);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel76 = atomikosProperties72.getConsoleLogLevel();
        atomikosProperties57.setConsoleLogLevel(atomikosLoggingLevel76);
        atomikosProperties51.setConsoleLogLevel(atomikosLoggingLevel76);
        atomikosProperties51.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery81 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery81.setMaxRetries((-1));
        long long84 = recovery81.getRetryInterval();
        java.lang.Object obj85 = properties29.replace((java.lang.Object) 5, (java.lang.Object) long84);
        java.lang.Object obj86 = properties29.clone();
        boolean boolean87 = properties27.contains((java.lang.Object) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties88 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str89 = atomikosProperties88.getLogBaseDir();
        java.lang.String str90 = atomikosProperties88.getLogBaseDir();
        int int91 = atomikosProperties88.getConsoleFileCount();
        boolean boolean92 = properties29.contains((java.lang.Object) atomikosProperties88);
        java.lang.Object obj93 = properties3.get((java.lang.Object) properties29);
        boolean boolean94 = properties3.isEmpty();
        java.util.Set<java.lang.Object> objSet95 = properties3.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objEntrySet10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(objEntrySet21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "tmlog" + "'", str56, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel76 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel76.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10000L + "'", long84 == 10000L);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objSet95);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileName("tm.out");
        atomikosProperties0.setMaxActives((-1));
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        int int6 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.String str25 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseDir("tmlog");
        atomikosProperties18.setMaxTimeout((long) 'a');
        int int30 = atomikosProperties18.getConsoleFileLimit();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        recovery34.setRetryInterval((long) (short) -1);
        recovery34.setRetryInterval((long) 0);
        recovery34.setMaxRetries((int) (byte) 10);
        recovery34.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery34.setMaxRetries(52);
        long long47 = recovery34.getRetryInterval();
        recovery34.setDelay((long) (short) -1);
        java.lang.Object obj50 = properties17.getOrDefault((java.lang.Object) atomikosProperties18, (java.lang.Object) recovery34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.lang.String str56 = atomikosProperties51.getOutputDir();
        java.lang.String str57 = atomikosProperties51.getTransactionManagerUniqueName();
        int int58 = atomikosProperties51.getConsoleFileCount();
        java.lang.String str59 = atomikosProperties51.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.lang.String str72 = properties69.getProperty("");
        properties66.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties75 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties75.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj78 = properties66.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties75);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel79 = atomikosProperties75.getConsoleLogLevel();
        atomikosProperties60.setConsoleLogLevel(atomikosLoggingLevel79);
        atomikosProperties60.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long83 = atomikosProperties60.getDefaultJtaTimeout();
        atomikosProperties60.setCheckpointInterval((long) (short) 10);
        java.lang.Object obj86 = properties17.put((java.lang.Object) atomikosProperties51, (java.lang.Object) atomikosProperties60);
        atomikosProperties51.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(obj50);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel79 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel79.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10000L + "'", long83 == 10000L);
        org.junit.Assert.assertNull(obj86);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str13 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str14 = atomikosProperties0.getService();
        java.lang.String str15 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        int int11 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet24 = properties15.keySet();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj38 = properties26.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties35);
        atomikosProperties35.setSerialJtaTransactions(false);
        boolean boolean41 = atomikosProperties35.isForceShutdownOnVmExit();
        java.util.Properties properties42 = atomikosProperties35.asProperties();
        boolean boolean43 = properties15.containsValue((java.lang.Object) atomikosProperties35);
        int int44 = atomikosProperties35.getMaxActives();
        atomikosProperties35.setTransactionManagerUniqueName("hi!");
        boolean boolean47 = atomikosProperties35.isForceShutdownOnVmExit();
        atomikosProperties35.setConsoleFileName("tm.out");
        int int50 = atomikosProperties35.getMaxActives();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(properties42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = null;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        atomikosProperties0.setService("{}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setRetryInterval((long) 0);
        long long10 = recovery3.getRetryInterval();
        recovery3.setMaxRetries((int) '#');
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 5);
        atomikosProperties0.setConsoleFileLimit((int) 'a');
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseName("{{}=tmlog}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setSerialJtaTransactions(false);
        atomikosProperties37.setOutputDir("");
        java.lang.String str46 = atomikosProperties37.getConsoleFileName();
        java.lang.String str47 = atomikosProperties37.getLogBaseName();
        atomikosProperties37.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties50 = atomikosProperties37.asProperties();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        boolean boolean54 = properties52.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties52.keys();
        boolean boolean56 = properties50.containsValue((java.lang.Object) properties52);
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setLogBaseDir("");
        atomikosProperties58.setForceShutdownOnVmExit(false);
        long long63 = atomikosProperties58.getCheckpointInterval();
        boolean boolean64 = properties52.contains((java.lang.Object) long63);
        java.util.Enumeration<?> wildcardEnumeration65 = properties52.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 500L + "'", long63 == 500L);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        boolean boolean15 = properties1.isEmpty();
        java.lang.String str18 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str18, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj7 = properties1.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj9 = properties1.remove((java.lang.Object) "");
        java.util.Set<java.lang.Object> objSet10 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getCheckpointInterval();
        atomikosProperties11.setForceShutdownOnVmExit(false);
        atomikosProperties11.setTransactionManagerUniqueName("tmlog");
        atomikosProperties11.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties11.getRecovery();
        boolean boolean25 = properties1.containsKey((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setConsoleFileName("");
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        long long32 = atomikosProperties26.getCheckpointInterval();
        java.lang.String str33 = atomikosProperties26.getLogBaseDir();
        atomikosProperties26.setEnableLogging(true);
        long long36 = atomikosProperties26.getDefaultJtaTimeout();
        java.lang.String str37 = atomikosProperties26.getService();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.lang.String str48 = atomikosProperties43.getOutputDir();
        java.util.Properties properties49 = atomikosProperties43.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setOutputDir("");
        java.lang.String str59 = atomikosProperties50.getConsoleFileName();
        java.lang.String str60 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setDefaultJtaTimeout(0L);
        java.lang.Object obj63 = properties39.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties50);
        atomikosProperties50.setSerialJtaTransactions(false);
        java.lang.Object obj66 = properties1.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties50);
        java.lang.String str67 = atomikosProperties50.getLogBaseDir();
        atomikosProperties50.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(recovery24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isEnableLogging();
        java.lang.String str15 = atomikosProperties8.getLogBaseName();
        atomikosProperties8.setTransactionManagerUniqueName("");
        java.lang.String str18 = atomikosProperties8.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        boolean boolean10 = properties1.isEmpty();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        java.util.Properties properties14 = new java.util.Properties(properties12);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties12.entrySet();
        java.lang.String str17 = properties12.getProperty("tmlog");
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties28 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties28.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj31 = properties19.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties28);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.lang.Object obj36 = properties19.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str38 = atomikosProperties37.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = atomikosProperties37.getRecovery();
        atomikosProperties37.setEnableLogging(false);
        boolean boolean42 = properties19.equals((java.lang.Object) atomikosProperties37);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties19.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet44 = properties19.entrySet();
        java.lang.String str45 = properties19.toString();
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        int int47 = properties19.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery48 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery48.setMaxRetries((-1));
        long long51 = recovery48.getRetryInterval();
        recovery48.setForgetOrphanedLogEntriesDelay(300000L);
        recovery48.setDelay((-1L));
        recovery48.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery48.setRetryInterval(100L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setThreadedTwoPhaseCommit(true);
        atomikosProperties60.setSerialJtaTransactions(false);
        atomikosProperties60.setOutputDir("");
        java.lang.String str69 = atomikosProperties60.getConsoleFileName();
        java.lang.String str70 = atomikosProperties60.getLogBaseName();
        atomikosProperties60.setCheckpointInterval((long) (short) 100);
        boolean boolean73 = atomikosProperties60.isSerialJtaTransactions();
        boolean boolean74 = properties19.remove((java.lang.Object) recovery48, (java.lang.Object) atomikosProperties60);
        atomikosProperties60.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setCheckpointInterval((long) (byte) -1);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        atomikosProperties77.setSerialJtaTransactions(false);
        java.lang.String str84 = atomikosProperties77.getLogBaseName();
        atomikosProperties77.setAllowSubTransactions(false);
        boolean boolean87 = atomikosProperties77.isEnableLogging();
        atomikosProperties77.setMaxTimeout((long) 10);
        java.lang.String str90 = atomikosProperties77.getLogBaseName();
        int int91 = atomikosProperties77.getMaxActives();
        java.util.Properties properties92 = atomikosProperties77.asProperties();
        atomikosProperties77.setService("{=}");
        atomikosProperties77.setEnableLogging(true);
        java.lang.Object obj97 = properties1.replace((java.lang.Object) true, (java.lang.Object) atomikosProperties77);
        atomikosProperties77.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(recovery39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEntrySet44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10000L + "'", long51 == 10000L);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tm.out" + "'", str69, "tm.out");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "tmlog" + "'", str84, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "tmlog" + "'", str90, "tmlog");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 50 + "'", int91 == 50);
        org.junit.Assert.assertNotNull(properties92);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.lang.String str14 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setConsoleFileLimit(100);
        atomikosProperties10.setSerialJtaTransactions(true);
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setAllowSubTransactions(true);
        atomikosProperties10.setService("tm.out");
        boolean boolean25 = atomikosProperties10.isSerialJtaTransactions();
        long long26 = atomikosProperties10.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("{10=#}");
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        java.lang.String str12 = atomikosProperties0.getService();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean18 = properties1.equals((java.lang.Object) false);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getConsoleFileName();
        long long46 = atomikosProperties38.getCheckpointInterval();
        java.lang.Object obj47 = properties23.remove((java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int49 = atomikosProperties48.getMaxActives();
        java.lang.String str50 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean51 = atomikosProperties48.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setOutputDir("");
        java.lang.String str61 = atomikosProperties52.getConsoleFileName();
        java.lang.String str62 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties48.getConsoleLogLevel();
        int int68 = atomikosProperties48.getMaxActives();
        java.lang.Object obj69 = properties1.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties48);
        java.lang.String str70 = properties1.toString();
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties1.elements();
        java.lang.String str73 = properties1.toString();
        java.io.OutputStream outputStream74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream74, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "{}" + "'", str70, "{}");
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{}" + "'", str73, "{}");
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setAllowSubTransactions(false);
        int int20 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setEnableLogging(false);
        int int23 = atomikosProperties10.getMaxActives();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 50 + "'", int23 == 50);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        long long3 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setTransactionManagerUniqueName("");
        java.lang.String str6 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 500L + "'", long3 == 500L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "tmlog" + "'", str6, "tmlog");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        java.lang.String str30 = atomikosProperties26.getConsoleFileName();
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj46 = properties34.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int49 = atomikosProperties43.getConsoleFileCount();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        boolean boolean52 = properties1.remove((java.lang.Object) atomikosProperties26, (java.lang.Object) false);
        java.util.Properties properties53 = atomikosProperties26.asProperties();
        atomikosProperties26.setCheckpointInterval(32L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tm.out" + "'", str30, "tm.out");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(properties53);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int5 = atomikosProperties0.getConsoleFileCount();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        long long7 = atomikosProperties0.getMaxTimeout();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str9 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.getConsoleLogLevel();
        int int11 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) 100);
        int int3 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) 50);
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        long long9 = recovery0.getRetryInterval();
        recovery0.setDelay((long) (short) 0);
        int int12 = recovery0.getMaxRetries();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 86400000L + "'", long6 == 86400000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 50L + "'", long9 == 50L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 5 + "'", int12 == 5);
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        int int20 = properties1.size();
        java.lang.Object obj23 = properties1.setProperty("{10=#}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties24 = new java.util.Properties(properties1);
        java.lang.String str25 = properties24.toString();
        properties24.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery4.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long7 = recovery4.getDelay();
        recovery4.setMaxRetries((int) (short) 0);
        long long10 = recovery4.getRetryInterval();
        boolean boolean11 = properties1.containsKey((java.lang.Object) long10);
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        java.util.Properties properties13 = new java.util.Properties(properties1);
        java.util.Properties properties14 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties1.entrySet();
        java.util.Properties properties16 = new java.util.Properties(properties1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertNotNull(objEntrySet15);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        int int9 = properties1.size();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean14 = properties11.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet15 = properties11.keySet();
        java.lang.Object obj18 = properties11.setProperty("", "");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.lang.String str23 = properties20.getProperty("hi!");
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        boolean boolean30 = properties26.containsKey((java.lang.Object) recovery28);
        recovery28.setRetryInterval((long) (short) -1);
        recovery28.setRetryInterval((long) 0);
        recovery28.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass37 = recovery28.getClass();
        java.lang.Object obj38 = properties20.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery28);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        java.lang.String str43 = properties40.getProperty("hi!");
        java.util.Set<java.lang.String> strSet44 = properties40.stringPropertyNames();
        java.lang.Object obj45 = new java.lang.Object();
        boolean boolean46 = properties11.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties40, obj45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getLogBaseDir();
        java.lang.Class<?> wildcardClass49 = atomikosProperties47.getClass();
        boolean boolean50 = properties1.remove(obj45, (java.lang.Object) wildcardClass49);
        java.lang.String str51 = properties1.toString();
        java.util.Properties properties52 = new java.util.Properties(properties1);
        boolean boolean53 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setConsoleFileCount((int) (short) 1);
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        long long11 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("");
        atomikosProperties0.setConsoleFileName("hi!");
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(false);
        int int14 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 50 + "'", int14 == 50);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        java.lang.String str13 = atomikosProperties8.getLogBaseDir();
        atomikosProperties8.setMaxActives((int) (short) 10);
        atomikosProperties8.setDefaultJtaTimeout((long) 50);
        long long18 = atomikosProperties8.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 50L + "'", long18 == 50L);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties1.remove((java.lang.Object) "", (java.lang.Object) boolean42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties1.elements();
        properties1.clear();
        java.lang.String str47 = properties1.getProperty("{=}");
        boolean boolean48 = properties1.isEmpty();
        java.io.OutputStream outputStream49 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream49, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}", "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        java.lang.String str25 = atomikosProperties21.getConsoleFileName();
        java.lang.String str26 = atomikosProperties21.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setMaxTimeout(10000L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties0.getConsoleLogLevel();
        int int20 = atomikosProperties0.getMaxActives();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel35);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 1);
        atomikosProperties0.setConsoleFileLimit(19);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties27 = atomikosProperties14.asProperties();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        boolean boolean31 = properties29.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties29.keys();
        boolean boolean33 = properties27.containsValue((java.lang.Object) properties29);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        java.lang.String str38 = properties35.getProperty("hi!");
        java.util.Set<java.lang.String> strSet39 = properties35.stringPropertyNames();
        java.lang.Object obj40 = properties35.clone();
        boolean boolean41 = properties29.containsKey(obj40);
        java.lang.Object obj42 = properties13.remove((java.lang.Object) properties29);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        boolean boolean47 = properties44.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet48 = properties44.keySet();
        boolean boolean49 = properties29.containsKey((java.lang.Object) objSet48);
        java.lang.Object obj52 = properties29.setProperty("hi!", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj53 = properties29.clone();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertNotNull(properties27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(obj40);
        org.junit.Assert.assertEquals(obj40.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj40), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj40), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{hi!={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{hi!={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{hi!={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.lang.Object obj27 = properties1.clone();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties29.entrySet();
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setConsoleFileName("");
        java.lang.String str38 = atomikosProperties33.getLogBaseName();
        long long39 = atomikosProperties33.getCheckpointInterval();
        java.lang.String str40 = atomikosProperties33.getLogBaseDir();
        atomikosProperties33.setEnableLogging(true);
        long long43 = atomikosProperties33.getDefaultJtaTimeout();
        boolean boolean44 = atomikosProperties33.isSerialJtaTransactions();
        java.lang.String str45 = atomikosProperties33.getOutputDir();
        atomikosProperties33.setTransactionManagerUniqueName("{}");
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        boolean boolean52 = properties49.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Enumeration<?> wildcardEnumeration62 = properties54.propertyNames();
        boolean boolean63 = properties49.containsValue((java.lang.Object) wildcardEnumeration62);
        java.lang.Object obj64 = properties29.put((java.lang.Object) atomikosProperties33, (java.lang.Object) properties49);
        boolean boolean65 = atomikosProperties33.isAllowSubTransactions();
        atomikosProperties33.setCheckpointInterval((long) 1);
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet71 = properties69.entrySet();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Object obj74 = properties69.replace((java.lang.Object) "hi!", obj73);
        boolean boolean76 = properties69.equals((java.lang.Object) 1.0f);
        java.util.Properties properties77 = new java.util.Properties(properties69);
        properties69.clear();
        boolean boolean79 = properties1.remove((java.lang.Object) atomikosProperties33, (java.lang.Object) properties69);
        java.lang.String str81 = properties69.getProperty("");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet82 = properties69.entrySet();
        boolean boolean83 = properties69.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 10000L + "'", long43 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(wildcardEnumeration62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(objEntrySet71);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(objEntrySet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.lang.String str14 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setDefaultJtaTimeout((long) '#');
        atomikosProperties10.setConsoleFileName("");
        boolean boolean19 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setCheckpointInterval((long) 50);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.lang.Object obj27 = properties1.clone();
        java.util.Properties properties28 = new java.util.Properties(properties1);
        java.lang.Object obj31 = properties28.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.String str41 = atomikosProperties32.getConsoleFileName();
        java.lang.String str42 = atomikosProperties32.getLogBaseName();
        atomikosProperties32.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties45 = atomikosProperties32.asProperties();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        boolean boolean49 = properties47.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties47.keys();
        boolean boolean51 = properties45.containsValue((java.lang.Object) properties47);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        java.lang.String str56 = properties53.getProperty("hi!");
        java.util.Set<java.lang.String> strSet57 = properties53.stringPropertyNames();
        java.lang.Object obj58 = properties53.clone();
        boolean boolean59 = properties47.containsKey(obj58);
        java.lang.String str60 = properties47.toString();
        java.util.Properties properties61 = new java.util.Properties(properties47);
        boolean boolean62 = properties28.equals((java.lang.Object) properties47);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{}" + "'", str60, "{}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getService();
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        long long7 = atomikosProperties0.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties0.getRecovery();
        long long9 = recovery8.getDelay();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setMaxActives(100);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties6.getConsoleLogLevel();
        int int23 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties6.getRecovery();
        recovery24.setRetryInterval(10000L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(recovery24);
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setAllowSubTransactions(false);
        int int12 = atomikosProperties0.getMaxActives();
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery5 = atomikosProperties0.getRecovery();
        int int6 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(recovery5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 50 + "'", int6 == 50);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties12.getRecovery();
        atomikosProperties12.setEnableLogging(false);
        atomikosProperties12.setSerialJtaTransactions(true);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties20.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        boolean boolean42 = properties20.contains((java.lang.Object) properties34);
        java.util.Set<java.lang.Object> objSet43 = properties34.keySet();
        java.lang.Object obj44 = properties7.getOrDefault((java.lang.Object) true, (java.lang.Object) properties34);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setSerialJtaTransactions(false);
        java.lang.String str53 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setAllowSubTransactions(false);
        java.lang.String str56 = atomikosProperties46.getService();
        atomikosProperties46.setSerialJtaTransactions(true);
        atomikosProperties46.setAllowSubTransactions(true);
        boolean boolean61 = properties1.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties62 = new java.util.Properties(properties1);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.lang.Object obj81 = properties64.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str83 = atomikosProperties82.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery84 = atomikosProperties82.getRecovery();
        atomikosProperties82.setEnableLogging(false);
        boolean boolean87 = properties64.equals((java.lang.Object) atomikosProperties82);
        java.lang.String str88 = atomikosProperties82.getOutputDir();
        java.lang.String str89 = atomikosProperties82.getLogBaseDir();
        atomikosProperties82.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery92 = atomikosProperties82.getRecovery();
        atomikosProperties82.setAllowSubTransactions(true);
        boolean boolean95 = properties1.contains((java.lang.Object) true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(recovery84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(recovery92);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        properties1.clear();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        java.lang.String str55 = properties52.getProperty("hi!");
        boolean boolean57 = properties52.contains((java.lang.Object) 10.0f);
        boolean boolean58 = properties52.isEmpty();
        boolean boolean59 = properties1.containsValue((java.lang.Object) properties52);
        java.io.Writer writer60 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer60, "{{}=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        int int17 = atomikosProperties10.getConsoleFileLimit();
        java.lang.String str18 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setTransactionManagerUniqueName("tm.out");
        atomikosProperties10.setService("");
        atomikosProperties10.setLogBaseDir("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setDefaultJtaTimeout((long) 32);
        int int9 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setSerialJtaTransactions(false);
        int int12 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.lang.String str30 = properties27.getProperty("hi!", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str30, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str4 = properties1.getProperty("");
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties6.entrySet();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties6.replace((java.lang.Object) "hi!", obj10);
        boolean boolean13 = properties6.equals((java.lang.Object) 1.0f);
        boolean boolean14 = properties1.containsKey((java.lang.Object) boolean13);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties16.elements();
        java.lang.Object obj19 = properties1.remove((java.lang.Object) objEnumeration18);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int24 = recovery23.getMaxRetries();
        boolean boolean25 = properties21.containsKey((java.lang.Object) recovery23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setLogBaseDir("");
        java.lang.Object obj29 = properties1.put((java.lang.Object) properties21, (java.lang.Object) atomikosProperties26);
        java.util.Properties properties30 = new java.util.Properties();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        boolean boolean44 = properties32.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean43);
        boolean boolean45 = properties32.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties32.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setConsoleFileName("");
        java.lang.String str52 = atomikosProperties47.getLogBaseName();
        long long53 = atomikosProperties47.getCheckpointInterval();
        java.lang.String str54 = atomikosProperties47.getLogBaseDir();
        atomikosProperties47.setEnableLogging(true);
        java.lang.Object obj57 = properties30.putIfAbsent((java.lang.Object) objEnumeration46, (java.lang.Object) atomikosProperties47);
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        boolean boolean62 = properties60.isEmpty();
        java.util.Set<java.lang.String> strSet63 = properties60.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.lang.String str69 = atomikosProperties64.getOutputDir();
        java.util.Properties properties70 = atomikosProperties64.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setOutputDir("");
        java.lang.String str80 = atomikosProperties71.getConsoleFileName();
        java.lang.String str81 = atomikosProperties71.getLogBaseName();
        atomikosProperties71.setDefaultJtaTimeout(0L);
        java.lang.Object obj84 = properties60.putIfAbsent((java.lang.Object) atomikosProperties64, (java.lang.Object) atomikosProperties71);
        int int85 = atomikosProperties64.getMaxActives();
        long long86 = atomikosProperties64.getCheckpointInterval();
        atomikosProperties64.setCheckpointInterval(300000L);
        boolean boolean89 = properties30.contains((java.lang.Object) 300000L);
        java.util.Enumeration<java.lang.Object> objEnumeration90 = properties30.keys();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(properties70);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "tm.out" + "'", str80, "tm.out");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 50 + "'", int85 == 50);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-1L) + "'", long86 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(objEnumeration90);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.lang.String str22 = properties19.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet23 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties19.entrySet();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties29.entrySet();
        java.lang.Object obj33 = properties19.getOrDefault((java.lang.Object) properties26, (java.lang.Object) objEntrySet32);
        java.util.Set<java.lang.Object> objSet34 = properties26.keySet();
        java.lang.Object obj35 = properties1.get((java.lang.Object) objSet34);
        int int36 = properties1.size();
        java.util.Collection<java.lang.Object> objCollection37 = properties1.values();
        int int38 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setConsoleFileName("");
        atomikosProperties39.setConsoleFileName("");
        int int46 = atomikosProperties39.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = atomikosProperties39.getRecovery();
        java.lang.Object obj48 = properties1.get((java.lang.Object) recovery47);
        java.lang.Object obj51 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{}={}}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(objCollection37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(recovery47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration10 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getLogBaseDir();
        atomikosProperties18.setLogBaseDir("");
        java.lang.String str22 = atomikosProperties18.getService();
        boolean boolean23 = atomikosProperties18.isEnableLogging();
        boolean boolean24 = atomikosProperties18.isThreadedTwoPhaseCommit();
        atomikosProperties18.setService("hi!");
        boolean boolean27 = properties4.equals((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setForceShutdownOnVmExit(false);
        atomikosProperties18.setConsoleFileLimit(32);
        long long32 = atomikosProperties18.getDefaultJtaTimeout();
        boolean boolean33 = atomikosProperties18.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setMaxActives(100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setConsoleFileLimit(0);
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) 5);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay((long) 5);
        long long6 = recovery0.getRetryInterval();
        recovery0.setDelay((long) 52);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        properties4.clear();
        java.lang.String str10 = properties4.toString();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "{}" + "'", str10, "{}");
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        atomikosProperties37.setCheckpointInterval((long) 100);
        boolean boolean44 = atomikosProperties37.isAllowSubTransactions();
        java.util.Properties properties45 = atomikosProperties37.asProperties();
        java.lang.String str47 = properties45.getProperty("{}");
        java.util.Properties properties48 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int50 = recovery49.getMaxRetries();
        recovery49.setForgetOrphanedLogEntriesDelay((-1L));
        long long53 = recovery49.getForgetOrphanedLogEntriesDelay();
        recovery49.setMaxRetries((int) (short) 0);
        long long56 = recovery49.getRetryInterval();
        long long57 = recovery49.getForgetOrphanedLogEntriesDelay();
        long long58 = recovery49.getRetryInterval();
        int int59 = recovery49.getMaxRetries();
        long long60 = recovery49.getDelay();
        java.lang.Object obj61 = properties1.put((java.lang.Object) properties48, (java.lang.Object) long60);
        java.util.Properties properties62 = new java.util.Properties(properties48);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet63 = properties62.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(objEntrySet63);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        int int25 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties53.getConsoleLogLevel();
        boolean boolean58 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.String str59 = atomikosProperties53.getService();
        boolean boolean60 = properties38.containsKey((java.lang.Object) atomikosProperties53);
        java.util.Collection<java.lang.Object> objCollection61 = properties38.values();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet62 = properties38.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertNotNull(objEntrySet62);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.lang.Object obj32 = properties29.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str35 = atomikosProperties34.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = atomikosProperties34.getRecovery();
        atomikosProperties34.setEnableLogging(false);
        long long39 = atomikosProperties34.getMaxTimeout();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.lang.String str44 = properties41.getProperty("");
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet48 = properties46.entrySet();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Object obj51 = properties46.replace((java.lang.Object) "hi!", obj50);
        boolean boolean53 = properties46.equals((java.lang.Object) 1.0f);
        boolean boolean54 = properties41.containsKey((java.lang.Object) boolean53);
        java.lang.Object obj55 = properties29.put((java.lang.Object) atomikosProperties34, (java.lang.Object) properties41);
        java.util.Properties properties56 = atomikosProperties34.asProperties();
        int int57 = properties56.size();
        java.util.Collection<java.lang.Object> objCollection58 = properties56.values();
        properties25.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(recovery36);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 300000L + "'", long39 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objEntrySet48);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 18 + "'", int57 == 18);
        org.junit.Assert.assertNotNull(objCollection58);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj25 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties26.getRecovery();
        atomikosProperties26.setEnableLogging(false);
        boolean boolean31 = properties8.equals((java.lang.Object) atomikosProperties26);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties8.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties8.entrySet();
        java.lang.String str34 = properties8.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        int int36 = properties8.size();
        properties8.clear();
        int int38 = properties8.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setLogBaseName("{=}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setConsoleFileName("");
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        long long15 = atomikosProperties9.getCheckpointInterval();
        java.lang.String str16 = atomikosProperties9.getLogBaseDir();
        atomikosProperties9.setOutputDir("");
        atomikosProperties9.setTransactionManagerUniqueName("hi!");
        int int21 = atomikosProperties9.getConsoleFileLimit();
        java.lang.String str22 = atomikosProperties9.getTransactionManagerUniqueName();
        boolean boolean23 = properties3.remove((java.lang.Object) atomikosProperties4, (java.lang.Object) str22);
        java.util.Collection<java.lang.Object> objCollection24 = properties3.values();
        java.lang.String str25 = properties3.toString();
        properties3.clear();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objCollection24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "{}" + "'", str25, "{}");
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setSerialJtaTransactions(false);
        java.lang.String str28 = atomikosProperties19.getOutputDir();
        long long29 = atomikosProperties19.getMaxTimeout();
        atomikosProperties19.setEnableLogging(true);
        atomikosProperties19.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        atomikosProperties0.setLogBaseDir("{10=#}");
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int17 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setService("tm.out");
        boolean boolean20 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{{}={}}");
        long long23 = atomikosProperties0.getCheckpointInterval();
        boolean boolean24 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 100L + "'", long23 == 100L);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        int int4 = properties3.size();
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties3.keys();
        java.lang.Object obj6 = properties3.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(obj6);
        org.junit.Assert.assertEquals(obj6.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj6), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj6), "{}");
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setService("hi!");
        int int51 = atomikosProperties40.getConsoleFileCount();
        int int52 = atomikosProperties40.getConsoleFileLimit();
        atomikosProperties40.setService("{{}={}}");
        java.lang.String str55 = atomikosProperties40.getLogBaseDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        recovery13.setDelay(500L);
        int int16 = recovery13.getMaxRetries();
        recovery13.setMaxRetries(50);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        atomikosProperties0.setConsoleFileCount((int) (byte) 0);
        atomikosProperties0.setCheckpointInterval(0L);
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean25 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration21 = properties20.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties20.entrySet();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        java.util.Properties properties26 = new java.util.Properties(properties24);
        java.lang.Object obj29 = properties26.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setSerialJtaTransactions(false);
        atomikosProperties30.setOutputDir("");
        java.lang.String str39 = atomikosProperties30.getConsoleFileName();
        java.lang.String str40 = atomikosProperties30.getLogBaseName();
        atomikosProperties30.setConsoleFileCount((int) (byte) -1);
        atomikosProperties30.setService("");
        boolean boolean45 = properties26.containsKey((java.lang.Object) "");
        properties26.clear();
        java.lang.String str48 = properties26.getProperty("tmlog");
        java.lang.Object obj49 = properties20.remove((java.lang.Object) "tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str51 = atomikosProperties50.getLogBaseDir();
        java.lang.String str52 = atomikosProperties50.getLogBaseDir();
        long long53 = atomikosProperties50.getCheckpointInterval();
        java.lang.String str54 = atomikosProperties50.getLogBaseDir();
        boolean boolean55 = atomikosProperties50.isThreadedTwoPhaseCommit();
        boolean boolean56 = properties20.containsKey((java.lang.Object) boolean55);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tm.out" + "'", str39, "tm.out");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 500L + "'", long53 == 500L);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean4 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setService("");
        int int7 = atomikosProperties0.getConsoleFileCount();
        boolean boolean8 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setLogBaseDir("{tm.out=hi!}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxActives((int) (short) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getService();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        int int9 = properties1.size();
        java.lang.Object obj12 = properties1.setProperty("{}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int13 = properties1.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        java.lang.String str17 = atomikosProperties14.getLogBaseDir();
        long long18 = atomikosProperties14.getCheckpointInterval();
        atomikosProperties14.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean21 = properties1.contains((java.lang.Object) "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties22 = new java.util.Properties();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        boolean boolean36 = properties24.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean35);
        boolean boolean37 = properties24.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties24.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setConsoleFileName("");
        java.lang.String str44 = atomikosProperties39.getLogBaseName();
        long long45 = atomikosProperties39.getCheckpointInterval();
        java.lang.String str46 = atomikosProperties39.getLogBaseDir();
        atomikosProperties39.setEnableLogging(true);
        java.lang.Object obj49 = properties22.putIfAbsent((java.lang.Object) objEnumeration38, (java.lang.Object) atomikosProperties39);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties22.keys();
        java.lang.String str52 = properties22.getProperty("tm.out");
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.util.Properties properties56 = new java.util.Properties(properties54);
        java.lang.Object obj57 = properties22.get((java.lang.Object) properties56);
        java.lang.Object obj60 = properties22.setProperty("", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties22.keys();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties66.elements();
        java.lang.String str69 = properties66.getProperty("");
        properties63.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj75 = properties63.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties72);
        atomikosProperties72.setSerialJtaTransactions(false);
        atomikosProperties72.setOutputDir("");
        atomikosProperties72.setService("");
        atomikosProperties72.setAllowSubTransactions(true);
        long long84 = atomikosProperties72.getDefaultJtaTimeout();
        boolean boolean85 = properties1.remove((java.lang.Object) objEnumeration61, (java.lang.Object) atomikosProperties72);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + (-1L) + "'", long45 == (-1L));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 10000L + "'", long84 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.lang.Object obj11 = properties1.setProperty("tmlog", "");
        java.lang.Object obj14 = properties1.setProperty("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", "{{}=}");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        java.lang.String str21 = atomikosProperties18.getLogBaseDir();
        atomikosProperties18.setSerialJtaTransactions(true);
        long long24 = atomikosProperties18.getMaxTimeout();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties26.entrySet();
        boolean boolean30 = properties16.remove((java.lang.Object) atomikosProperties18, (java.lang.Object) objEntrySet29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str32 = atomikosProperties31.getLogBaseDir();
        java.lang.String str33 = atomikosProperties31.getLogBaseDir();
        boolean boolean34 = atomikosProperties31.isAllowSubTransactions();
        boolean boolean35 = atomikosProperties31.isSerialJtaTransactions();
        java.lang.String str36 = atomikosProperties31.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setSerialJtaTransactions(false);
        atomikosProperties37.setOutputDir("");
        java.lang.String str46 = atomikosProperties37.getConsoleFileName();
        java.lang.String str47 = atomikosProperties37.getLogBaseName();
        atomikosProperties37.setCheckpointInterval((long) (short) 100);
        atomikosProperties37.setLogBaseDir("{10=#}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel52 = atomikosProperties37.getConsoleLogLevel();
        atomikosProperties31.setConsoleLogLevel(atomikosLoggingLevel52);
        java.lang.Object obj54 = properties1.put((java.lang.Object) objEntrySet29, (java.lang.Object) atomikosProperties31);
        java.lang.String str56 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tm.out" + "'", str46, "tm.out");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel52 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel52.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        java.lang.String str12 = atomikosProperties10.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties10.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileName("");
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.String str25 = atomikosProperties18.getOutputDir();
        atomikosProperties18.setLogBaseDir("tmlog");
        java.lang.String str28 = atomikosProperties18.getOutputDir();
        java.lang.String str29 = atomikosProperties18.getOutputDir();
        boolean boolean30 = atomikosProperties18.isThreadedTwoPhaseCommit();
        atomikosProperties18.setDefaultJtaTimeout((long) ' ');
        java.util.Properties properties33 = atomikosProperties18.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        atomikosProperties34.setSerialJtaTransactions(false);
        atomikosProperties34.setOutputDir("");
        java.lang.String str43 = atomikosProperties34.getConsoleFileName();
        atomikosProperties34.setAllowSubTransactions(false);
        int int46 = atomikosProperties34.getMaxActives();
        boolean boolean47 = properties33.containsKey((java.lang.Object) int46);
        java.lang.Object obj48 = properties8.put((java.lang.Object) boolean17, (java.lang.Object) boolean47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties8.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setOutputDir("");
        java.lang.String str59 = atomikosProperties50.getConsoleFileName();
        java.lang.String str60 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setCheckpointInterval((long) (short) 100);
        atomikosProperties50.setMaxActives((int) 'a');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties65.setCheckpointInterval((long) (byte) -1);
        atomikosProperties65.setConsoleFileName("");
        boolean boolean70 = atomikosProperties65.isEnableLogging();
        atomikosProperties65.setOutputDir("tm.out");
        java.lang.Object obj73 = properties8.replace((java.lang.Object) atomikosProperties50, (java.lang.Object) "tm.out");
        java.lang.Object obj76 = properties8.setProperty("tm.out", "{{}=false}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(properties33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tm.out" + "'", str43, "tm.out");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str10 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties1.remove((java.lang.Object) "", (java.lang.Object) boolean42);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties59);
        java.lang.Object obj62 = properties45.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        atomikosProperties63.setThreadedTwoPhaseCommit(true);
        java.lang.String str68 = atomikosProperties63.getOutputDir();
        java.util.Properties properties69 = atomikosProperties63.asProperties();
        java.lang.Object obj70 = properties45.remove((java.lang.Object) properties69);
        boolean boolean71 = properties1.containsKey((java.lang.Object) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setForceShutdownOnVmExit(true);
        boolean boolean79 = atomikosProperties72.isAllowSubTransactions();
        boolean boolean80 = properties45.equals((java.lang.Object) atomikosProperties72);
        atomikosProperties72.setCheckpointInterval(300000L);
        atomikosProperties72.setService("");
        atomikosProperties72.setDefaultJtaTimeout((long) 50);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery87 = atomikosProperties72.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(properties69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(recovery87);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileName("tm.out");
        atomikosProperties0.setMaxActives((-1));
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (byte) 1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties0.getRecovery();
        recovery8.setForgetOrphanedLogEntriesDelay(18L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertNotNull(recovery8);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.Object obj29 = properties25.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        boolean boolean41 = properties37.containsKey((java.lang.Object) recovery39);
        recovery39.setRetryInterval((long) (short) -1);
        recovery39.setRetryInterval((long) 0);
        recovery39.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass48 = recovery39.getClass();
        boolean boolean49 = properties32.contains((java.lang.Object) recovery39);
        boolean boolean50 = properties25.equals((java.lang.Object) boolean49);
        int int51 = properties25.size();
        boolean boolean52 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties25.keys();
        java.util.Enumeration<?> wildcardEnumeration54 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setOutputDir("");
        java.lang.String str64 = atomikosProperties55.getConsoleFileName();
        java.lang.String str65 = atomikosProperties55.getLogBaseName();
        atomikosProperties55.setConsoleFileCount((int) (byte) -1);
        atomikosProperties55.setForceShutdownOnVmExit(false);
        atomikosProperties55.setAllowSubTransactions(true);
        boolean boolean72 = properties25.containsKey((java.lang.Object) atomikosProperties55);
        java.lang.String str73 = atomikosProperties55.getLogBaseDir();
        long long74 = atomikosProperties55.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 19 + "'", int51 == 19);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + (-1L) + "'", long74 == (-1L));
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) '4');
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setConsoleFileCount((int) (short) 10);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Collection<java.lang.Object> objCollection14 = properties9.values();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties9.elements();
        java.lang.Object obj16 = properties1.remove((java.lang.Object) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.String str20 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setMaxTimeout(0L);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        atomikosProperties33.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel39 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties33.setCheckpointInterval((long) 1);
        atomikosProperties33.setAllowSubTransactions(false);
        java.lang.String str44 = atomikosProperties33.getOutputDir();
        boolean boolean45 = atomikosProperties33.isForceShutdownOnVmExit();
        atomikosProperties33.setOutputDir("{}");
        boolean boolean48 = atomikosProperties33.isForceShutdownOnVmExit();
        java.lang.Object obj49 = properties1.getOrDefault((java.lang.Object) atomikosProperties17, (java.lang.Object) boolean48);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery50 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery50.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long53 = recovery50.getDelay();
        recovery50.setMaxRetries((int) (short) 0);
        long long56 = recovery50.getDelay();
        recovery50.setForgetOrphanedLogEntriesDelay(1L);
        long long59 = recovery50.getDelay();
        recovery50.setForgetOrphanedLogEntriesDelay(0L);
        long long62 = recovery50.getDelay();
        boolean boolean63 = properties1.contains((java.lang.Object) recovery50);
        java.util.Enumeration<?> wildcardEnumeration64 = properties1.propertyNames();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(objCollection14);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel39 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel39.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + obj49 + "' != '" + false + "'", obj49, false);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 10000L + "'", long53 == 10000L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10000L + "'", long59 == 10000L);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration64);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setConsoleFileLimit((int) '#');
        int int11 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval(52L);
        int int15 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setMaxTimeout(500L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tm.out" + "'", str8, "tm.out");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{10=#}" + "'", str12, "{10=#}");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        int int9 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        int int13 = recovery12.getMaxRetries();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Set<java.lang.Object> objSet34 = properties1.keySet();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        java.lang.String str39 = properties36.getProperty("hi!");
        boolean boolean41 = properties36.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet42 = properties36.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        boolean boolean45 = properties36.equals((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setSerialJtaTransactions(false);
        int int48 = atomikosProperties43.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setConsoleFileName("");
        java.lang.String str54 = atomikosProperties49.getLogBaseName();
        long long55 = atomikosProperties49.getCheckpointInterval();
        java.lang.String str56 = atomikosProperties49.getLogBaseDir();
        java.lang.String str57 = atomikosProperties49.getConsoleFileName();
        boolean boolean58 = atomikosProperties49.isThreadedTwoPhaseCommit();
        java.lang.Object obj59 = properties1.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties49);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties61.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery63 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int64 = recovery63.getMaxRetries();
        boolean boolean65 = properties61.containsKey((java.lang.Object) recovery63);
        properties61.clear();
        boolean boolean68 = properties61.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj69 = null;
        boolean boolean70 = properties61.equals(obj69);
        java.lang.String str71 = properties61.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties61);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int74 = atomikosProperties73.getMaxActives();
        java.lang.String str75 = atomikosProperties73.getTransactionManagerUniqueName();
        atomikosProperties73.setConsoleFileCount(0);
        atomikosProperties73.setConsoleFileCount((int) ' ');
        java.lang.String str80 = atomikosProperties73.getLogBaseDir();
        java.lang.String str81 = atomikosProperties73.getConsoleFileName();
        boolean boolean82 = atomikosProperties73.isThreadedTwoPhaseCommit();
        long long83 = atomikosProperties73.getDefaultJtaTimeout();
        java.lang.Object obj84 = properties1.remove((java.lang.Object) long83);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objSet42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + (-1L) + "'", long55 == (-1L));
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 5 + "'", int64 == 5);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 50 + "'", int74 == 50);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tm.out" + "'", str81, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 10000L + "'", long83 == 10000L);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        atomikosProperties17.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties17.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel23);
        atomikosProperties0.setDefaultJtaTimeout(86400000L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties0.getConsoleLogLevel();
        int int28 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        java.lang.String str12 = properties9.getProperty("hi!");
        java.util.Set<java.lang.String> strSet13 = properties9.stringPropertyNames();
        java.lang.Object obj14 = properties9.clone();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.util.Properties properties18 = new java.util.Properties(properties16);
        java.util.Collection<java.lang.Object> objCollection19 = properties16.values();
        java.lang.Object obj20 = properties16.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int22 = atomikosProperties21.getMaxActives();
        java.lang.String str23 = atomikosProperties21.getTransactionManagerUniqueName();
        java.lang.String str24 = atomikosProperties21.getLogBaseName();
        boolean boolean25 = atomikosProperties21.isThreadedTwoPhaseCommit();
        atomikosProperties21.setCheckpointInterval((long) 'a');
        atomikosProperties21.setTransactionManagerUniqueName("tmlog");
        java.lang.Object obj30 = properties9.getOrDefault(obj20, (java.lang.Object) "tmlog");
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = properties7.get(obj30);
        java.util.Set<java.lang.String> strSet33 = properties7.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection34 = properties7.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(obj14);
        org.junit.Assert.assertEquals(obj14.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj14), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj14), "{}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objCollection19);
        org.junit.Assert.assertNotNull(obj20);
        org.junit.Assert.assertEquals(obj20.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj20), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj20), "{}");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 50 + "'", int22 == 50);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + obj30 + "' != '" + "tmlog" + "'", obj30, "tmlog");
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(objCollection34);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.keys();
        java.util.Properties properties9 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties7.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet11 = properties7.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEntrySet11);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.util.Properties properties9 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setOutputDir("");
        java.lang.String str19 = atomikosProperties10.getConsoleFileName();
        boolean boolean20 = atomikosProperties10.isThreadedTwoPhaseCommit();
        boolean boolean21 = atomikosProperties10.isSerialJtaTransactions();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        boolean boolean24 = properties23.isEmpty();
        java.lang.String str26 = properties23.getProperty("hi!");
        boolean boolean28 = properties23.contains((java.lang.Object) 10.0f);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int61 = recovery60.getMaxRetries();
        boolean boolean62 = properties58.containsKey((java.lang.Object) recovery60);
        recovery60.setRetryInterval((long) (short) -1);
        recovery60.setDelay(10L);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        java.lang.Object obj70 = properties29.getOrDefault((java.lang.Object) recovery60, (java.lang.Object) properties68);
        java.lang.Object obj71 = properties23.remove((java.lang.Object) recovery60);
        recovery60.setMaxRetries((int) (byte) -1);
        java.lang.Object obj74 = properties9.getOrDefault((java.lang.Object) atomikosProperties10, (java.lang.Object) recovery60);
        long long75 = recovery60.getDelay();
        long long76 = recovery60.getDelay();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "tm.out" + "'", str19, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 10L + "'", long75 == 10L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 10L + "'", long76 == 10L);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        boolean boolean30 = properties25.equals((java.lang.Object) false);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties25.entrySet();
        java.io.Reader reader32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties25.load(reader32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEntrySet31);
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties10.isForceShutdownOnVmExit();
        int int17 = atomikosProperties10.getMaxActives();
        long long18 = atomikosProperties10.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = atomikosProperties10.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertNotNull(recovery19);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setCheckpointInterval((long) (short) 100);
        atomikosProperties0.setLogBaseDir("{10=#}");
        atomikosProperties0.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int17 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setService("tm.out");
        boolean boolean20 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setTransactionManagerUniqueName("{{}={}}");
        long long23 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setMaxTimeout(32L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 100L + "'", long23 == 100L);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        long long49 = atomikosProperties40.getMaxTimeout();
        java.lang.String str50 = atomikosProperties40.getOutputDir();
        atomikosProperties40.setService("{{}=tmlog}");
        java.util.Properties properties53 = atomikosProperties40.asProperties();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(properties53);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        java.io.Writer writer44 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer44, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setConsoleFileName("");
        java.lang.String str46 = atomikosProperties41.getLogBaseName();
        long long47 = atomikosProperties41.getCheckpointInterval();
        java.lang.String str48 = atomikosProperties41.getConsoleFileName();
        atomikosProperties41.setForceShutdownOnVmExit(false);
        java.lang.Object obj51 = properties0.replace((java.lang.Object) false, (java.lang.Object) atomikosProperties41);
        java.util.Set<java.lang.Object> objSet52 = properties0.keySet();
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        boolean boolean57 = properties54.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet58 = properties54.keySet();
        java.lang.Object obj60 = properties54.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj62 = properties54.remove((java.lang.Object) "");
        java.util.Set<java.lang.Object> objSet63 = properties54.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties54.keys();
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        boolean boolean67 = properties66.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery68 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int69 = recovery68.getMaxRetries();
        boolean boolean70 = properties66.containsKey((java.lang.Object) recovery68);
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.lang.String str78 = properties75.getProperty("");
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj84 = properties72.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties81);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel85 = atomikosProperties81.getConsoleLogLevel();
        int int86 = atomikosProperties81.getConsoleFileCount();
        java.lang.Object obj87 = properties66.get((java.lang.Object) atomikosProperties81);
        long long88 = atomikosProperties81.getMaxTimeout();
        java.lang.String str89 = atomikosProperties81.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel90 = atomikosProperties81.getConsoleLogLevel();
        java.lang.String str91 = atomikosProperties81.getLogBaseName();
        atomikosProperties81.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.Object obj94 = properties0.put((java.lang.Object) properties54, (java.lang.Object) atomikosProperties81);
        java.util.Collection<java.lang.Object> objCollection95 = properties54.values();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tmlog" + "'", str46, "tmlog");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objSet58);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel85 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel85.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 300000L + "'", long88 == 300000L);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tm.out" + "'", str89, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel90 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel90.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "tmlog" + "'", str91, "tmlog");
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(objCollection95);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseName("{10=#}");
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        boolean boolean16 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str11 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setLogBaseName("tm.out");
        boolean boolean16 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxActives(4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int18 = recovery17.getMaxRetries();
        boolean boolean19 = properties15.containsKey((java.lang.Object) recovery17);
        properties15.clear();
        java.util.Properties properties21 = new java.util.Properties(properties15);
        int int22 = properties15.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        long long29 = atomikosProperties23.getCheckpointInterval();
        atomikosProperties23.setAllowSubTransactions(false);
        long long32 = atomikosProperties23.getCheckpointInterval();
        java.lang.Object obj33 = properties15.remove((java.lang.Object) long32);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setMaxRetries((int) '4');
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.lang.String str47 = properties44.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setConsoleFileName("");
        java.lang.String str53 = atomikosProperties48.getLogBaseName();
        long long54 = atomikosProperties48.getCheckpointInterval();
        atomikosProperties48.setForceShutdownOnVmExit(false);
        java.util.Properties properties57 = atomikosProperties48.asProperties();
        boolean boolean58 = atomikosProperties48.isAllowSubTransactions();
        int int59 = atomikosProperties48.getConsoleFileLimit();
        boolean boolean60 = properties44.containsKey((java.lang.Object) int59);
        java.util.Enumeration<?> wildcardEnumeration61 = properties44.propertyNames();
        java.lang.Object obj62 = properties1.put((java.lang.Object) recovery38, (java.lang.Object) properties44);
        recovery38.setForgetOrphanedLogEntriesDelay((long) '#');
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + (-1L) + "'", long54 == (-1L));
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration61);
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj20 = properties1.setProperty("{10=#}", "tmlog");
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties1.keys();
        java.lang.Object obj24 = properties1.setProperty("{{}={}}", "{=}");
        java.lang.Object obj25 = properties1.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.lang.String str49 = properties46.getProperty("");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj55 = properties43.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties52.getConsoleLogLevel();
        java.lang.String str59 = atomikosProperties52.getTransactionManagerUniqueName();
        atomikosProperties52.setOutputDir("{10=#}");
        long long62 = atomikosProperties52.getDefaultJtaTimeout();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.lang.Object obj81 = properties64.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str83 = atomikosProperties82.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery84 = atomikosProperties82.getRecovery();
        atomikosProperties82.setEnableLogging(false);
        boolean boolean87 = properties64.equals((java.lang.Object) atomikosProperties82);
        java.util.Set<java.lang.String> strSet88 = properties64.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery89 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery89.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        boolean boolean92 = properties1.replace((java.lang.Object) atomikosProperties52, (java.lang.Object) properties64, (java.lang.Object) recovery89);
        int int93 = recovery89.getMaxRetries();
        recovery89.setMaxRetries((int) (byte) 10);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(recovery84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 5 + "'", int93 == 5);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setAllowSubTransactions(false);
        int int20 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = atomikosProperties10.getRecovery();
        java.util.Properties properties24 = atomikosProperties10.asProperties();
        boolean boolean25 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setService("{[]=WARN}");
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(recovery23);
        org.junit.Assert.assertNotNull(properties24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        int int7 = recovery6.getMaxRetries();
        recovery6.setRetryInterval(300000L);
        recovery6.setMaxRetries(97);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        boolean boolean5 = properties4.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int7 = recovery6.getMaxRetries();
        boolean boolean8 = properties4.containsKey((java.lang.Object) recovery6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj22 = properties10.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties19.getConsoleLogLevel();
        int int24 = atomikosProperties19.getConsoleFileCount();
        java.lang.Object obj25 = properties4.get((java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setConsoleFileName("");
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        long long32 = atomikosProperties26.getCheckpointInterval();
        java.lang.Object obj33 = properties4.get((java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.lang.String str39 = atomikosProperties34.getOutputDir();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        int int41 = atomikosProperties34.getConsoleFileCount();
        boolean boolean42 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj44 = properties4.put((java.lang.Object) boolean42, (java.lang.Object) 0L);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        boolean boolean61 = properties49.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean60);
        boolean boolean62 = properties49.isEmpty();
        boolean boolean63 = properties45.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties64.getLogBaseName();
        long long70 = atomikosProperties64.getCheckpointInterval();
        java.lang.String str71 = atomikosProperties64.getConsoleFileName();
        long long72 = atomikosProperties64.getCheckpointInterval();
        java.lang.Object obj73 = properties49.remove((java.lang.Object) atomikosProperties64);
        java.lang.Object obj74 = properties1.getOrDefault((java.lang.Object) 0L, (java.lang.Object) properties49);
        java.lang.String str76 = properties1.getProperty("");
        java.util.Set<java.lang.Object> objSet77 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setCheckpointInterval((long) (byte) -1);
        atomikosProperties78.setThreadedTwoPhaseCommit(true);
        java.lang.String str83 = atomikosProperties78.getOutputDir();
        boolean boolean84 = atomikosProperties78.isForceShutdownOnVmExit();
        atomikosProperties78.setMaxTimeout(1L);
        java.util.Properties properties87 = atomikosProperties78.asProperties();
        boolean boolean88 = properties1.containsValue((java.lang.Object) properties87);
        boolean boolean89 = properties87.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{}");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(properties87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setCheckpointInterval(1L);
        long long21 = atomikosProperties10.getDefaultJtaTimeout();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str19 = atomikosProperties10.getOutputDir();
        java.util.Properties properties20 = atomikosProperties10.asProperties();
        java.io.PrintWriter printWriter21 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.list(printWriter21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setConsoleFileName("tm.out");
        atomikosProperties0.setMaxActives((-1));
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.lang.String str8 = atomikosProperties0.getLogBaseName();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setCheckpointInterval((long) 10);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "tmlog" + "'", str8, "tmlog");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertNotNull(properties10);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int57 = recovery56.getMaxRetries();
        boolean boolean58 = properties54.containsKey((java.lang.Object) recovery56);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.lang.String str66 = properties63.getProperty("");
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj72 = properties60.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties69);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties69.getConsoleLogLevel();
        int int74 = atomikosProperties69.getConsoleFileCount();
        java.lang.Object obj75 = properties54.get((java.lang.Object) atomikosProperties69);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        atomikosProperties76.setConsoleFileName("");
        java.lang.String str81 = atomikosProperties76.getLogBaseName();
        long long82 = atomikosProperties76.getCheckpointInterval();
        java.lang.String str83 = atomikosProperties76.getLogBaseDir();
        atomikosProperties76.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel86 = atomikosProperties76.getConsoleLogLevel();
        boolean boolean87 = properties54.equals((java.lang.Object) atomikosProperties76);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.io.OutputStream outputStream89 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties54.save(outputStream89, "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 5 + "'", int57 == 5);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + (-1L) + "'", long82 == (-1L));
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel86 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel86.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        java.lang.String str50 = atomikosProperties43.getOutputDir();
        atomikosProperties43.setLogBaseDir("tmlog");
        java.lang.String str53 = atomikosProperties43.getOutputDir();
        java.lang.String str54 = atomikosProperties43.getOutputDir();
        boolean boolean55 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setDefaultJtaTimeout((long) ' ');
        int int58 = atomikosProperties43.getConsoleFileCount();
        boolean boolean59 = atomikosProperties43.isSerialJtaTransactions();
        boolean boolean60 = properties42.containsValue((java.lang.Object) atomikosProperties43);
        atomikosProperties43.setService("hi!");
        java.lang.String str63 = atomikosProperties43.getService();
        atomikosProperties43.setAllowSubTransactions(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        boolean boolean16 = properties15.isEmpty();
        java.util.Properties properties17 = new java.util.Properties(properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setConsoleFileName("");
        java.lang.String str23 = atomikosProperties18.getLogBaseName();
        long long24 = atomikosProperties18.getCheckpointInterval();
        java.lang.String str25 = atomikosProperties18.getLogBaseDir();
        atomikosProperties18.setEnableLogging(true);
        long long28 = atomikosProperties18.getDefaultJtaTimeout();
        java.util.Properties properties29 = atomikosProperties18.asProperties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        boolean boolean49 = properties46.containsKey((java.lang.Object) 10.0f);
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        java.util.Set<java.lang.Object> objSet51 = properties31.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str53 = atomikosProperties52.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = atomikosProperties52.getRecovery();
        atomikosProperties52.setEnableLogging(false);
        atomikosProperties52.setSerialJtaTransactions(true);
        java.lang.String str59 = atomikosProperties52.getOutputDir();
        int int60 = atomikosProperties52.getMaxActives();
        boolean boolean61 = properties31.containsKey((java.lang.Object) atomikosProperties52);
        java.lang.String str62 = properties31.toString();
        java.lang.Object obj63 = properties15.put((java.lang.Object) atomikosProperties18, (java.lang.Object) str62);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 10000L + "'", long28 == 10000L);
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(recovery54);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 50 + "'", int60 == 50);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
        org.junit.Assert.assertNull(obj63);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        int int25 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setSerialJtaTransactions(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.String str30 = atomikosProperties19.getService();
        atomikosProperties19.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        java.lang.String str8 = atomikosProperties0.getConsoleFileName();
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.lang.String str13 = properties10.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=0}", "{{}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "{{}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}" + "'", str13, "{{}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        int int8 = recovery7.getMaxRetries();
        recovery7.setForgetOrphanedLogEntriesDelay(52L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        java.lang.String str2 = atomikosProperties0.getLogBaseDir();
        boolean boolean3 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setLogBaseDir("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getLogBaseName();
        long long12 = atomikosProperties6.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties6.getLogBaseDir();
        atomikosProperties6.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties6.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel16);
        atomikosProperties0.setConsoleFileLimit((int) (byte) 0);
        boolean boolean20 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj32 = properties29.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str33 = properties29.toString();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        boolean boolean38 = properties35.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet39 = properties35.keySet();
        java.lang.Object obj41 = properties35.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj43 = properties35.remove((java.lang.Object) "");
        boolean boolean44 = properties29.contains((java.lang.Object) "");
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties29.elements();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.lang.Object obj47 = properties29.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{10=#}" + "'", str33, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(obj47);
        org.junit.Assert.assertEquals(obj47.toString(), "{10=#}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj47), "{10=#}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj47), "{10=#}");
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.String str9 = properties1.toString();
        java.util.Set<java.lang.Object> objSet10 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getCheckpointInterval();
        java.lang.String str18 = atomikosProperties11.getLogBaseDir();
        atomikosProperties11.setMaxTimeout(300000L);
        java.lang.String str21 = atomikosProperties11.getLogBaseName();
        boolean boolean22 = atomikosProperties11.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = atomikosProperties11.getRecovery();
        long long24 = recovery23.getRetryInterval();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        boolean boolean30 = properties26.containsKey((java.lang.Object) recovery28);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.lang.String str38 = properties35.getProperty("");
        properties32.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj44 = properties32.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties41);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties41.getConsoleLogLevel();
        int int46 = atomikosProperties41.getConsoleFileCount();
        java.lang.Object obj47 = properties26.get((java.lang.Object) atomikosProperties41);
        atomikosProperties41.setConsoleFileName("");
        int int50 = atomikosProperties41.getConsoleFileCount();
        atomikosProperties41.setCheckpointInterval(10000L);
        java.lang.String str53 = atomikosProperties41.getTransactionManagerUniqueName();
        long long54 = atomikosProperties41.getCheckpointInterval();
        java.lang.Object obj55 = properties1.put((java.lang.Object) recovery23, (java.lang.Object) long54);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "{}" + "'", str9, "{}");
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(recovery23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties12.getRecovery();
        atomikosProperties12.setEnableLogging(false);
        atomikosProperties12.setSerialJtaTransactions(true);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties20.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        boolean boolean42 = properties20.contains((java.lang.Object) properties34);
        java.util.Set<java.lang.Object> objSet43 = properties34.keySet();
        java.lang.Object obj44 = properties7.getOrDefault((java.lang.Object) true, (java.lang.Object) properties34);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setSerialJtaTransactions(false);
        java.lang.String str53 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setAllowSubTransactions(false);
        java.lang.String str56 = atomikosProperties46.getService();
        atomikosProperties46.setSerialJtaTransactions(true);
        atomikosProperties46.setAllowSubTransactions(true);
        boolean boolean61 = properties1.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties46);
        java.lang.String str63 = properties1.getProperty("");
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        boolean boolean66 = properties65.isEmpty();
        java.lang.String str68 = properties65.getProperty("hi!");
        java.util.Set<java.lang.String> strSet69 = properties65.stringPropertyNames();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        java.io.OutputStream outputStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream71, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj6 = properties1.setProperty("tm.out", "hi!");
        boolean boolean7 = properties1.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        boolean boolean18 = properties9.contains((java.lang.Object) 0);
        boolean boolean19 = properties1.containsValue((java.lang.Object) boolean18);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.String str23 = atomikosProperties20.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties20.getRecovery();
        java.lang.String str25 = atomikosProperties20.getService();
        boolean boolean26 = atomikosProperties20.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        java.lang.String str32 = atomikosProperties27.getOutputDir();
        java.lang.String str33 = atomikosProperties27.getOutputDir();
        java.lang.Object obj34 = properties1.replace((java.lang.Object) boolean26, (java.lang.Object) atomikosProperties27);
        java.lang.Object obj37 = properties1.setProperty("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(recovery24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        java.lang.String str26 = atomikosProperties19.getLogBaseDir();
        atomikosProperties19.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery29 = atomikosProperties19.getRecovery();
        recovery29.setDelay((long) (short) 1);
        long long32 = recovery29.getRetryInterval();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(recovery29);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties3.elements();
        java.util.Collection<java.lang.Object> objCollection8 = properties3.values();
        java.io.InputStream inputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.load(inputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objCollection8);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Collection<java.lang.Object> objCollection28 = properties1.values();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj42 = properties30.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties39);
        atomikosProperties39.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel45 = atomikosProperties39.getConsoleLogLevel();
        atomikosProperties39.setCheckpointInterval((long) 1);
        atomikosProperties39.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery50 = atomikosProperties39.getRecovery();
        long long51 = recovery50.getRetryInterval();
        recovery50.setDelay((long) 0);
        long long54 = recovery50.getRetryInterval();
        java.lang.Object obj55 = properties1.remove((java.lang.Object) recovery50);
        java.lang.Object obj58 = properties1.setProperty("{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel45 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel45.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10000L + "'", long51 == 10000L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        atomikosProperties8.setEnableLogging(false);
        boolean boolean15 = atomikosProperties8.isAllowSubTransactions();
        atomikosProperties8.setLogBaseDir("");
        boolean boolean18 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setService("tmlog");
        boolean boolean21 = atomikosProperties8.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseDir("{[]=WARN}");
        atomikosProperties0.setOutputDir("{=}");
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean22 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean23 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Set<java.lang.String> strSet25 = properties1.stringPropertyNames();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        java.util.Properties properties29 = new java.util.Properties(properties27);
        java.lang.Object obj32 = properties29.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str33 = properties29.toString();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        boolean boolean38 = properties35.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet39 = properties35.keySet();
        java.lang.Object obj41 = properties35.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj43 = properties35.remove((java.lang.Object) "");
        boolean boolean44 = properties29.contains((java.lang.Object) "");
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties29.elements();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.io.Writer writer47 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties29.store(writer47, "tm.out");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{10=#}" + "'", str33, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objSet39);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        long long8 = recovery0.getDelay();
        recovery0.setDelay((long) (short) 10);
        long long11 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) -1);
        int int14 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((long) 50);
        recovery0.setDelay(2L);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.lang.Object obj27 = properties1.clone();
        java.util.Properties properties28 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        atomikosProperties29.setSerialJtaTransactions(false);
        atomikosProperties29.setOutputDir("");
        long long38 = atomikosProperties29.getCheckpointInterval();
        atomikosProperties29.setOutputDir("tmlog");
        atomikosProperties29.setDefaultJtaTimeout((long) (short) 100);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        boolean boolean47 = properties44.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet48 = properties44.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setSerialJtaTransactions(false);
        atomikosProperties49.setOutputDir("");
        java.lang.String str58 = atomikosProperties49.getConsoleFileName();
        java.lang.String str59 = atomikosProperties49.getLogBaseName();
        atomikosProperties49.setEnableLogging(false);
        boolean boolean62 = properties44.containsKey((java.lang.Object) atomikosProperties49);
        java.lang.Object obj63 = null;
        boolean boolean64 = properties44.equals(obj63);
        java.util.Properties properties65 = new java.util.Properties(properties44);
        java.util.Collection<java.lang.Object> objCollection66 = properties65.values();
        java.lang.Object obj67 = properties28.replace((java.lang.Object) atomikosProperties29, (java.lang.Object) properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setSerialJtaTransactions(false);
        atomikosProperties68.setOutputDir("");
        java.lang.String str77 = atomikosProperties68.getConsoleFileName();
        java.lang.String str78 = atomikosProperties68.getLogBaseName();
        atomikosProperties68.setEnableLogging(false);
        atomikosProperties68.setEnableLogging(false);
        boolean boolean83 = atomikosProperties68.isEnableLogging();
        boolean boolean84 = properties65.containsKey((java.lang.Object) atomikosProperties68);
        java.io.PrintStream printStream85 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties65.list(printStream85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertEquals(obj27.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "{}");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tm.out" + "'", str58, "tm.out");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tm.out" + "'", str77, "tm.out");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "tmlog" + "'", str78, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet19 = properties1.entrySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEntrySet19);
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        java.lang.String str17 = atomikosProperties15.getLogBaseDir();
        int int18 = atomikosProperties15.getConsoleFileCount();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties20.entrySet();
        boolean boolean25 = properties5.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) properties20, (java.lang.Object) 1);
        java.util.Collection<java.lang.Object> objCollection26 = properties5.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objCollection26);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties1.entrySet();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        boolean boolean11 = properties8.containsKey((java.lang.Object) 10.0f);
        java.lang.String str13 = properties8.getProperty("hi!");
        java.util.Set<java.lang.String> strSet14 = properties8.stringPropertyNames();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties16.isEmpty();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) properties8, (java.lang.Object) properties16);
        java.io.Writer writer20 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties16.store(writer20, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={10=#}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj19);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj9 = null;
        boolean boolean10 = properties1.equals(obj9);
        java.lang.String str11 = properties1.toString();
        properties1.clear();
        java.lang.Object obj13 = properties1.clone();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str17 = properties15.toString();
        java.util.Set<java.lang.String> strSet18 = properties15.stringPropertyNames();
        boolean boolean19 = properties1.contains((java.lang.Object) properties15);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str22 = atomikosProperties21.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = atomikosProperties21.getRecovery();
        atomikosProperties21.setEnableLogging(false);
        long long26 = atomikosProperties21.getMaxTimeout();
        atomikosProperties21.setTransactionManagerUniqueName("{10=#}");
        java.lang.String str29 = atomikosProperties21.getConsoleFileName();
        atomikosProperties21.setConsoleFileLimit((int) '#');
        int int32 = atomikosProperties21.getConsoleFileCount();
        java.lang.String str33 = atomikosProperties21.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties21.getConsoleLogLevel();
        java.util.Properties properties35 = atomikosProperties21.asProperties();
        boolean boolean36 = properties1.equals((java.lang.Object) atomikosProperties21);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertNotNull(obj13);
        org.junit.Assert.assertEquals(obj13.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj13), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj13), "{}");
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{}" + "'", str17, "{}");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(recovery23);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "{10=#}" + "'", str33, "{10=#}");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.lang.String str30 = properties1.getProperty("tmlog");
        java.util.Enumeration<?> wildcardEnumeration31 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties1.entrySet();
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream33, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        boolean boolean24 = properties1.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.keys();
        int int30 = properties26.size();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        int int32 = properties26.size();
        java.io.OutputStream outputStream33 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.storeToXML(outputStream33, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        long long8 = recovery0.getDelay();
        recovery0.setRetryInterval(35L);
        int int11 = recovery0.getMaxRetries();
        recovery0.setMaxRetries((int) (short) 1);
        long long14 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.lang.String str49 = properties46.getProperty("");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj55 = properties43.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties52.getConsoleLogLevel();
        java.lang.String str59 = atomikosProperties52.getTransactionManagerUniqueName();
        atomikosProperties52.setOutputDir("{10=#}");
        long long62 = atomikosProperties52.getDefaultJtaTimeout();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.lang.Object obj81 = properties64.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str83 = atomikosProperties82.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery84 = atomikosProperties82.getRecovery();
        atomikosProperties82.setEnableLogging(false);
        boolean boolean87 = properties64.equals((java.lang.Object) atomikosProperties82);
        java.util.Set<java.lang.String> strSet88 = properties64.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery89 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery89.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        boolean boolean92 = properties1.replace((java.lang.Object) atomikosProperties52, (java.lang.Object) properties64, (java.lang.Object) recovery89);
        boolean boolean93 = atomikosProperties52.isSerialJtaTransactions();
        atomikosProperties52.setEnableLogging(true);
        atomikosProperties52.setEnableLogging(false);
        int int98 = atomikosProperties52.getConsoleFileLimit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(recovery84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isAllowSubTransactions();
        java.lang.String str15 = atomikosProperties8.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties8.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties8.getConsoleLogLevel();
        atomikosProperties8.setConsoleFileLimit(5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj45 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery48 = atomikosProperties46.getRecovery();
        atomikosProperties46.setEnableLogging(false);
        boolean boolean51 = properties28.equals((java.lang.Object) atomikosProperties46);
        int int52 = atomikosProperties46.getConsoleFileCount();
        boolean boolean53 = atomikosProperties46.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        java.lang.String str59 = atomikosProperties54.getOutputDir();
        java.util.Properties properties60 = atomikosProperties54.asProperties();
        boolean boolean61 = properties1.remove((java.lang.Object) atomikosProperties46, (java.lang.Object) atomikosProperties54);
        atomikosProperties46.setConsoleFileName("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(recovery48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(properties60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setSerialJtaTransactions(true);
        java.lang.String str12 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tm.out" + "'", str12, "tm.out");
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int15 = recovery14.getMaxRetries();
        boolean boolean16 = properties12.containsKey((java.lang.Object) recovery14);
        recovery14.setMaxRetries((int) '4');
        recovery14.setForgetOrphanedLogEntriesDelay((long) 100);
        long long21 = recovery14.getDelay();
        recovery14.setRetryInterval((long) (short) 100);
        java.lang.Object obj24 = properties9.remove((java.lang.Object) recovery14);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery25 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery25.setRetryInterval((long) 100);
        int int28 = recovery25.getMaxRetries();
        long long29 = recovery25.getDelay();
        recovery25.setDelay(0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        atomikosProperties32.setSerialJtaTransactions(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setConsoleFileName("");
        atomikosProperties32.setMaxActives((int) (short) -1);
        boolean boolean50 = properties9.remove((java.lang.Object) recovery25, (java.lang.Object) atomikosProperties32);
        java.lang.String str52 = properties9.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str54 = atomikosProperties53.getLogBaseDir();
        java.lang.String str55 = atomikosProperties53.getLogBaseDir();
        java.lang.String str56 = atomikosProperties53.getService();
        atomikosProperties53.setLogBaseName("");
        atomikosProperties53.setConsoleFileName("tmlog");
        java.lang.String str61 = atomikosProperties53.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setOutputDir("");
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setThreadedTwoPhaseCommit(false);
        atomikosProperties62.setCheckpointInterval((long) (short) 1);
        atomikosProperties62.setCheckpointInterval((long) (byte) 1);
        java.util.Properties properties79 = atomikosProperties62.asProperties();
        java.lang.Object obj80 = properties9.putIfAbsent((java.lang.Object) str61, (java.lang.Object) atomikosProperties62);
        java.io.PrintStream printStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties9.list(printStream81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 5 + "'", int28 == 5);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 10000L + "'", long29 == 10000L);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(properties79);
        org.junit.Assert.assertNull(obj80);
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        atomikosProperties21.setThreadedTwoPhaseCommit(true);
        java.lang.String str26 = atomikosProperties21.getOutputDir();
        java.lang.String str27 = atomikosProperties21.getTransactionManagerUniqueName();
        java.lang.Object obj28 = properties1.get((java.lang.Object) atomikosProperties21);
        boolean boolean29 = atomikosProperties21.isForceShutdownOnVmExit();
        atomikosProperties21.setCheckpointInterval((long) 52);
        boolean boolean32 = atomikosProperties21.isEnableLogging();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setCheckpointInterval((long) 100);
        atomikosProperties10.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery22 = atomikosProperties10.getRecovery();
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str27 = atomikosProperties10.getLogBaseDir();
        int int28 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setConsoleFileLimit(0);
        java.lang.String str31 = atomikosProperties10.getTransactionManagerUniqueName();
        long long32 = atomikosProperties10.getDefaultJtaTimeout();
        atomikosProperties10.setThreadedTwoPhaseCommit(false);
        java.lang.String str35 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setEnableLogging(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(recovery22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 10000L + "'", long32 == 10000L);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str35, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Set<java.lang.Object> objSet53 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties54.getRecovery();
        atomikosProperties54.setEnableLogging(false);
        long long59 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties54.setLogBaseDir("hi!");
        atomikosProperties54.setTransactionManagerUniqueName("hi!");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.lang.Object obj68 = properties37.remove((java.lang.Object) atomikosProperties54);
        atomikosProperties54.setConsoleFileCount(52);
        java.lang.String str71 = atomikosProperties54.getService();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Properties properties21 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setConsoleFileName("");
        atomikosProperties22.setCheckpointInterval((long) 100);
        atomikosProperties22.setConsoleFileName("tm.out");
        java.lang.String str31 = atomikosProperties22.getConsoleFileName();
        atomikosProperties22.setConsoleFileCount((int) (short) 10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties22.getConsoleLogLevel();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        long long41 = recovery38.getDelay();
        recovery38.setMaxRetries((int) (byte) 1);
        boolean boolean44 = properties1.remove((java.lang.Object) atomikosProperties22, (java.lang.Object) recovery38);
        recovery38.setForgetOrphanedLogEntriesDelay(2L);
        long long47 = recovery38.getDelay();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tm.out" + "'", str31, "tm.out");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str7 = properties3.toString();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        boolean boolean10 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties9.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        boolean boolean14 = properties13.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet15 = properties13.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int17 = recovery16.getMaxRetries();
        recovery16.setForgetOrphanedLogEntriesDelay((-1L));
        recovery16.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean22 = properties9.remove((java.lang.Object) properties13, (java.lang.Object) (-1));
        boolean boolean23 = properties9.isEmpty();
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Set<java.lang.Object> objSet25 = properties3.keySet();
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties37.getConsoleLogLevel();
        atomikosProperties37.setConsoleFileLimit((int) '4');
        atomikosProperties37.setForceShutdownOnVmExit(true);
        int int46 = atomikosProperties37.getMaxActives();
        boolean boolean47 = properties26.contains((java.lang.Object) int46);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.util.Collection<java.lang.Object> objCollection52 = properties49.values();
        java.lang.Object obj53 = properties49.clone();
        java.util.Properties properties54 = new java.util.Properties(properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        boolean boolean56 = properties54.containsValue((java.lang.Object) atomikosProperties55);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet57 = properties54.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int59 = recovery58.getMaxRetries();
        recovery58.setForgetOrphanedLogEntriesDelay((-1L));
        recovery58.setForgetOrphanedLogEntriesDelay(0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setThreadedTwoPhaseCommit(true);
        java.lang.String str69 = atomikosProperties64.getOutputDir();
        java.lang.String str70 = atomikosProperties64.getTransactionManagerUniqueName();
        atomikosProperties64.setCheckpointInterval((long) 'a');
        atomikosProperties64.setMaxActives(100);
        java.util.Properties properties75 = atomikosProperties64.asProperties();
        java.lang.Object obj78 = properties75.setProperty("tm.out", "");
        java.lang.Object obj79 = properties75.clone();
        java.lang.Object obj80 = properties54.getOrDefault((java.lang.Object) 0L, (java.lang.Object) properties75);
        java.lang.Object obj83 = properties75.setProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{tm.out=hi!}");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "{10=#}" + "'", str7, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEntrySet15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 5 + "'", int17 == 5);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(objSet25);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objCollection52);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEntrySet57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(properties75);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertNotNull(obj79);
// flaky:         org.junit.Assert.assertEquals(obj79.toString(), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj79), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj79), "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, tm.out=, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(obj80);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout(300000L);
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxActives((int) (short) 100);
        int int13 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        int int7 = atomikosProperties0.getConsoleFileLimit();
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setOutputDir("{}");
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean13 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.Class<?> wildcardClass14 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties10.getRecovery();
        int int19 = atomikosProperties10.getConsoleFileCount();
        boolean boolean20 = atomikosProperties10.isForceShutdownOnVmExit();
        int int21 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        java.lang.String str8 = atomikosProperties5.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties5.getRecovery();
        java.lang.String str10 = atomikosProperties5.getService();
        atomikosProperties5.setCheckpointInterval(0L);
        atomikosProperties5.setCheckpointInterval(100L);
        java.lang.Object obj15 = properties3.get((java.lang.Object) atomikosProperties5);
        java.lang.String str16 = atomikosProperties5.getConsoleFileName();
        atomikosProperties5.setLogBaseName("");
        boolean boolean19 = atomikosProperties5.isAllowSubTransactions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties1.keys();
        java.lang.String str15 = properties1.toString();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        atomikosProperties26.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel32 = atomikosProperties26.getConsoleLogLevel();
        java.lang.String str33 = atomikosProperties26.getTransactionManagerUniqueName();
        atomikosProperties26.setCheckpointInterval((long) 100);
        atomikosProperties26.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.setEnableLogging(true);
        long long48 = atomikosProperties38.getDefaultJtaTimeout();
        boolean boolean49 = atomikosProperties38.isSerialJtaTransactions();
        java.lang.String str50 = atomikosProperties38.getOutputDir();
        atomikosProperties38.setTransactionManagerUniqueName("{}");
        java.lang.String str53 = atomikosProperties38.getLogBaseName();
        long long54 = atomikosProperties38.getMaxTimeout();
        atomikosProperties38.setCheckpointInterval((long) 0);
        java.lang.Object obj57 = properties1.putIfAbsent((java.lang.Object) "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", (java.lang.Object) atomikosProperties38);
        atomikosProperties38.setConsoleFileLimit((-1));
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel32 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel32.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 10000L + "'", long48 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 300000L + "'", long54 == 300000L);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties0.getConsoleLogLevel();
        int int17 = atomikosProperties0.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        boolean boolean19 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long22 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseName("{}");
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties13);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        int int25 = atomikosProperties19.getConsoleFileCount();
        java.lang.String str26 = atomikosProperties19.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery27 = atomikosProperties19.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertNotNull(recovery27);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.lang.String str11 = properties8.getProperty("hi!");
        boolean boolean13 = properties8.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet14 = properties8.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.lang.String str20 = atomikosProperties15.getOutputDir();
        atomikosProperties15.setConsoleFileName("tmlog");
        boolean boolean23 = properties8.contains((java.lang.Object) "tmlog");
        java.lang.Object obj24 = properties1.get((java.lang.Object) properties8);
        java.lang.String str26 = properties1.getProperty("{}");
        java.util.Set<java.lang.String> strSet27 = properties1.stringPropertyNames();
        java.lang.String str29 = properties1.getProperty("tmlog");
        java.util.Enumeration<?> wildcardEnumeration30 = properties1.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties1.keys();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties33.entrySet();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Object obj38 = properties33.replace((java.lang.Object) "hi!", obj37);
        java.lang.Object obj39 = properties33.clone();
        java.util.Properties properties40 = new java.util.Properties(properties33);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties1.containsKey((java.lang.Object) properties40);
        int int43 = properties1.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objSet14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(wildcardEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertEquals(obj39.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj39), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj39), "{}");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties1.entrySet();
        java.util.Properties properties21 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties23.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.setEnableLogging(true);
        java.lang.Object obj48 = properties21.putIfAbsent((java.lang.Object) objEnumeration37, (java.lang.Object) atomikosProperties38);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties21.keys();
        java.lang.String str51 = properties21.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setConsoleFileName("");
        atomikosProperties52.setConsoleFileName("");
        long long59 = atomikosProperties52.getDefaultJtaTimeout();
        atomikosProperties52.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean62 = properties21.containsKey((java.lang.Object) atomikosProperties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties64.getLogBaseName();
        long long70 = atomikosProperties64.getCheckpointInterval();
        atomikosProperties64.setForceShutdownOnVmExit(false);
        atomikosProperties64.setTransactionManagerUniqueName("tmlog");
        atomikosProperties64.setLogBaseDir("");
        int int77 = atomikosProperties64.getConsoleFileCount();
        java.lang.Object obj78 = properties21.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) atomikosProperties64);
        boolean boolean79 = properties21.isEmpty();
        java.util.Collection<java.lang.Object> objCollection80 = properties21.values();
        boolean boolean81 = properties1.contains((java.lang.Object) properties21);
        java.util.Properties properties82 = new java.util.Properties(properties1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 10000L + "'", long59 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str18 = atomikosProperties8.getLogBaseDir();
        boolean boolean19 = atomikosProperties8.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setEnableLogging(false);
        java.lang.String str19 = atomikosProperties10.getService();
        atomikosProperties10.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties10.setAllowSubTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setMaxTimeout((long) (short) -1);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        long long11 = atomikosProperties0.getMaxTimeout();
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.util.Properties properties16 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties16);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = atomikosProperties0.getRecovery();
        java.util.Properties properties5 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setConsoleFileCount((int) (byte) 1);
        atomikosProperties0.setMaxTimeout((long) (byte) 0);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel12 = atomikosProperties0.getConsoleLogLevel();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(recovery4);
        org.junit.Assert.assertNotNull(properties5);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel12 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel12.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = atomikosProperties0.getRecovery();
        long long7 = recovery6.getRetryInterval();
        long long8 = recovery6.getForgetOrphanedLogEntriesDelay();
        recovery6.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(recovery6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 86400000L + "'", long8 == 86400000L);
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        java.lang.String str7 = atomikosProperties0.getService();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery11);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        atomikosProperties43.setSerialJtaTransactions(false);
        java.lang.String str50 = atomikosProperties43.getOutputDir();
        atomikosProperties43.setLogBaseDir("tmlog");
        java.lang.String str53 = atomikosProperties43.getOutputDir();
        java.lang.String str54 = atomikosProperties43.getOutputDir();
        boolean boolean55 = atomikosProperties43.isThreadedTwoPhaseCommit();
        atomikosProperties43.setDefaultJtaTimeout((long) ' ');
        int int58 = atomikosProperties43.getConsoleFileCount();
        boolean boolean59 = atomikosProperties43.isSerialJtaTransactions();
        boolean boolean60 = properties42.containsValue((java.lang.Object) atomikosProperties43);
        java.util.Set<java.lang.Object> objSet61 = properties42.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        atomikosProperties62.setConsoleFileName("");
        atomikosProperties62.setCheckpointInterval((long) 100);
        atomikosProperties62.setConsoleFileName("tm.out");
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.lang.String str78 = properties75.getProperty("");
        properties72.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj84 = properties72.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties81);
        atomikosProperties81.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel87 = atomikosProperties81.getConsoleLogLevel();
        atomikosProperties62.setConsoleLogLevel(atomikosLoggingLevel87);
        boolean boolean89 = atomikosProperties62.isSerialJtaTransactions();
        atomikosProperties62.setConsoleFileCount((int) (short) 100);
        int int92 = atomikosProperties62.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery93 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery93.setRetryInterval((long) 100);
        int int96 = recovery93.getMaxRetries();
        long long97 = recovery93.getDelay();
        java.lang.Object obj98 = properties42.replace((java.lang.Object) atomikosProperties62, (java.lang.Object) long97);
        java.lang.String str99 = atomikosProperties62.getLogBaseDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objSet61);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel87 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel87.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 100 + "'", int92 == 100);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 5 + "'", int96 == 5);
        org.junit.Assert.assertTrue("'" + long97 + "' != '" + 10000L + "'", long97 == 10000L);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = atomikosProperties0.getRecovery();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str13 = atomikosProperties0.getService();
        java.lang.String str14 = atomikosProperties0.getLogBaseName();
        java.lang.String str15 = atomikosProperties0.getService();
        atomikosProperties0.setConsoleFileCount(97);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(recovery10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        int int24 = properties1.size();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        boolean boolean38 = properties26.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        boolean boolean48 = properties26.contains((java.lang.Object) properties40);
        boolean boolean49 = properties40.isEmpty();
        java.util.Properties properties50 = new java.util.Properties(properties40);
        boolean boolean51 = properties1.containsKey((java.lang.Object) properties40);
        java.util.Set<java.lang.Object> objSet52 = properties40.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties40.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        int int63 = properties55.size();
        java.lang.Object obj66 = properties55.setProperty("{}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.lang.Object> objSet67 = properties55.keySet();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.lang.String str75 = properties72.getProperty("");
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj81 = properties69.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties78);
        java.lang.String str82 = atomikosProperties78.getConsoleFileName();
        atomikosProperties78.setMaxTimeout(300000L);
        atomikosProperties78.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj87 = properties40.replace((java.lang.Object) properties55, (java.lang.Object) atomikosProperties78);
        int int88 = atomikosProperties78.getConsoleFileCount();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tm.out" + "'", str82, "tm.out");
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        boolean boolean47 = properties44.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        java.lang.String str49 = properties44.toString();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        java.util.Properties properties53 = new java.util.Properties(properties51);
        java.lang.Object obj56 = properties53.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str57 = properties53.toString();
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        boolean boolean62 = properties59.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet63 = properties59.keySet();
        java.lang.Object obj65 = properties59.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj67 = properties59.remove((java.lang.Object) "");
        boolean boolean68 = properties53.contains((java.lang.Object) "");
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties53.elements();
        java.lang.Object obj70 = properties44.remove((java.lang.Object) properties53);
        java.lang.String str72 = properties44.getProperty("{{}={}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{10=#}" + "'", str57, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.lang.String str22 = properties19.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet23 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties19.entrySet();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties29.entrySet();
        java.lang.Object obj33 = properties19.getOrDefault((java.lang.Object) properties26, (java.lang.Object) objEntrySet32);
        java.util.Set<java.lang.Object> objSet34 = properties26.keySet();
        java.lang.Object obj35 = properties1.get((java.lang.Object) objSet34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str37 = atomikosProperties36.getLogBaseDir();
        java.lang.String str38 = atomikosProperties36.getLogBaseDir();
        long long39 = atomikosProperties36.getCheckpointInterval();
        atomikosProperties36.setTransactionManagerUniqueName("");
        atomikosProperties36.setOutputDir("{{}=}");
        java.lang.Object obj44 = properties1.get((java.lang.Object) "{{}=}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setCheckpointInterval((long) (byte) -1);
        atomikosProperties45.setConsoleFileName("");
        java.lang.String str50 = atomikosProperties45.getOutputDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery51 = atomikosProperties45.getRecovery();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties53.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.keys();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.lang.String str61 = properties58.getProperty("hi!");
        boolean boolean63 = properties58.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet64 = properties58.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties65 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int66 = atomikosProperties65.getMaxActives();
        boolean boolean67 = properties58.equals((java.lang.Object) atomikosProperties65);
        atomikosProperties65.setSerialJtaTransactions(false);
        int int70 = atomikosProperties65.getMaxActives();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        boolean boolean73 = properties72.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery74 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int75 = recovery74.getMaxRetries();
        boolean boolean76 = properties72.containsKey((java.lang.Object) recovery74);
        long long77 = recovery74.getRetryInterval();
        java.lang.Object obj78 = properties53.getOrDefault((java.lang.Object) atomikosProperties65, (java.lang.Object) recovery74);
        atomikosProperties65.setDefaultJtaTimeout((long) '4');
        boolean boolean81 = properties1.remove((java.lang.Object) atomikosProperties45, (java.lang.Object) '4');
        java.lang.String str82 = atomikosProperties45.getConsoleFileName();
        atomikosProperties45.setConsoleFileCount(5);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 500L + "'", long39 == 500L);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(recovery51);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 50 + "'", int66 == 50);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 50 + "'", int70 == 50);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 5 + "'", int75 == 5);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 10000L + "'", long77 == 10000L);
        org.junit.Assert.assertNotNull(obj78);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        boolean boolean11 = properties9.isEmpty();
        java.util.Set<java.lang.String> strSet12 = properties9.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties13 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties13.setCheckpointInterval((long) (byte) -1);
        atomikosProperties13.setThreadedTwoPhaseCommit(true);
        java.lang.String str18 = atomikosProperties13.getOutputDir();
        java.util.Properties properties19 = atomikosProperties13.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        java.lang.String str29 = atomikosProperties20.getConsoleFileName();
        java.lang.String str30 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setDefaultJtaTimeout(0L);
        java.lang.Object obj33 = properties9.putIfAbsent((java.lang.Object) atomikosProperties13, (java.lang.Object) atomikosProperties20);
        java.lang.String str35 = properties9.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties9.keys();
        boolean boolean37 = properties1.contains((java.lang.Object) properties9);
        java.util.Properties properties38 = new java.util.Properties(properties1);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        boolean boolean42 = properties40.isEmpty();
        java.util.Set<java.lang.String> strSet43 = properties40.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.lang.String str49 = atomikosProperties44.getOutputDir();
        java.util.Properties properties50 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        atomikosProperties51.setSerialJtaTransactions(false);
        atomikosProperties51.setOutputDir("");
        java.lang.String str60 = atomikosProperties51.getConsoleFileName();
        java.lang.String str61 = atomikosProperties51.getLogBaseName();
        atomikosProperties51.setDefaultJtaTimeout(0L);
        java.lang.Object obj64 = properties40.putIfAbsent((java.lang.Object) atomikosProperties44, (java.lang.Object) atomikosProperties51);
        java.lang.String str66 = properties40.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties40.keys();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        boolean boolean72 = properties69.containsKey((java.lang.Object) 10.0f);
        java.lang.String str74 = properties69.getProperty("hi!");
        java.util.Set<java.lang.String> strSet75 = properties69.stringPropertyNames();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        boolean boolean78 = properties77.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = properties77.entrySet();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Object obj82 = properties77.replace((java.lang.Object) "hi!", obj81);
        boolean boolean84 = properties77.equals((java.lang.Object) 1.0f);
        java.lang.String str86 = properties77.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery87 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery87.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int90 = recovery87.getMaxRetries();
        int int91 = recovery87.getMaxRetries();
        java.lang.Object obj92 = properties77.get((java.lang.Object) recovery87);
        java.lang.Object obj93 = properties40.putIfAbsent((java.lang.Object) strSet75, (java.lang.Object) recovery87);
        long long94 = recovery87.getDelay();
        long long95 = recovery87.getDelay();
        recovery87.setDelay((long) 19);
        java.lang.Object obj98 = properties38.remove((java.lang.Object) recovery87);
        int int99 = recovery87.getMaxRetries();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "tmlog" + "'", str30, "tmlog");
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(properties50);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tm.out" + "'", str60, "tm.out");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 5 + "'", int90 == 5);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 5 + "'", int91 == 5);
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10000L + "'", long94 == 10000L);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 10000L + "'", long95 == 10000L);
        org.junit.Assert.assertNull(obj98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 5 + "'", int99 == 5);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        long long5 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setLogBaseDir("hi!");
        boolean boolean10 = atomikosProperties0.isForceShutdownOnVmExit();
        int int11 = atomikosProperties0.getConsoleFileCount();
        int int12 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        java.lang.String str14 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str15 = atomikosProperties0.getService();
        java.lang.String str16 = atomikosProperties0.getOutputDir();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "{10=#}" + "'", str14, "{10=#}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        long long8 = recovery0.getDelay();
        recovery0.setDelay((long) (short) 10);
        long long11 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) -1);
        int int14 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) '4');
        recovery0.setDelay(52L);
        recovery0.setMaxRetries((int) (short) 0);
        recovery0.setRetryInterval(0L);
        long long23 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long24 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 100L + "'", long23 == 100L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 52L + "'", long24 == 52L);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery53.setMaxRetries((-1));
        long long56 = recovery53.getRetryInterval();
        java.lang.Object obj57 = properties1.replace((java.lang.Object) 5, (java.lang.Object) long56);
        java.lang.Object obj58 = properties1.clone();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.lang.String str66 = properties63.getProperty("");
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        boolean boolean71 = properties70.isEmpty();
        boolean boolean72 = properties60.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean71);
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        boolean boolean75 = properties74.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery76 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int77 = recovery76.getMaxRetries();
        boolean boolean78 = properties74.containsKey((java.lang.Object) recovery76);
        properties74.clear();
        java.util.Properties properties80 = new java.util.Properties(properties74);
        int int81 = properties74.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setCheckpointInterval((long) (byte) -1);
        atomikosProperties82.setConsoleFileName("");
        java.lang.String str87 = atomikosProperties82.getLogBaseName();
        long long88 = atomikosProperties82.getCheckpointInterval();
        atomikosProperties82.setAllowSubTransactions(false);
        long long91 = atomikosProperties82.getCheckpointInterval();
        java.lang.Object obj92 = properties74.remove((java.lang.Object) long91);
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties74);
        java.lang.Object obj94 = properties1.get((java.lang.Object) properties60);
        java.lang.Object obj95 = properties1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 5 + "'", int77 == 5);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tmlog" + "'", str87, "tmlog");
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + (-1L) + "'", long88 == (-1L));
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + (-1L) + "'", long91 == (-1L));
        org.junit.Assert.assertNull(obj92);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(obj95);
        org.junit.Assert.assertEquals(obj95.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj95), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj95), "{}");
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties0.getConsoleLogLevel();
        int int17 = atomikosProperties0.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean21 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setLogBaseDir("{{}=false}");
        atomikosProperties0.setConsoleFileCount(32);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertNotNull(recovery18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int16 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        int int19 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 50 + "'", int16 == 50);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.String str5 = properties1.toString();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties7.entrySet();
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Object obj12 = properties7.replace((java.lang.Object) "hi!", obj11);
        boolean boolean14 = properties7.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties7.keys();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        properties17.clear();
        int int31 = properties17.size();
        java.util.Set<java.lang.Object> objSet32 = properties17.keySet();
        java.lang.Object obj33 = properties1.putIfAbsent((java.lang.Object) properties7, (java.lang.Object) properties17);
        java.util.Properties properties34 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        java.lang.String str40 = atomikosProperties35.getOutputDir();
        java.util.Properties properties41 = atomikosProperties35.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery42 = atomikosProperties35.getRecovery();
        atomikosProperties35.setService("hi!");
        atomikosProperties35.setLogBaseDir("{10=#}");
        atomikosProperties35.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        atomikosProperties49.setThreadedTwoPhaseCommit(true);
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean56 = atomikosProperties49.isEnableLogging();
        long long57 = atomikosProperties49.getCheckpointInterval();
        atomikosProperties49.setForceShutdownOnVmExit(false);
        atomikosProperties49.setConsoleFileName("tmlog");
        java.lang.Object obj62 = properties1.put((java.lang.Object) false, (java.lang.Object) "tmlog");
        java.util.Properties properties63 = new java.util.Properties(properties1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "{}" + "'", str5, "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(objEntrySet9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(objSet32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(recovery42);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertNull(obj62);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        recovery0.setRetryInterval(300000L);
        long long9 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setMaxTimeout((long) 'a');
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        java.lang.String str14 = atomikosProperties0.getService();
        long long15 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setAllowSubTransactions(false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setOutputDir("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int13 = atomikosProperties12.getMaxActives();
        java.lang.String str14 = atomikosProperties12.getTransactionManagerUniqueName();
        boolean boolean15 = atomikosProperties12.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setOutputDir("");
        java.lang.String str25 = atomikosProperties16.getConsoleFileName();
        java.lang.String str26 = atomikosProperties16.getLogBaseName();
        atomikosProperties16.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties16.getConsoleLogLevel();
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel29);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel29);
        java.lang.String str32 = atomikosProperties0.getService();
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setService("{tm.out=hi!}");
        java.lang.String str37 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tmlog" + "'", str26, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties1.entrySet();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties11.entrySet();
        java.lang.Object obj15 = properties1.getOrDefault((java.lang.Object) properties8, (java.lang.Object) objEntrySet14);
        properties8.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties8.entrySet();
        java.util.Set<java.lang.Object> objSet18 = properties8.keySet();
        java.io.Reader reader19 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.load(reader19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
        org.junit.Assert.assertNotNull(objEntrySet17);
        org.junit.Assert.assertNotNull(objSet18);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        properties25.clear();
        properties25.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration28);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration10 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(false);
        boolean boolean16 = atomikosProperties11.isForceShutdownOnVmExit();
        java.lang.Object obj17 = properties4.get((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str19 = atomikosProperties18.getLogBaseDir();
        atomikosProperties18.setLogBaseDir("");
        java.lang.String str22 = atomikosProperties18.getService();
        boolean boolean23 = atomikosProperties18.isEnableLogging();
        boolean boolean24 = atomikosProperties18.isThreadedTwoPhaseCommit();
        atomikosProperties18.setService("hi!");
        boolean boolean27 = properties4.equals((java.lang.Object) atomikosProperties18);
        atomikosProperties18.setForceShutdownOnVmExit(false);
        atomikosProperties18.setMaxTimeout(0L);
        atomikosProperties18.setService("{tm.out=hi!}");
        java.lang.String str34 = atomikosProperties18.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str36 = atomikosProperties35.getLogBaseDir();
        java.lang.String str37 = atomikosProperties35.getLogBaseDir();
        boolean boolean38 = atomikosProperties35.isAllowSubTransactions();
        boolean boolean39 = atomikosProperties35.isSerialJtaTransactions();
        atomikosProperties35.setService("");
        atomikosProperties35.setConsoleFileName("hi!");
        java.lang.String str44 = atomikosProperties35.getLogBaseName();
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel47 = atomikosProperties35.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel47);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = atomikosProperties18.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tmlog" + "'", str44, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel47 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel47.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery49);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = new java.util.Properties();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.lang.String str44 = properties41.getProperty("");
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        boolean boolean49 = properties48.isEmpty();
        boolean boolean50 = properties38.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean49);
        boolean boolean51 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties38.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setConsoleFileName("");
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        long long59 = atomikosProperties53.getCheckpointInterval();
        java.lang.String str60 = atomikosProperties53.getLogBaseDir();
        atomikosProperties53.setEnableLogging(true);
        java.lang.Object obj63 = properties36.putIfAbsent((java.lang.Object) objEnumeration52, (java.lang.Object) atomikosProperties53);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        boolean boolean66 = properties65.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int68 = recovery67.getMaxRetries();
        boolean boolean69 = properties65.containsKey((java.lang.Object) recovery67);
        recovery67.setRetryInterval((long) (short) -1);
        recovery67.setDelay(10L);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        boolean boolean76 = properties75.isEmpty();
        java.lang.Object obj77 = properties36.getOrDefault((java.lang.Object) recovery67, (java.lang.Object) properties75);
        java.util.Properties properties78 = new java.util.Properties(properties36);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.util.Properties properties80 = new java.util.Properties(properties0);
        properties0.clear();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 5 + "'", int68 == 5);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(obj77);
        org.junit.Assert.assertEquals(obj77.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj77), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj77), "{}");
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties10.getRecovery();
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties10.getOutputDir();
        java.lang.Object obj18 = properties1.get((java.lang.Object) atomikosProperties10);
        atomikosProperties10.setLogBaseName("{}");
        java.lang.String str21 = atomikosProperties10.getTransactionManagerUniqueName();
        java.lang.String str22 = atomikosProperties10.getService();
        boolean boolean23 = atomikosProperties10.isSerialJtaTransactions();
        atomikosProperties10.setMaxActives(0);
        long long26 = atomikosProperties10.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 10000L + "'", long26 == 10000L);
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<?> wildcardEnumeration14 = properties6.propertyNames();
        boolean boolean15 = properties1.containsValue((java.lang.Object) wildcardEnumeration14);
        java.lang.String str16 = properties1.toString();
        java.lang.String str18 = properties1.getProperty("");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        atomikosProperties6.setSerialJtaTransactions(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        boolean boolean26 = properties14.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        boolean boolean36 = properties14.contains((java.lang.Object) properties28);
        java.util.Set<java.lang.Object> objSet37 = properties28.keySet();
        java.lang.Object obj38 = properties1.getOrDefault((java.lang.Object) true, (java.lang.Object) properties28);
        properties28.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery40 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int41 = recovery40.getMaxRetries();
        recovery40.setForgetOrphanedLogEntriesDelay((-1L));
        recovery40.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery40.setForgetOrphanedLogEntriesDelay(100L);
        recovery40.setForgetOrphanedLogEntriesDelay(35L);
        boolean boolean50 = properties28.containsValue((java.lang.Object) 35L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 5 + "'", int41 == 5);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setRetryInterval((long) 100);
        int int14 = recovery11.getMaxRetries();
        long long15 = recovery11.getDelay();
        long long16 = recovery11.getDelay();
        recovery11.setForgetOrphanedLogEntriesDelay(0L);
        long long19 = recovery11.getRetryInterval();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean24 = properties21.contains((java.lang.Object) 1L);
        int int25 = properties21.size();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        java.lang.String str30 = properties27.getProperty("hi!");
        boolean boolean32 = properties27.contains((java.lang.Object) 10.0f);
        boolean boolean33 = properties27.isEmpty();
        java.util.Set<java.lang.String> strSet34 = properties27.stringPropertyNames();
        java.lang.Object obj35 = properties21.get((java.lang.Object) strSet34);
        java.util.Collection<java.lang.Object> objCollection36 = properties21.values();
        java.lang.Object obj37 = properties9.getOrDefault((java.lang.Object) recovery11, (java.lang.Object) objCollection36);
        java.util.Properties properties38 = new java.util.Properties(properties9);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        boolean boolean51 = properties50.isEmpty();
        boolean boolean52 = properties40.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean51);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        boolean boolean62 = properties40.contains((java.lang.Object) properties54);
        java.util.Set<java.lang.Object> objSet63 = properties54.keySet();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties74.isForceShutdownOnVmExit();
        java.util.Properties properties81 = atomikosProperties74.asProperties();
        boolean boolean82 = properties54.containsValue((java.lang.Object) atomikosProperties74);
        boolean boolean83 = properties9.equals((java.lang.Object) properties54);
        boolean boolean84 = properties9.isEmpty();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setService("hi!");
        int int51 = atomikosProperties40.getConsoleFileCount();
        long long52 = atomikosProperties40.getCheckpointInterval();
        atomikosProperties40.setOutputDir("");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties40.getConsoleLogLevel();
        java.util.Properties properties56 = atomikosProperties40.asProperties();
        boolean boolean57 = atomikosProperties40.isEnableLogging();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setCheckpointInterval((long) '#');
        atomikosProperties0.setMaxActives((int) (short) 100);
        long long18 = atomikosProperties0.getCheckpointInterval();
        boolean boolean19 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35L + "'", long18 == 35L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int5 = atomikosProperties0.getConsoleFileCount();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        long long7 = atomikosProperties0.getMaxTimeout();
        boolean boolean8 = atomikosProperties0.isSerialJtaTransactions();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        int int10 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        int int17 = atomikosProperties10.getMaxActives();
        int int18 = atomikosProperties10.getMaxActives();
        atomikosProperties10.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long21 = atomikosProperties10.getDefaultJtaTimeout();
        java.lang.String str22 = atomikosProperties10.getOutputDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 50 + "'", int18 == 50);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str14 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties0.getRecovery();
        recovery18.setDelay((long) (byte) 0);
        recovery18.setRetryInterval((long) '#');
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.lang.String str31 = properties28.getProperty("");
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet35 = properties33.entrySet();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Object obj38 = properties33.replace((java.lang.Object) "hi!", obj37);
        boolean boolean40 = properties33.equals((java.lang.Object) 1.0f);
        boolean boolean41 = properties28.containsKey((java.lang.Object) boolean40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties28.keys();
        boolean boolean43 = properties25.containsValue((java.lang.Object) objEnumeration42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties25.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj58 = properties46.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties55);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties55.getConsoleLogLevel();
        atomikosProperties55.setConsoleFileLimit((int) '4');
        int int62 = atomikosProperties55.getConsoleFileLimit();
        boolean boolean63 = properties25.contains((java.lang.Object) atomikosProperties55);
        java.lang.Object obj66 = properties25.setProperty("hi!", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int67 = properties25.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEntrySet35);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 19 + "'", int67 == 19);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        int int10 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setConsoleFileLimit((int) (byte) 10);
        java.lang.String str13 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setConsoleFileName("{=}");
        atomikosProperties0.setLogBaseDir("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties20.getConsoleLogLevel();
        atomikosProperties5.setConsoleLogLevel(atomikosLoggingLevel24);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel24);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties29 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties29);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int44 = atomikosProperties43.getMaxActives();
        java.lang.String str45 = atomikosProperties43.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties43.getConsoleLogLevel();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        atomikosProperties57.setSerialJtaTransactions(false);
        int int63 = atomikosProperties57.getConsoleFileCount();
        int int64 = atomikosProperties57.getConsoleFileLimit();
        java.lang.String str65 = atomikosProperties57.getLogBaseName();
        atomikosProperties57.setService("tmlog");
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        java.lang.String str72 = properties69.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet73 = properties69.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet74 = properties69.entrySet();
        boolean boolean75 = properties42.replace((java.lang.Object) atomikosProperties43, (java.lang.Object) "tmlog", (java.lang.Object) properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties42.elements();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 50 + "'", int44 == 50);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(objSet73);
        org.junit.Assert.assertNotNull(objEntrySet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objEnumeration76);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj9 = null;
        boolean boolean10 = properties1.equals(obj9);
        java.lang.String str11 = properties1.toString();
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        java.io.Reader reader13 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Set<java.lang.String> strSet21 = properties1.stringPropertyNames();
        java.lang.String str22 = properties1.toString();
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setOutputDir("");
        java.lang.String str33 = atomikosProperties24.getConsoleFileName();
        java.lang.String str34 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties37 = atomikosProperties24.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setOutputDir("");
        java.lang.String str47 = atomikosProperties38.getConsoleFileName();
        java.lang.String str48 = atomikosProperties38.getLogBaseName();
        atomikosProperties38.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties51 = atomikosProperties38.asProperties();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        boolean boolean55 = properties53.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties53.keys();
        boolean boolean57 = properties51.containsValue((java.lang.Object) properties53);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        java.lang.String str62 = properties59.getProperty("hi!");
        java.util.Set<java.lang.String> strSet63 = properties59.stringPropertyNames();
        java.lang.Object obj64 = properties59.clone();
        boolean boolean65 = properties53.containsKey(obj64);
        java.lang.Object obj66 = properties37.remove((java.lang.Object) properties53);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery70 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int71 = recovery70.getMaxRetries();
        boolean boolean72 = properties68.containsKey((java.lang.Object) recovery70);
        recovery70.setRetryInterval((long) (short) -1);
        recovery70.setRetryInterval((long) 0);
        recovery70.setMaxRetries((int) (byte) 10);
        long long79 = recovery70.getDelay();
        recovery70.setRetryInterval((long) '4');
        java.util.Properties properties82 = null;
        java.util.Properties properties83 = new java.util.Properties(properties82);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties83.elements();
        java.util.Properties properties85 = null;
        java.util.Properties properties86 = new java.util.Properties(properties85);
        java.util.Enumeration<java.lang.Object> objEnumeration87 = properties86.elements();
        java.lang.String str89 = properties86.getProperty("");
        properties83.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties86);
        boolean boolean92 = properties83.contains((java.lang.Object) 0);
        int int93 = properties83.size();
        java.lang.Object obj94 = properties37.replace((java.lang.Object) '4', (java.lang.Object) properties83);
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties37.keys();
        boolean boolean96 = properties1.containsKey((java.lang.Object) properties37);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "{}" + "'", str22, "{}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNotNull(properties37);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertNotNull(properties51);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(obj64);
        org.junit.Assert.assertEquals(obj64.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj64), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj64), "{}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 5 + "'", int71 == 5);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 10000L + "'", long79 == 10000L);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNotNull(objEnumeration87);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(objEnumeration95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream43 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties42.storeToXML(outputStream43, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=0}", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean15 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setMaxActives(10);
        java.util.Properties properties18 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertNotNull(properties18);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Set<java.lang.Object> objSet53 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties54.getRecovery();
        atomikosProperties54.setEnableLogging(false);
        long long59 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties54.setLogBaseDir("hi!");
        atomikosProperties54.setTransactionManagerUniqueName("hi!");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.lang.Object obj68 = properties37.remove((java.lang.Object) atomikosProperties54);
        long long69 = atomikosProperties54.getDefaultJtaTimeout();
        long long70 = atomikosProperties54.getMaxTimeout();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 10000L + "'", long69 == 10000L);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 300000L + "'", long70 == 300000L);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        int int9 = properties1.size();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean14 = properties11.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet15 = properties11.keySet();
        java.lang.Object obj18 = properties11.setProperty("", "");
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.lang.String str23 = properties20.getProperty("hi!");
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        boolean boolean30 = properties26.containsKey((java.lang.Object) recovery28);
        recovery28.setRetryInterval((long) (short) -1);
        recovery28.setRetryInterval((long) 0);
        recovery28.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass37 = recovery28.getClass();
        java.lang.Object obj38 = properties20.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery28);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        java.lang.String str43 = properties40.getProperty("hi!");
        java.util.Set<java.lang.String> strSet44 = properties40.stringPropertyNames();
        java.lang.Object obj45 = new java.lang.Object();
        boolean boolean46 = properties11.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties40, obj45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getLogBaseDir();
        java.lang.Class<?> wildcardClass49 = atomikosProperties47.getClass();
        boolean boolean50 = properties1.remove(obj45, (java.lang.Object) wildcardClass49);
        java.lang.String str51 = properties1.toString();
        java.util.Properties properties52 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setConsoleFileName("");
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        long long59 = atomikosProperties53.getCheckpointInterval();
        atomikosProperties53.setForceShutdownOnVmExit(false);
        atomikosProperties53.setTransactionManagerUniqueName("tmlog");
        atomikosProperties53.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery66 = atomikosProperties53.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = atomikosProperties53.getRecovery();
        java.lang.Object obj68 = properties1.remove((java.lang.Object) atomikosProperties53);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties73.elements();
        java.lang.String str76 = properties73.getProperty("");
        properties70.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties73);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties79 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties79.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj82 = properties70.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties79);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel83 = atomikosProperties79.getConsoleLogLevel();
        boolean boolean84 = atomikosProperties79.isForceShutdownOnVmExit();
        java.lang.String str85 = atomikosProperties79.getService();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = properties1.get((java.lang.Object) str85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objSet15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{}" + "'", str51, "{}");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + (-1L) + "'", long59 == (-1L));
        org.junit.Assert.assertNotNull(recovery66);
        org.junit.Assert.assertNotNull(recovery67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel83 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel83.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        boolean boolean17 = properties15.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties15.keys();
        boolean boolean19 = properties13.containsValue((java.lang.Object) properties15);
        int int20 = properties15.size();
        java.util.Set<java.lang.Object> objSet21 = properties15.keySet();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties26.keys();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties36.elements();
        java.lang.String str39 = properties36.getProperty("");
        properties33.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties36.keys();
        java.lang.String str42 = properties36.toString();
        java.util.Set<java.lang.Object> objSet43 = properties36.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int45 = atomikosProperties44.getMaxActives();
        atomikosProperties44.setService("");
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        int int50 = atomikosProperties44.getConsoleFileLimit();
        java.lang.Object obj51 = properties36.get((java.lang.Object) int50);
        java.lang.Object obj52 = properties15.getOrDefault((java.lang.Object) properties26, (java.lang.Object) int50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.lang.String str58 = atomikosProperties53.getOutputDir();
        java.lang.String str59 = atomikosProperties53.getTransactionManagerUniqueName();
        int int60 = atomikosProperties53.getConsoleFileCount();
        java.lang.String str61 = atomikosProperties53.getLogBaseDir();
        java.lang.String str62 = atomikosProperties53.getConsoleFileName();
        boolean boolean63 = atomikosProperties53.isEnableLogging();
        java.lang.Object obj64 = properties15.remove((java.lang.Object) boolean63);
        java.lang.Object obj65 = null;
        boolean boolean66 = properties15.equals(obj65);
        java.util.Properties properties67 = new java.util.Properties();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.lang.String str75 = properties72.getProperty("");
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        boolean boolean80 = properties79.isEmpty();
        boolean boolean81 = properties69.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean80);
        boolean boolean82 = properties69.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration83 = properties69.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setCheckpointInterval((long) (byte) -1);
        atomikosProperties84.setConsoleFileName("");
        java.lang.String str89 = atomikosProperties84.getLogBaseName();
        long long90 = atomikosProperties84.getCheckpointInterval();
        java.lang.String str91 = atomikosProperties84.getLogBaseDir();
        atomikosProperties84.setEnableLogging(true);
        java.lang.Object obj94 = properties67.putIfAbsent((java.lang.Object) objEnumeration83, (java.lang.Object) atomikosProperties84);
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties67.keys();
        boolean boolean96 = properties15.containsValue((java.lang.Object) properties67);
        java.io.OutputStream outputStream97 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties67.save(outputStream97, "{{}=tmlog}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "{}" + "'", str42, "{}");
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + obj52 + "' != '" + (-1) + "'", obj52, (-1));
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tm.out" + "'", str62, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(objEnumeration83);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "tmlog" + "'", str89, "tmlog");
        org.junit.Assert.assertTrue("'" + long90 + "' != '" + (-1L) + "'", long90 == (-1L));
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(objEnumeration95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        atomikosProperties6.setSerialJtaTransactions(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        boolean boolean26 = properties14.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        boolean boolean36 = properties14.contains((java.lang.Object) properties28);
        java.util.Set<java.lang.Object> objSet37 = properties28.keySet();
        java.lang.Object obj38 = properties1.getOrDefault((java.lang.Object) true, (java.lang.Object) properties28);
        properties28.clear();
        java.lang.String str41 = properties28.getProperty("hi!");
        java.util.Properties properties42 = new java.util.Properties(properties28);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setEnableLogging(false);
        boolean boolean15 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxTimeout((-1L));
        long long18 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setMaxActives(100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        java.lang.Object obj14 = properties11.setProperty("tm.out", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = atomikosProperties15.getRecovery();
        atomikosProperties15.setEnableLogging(false);
        long long20 = atomikosProperties15.getMaxTimeout();
        atomikosProperties15.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties15.setLogBaseDir("hi!");
        boolean boolean25 = atomikosProperties15.isForceShutdownOnVmExit();
        atomikosProperties15.setDefaultJtaTimeout((long) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties15.getRecovery();
        boolean boolean29 = properties11.contains((java.lang.Object) atomikosProperties15);
        java.util.Set<java.lang.String> strSet30 = properties11.stringPropertyNames();
        boolean boolean31 = properties11.isEmpty();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(recovery17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration21 = properties20.propertyNames();
        java.util.Set<java.lang.String> strSet22 = properties20.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = null;
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel14);
        java.lang.String str16 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setLogBaseName("{}");
        atomikosProperties0.setMaxTimeout((long) (byte) 0);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        long long23 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tm.out" + "'", str16, "tm.out");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setConsoleFileLimit((int) (short) 10);
        boolean boolean10 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        int int7 = atomikosProperties0.getConsoleFileCount();
        java.lang.String str8 = atomikosProperties0.getLogBaseDir();
        long long9 = atomikosProperties0.getDefaultJtaTimeout();
        int int10 = atomikosProperties0.getMaxActives();
        int int11 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setMaxTimeout((long) (short) 1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.lang.String str16 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{{}=false}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxActives((int) (short) 0);
        boolean boolean6 = atomikosProperties0.isThreadedTwoPhaseCommit();
        boolean boolean7 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setConsoleFileCount((int) 'a');
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj14 = properties2.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties11.setConsoleFileLimit((int) '4');
        atomikosProperties11.setForceShutdownOnVmExit(true);
        int int20 = atomikosProperties11.getMaxActives();
        boolean boolean21 = properties0.contains((java.lang.Object) int20);
        int int22 = properties0.size();
        java.util.Set<java.lang.Object> objSet23 = properties0.keySet();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        boolean boolean28 = properties25.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Enumeration<?> wildcardEnumeration38 = properties30.propertyNames();
        boolean boolean39 = properties25.containsValue((java.lang.Object) wildcardEnumeration38);
        java.lang.String str40 = properties25.toString();
        java.util.Enumeration<?> wildcardEnumeration41 = properties25.propertyNames();
        boolean boolean42 = properties0.containsValue((java.lang.Object) wildcardEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(wildcardEnumeration38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertNotNull(wildcardEnumeration41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setOutputDir("tmlog");
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        java.lang.Class<?> wildcardClass13 = atomikosProperties0.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        java.lang.String str10 = atomikosProperties0.getConsoleFileName();
        boolean boolean11 = atomikosProperties0.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tm.out" + "'", str10, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel8 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel9 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel8 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel8.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel9 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel9.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties12);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery53.setMaxRetries((-1));
        long long56 = recovery53.getRetryInterval();
        java.lang.Object obj57 = properties1.replace((java.lang.Object) 5, (java.lang.Object) long56);
        java.lang.Object obj58 = properties1.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery60.setMaxRetries((-1));
        java.lang.Object obj63 = properties1.remove((java.lang.Object) (-1));
        java.lang.String str64 = properties1.toString();
        java.util.Collection<java.lang.Object> objCollection65 = properties1.values();
        java.lang.Object obj66 = null;
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setCheckpointInterval((long) (byte) -1);
        atomikosProperties67.setConsoleFileName("");
        java.lang.String str72 = atomikosProperties67.getLogBaseName();
        long long73 = atomikosProperties67.getCheckpointInterval();
        atomikosProperties67.setForceShutdownOnVmExit(false);
        int int76 = atomikosProperties67.getConsoleFileLimit();
        int int77 = atomikosProperties67.getConsoleFileCount();
        atomikosProperties67.setConsoleFileLimit((int) (byte) 10);
        java.lang.String str80 = atomikosProperties67.getLogBaseDir();
        int int81 = atomikosProperties67.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel82 = atomikosProperties67.getConsoleLogLevel();
        atomikosProperties67.setConsoleFileCount(100);
        boolean boolean85 = atomikosProperties67.isAllowSubTransactions();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj86 = properties1.putIfAbsent(obj66, (java.lang.Object) atomikosProperties67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{}" + "'", str64, "{}");
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel82 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel82.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Properties properties21 = new java.util.Properties(properties1);
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        boolean boolean24 = properties23.isEmpty();
        java.lang.String str26 = properties23.getProperty("hi!");
        boolean boolean28 = properties23.contains((java.lang.Object) 10.0f);
        java.util.Properties properties29 = new java.util.Properties();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        boolean boolean43 = properties31.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean42);
        boolean boolean44 = properties31.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties31.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setConsoleFileName("");
        java.lang.String str51 = atomikosProperties46.getLogBaseName();
        long long52 = atomikosProperties46.getCheckpointInterval();
        java.lang.String str53 = atomikosProperties46.getLogBaseDir();
        atomikosProperties46.setEnableLogging(true);
        java.lang.Object obj56 = properties29.putIfAbsent((java.lang.Object) objEnumeration45, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int61 = recovery60.getMaxRetries();
        boolean boolean62 = properties58.containsKey((java.lang.Object) recovery60);
        recovery60.setRetryInterval((long) (short) -1);
        recovery60.setDelay(10L);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        java.lang.Object obj70 = properties29.getOrDefault((java.lang.Object) recovery60, (java.lang.Object) properties68);
        java.lang.Object obj71 = properties23.remove((java.lang.Object) recovery60);
        recovery60.setRetryInterval((long) (short) 1);
        boolean boolean74 = properties1.equals((java.lang.Object) recovery60);
        java.util.Collection<java.lang.Object> objCollection75 = properties1.values();
        java.util.Collection<java.lang.Object> objCollection76 = properties1.values();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "tmlog" + "'", str51, "tmlog");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-1L) + "'", long52 == (-1L));
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(obj70);
        org.junit.Assert.assertEquals(obj70.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj70), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj70), "{}");
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(objCollection75);
        org.junit.Assert.assertNotNull(objCollection76);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.Object obj29 = properties25.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        boolean boolean41 = properties37.containsKey((java.lang.Object) recovery39);
        recovery39.setRetryInterval((long) (short) -1);
        recovery39.setRetryInterval((long) 0);
        recovery39.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass48 = recovery39.getClass();
        boolean boolean49 = properties32.contains((java.lang.Object) recovery39);
        boolean boolean50 = properties25.equals((java.lang.Object) boolean49);
        int int51 = properties25.size();
        boolean boolean52 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties25.keys();
        java.util.Enumeration<?> wildcardEnumeration54 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setSerialJtaTransactions(false);
        atomikosProperties55.setOutputDir("");
        java.lang.String str64 = atomikosProperties55.getConsoleFileName();
        java.lang.String str65 = atomikosProperties55.getLogBaseName();
        atomikosProperties55.setConsoleFileCount((int) (byte) -1);
        atomikosProperties55.setForceShutdownOnVmExit(false);
        atomikosProperties55.setAllowSubTransactions(true);
        boolean boolean72 = properties25.containsKey((java.lang.Object) atomikosProperties55);
        java.lang.String str73 = atomikosProperties55.getLogBaseDir();
        atomikosProperties55.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 19 + "'", int51 == 19);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(wildcardEnumeration54);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.lang.String str44 = properties41.getProperty("");
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj50 = properties38.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setConsoleFileName("");
        java.lang.Object obj53 = properties1.get((java.lang.Object) atomikosProperties47);
        atomikosProperties47.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties47.setService("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration10 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getLogBaseDir();
        atomikosProperties11.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        java.lang.String str17 = atomikosProperties15.getLogBaseDir();
        boolean boolean18 = atomikosProperties15.isAllowSubTransactions();
        boolean boolean19 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setService("");
        int int22 = atomikosProperties15.getConsoleFileCount();
        java.lang.String str23 = atomikosProperties15.getTransactionManagerUniqueName();
        java.lang.Object obj24 = properties4.getOrDefault((java.lang.Object) atomikosProperties11, (java.lang.Object) str23);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.lang.Object obj34 = properties31.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet35 = properties31.keySet();
        java.lang.Object obj36 = properties4.putIfAbsent((java.lang.Object) objEnumeration27, (java.lang.Object) properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.lang.String str44 = properties41.getProperty("");
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj50 = properties38.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setSerialJtaTransactions(false);
        boolean boolean53 = atomikosProperties47.isForceShutdownOnVmExit();
        java.lang.String str54 = atomikosProperties47.getService();
        atomikosProperties47.setConsoleFileLimit(0);
        boolean boolean57 = properties31.containsKey((java.lang.Object) atomikosProperties47);
        java.io.Reader reader58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties31.load(reader58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setAllowSubTransactions(true);
        int int7 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setMaxActives(50);
        int int10 = atomikosProperties0.getMaxActives();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) 5);
        atomikosProperties0.setConsoleFileLimit((int) 'a');
        atomikosProperties0.setLogBaseName("{10=#}");
        atomikosProperties0.setDefaultJtaTimeout((long) '#');
        atomikosProperties0.setDefaultJtaTimeout((long) '4');
        atomikosProperties0.setConsoleFileCount((int) (short) -1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setMaxTimeout(300000L);
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setAllowSubTransactions(false);
        int int14 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setEnableLogging(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream42, "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isEnableLogging();
        java.lang.String str15 = atomikosProperties8.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = atomikosProperties8.getRecovery();
        long long17 = recovery16.getForgetOrphanedLogEntriesDelay();
        long long18 = recovery16.getRetryInterval();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNotNull(recovery16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 86400000L + "'", long17 == 86400000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setConsoleFileName("tm.out");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj22 = properties10.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties19.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        boolean boolean27 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setConsoleFileName("{}");
        long long30 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 300000L + "'", long30 == 300000L);
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        boolean boolean5 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setConsoleFileName("");
        java.lang.String str11 = atomikosProperties6.getLogBaseName();
        long long12 = atomikosProperties6.getCheckpointInterval();
        java.lang.String str13 = atomikosProperties6.getLogBaseDir();
        atomikosProperties6.setEnableLogging(true);
        long long16 = atomikosProperties6.getDefaultJtaTimeout();
        boolean boolean17 = atomikosProperties6.isSerialJtaTransactions();
        java.lang.String str18 = atomikosProperties6.getOutputDir();
        java.lang.String str19 = atomikosProperties6.getOutputDir();
        java.util.Properties properties20 = atomikosProperties6.asProperties();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        java.lang.String str25 = properties22.getProperty("hi!");
        boolean boolean27 = properties22.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet28 = properties22.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int30 = atomikosProperties29.getMaxActives();
        boolean boolean31 = properties22.equals((java.lang.Object) atomikosProperties29);
        atomikosProperties29.setSerialJtaTransactions(false);
        int int34 = atomikosProperties29.getMaxActives();
        boolean boolean35 = atomikosProperties29.isEnableLogging();
        java.lang.String str36 = atomikosProperties29.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = atomikosProperties29.getRecovery();
        boolean boolean38 = properties1.remove((java.lang.Object) atomikosProperties6, (java.lang.Object) recovery37);
        boolean boolean39 = atomikosProperties6.isSerialJtaTransactions();
        java.util.Properties properties40 = atomikosProperties6.asProperties();
        atomikosProperties6.setTransactionManagerUniqueName("{tm.out=hi!}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 50 + "'", int30 == 50);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 50 + "'", int34 == 50);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tmlog" + "'", str36, "tmlog");
        org.junit.Assert.assertNotNull(recovery37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(properties40);
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        boolean boolean5 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int8 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        long long11 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isEnableLogging();
        java.lang.String str15 = atomikosProperties8.getLogBaseName();
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        atomikosProperties8.setConsoleFileCount(50);
        java.lang.String str20 = atomikosProperties8.getOutputDir();
        boolean boolean21 = atomikosProperties8.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        java.util.Collection<java.lang.Object> objCollection49 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int51 = atomikosProperties50.getMaxActives();
        atomikosProperties50.setMaxTimeout((long) (short) 0);
        boolean boolean54 = properties1.containsKey((java.lang.Object) atomikosProperties50);
        int int55 = properties1.size();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 50 + "'", int51 == 50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<?> wildcardEnumeration10 = properties9.propertyNames();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        int int17 = atomikosProperties10.getConsoleFileLimit();
        java.lang.String str18 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setTransactionManagerUniqueName("tm.out");
        atomikosProperties10.setConsoleFileName("");
        java.util.Properties properties23 = atomikosProperties10.asProperties();
        atomikosProperties10.setConsoleFileCount((int) (byte) -1);
        atomikosProperties10.setSerialJtaTransactions(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertNotNull(properties23);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int5 = atomikosProperties0.getConsoleFileCount();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        long long7 = atomikosProperties0.getMaxTimeout();
        atomikosProperties0.setDefaultJtaTimeout(32L);
        long long10 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 300000L + "'", long7 == 300000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 300000L + "'", long10 == 300000L);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setOutputDir("tmlog");
        boolean boolean17 = atomikosProperties10.isEnableLogging();
        atomikosProperties10.setService("{{}={}}");
        boolean boolean20 = atomikosProperties10.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setConsoleFileCount(0);
        atomikosProperties0.setConsoleFileCount((int) ' ');
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties0.getRecovery();
        int int9 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        boolean boolean37 = atomikosProperties5.isAllowSubTransactions();
        atomikosProperties5.setCheckpointInterval((long) 1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        atomikosProperties5.setConsoleFileLimit(0);
        atomikosProperties5.setForceShutdownOnVmExit(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) 1);
        recovery38.setForgetOrphanedLogEntriesDelay((long) 52);
        recovery38.setMaxRetries(52);
        int int56 = recovery38.getMaxRetries();
        recovery38.setMaxRetries(52);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        java.lang.String str8 = atomikosProperties0.getService();
        atomikosProperties0.setMaxTimeout(97L);
        atomikosProperties0.setCheckpointInterval(300000L);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setEnableLogging(false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        properties1.clear();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        java.lang.String str55 = properties52.getProperty("hi!");
        boolean boolean57 = properties52.contains((java.lang.Object) 10.0f);
        boolean boolean58 = properties52.isEmpty();
        boolean boolean59 = properties1.containsValue((java.lang.Object) properties52);
        java.lang.String str60 = properties1.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "{}" + "'", str60, "{}");
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getConsoleFileName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseName();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setMaxActives((int) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (short) 100);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties49.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj52 = properties40.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties49);
        atomikosProperties49.setSerialJtaTransactions(false);
        boolean boolean55 = atomikosProperties49.isForceShutdownOnVmExit();
        java.util.Properties properties56 = atomikosProperties49.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        atomikosProperties57.setThreadedTwoPhaseCommit(true);
        atomikosProperties57.setSerialJtaTransactions(false);
        java.lang.Object obj64 = properties56.remove((java.lang.Object) false);
        java.util.Enumeration<?> wildcardEnumeration65 = properties56.propertyNames();
        java.util.Set<java.lang.Object> objSet66 = properties56.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setCheckpointInterval((long) (byte) -1);
        atomikosProperties67.setThreadedTwoPhaseCommit(true);
        atomikosProperties67.setSerialJtaTransactions(false);
        java.lang.String str74 = atomikosProperties67.getOutputDir();
        boolean boolean75 = atomikosProperties67.isSerialJtaTransactions();
        java.lang.Object obj76 = properties1.putIfAbsent((java.lang.Object) objSet66, (java.lang.Object) atomikosProperties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery77 = atomikosProperties67.getRecovery();
        recovery77.setForgetOrphanedLogEntriesDelay(52L);
        recovery77.setRetryInterval(1L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(properties56);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(wildcardEnumeration65);
        org.junit.Assert.assertNotNull(objSet66);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(recovery77);
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setEnableLogging(false);
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        long long16 = atomikosProperties0.getCheckpointInterval();
        boolean boolean17 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxActives((int) '#');
        java.lang.String str20 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Set<java.lang.Object> objSet16 = properties1.keySet();
        boolean boolean17 = properties1.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration18 = properties1.propertyNames();
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.lang.String str27 = properties24.getProperty("");
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean32 = properties31.isEmpty();
        boolean boolean33 = properties21.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean32);
        boolean boolean34 = properties21.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties21.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setConsoleFileName("");
        java.lang.String str41 = atomikosProperties36.getLogBaseName();
        long long42 = atomikosProperties36.getCheckpointInterval();
        java.lang.String str43 = atomikosProperties36.getLogBaseDir();
        atomikosProperties36.setEnableLogging(true);
        java.lang.Object obj46 = properties19.putIfAbsent((java.lang.Object) objEnumeration35, (java.lang.Object) atomikosProperties36);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties19.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        java.lang.String str51 = properties19.getProperty("{}", "{tm.out=hi!}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "{tm.out=hi!}" + "'", str51, "{tm.out=hi!}");
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        int int13 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        atomikosProperties10.setMaxActives((int) ' ');
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 100);
        boolean boolean23 = atomikosProperties10.isSerialJtaTransactions();
        long long24 = atomikosProperties10.getMaxTimeout();
        int int25 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setCheckpointInterval(0L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str17 = atomikosProperties10.getOutputDir();
        java.lang.String str18 = atomikosProperties10.getLogBaseName();
        int int19 = atomikosProperties10.getConsoleFileCount();
        atomikosProperties10.setMaxTimeout((long) 18);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.String str10 = properties1.getProperty("{}");
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        boolean boolean14 = properties12.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties12.keys();
        java.util.Collection<java.lang.Object> objCollection16 = properties12.values();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean31 = properties19.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean30);
        boolean boolean32 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        atomikosProperties34.setEnableLogging(true);
        java.lang.Object obj44 = properties17.putIfAbsent((java.lang.Object) objEnumeration33, (java.lang.Object) atomikosProperties34);
        boolean boolean45 = atomikosProperties34.isEnableLogging();
        boolean boolean46 = atomikosProperties34.isEnableLogging();
        boolean boolean47 = properties12.equals((java.lang.Object) atomikosProperties34);
        boolean boolean48 = properties1.containsKey((java.lang.Object) properties12);
        java.lang.String str50 = properties12.getProperty("{10=#}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setConsoleFileName("");
        long long56 = atomikosProperties51.getMaxTimeout();
        java.util.Properties properties57 = atomikosProperties51.asProperties();
        int int58 = atomikosProperties51.getMaxActives();
        atomikosProperties51.setSerialJtaTransactions(true);
        atomikosProperties51.setAllowSubTransactions(true);
        atomikosProperties51.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str65 = atomikosProperties51.getConsoleFileName();
        int int66 = atomikosProperties51.getConsoleFileCount();
        int int67 = atomikosProperties51.getMaxActives();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.lang.String str75 = properties72.getProperty("");
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj81 = properties69.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties78);
        atomikosProperties78.setSerialJtaTransactions(false);
        int int84 = atomikosProperties78.getConsoleFileCount();
        atomikosProperties78.setForceShutdownOnVmExit(false);
        atomikosProperties78.setForceShutdownOnVmExit(false);
        boolean boolean89 = atomikosProperties78.isAllowSubTransactions();
        int int90 = atomikosProperties78.getMaxActives();
        boolean boolean91 = properties12.remove((java.lang.Object) atomikosProperties51, (java.lang.Object) int90);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objCollection16);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 300000L + "'", long56 == 300000L);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 50 + "'", int58 == 50);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 50 + "'", int67 == 50);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        atomikosProperties0.setCheckpointInterval((long) (byte) 1);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        boolean boolean18 = properties17.isEmpty();
        java.util.Collection<java.lang.Object> objCollection19 = properties17.values();
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objCollection19);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.lang.String str6 = properties1.getProperty("hi!");
        java.util.Set<java.lang.String> strSet7 = properties1.stringPropertyNames();
        java.lang.Object obj10 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int12 = atomikosProperties11.getMaxActives();
        java.lang.String str13 = atomikosProperties11.getTransactionManagerUniqueName();
        atomikosProperties11.setConsoleFileCount(0);
        atomikosProperties11.setConsoleFileCount((int) ' ');
        java.lang.String str18 = atomikosProperties11.getLogBaseDir();
        long long19 = atomikosProperties11.getMaxTimeout();
        boolean boolean20 = properties1.containsValue((java.lang.Object) long19);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 50 + "'", int12 == 50);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 300000L + "'", long19 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str4 = properties1.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str6 = atomikosProperties5.getLogBaseDir();
        java.lang.String str7 = atomikosProperties5.getLogBaseDir();
        long long8 = atomikosProperties5.getCheckpointInterval();
        atomikosProperties5.setTransactionManagerUniqueName("");
        java.lang.String str11 = atomikosProperties5.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        long long17 = atomikosProperties12.getMaxTimeout();
        java.util.Properties properties18 = atomikosProperties12.asProperties();
        long long19 = atomikosProperties12.getDefaultJtaTimeout();
        atomikosProperties12.setLogBaseDir("tm.out");
        long long22 = atomikosProperties12.getMaxTimeout();
        java.lang.String str23 = atomikosProperties12.getLogBaseName();
        boolean boolean24 = atomikosProperties12.isSerialJtaTransactions();
        atomikosProperties12.setLogBaseDir("{{}=}");
        atomikosProperties12.setConsoleFileLimit(100);
        java.lang.String str29 = atomikosProperties12.getLogBaseDir();
        java.lang.Object obj30 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) str29);
        java.util.Collection<java.lang.Object> objCollection31 = properties1.values();
        java.io.PrintStream printStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 500L + "'", long8 == 500L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 300000L + "'", long17 == 300000L);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 300000L + "'", long22 == 300000L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tmlog" + "'", str23, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "{{}=}" + "'", str29, "{{}=}");
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(objCollection31);
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isSerialJtaTransactions();
        atomikosProperties8.setDefaultJtaTimeout((long) ' ');
        atomikosProperties8.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties8.setMaxTimeout(0L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        atomikosProperties31.setConsoleFileName("");
        atomikosProperties31.setConsoleFileName("");
        long long38 = atomikosProperties31.getDefaultJtaTimeout();
        atomikosProperties31.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean41 = properties0.containsKey((java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        long long49 = atomikosProperties43.getCheckpointInterval();
        atomikosProperties43.setForceShutdownOnVmExit(false);
        atomikosProperties43.setTransactionManagerUniqueName("tmlog");
        atomikosProperties43.setLogBaseDir("");
        int int56 = atomikosProperties43.getConsoleFileCount();
        java.lang.Object obj57 = properties0.putIfAbsent((java.lang.Object) (short) 10, (java.lang.Object) atomikosProperties43);
        java.lang.String str58 = atomikosProperties43.getService();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 10000L + "'", long38 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        java.lang.String str27 = properties24.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet28 = properties24.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties24.entrySet();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties34.entrySet();
        java.lang.Object obj38 = properties24.getOrDefault((java.lang.Object) properties31, (java.lang.Object) objEntrySet37);
        boolean boolean39 = properties20.containsKey((java.lang.Object) objEntrySet37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.lang.Object obj46 = properties43.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet47 = properties43.keySet();
        java.lang.Object obj48 = properties1.put((java.lang.Object) objEntrySet37, (java.lang.Object) objSet47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getLogBaseDir();
        java.lang.String str51 = atomikosProperties49.getLogBaseDir();
        boolean boolean52 = atomikosProperties49.isAllowSubTransactions();
        boolean boolean53 = atomikosProperties49.isSerialJtaTransactions();
        atomikosProperties49.setService("");
        int int56 = atomikosProperties49.getConsoleFileCount();
        boolean boolean57 = atomikosProperties49.isThreadedTwoPhaseCommit();
        boolean boolean58 = properties1.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setMaxActives(10);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery61 = atomikosProperties49.getRecovery();
        int int62 = atomikosProperties49.getConsoleFileCount();
        java.lang.String str63 = atomikosProperties49.getLogBaseDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(obj38);
// flaky:         org.junit.Assert.assertEquals(obj38.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(recovery61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.lang.String str30 = properties1.getProperty("tmlog");
        java.util.Properties properties31 = new java.util.Properties(properties1);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean36 = properties33.contains((java.lang.Object) 1L);
        int int37 = properties33.size();
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties33.keys();
        java.lang.String str40 = properties33.getProperty("");
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties42.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties42.keys();
        java.lang.Object obj46 = properties33.remove((java.lang.Object) objEnumeration45);
        properties33.clear();
        java.lang.Object obj50 = properties33.setProperty("{}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties33.elements();
        java.lang.Object obj52 = properties31.remove((java.lang.Object) properties33);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.lang.String str13 = atomikosProperties0.getLogBaseName();
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setCheckpointInterval(300000L);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tmlog" + "'", str13, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setLogBaseName("hi!");
        atomikosProperties6.setConsoleFileName("{tm.out=hi!}");
        atomikosProperties6.setMaxActives(0);
        atomikosProperties6.setConsoleFileCount(4);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties25.entrySet();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Object obj30 = properties25.replace((java.lang.Object) "hi!", obj29);
        boolean boolean32 = properties25.equals((java.lang.Object) 1.0f);
        java.util.Properties properties33 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        java.lang.String str42 = atomikosProperties34.getConsoleFileName();
        java.util.Properties properties43 = atomikosProperties34.asProperties();
        java.lang.Object obj44 = properties1.replace((java.lang.Object) properties33, (java.lang.Object) properties43);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties45.setConsoleFileName("tm.out");
        atomikosProperties45.setMaxActives((-1));
        atomikosProperties45.setEnableLogging(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setEnableLogging(true);
        atomikosProperties52.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setConsoleFileName("");
        java.lang.String str66 = atomikosProperties61.getLogBaseName();
        java.lang.String str67 = atomikosProperties61.getConsoleFileName();
        boolean boolean68 = properties1.replace((java.lang.Object) false, (java.lang.Object) atomikosProperties52, (java.lang.Object) atomikosProperties61);
        java.io.OutputStream outputStream69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream69, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "tmlog" + "'", str66, "tmlog");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Set<java.lang.Object> objSet16 = properties1.keySet();
        boolean boolean17 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int19 = atomikosProperties18.getMaxActives();
        java.lang.String str20 = atomikosProperties18.getTransactionManagerUniqueName();
        atomikosProperties18.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties18.setMaxActives((int) (short) 10);
        java.lang.String str25 = atomikosProperties18.getConsoleFileName();
        atomikosProperties18.setService("{}");
        atomikosProperties18.setMaxTimeout((long) (short) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        java.lang.String str35 = atomikosProperties30.getOutputDir();
        java.util.Properties properties36 = atomikosProperties30.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = atomikosProperties30.getRecovery();
        atomikosProperties30.setService("hi!");
        boolean boolean40 = atomikosProperties30.isEnableLogging();
        java.lang.String str41 = atomikosProperties30.getConsoleFileName();
        long long42 = atomikosProperties30.getCheckpointInterval();
        boolean boolean43 = properties1.remove((java.lang.Object) (short) 0, (java.lang.Object) atomikosProperties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = atomikosProperties30.getRecovery();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(properties36);
        org.junit.Assert.assertNotNull(recovery37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tm.out" + "'", str41, "tm.out");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(recovery44);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setAllowSubTransactions(false);
        java.lang.String str15 = atomikosProperties8.getLogBaseDir();
        java.lang.Class<?> wildcardClass16 = atomikosProperties8.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet6 = properties1.entrySet();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        java.util.Properties properties13 = new java.util.Properties(properties11);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties11.entrySet();
        java.lang.Object obj15 = properties1.getOrDefault((java.lang.Object) properties8, (java.lang.Object) objEntrySet14);
        java.util.Set<java.lang.Object> objSet16 = properties8.keySet();
        int int17 = properties8.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNotNull(objEntrySet6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertNotNull(obj15);
// flaky:         org.junit.Assert.assertEquals(obj15.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj15), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj15), "[]");
        org.junit.Assert.assertNotNull(objSet16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setMaxTimeout(10L);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxActives((int) (short) 0);
        java.lang.String str6 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setMaxTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = atomikosProperties0.getRecovery();
        int int10 = recovery9.getMaxRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(recovery9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setSerialJtaTransactions(true);
        java.lang.Class<?> wildcardClass28 = atomikosProperties19.getClass();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseDir("tm.out");
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        properties8.clear();
        java.lang.String str12 = properties8.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str12, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setService("tmlog");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setLogBaseName("{10=#}");
        boolean boolean22 = atomikosProperties10.isThreadedTwoPhaseCommit();
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        boolean boolean37 = properties28.contains((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setThreadedTwoPhaseCommit(true);
        atomikosProperties38.setSerialJtaTransactions(false);
        atomikosProperties38.setOutputDir("");
        java.lang.String str47 = atomikosProperties38.getConsoleFileName();
        java.lang.String str48 = atomikosProperties38.getLogBaseName();
        atomikosProperties38.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel51 = atomikosProperties38.getConsoleLogLevel();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        boolean boolean54 = properties53.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int56 = recovery55.getMaxRetries();
        boolean boolean57 = properties53.containsKey((java.lang.Object) recovery55);
        properties53.clear();
        boolean boolean60 = properties53.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        boolean boolean63 = properties62.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties64.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties70.setCheckpointInterval((long) (byte) -1);
        atomikosProperties70.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties75 = null;
        java.util.Properties properties76 = new java.util.Properties(properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties76.elements();
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        java.util.Enumeration<java.lang.Object> objEnumeration80 = properties79.elements();
        java.lang.String str82 = properties79.getProperty("");
        properties76.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties79);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties85.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj88 = properties76.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties85);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel89 = atomikosProperties85.getConsoleLogLevel();
        atomikosProperties70.setConsoleLogLevel(atomikosLoggingLevel89);
        atomikosProperties64.setConsoleLogLevel(atomikosLoggingLevel89);
        boolean boolean93 = properties53.replace((java.lang.Object) properties62, (java.lang.Object) atomikosProperties64, (java.lang.Object) 10.0d);
        java.util.Properties properties94 = new java.util.Properties(properties53);
        boolean boolean95 = properties53.isEmpty();
        int int96 = properties53.size();
        java.lang.Object obj97 = properties28.replace((java.lang.Object) atomikosLoggingLevel51, (java.lang.Object) properties53);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel51);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel51);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tm.out" + "'", str47, "tm.out");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel51 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel51.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 5 + "'", int56 == 5);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEnumeration80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(obj88);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel89 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel89.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties1.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int39 = atomikosProperties38.getMaxActives();
        java.lang.String str40 = atomikosProperties38.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties38.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties38.getConsoleLogLevel();
        boolean boolean43 = atomikosProperties38.isForceShutdownOnVmExit();
        java.lang.String str44 = atomikosProperties38.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int46 = atomikosProperties45.getMaxActives();
        java.lang.String str47 = atomikosProperties45.getTransactionManagerUniqueName();
        boolean boolean48 = atomikosProperties45.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel49 = atomikosProperties45.getConsoleLogLevel();
        atomikosProperties45.setAllowSubTransactions(true);
        int int52 = atomikosProperties45.getConsoleFileCount();
        java.lang.Object obj53 = properties1.getOrDefault((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        java.lang.String str54 = atomikosProperties38.getOutputDir();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel49 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel49.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        boolean boolean5 = properties4.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery6 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int7 = recovery6.getMaxRetries();
        boolean boolean8 = properties4.containsKey((java.lang.Object) recovery6);
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj22 = properties10.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties19.getConsoleLogLevel();
        int int24 = atomikosProperties19.getConsoleFileCount();
        java.lang.Object obj25 = properties4.get((java.lang.Object) atomikosProperties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setConsoleFileName("");
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        long long32 = atomikosProperties26.getCheckpointInterval();
        java.lang.Object obj33 = properties4.get((java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setThreadedTwoPhaseCommit(true);
        java.lang.String str39 = atomikosProperties34.getOutputDir();
        java.lang.String str40 = atomikosProperties34.getTransactionManagerUniqueName();
        int int41 = atomikosProperties34.getConsoleFileCount();
        boolean boolean42 = atomikosProperties34.isThreadedTwoPhaseCommit();
        java.lang.Object obj44 = properties4.put((java.lang.Object) boolean42, (java.lang.Object) 0L);
        java.util.Properties properties45 = new java.util.Properties();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        boolean boolean60 = properties59.isEmpty();
        boolean boolean61 = properties49.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean60);
        boolean boolean62 = properties49.isEmpty();
        boolean boolean63 = properties45.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        atomikosProperties64.setConsoleFileName("");
        java.lang.String str69 = atomikosProperties64.getLogBaseName();
        long long70 = atomikosProperties64.getCheckpointInterval();
        java.lang.String str71 = atomikosProperties64.getConsoleFileName();
        long long72 = atomikosProperties64.getCheckpointInterval();
        java.lang.Object obj73 = properties49.remove((java.lang.Object) atomikosProperties64);
        java.lang.Object obj74 = properties1.getOrDefault((java.lang.Object) 0L, (java.lang.Object) properties49);
        java.lang.String str76 = properties1.getProperty("");
        java.util.Enumeration<java.lang.Object> objEnumeration77 = properties1.keys();
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties1.keys();
        java.io.OutputStream outputStream79 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream79, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 5 + "'", int7 == 5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "tmlog" + "'", str69, "tmlog");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + (-1L) + "'", long70 == (-1L));
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + (-1L) + "'", long72 == (-1L));
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(obj74);
        org.junit.Assert.assertEquals(obj74.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj74), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj74), "{}");
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(objEnumeration77);
        org.junit.Assert.assertNotNull(objEnumeration78);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getService();
        atomikosProperties0.setDefaultJtaTimeout((long) 'a');
        long long8 = atomikosProperties0.getMaxTimeout();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties10 = atomikosProperties0.asProperties();
        properties10.clear();
        java.util.Set<java.lang.Object> objSet12 = properties10.keySet();
        boolean boolean13 = properties10.isEmpty();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 300000L + "'", long8 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(properties10);
        org.junit.Assert.assertNotNull(objSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties0.setMaxTimeout((long) '#');
        atomikosProperties0.setLogBaseDir("tm.out");
        int int9 = atomikosProperties0.getConsoleFileCount();
        int int10 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties0.getConsoleLogLevel();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        atomikosProperties0.setService("{{10=#}=tm.out}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        boolean boolean15 = properties14.isEmpty();
        properties14.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet17 = properties14.entrySet();
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties14.store(outputStream18, "{10=#}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEntrySet17);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        long long8 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str9 = atomikosProperties0.getLogBaseDir();
        boolean boolean10 = atomikosProperties0.isEnableLogging();
        boolean boolean11 = atomikosProperties0.isThreadedTwoPhaseCommit();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.Object obj15 = properties12.setProperty("{com.atomikos.icatch.console_file_name={}, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=10, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{}");
        java.lang.Object obj18 = properties12.setProperty("{10=#}", "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setMaxTimeout(35L);
        atomikosProperties0.setLogBaseName("");
        int int19 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 50 + "'", int19 == 50);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet43 = properties1.entrySet();
        java.util.Properties properties44 = new java.util.Properties(properties1);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.util.Properties properties48 = new java.util.Properties(properties46);
        java.util.Collection<java.lang.Object> objCollection49 = properties46.values();
        java.util.Collection<java.lang.Object> objCollection50 = properties46.values();
        java.lang.Object obj51 = properties44.remove((java.lang.Object) objCollection50);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(objEntrySet43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objCollection49);
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNull(obj51);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        boolean boolean7 = properties1.isEmpty();
        java.util.Collection<java.lang.Object> objCollection8 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery9.setRetryInterval((long) 100);
        recovery9.setDelay((long) 50);
        recovery9.setDelay(300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery16.setRetryInterval((long) 100);
        int int19 = recovery16.getMaxRetries();
        recovery16.setDelay((long) (short) 100);
        recovery16.setDelay((long) (byte) 1);
        boolean boolean24 = properties1.remove((java.lang.Object) recovery9, (java.lang.Object) recovery16);
        java.util.Enumeration<?> wildcardEnumeration25 = properties1.propertyNames();
        java.util.Set<java.lang.Object> objSet26 = properties1.keySet();
        java.util.Collection<java.lang.Object> objCollection27 = properties1.values();
        java.util.Set<java.lang.Object> objSet28 = properties1.keySet();
        java.io.OutputStream outputStream29 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream29, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objSet26);
        org.junit.Assert.assertNotNull(objCollection27);
        org.junit.Assert.assertNotNull(objSet28);
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        boolean boolean44 = properties43.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery45 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int46 = recovery45.getMaxRetries();
        boolean boolean47 = properties43.containsKey((java.lang.Object) recovery45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.String str51 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setMaxTimeout(0L);
        java.lang.Object obj54 = properties43.remove((java.lang.Object) atomikosProperties48);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int59 = recovery58.getMaxRetries();
        boolean boolean60 = properties56.containsKey((java.lang.Object) recovery58);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.lang.String str68 = properties65.getProperty("");
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj74 = properties62.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties71);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties71.getConsoleLogLevel();
        int int76 = atomikosProperties71.getConsoleFileCount();
        java.lang.Object obj77 = properties56.get((java.lang.Object) atomikosProperties71);
        long long78 = atomikosProperties71.getMaxTimeout();
        java.lang.Object obj79 = properties1.put((java.lang.Object) atomikosProperties48, (java.lang.Object) atomikosProperties71);
        boolean boolean80 = atomikosProperties71.isSerialJtaTransactions();
        java.lang.String str81 = atomikosProperties71.getService();
        atomikosProperties71.setLogBaseDir("{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        java.lang.String str84 = atomikosProperties71.getOutputDir();
        boolean boolean85 = atomikosProperties71.isThreadedTwoPhaseCommit();
        int int86 = atomikosProperties71.getMaxActives();
        boolean boolean87 = atomikosProperties71.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 5 + "'", int46 == 5);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + 300000L + "'", long78 == 300000L);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj18 = properties6.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel19);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setConsoleFileName("{}");
        boolean boolean25 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int26 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj40 = properties28.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties37);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        java.lang.Object obj45 = properties28.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str47 = atomikosProperties46.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery48 = atomikosProperties46.getRecovery();
        atomikosProperties46.setEnableLogging(false);
        boolean boolean51 = properties28.equals((java.lang.Object) atomikosProperties46);
        boolean boolean52 = properties25.contains((java.lang.Object) atomikosProperties46);
        java.util.Enumeration<?> wildcardEnumeration53 = properties25.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        atomikosProperties54.setSerialJtaTransactions(false);
        java.lang.String str61 = atomikosProperties54.getLogBaseName();
        long long62 = atomikosProperties54.getCheckpointInterval();
        atomikosProperties54.setThreadedTwoPhaseCommit(true);
        boolean boolean65 = properties25.contains((java.lang.Object) atomikosProperties54);
        atomikosProperties54.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean68 = atomikosProperties54.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(obj45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(recovery48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tmlog" + "'", str61, "tmlog");
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-1L) + "'", long62 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean9 = atomikosProperties0.isAllowSubTransactions();
        int int10 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setConsoleFileName("");
        java.lang.String str15 = atomikosProperties10.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.String str28 = properties25.getProperty("");
        properties22.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties31 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties31.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj34 = properties22.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties31);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel35 = atomikosProperties31.getConsoleLogLevel();
        atomikosProperties16.setConsoleLogLevel(atomikosLoggingLevel35);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel35);
        atomikosProperties10.setConsoleFileCount(5);
        atomikosProperties10.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setLogBaseDir("");
        atomikosProperties42.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setConsoleFileName("");
        java.lang.String str52 = atomikosProperties47.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        atomikosProperties53.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties47.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties42.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties10.setMaxTimeout((long) (short) 10);
        int int79 = atomikosProperties10.getMaxActives();
        boolean boolean80 = properties9.containsValue((java.lang.Object) int79);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel35 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel35.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setService("");
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseDir("{[]=WARN}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.lang.String str10 = properties7.getProperty("");
        properties4.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        boolean boolean13 = properties4.contains((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties14.getConsoleLogLevel();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery31 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int32 = recovery31.getMaxRetries();
        boolean boolean33 = properties29.containsKey((java.lang.Object) recovery31);
        properties29.clear();
        boolean boolean36 = properties29.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean39 = properties38.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setConsoleFileName("");
        java.lang.String str45 = atomikosProperties40.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.lang.String str58 = properties55.getProperty("");
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj64 = properties52.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties61);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties61.getConsoleLogLevel();
        atomikosProperties46.setConsoleLogLevel(atomikosLoggingLevel65);
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel65);
        boolean boolean69 = properties29.replace((java.lang.Object) properties38, (java.lang.Object) atomikosProperties40, (java.lang.Object) 10.0d);
        java.util.Properties properties70 = new java.util.Properties(properties29);
        boolean boolean71 = properties29.isEmpty();
        int int72 = properties29.size();
        java.lang.Object obj73 = properties4.replace((java.lang.Object) atomikosLoggingLevel27, (java.lang.Object) properties29);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties0.setSerialJtaTransactions(false);
        int int77 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties0.setMaxActives((int) (short) 1);
        java.lang.String str84 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str10 = properties8.getProperty("{}");
        int int11 = properties8.size();
        properties8.clear();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties8.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties8.keys();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        boolean boolean19 = properties16.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet20 = properties16.keySet();
        java.lang.Object obj23 = properties16.setProperty("", "");
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.lang.String str28 = properties25.getProperty("hi!");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean32 = properties31.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery33 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int34 = recovery33.getMaxRetries();
        boolean boolean35 = properties31.containsKey((java.lang.Object) recovery33);
        recovery33.setRetryInterval((long) (short) -1);
        recovery33.setRetryInterval((long) 0);
        recovery33.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass42 = recovery33.getClass();
        java.lang.Object obj43 = properties25.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery33);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        java.lang.String str48 = properties45.getProperty("hi!");
        java.util.Set<java.lang.String> strSet49 = properties45.stringPropertyNames();
        java.lang.Object obj50 = new java.lang.Object();
        boolean boolean51 = properties16.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties45, obj50);
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration57 = properties56.elements();
        java.lang.String str59 = properties56.getProperty("");
        properties53.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties56);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj65 = properties53.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties62);
        atomikosProperties62.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties62.getConsoleLogLevel();
        boolean boolean69 = properties16.containsValue((java.lang.Object) atomikosProperties62);
        java.lang.Object obj70 = properties8.get((java.lang.Object) properties16);
        java.lang.String str71 = properties8.toString();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 18 + "'", int11 == 18);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 5 + "'", int34 == 5);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNotNull(objEnumeration57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "{}" + "'", str71, "{}");
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        java.lang.String str23 = properties1.toString();
        int int24 = properties1.size();
        java.util.Properties properties25 = new java.util.Properties(properties1);
        java.util.Properties properties26 = new java.util.Properties(properties25);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{}" + "'", str23, "{}");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        properties30.clear();
        java.util.Properties properties36 = new java.util.Properties(properties30);
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties36);
        java.util.Set<java.lang.String> strSet38 = properties36.stringPropertyNames();
        java.util.Properties properties39 = new java.util.Properties(properties36);
        int int40 = properties39.size();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.lang.String str48 = properties45.getProperty("");
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        boolean boolean54 = properties42.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean53);
        boolean boolean55 = properties42.isEmpty();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        boolean boolean60 = properties57.containsKey((java.lang.Object) 10.0f);
        properties42.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Set<java.lang.String> strSet62 = properties57.stringPropertyNames();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        atomikosProperties73.setSerialJtaTransactions(false);
        int int79 = atomikosProperties73.getConsoleFileCount();
        boolean boolean80 = atomikosProperties73.isForceShutdownOnVmExit();
        atomikosProperties73.setAllowSubTransactions(false);
        int int83 = atomikosProperties73.getConsoleFileLimit();
        atomikosProperties73.setEnableLogging(false);
        boolean boolean86 = properties39.remove((java.lang.Object) properties57, (java.lang.Object) false);
        int int87 = properties57.size();
        java.util.Set<java.lang.Object> objSet88 = properties57.keySet();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(objSet88);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj7 = properties1.remove((java.lang.Object) "{10=#}");
        java.lang.Object obj9 = properties1.remove((java.lang.Object) "");
        java.util.Set<java.lang.Object> objSet10 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setConsoleFileName("");
        java.lang.String str16 = atomikosProperties11.getLogBaseName();
        long long17 = atomikosProperties11.getCheckpointInterval();
        atomikosProperties11.setForceShutdownOnVmExit(false);
        atomikosProperties11.setTransactionManagerUniqueName("tmlog");
        atomikosProperties11.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties11.getRecovery();
        boolean boolean25 = properties1.containsKey((java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        atomikosProperties26.setConsoleFileName("");
        java.lang.String str31 = atomikosProperties26.getLogBaseName();
        long long32 = atomikosProperties26.getCheckpointInterval();
        java.lang.String str33 = atomikosProperties26.getLogBaseDir();
        atomikosProperties26.setEnableLogging(true);
        long long36 = atomikosProperties26.getDefaultJtaTimeout();
        java.lang.String str37 = atomikosProperties26.getService();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        boolean boolean41 = properties39.isEmpty();
        java.util.Set<java.lang.String> strSet42 = properties39.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.lang.String str48 = atomikosProperties43.getOutputDir();
        java.util.Properties properties49 = atomikosProperties43.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setSerialJtaTransactions(false);
        atomikosProperties50.setOutputDir("");
        java.lang.String str59 = atomikosProperties50.getConsoleFileName();
        java.lang.String str60 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setDefaultJtaTimeout(0L);
        java.lang.Object obj63 = properties39.putIfAbsent((java.lang.Object) atomikosProperties43, (java.lang.Object) atomikosProperties50);
        atomikosProperties50.setSerialJtaTransactions(false);
        java.lang.Object obj66 = properties1.getOrDefault((java.lang.Object) atomikosProperties26, (java.lang.Object) atomikosProperties50);
        java.lang.String str67 = atomikosProperties50.getLogBaseDir();
        atomikosProperties50.setMaxTimeout(35L);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        int int72 = atomikosProperties50.getMaxActives();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(objSet10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertNotNull(recovery24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "tmlog" + "'", str31, "tmlog");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 10000L + "'", long36 == 10000L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(properties49);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tm.out" + "'", str59, "tm.out");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 50 + "'", int72 == 50);
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        java.util.Enumeration<?> wildcardEnumeration39 = properties31.propertyNames();
        boolean boolean40 = properties26.containsValue((java.lang.Object) wildcardEnumeration39);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery44 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int45 = recovery44.getMaxRetries();
        boolean boolean46 = properties42.containsKey((java.lang.Object) recovery44);
        properties42.clear();
        boolean boolean49 = properties42.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setConsoleFileName("");
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        atomikosProperties59.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel78 = atomikosProperties74.getConsoleLogLevel();
        atomikosProperties59.setConsoleLogLevel(atomikosLoggingLevel78);
        atomikosProperties53.setConsoleLogLevel(atomikosLoggingLevel78);
        boolean boolean82 = properties42.replace((java.lang.Object) properties51, (java.lang.Object) atomikosProperties53, (java.lang.Object) 10.0d);
        java.lang.Object obj83 = properties26.remove((java.lang.Object) properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration84 = properties42.elements();
        java.lang.Object obj85 = properties1.remove((java.lang.Object) properties42);
        java.lang.String str86 = properties1.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = properties1.entrySet();
        java.io.InputStream inputStream88 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 5 + "'", int45 == 5);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel78 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel78.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(objEnumeration84);
        org.junit.Assert.assertNull(obj85);
        org.junit.Assert.assertNotNull(objEntrySet87);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setConsoleFileName("");
        long long7 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setCheckpointInterval((long) (byte) 0);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Collection<java.lang.Object> objCollection21 = properties1.values();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objCollection21);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        int int17 = atomikosProperties10.getConsoleFileCount();
        atomikosProperties10.setAllowSubTransactions(false);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.lang.String str27 = properties24.getProperty("");
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj33 = properties21.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties30);
        atomikosProperties30.setSerialJtaTransactions(false);
        int int36 = atomikosProperties30.getConsoleFileCount();
        int int37 = atomikosProperties30.getConsoleFileLimit();
        java.lang.String str38 = atomikosProperties30.getLogBaseName();
        atomikosProperties30.setService("tmlog");
        java.lang.String str41 = atomikosProperties30.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setConsoleFileName("");
        java.lang.String str47 = atomikosProperties42.getLogBaseName();
        long long48 = atomikosProperties42.getCheckpointInterval();
        atomikosProperties42.setForceShutdownOnVmExit(false);
        atomikosProperties42.setTransactionManagerUniqueName("tmlog");
        atomikosProperties42.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery55 = atomikosProperties42.getRecovery();
        boolean boolean56 = atomikosProperties42.isSerialJtaTransactions();
        boolean boolean57 = atomikosProperties42.isAllowSubTransactions();
        long long58 = atomikosProperties42.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties42.getConsoleLogLevel();
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel59);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel59);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "tmlog" + "'", str47, "tmlog");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-1L) + "'", long48 == (-1L));
        org.junit.Assert.assertNotNull(recovery55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(1L);
        long long9 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(10L);
        recovery0.setForgetOrphanedLogEntriesDelay(86400000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        java.lang.String str3 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setSerialJtaTransactions(true);
        atomikosProperties0.setCheckpointInterval((long) (byte) 100);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        boolean boolean12 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setService("{}");
        atomikosProperties0.setLogBaseDir("{10=#}");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval(32L);
        boolean boolean19 = atomikosProperties0.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        java.lang.String str10 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel11 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setMaxActives((int) (byte) -1);
        atomikosProperties0.setMaxActives(18);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel11 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel11.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.util.Set<java.lang.Object> objSet53 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str55 = atomikosProperties54.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties54.getRecovery();
        atomikosProperties54.setEnableLogging(false);
        long long59 = atomikosProperties54.getMaxTimeout();
        atomikosProperties54.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties54.setLogBaseDir("hi!");
        atomikosProperties54.setTransactionManagerUniqueName("hi!");
        atomikosProperties54.setSerialJtaTransactions(true);
        java.lang.Object obj68 = properties37.remove((java.lang.Object) atomikosProperties54);
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        boolean boolean71 = properties70.isEmpty();
        boolean boolean73 = properties70.contains((java.lang.Object) 1L);
        int int74 = properties70.size();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties70.keys();
        java.util.Set<java.lang.String> strSet76 = properties70.stringPropertyNames();
        boolean boolean77 = properties37.contains((java.lang.Object) properties70);
        java.util.Properties properties78 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties78.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties80 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties80.setCheckpointInterval((long) (byte) -1);
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        atomikosProperties80.setSerialJtaTransactions(false);
        java.lang.String str87 = atomikosProperties80.getLogBaseName();
        atomikosProperties80.setAllowSubTransactions(false);
        boolean boolean90 = atomikosProperties80.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery91 = atomikosProperties80.getRecovery();
        java.lang.String str92 = atomikosProperties80.getLogBaseDir();
        atomikosProperties80.setThreadedTwoPhaseCommit(true);
        java.lang.Object obj95 = properties78.get((java.lang.Object) atomikosProperties80);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objSet53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 300000L + "'", long59 == 300000L);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "tmlog" + "'", str87, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(recovery91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setConsoleFileName("tm.out");
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        boolean boolean38 = properties1.replace((java.lang.Object) ' ', (java.lang.Object) "tm.out", (java.lang.Object) boolean37);
        java.util.Properties properties39 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        boolean boolean43 = atomikosProperties40.isSerialJtaTransactions();
        java.lang.String str44 = atomikosProperties40.getOutputDir();
        java.lang.Object obj45 = properties1.get((java.lang.Object) atomikosProperties40);
        boolean boolean46 = atomikosProperties40.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = atomikosProperties40.getRecovery();
        int int48 = atomikosProperties40.getMaxActives();
        atomikosProperties40.setLogBaseDir("{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
        atomikosProperties40.setAllowSubTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(recovery47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 50 + "'", int48 == 50);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseName("hi!");
        atomikosProperties0.setService("");
        java.lang.String str6 = atomikosProperties0.getService();
        atomikosProperties0.setAllowSubTransactions(false);
        java.lang.String str9 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.Class<?> wildcardClass10 = atomikosProperties0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int20 = recovery17.getMaxRetries();
        int int21 = recovery17.getMaxRetries();
        long long22 = recovery17.getRetryInterval();
        long long23 = recovery17.getForgetOrphanedLogEntriesDelay();
        int int24 = recovery17.getMaxRetries();
        recovery17.setRetryInterval((long) 1);
        long long27 = recovery17.getForgetOrphanedLogEntriesDelay();
        boolean boolean28 = properties16.containsKey((java.lang.Object) long27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties29.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str52 = atomikosProperties29.getLogBaseDir();
        java.lang.String str53 = atomikosProperties29.getLogBaseDir();
        boolean boolean54 = atomikosProperties29.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties29.getConsoleLogLevel();
        boolean boolean56 = properties16.equals((java.lang.Object) atomikosLoggingLevel55);
        java.util.Properties properties57 = new java.util.Properties(properties16);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        java.util.Properties properties72 = new java.util.Properties(properties59);
        java.util.Collection<java.lang.Object> objCollection73 = properties72.values();
        java.lang.Object obj76 = properties72.setProperty("{10=#}", "tm.out");
        boolean boolean77 = properties16.containsKey((java.lang.Object) properties72);
        java.util.Set<java.lang.Object> objSet78 = properties72.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(objCollection73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objSet78);
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setService("hi!");
        int int51 = atomikosProperties40.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setConsoleFileName("");
        java.lang.String str57 = atomikosProperties52.getService();
        java.lang.String str58 = atomikosProperties52.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties40.setConsoleLogLevel(atomikosLoggingLevel59);
        boolean boolean61 = atomikosProperties40.isForceShutdownOnVmExit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        java.util.Set<java.lang.String> strSet7 = properties1.stringPropertyNames();
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setThreadedTwoPhaseCommit(true);
        atomikosProperties9.setForceShutdownOnVmExit(true);
        boolean boolean16 = atomikosProperties9.isAllowSubTransactions();
        atomikosProperties9.setCheckpointInterval(500L);
        java.lang.String str19 = atomikosProperties9.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties9.getConsoleLogLevel();
        boolean boolean21 = properties1.containsValue((java.lang.Object) atomikosProperties9);
        java.io.Writer writer22 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer22, "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        int int5 = properties1.size();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        java.lang.String str8 = properties1.getProperty("");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties10.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties10.keys();
        java.lang.Object obj14 = properties1.remove((java.lang.Object) objEnumeration13);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int18 = recovery17.getMaxRetries();
        recovery17.setForgetOrphanedLogEntriesDelay((-1L));
        recovery17.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery17.setForgetOrphanedLogEntriesDelay(100L);
        long long25 = recovery17.getDelay();
        recovery17.setDelay((long) (short) 10);
        recovery17.setRetryInterval((long) (byte) 0);
        long long30 = recovery17.getDelay();
        long long31 = recovery17.getDelay();
        int int32 = recovery17.getMaxRetries();
        recovery17.setForgetOrphanedLogEntriesDelay((long) (byte) 100);
        boolean boolean35 = properties1.remove((java.lang.Object) recovery16, (java.lang.Object) recovery17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10L + "'", long30 == 10L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 10L + "'", long31 == 10L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 5 + "'", int32 == 5);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        boolean boolean14 = atomikosProperties8.isEnableLogging();
        java.lang.String str15 = atomikosProperties8.getLogBaseName();
        boolean boolean16 = atomikosProperties8.isSerialJtaTransactions();
        java.util.Properties properties17 = atomikosProperties8.asProperties();
        atomikosProperties8.setConsoleFileCount(50);
        long long20 = atomikosProperties8.getMaxTimeout();
        atomikosProperties8.setConsoleFileLimit((int) (byte) 1);
        java.lang.String str23 = atomikosProperties8.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tmlog" + "'", str15, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 300000L + "'", long20 == 300000L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setMaxActives((int) '4');
        int int12 = atomikosProperties0.getConsoleFileCount();
        boolean boolean13 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Set<java.lang.String> strSet31 = properties11.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setThreadedTwoPhaseCommit(true);
        atomikosProperties32.setSerialJtaTransactions(false);
        atomikosProperties32.setOutputDir("");
        java.lang.Object obj41 = properties1.putIfAbsent((java.lang.Object) properties11, (java.lang.Object) "");
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.lang.String str49 = properties46.getProperty("");
        properties43.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties46);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj55 = properties43.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties52);
        atomikosProperties52.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties52.getConsoleLogLevel();
        java.lang.String str59 = atomikosProperties52.getTransactionManagerUniqueName();
        atomikosProperties52.setOutputDir("{10=#}");
        long long62 = atomikosProperties52.getDefaultJtaTimeout();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.lang.Object obj81 = properties64.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str83 = atomikosProperties82.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery84 = atomikosProperties82.getRecovery();
        atomikosProperties82.setEnableLogging(false);
        boolean boolean87 = properties64.equals((java.lang.Object) atomikosProperties82);
        java.util.Set<java.lang.String> strSet88 = properties64.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery89 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery89.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        boolean boolean92 = properties1.replace((java.lang.Object) atomikosProperties52, (java.lang.Object) properties64, (java.lang.Object) recovery89);
        long long93 = recovery89.getDelay();
        recovery89.setRetryInterval((long) (short) -1);
        recovery89.setForgetOrphanedLogEntriesDelay(50L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(obj81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(recovery84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 10000L + "'", long93 == 10000L);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties8.setCheckpointInterval((long) (byte) -1);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        java.lang.String str13 = atomikosProperties8.getOutputDir();
        atomikosProperties8.setConsoleFileName("tmlog");
        boolean boolean16 = properties1.contains((java.lang.Object) "tmlog");
        java.lang.Object obj17 = properties1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        java.util.Properties properties7 = new java.util.Properties(properties1);
        boolean boolean8 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties9 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties9.setCheckpointInterval((long) (byte) -1);
        atomikosProperties9.setConsoleFileName("");
        java.lang.String str14 = atomikosProperties9.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        atomikosProperties15.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.lang.String str27 = properties24.getProperty("");
        properties21.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties24);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj33 = properties21.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties30);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel34 = atomikosProperties30.getConsoleLogLevel();
        atomikosProperties15.setConsoleLogLevel(atomikosLoggingLevel34);
        atomikosProperties9.setConsoleLogLevel(atomikosLoggingLevel34);
        atomikosProperties9.setConsoleFileCount(5);
        atomikosProperties9.setMaxActives((int) (short) -1);
        boolean boolean41 = properties1.containsValue((java.lang.Object) atomikosProperties9);
        java.lang.String str42 = atomikosProperties9.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel34 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel34.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval((long) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setForceShutdownOnVmExit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int25 = atomikosProperties10.getMaxActives();
        java.lang.String str26 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setMaxActives((int) (short) 1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 50 + "'", int25 == 50);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "tm.out" + "'", str26, "tm.out");
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.keys();
        properties1.clear();
        java.lang.Object obj13 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream14, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=true, com.atomikos.icatch.default_jta_timeout=0}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setMaxActives(100);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel22 = atomikosProperties6.getConsoleLogLevel();
        int int23 = atomikosProperties6.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = atomikosProperties6.getRecovery();
        recovery24.setDelay((long) 5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel22 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel22.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(recovery24);
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        atomikosProperties0.setSerialJtaTransactions(true);
        int int12 = atomikosProperties0.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        boolean boolean14 = atomikosProperties0.isEnableLogging();
        atomikosProperties0.setSerialJtaTransactions(false);
        boolean boolean17 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        boolean boolean28 = atomikosProperties6.isEnableLogging();
        java.lang.String str29 = atomikosProperties6.getConsoleFileName();
        atomikosProperties6.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={10=#}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tm.out" + "'", str29, "tm.out");
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Properties properties7 = new java.util.Properties();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        boolean boolean21 = properties9.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean20);
        boolean boolean22 = properties9.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setConsoleFileName("");
        java.lang.String str29 = atomikosProperties24.getLogBaseName();
        long long30 = atomikosProperties24.getCheckpointInterval();
        java.lang.String str31 = atomikosProperties24.getLogBaseDir();
        atomikosProperties24.setEnableLogging(true);
        java.lang.Object obj34 = properties7.putIfAbsent((java.lang.Object) objEnumeration23, (java.lang.Object) atomikosProperties24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        recovery38.setRetryInterval((long) (short) -1);
        recovery38.setDelay(10L);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        boolean boolean47 = properties46.isEmpty();
        java.lang.Object obj48 = properties7.getOrDefault((java.lang.Object) recovery38, (java.lang.Object) properties46);
        java.lang.Object obj49 = properties1.remove((java.lang.Object) recovery38);
        properties1.clear();
        boolean boolean51 = properties1.isEmpty();
        java.util.Collection<java.lang.Object> objCollection52 = properties1.values();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "tmlog" + "'", str29, "tmlog");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(obj48);
        org.junit.Assert.assertEquals(obj48.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj48), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj48), "{}");
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objCollection52);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        atomikosProperties10.setMaxTimeout((long) (short) 1);
        boolean boolean18 = atomikosProperties10.isAllowSubTransactions();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        int int25 = atomikosProperties19.getConsoleFileCount();
        atomikosProperties19.setService("tm.out");
        atomikosProperties19.setConsoleFileLimit((int) (short) 10);
        int int30 = atomikosProperties19.getConsoleFileLimit();
        atomikosProperties19.setOutputDir("tmlog");
        java.lang.String str33 = atomikosProperties19.getTransactionManagerUniqueName();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        boolean boolean30 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        java.lang.Object obj42 = properties15.putIfAbsent((java.lang.Object) objEnumeration31, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        recovery46.setRetryInterval((long) (short) -1);
        recovery46.setDelay(10L);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.Object obj56 = properties15.getOrDefault((java.lang.Object) recovery46, (java.lang.Object) properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.lang.String str61 = properties58.getProperty("hi!");
        java.util.Set<java.lang.String> strSet62 = properties58.stringPropertyNames();
        java.lang.Object obj63 = properties58.clone();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.getConsoleLogLevel();
        java.lang.String str81 = atomikosProperties74.getTransactionManagerUniqueName();
        atomikosProperties74.setOutputDir("{10=#}");
        boolean boolean84 = properties1.replace((java.lang.Object) properties54, (java.lang.Object) properties58, (java.lang.Object) "{10=#}");
        boolean boolean85 = properties58.isEmpty();
        java.util.Properties properties86 = null;
        java.util.Properties properties87 = new java.util.Properties(properties86);
        boolean boolean88 = properties87.isEmpty();
        java.util.Properties properties89 = new java.util.Properties(properties87);
        int int90 = properties89.size();
        boolean boolean91 = properties58.containsValue((java.lang.Object) int90);
        java.lang.Object obj92 = properties58.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(obj92);
        org.junit.Assert.assertEquals(obj92.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj92), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj92), "{}");
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setRetryInterval((long) (short) -1);
        recovery3.setRetryInterval((long) 0);
        recovery3.setMaxRetries((int) (byte) 10);
        recovery3.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery3.setMaxRetries(52);
        long long16 = recovery3.getRetryInterval();
        recovery3.setDelay(100L);
        recovery3.setDelay(32L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setConsoleFileCount((int) (byte) 1);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties53.getConsoleLogLevel();
        boolean boolean58 = atomikosProperties53.isForceShutdownOnVmExit();
        java.lang.String str59 = atomikosProperties53.getService();
        boolean boolean60 = properties38.containsKey((java.lang.Object) atomikosProperties53);
        java.util.Collection<java.lang.Object> objCollection61 = properties38.values();
        java.io.Reader reader62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties38.load(reader62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objCollection61);
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        int int7 = atomikosProperties0.getMaxActives();
        int int8 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setLogBaseDir("tm.out");
        boolean boolean11 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties12 = atomikosProperties0.asProperties();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.lang.Class<?> wildcardClass14 = atomikosProperties0.getClass();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(properties12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties30.isEmpty();
        java.lang.Object obj33 = properties13.replace((java.lang.Object) 100.0f, (java.lang.Object) boolean32);
        properties13.clear();
        properties13.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setConsoleFileName("");
        java.lang.String str41 = atomikosProperties36.getLogBaseName();
        long long42 = atomikosProperties36.getCheckpointInterval();
        java.lang.String str43 = atomikosProperties36.getLogBaseDir();
        atomikosProperties36.setEnableLogging(true);
        long long46 = atomikosProperties36.getDefaultJtaTimeout();
        boolean boolean47 = atomikosProperties36.isSerialJtaTransactions();
        java.lang.String str48 = atomikosProperties36.getLogBaseName();
        boolean boolean49 = atomikosProperties36.isSerialJtaTransactions();
        long long50 = atomikosProperties36.getCheckpointInterval();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.lang.String str58 = properties55.getProperty("");
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        boolean boolean63 = properties62.isEmpty();
        boolean boolean64 = properties52.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean63);
        boolean boolean65 = properties52.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties52.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties67.setCheckpointInterval((long) (byte) -1);
        atomikosProperties67.setConsoleFileName("");
        java.lang.String str72 = atomikosProperties67.getLogBaseName();
        long long73 = atomikosProperties67.getCheckpointInterval();
        atomikosProperties67.setForceShutdownOnVmExit(false);
        atomikosProperties67.setTransactionManagerUniqueName("tmlog");
        atomikosProperties67.setLogBaseDir("");
        java.util.Properties properties80 = null;
        java.util.Properties properties81 = new java.util.Properties(properties80);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties81.elements();
        java.util.Properties properties83 = null;
        java.util.Properties properties84 = new java.util.Properties(properties83);
        java.util.Enumeration<java.lang.Object> objEnumeration85 = properties84.elements();
        java.lang.String str87 = properties84.getProperty("");
        properties81.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties84);
        java.util.Properties properties90 = null;
        java.util.Properties properties91 = new java.util.Properties(properties90);
        boolean boolean92 = properties91.isEmpty();
        boolean boolean93 = properties81.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean92);
        boolean boolean94 = properties52.remove((java.lang.Object) "", (java.lang.Object) boolean93);
        java.util.Enumeration<java.lang.Object> objEnumeration95 = properties52.elements();
        java.util.Collection<java.lang.Object> objCollection96 = properties52.values();
        java.lang.Object obj97 = properties13.put((java.lang.Object) atomikosProperties36, (java.lang.Object) properties52);
        java.lang.String str98 = atomikosProperties36.getService();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 10000L + "'", long46 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + (-1L) + "'", long73 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration82);
        org.junit.Assert.assertNotNull(objEnumeration85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(objEnumeration95);
        org.junit.Assert.assertNotNull(objCollection96);
        org.junit.Assert.assertNull(obj97);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int5 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setLogBaseName("tmlog");
        atomikosProperties0.setDefaultJtaTimeout(100L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setThreadedTwoPhaseCommit(false);
        atomikosProperties8.setConsoleFileCount(50);
        atomikosProperties8.setLogBaseName("{{10=#}=tm.out}");
        int int19 = atomikosProperties8.getConsoleFileLimit();
        boolean boolean20 = atomikosProperties8.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setCheckpointInterval(500L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int11 = atomikosProperties10.getMaxActives();
        java.lang.String str12 = atomikosProperties10.getTransactionManagerUniqueName();
        boolean boolean13 = atomikosProperties10.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        java.lang.String str23 = atomikosProperties14.getConsoleFileName();
        java.lang.String str24 = atomikosProperties14.getLogBaseName();
        atomikosProperties14.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel27 = atomikosProperties14.getConsoleLogLevel();
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel27);
        atomikosProperties10.setConsoleFileCount((int) (byte) 0);
        atomikosProperties10.setCheckpointInterval(0L);
        atomikosProperties10.setCheckpointInterval(10000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties35 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties35.setCheckpointInterval((long) (byte) -1);
        atomikosProperties35.setThreadedTwoPhaseCommit(true);
        atomikosProperties35.setSerialJtaTransactions(false);
        atomikosProperties35.setOutputDir("");
        java.lang.String str44 = atomikosProperties35.getConsoleFileName();
        java.lang.String str45 = atomikosProperties35.getLogBaseName();
        atomikosProperties35.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties35.getConsoleLogLevel();
        atomikosProperties35.setAllowSubTransactions(true);
        java.lang.String str51 = atomikosProperties35.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setConsoleFileName("");
        java.lang.String str57 = atomikosProperties52.getLogBaseName();
        long long58 = atomikosProperties52.getCheckpointInterval();
        java.lang.String str59 = atomikosProperties52.getLogBaseDir();
        atomikosProperties52.setEnableLogging(true);
        long long62 = atomikosProperties52.getDefaultJtaTimeout();
        boolean boolean63 = atomikosProperties52.isSerialJtaTransactions();
        java.lang.String str64 = atomikosProperties52.getOutputDir();
        atomikosProperties52.setTransactionManagerUniqueName("{}");
        java.lang.String str67 = atomikosProperties52.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        atomikosProperties68.setThreadedTwoPhaseCommit(true);
        atomikosProperties68.setForceShutdownOnVmExit(true);
        atomikosProperties68.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = atomikosProperties68.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel78 = atomikosProperties68.getConsoleLogLevel();
        atomikosProperties52.setConsoleLogLevel(atomikosLoggingLevel78);
        atomikosProperties35.setConsoleLogLevel(atomikosLoggingLevel78);
        int int81 = atomikosProperties35.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties82 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties82.setCheckpointInterval((long) (byte) -1);
        java.lang.String str85 = atomikosProperties82.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel86 = atomikosProperties82.getConsoleLogLevel();
        atomikosProperties35.setConsoleLogLevel(atomikosLoggingLevel86);
        atomikosProperties10.setConsoleLogLevel(atomikosLoggingLevel86);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel86);
        atomikosProperties0.setService("{{10=#}=tm.out}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 50 + "'", int11 == 50);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "tm.out" + "'", str23, "tm.out");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "tmlog" + "'", str24, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel27 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel27.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "tm.out" + "'", str44, "tm.out");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "tmlog" + "'", str45, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-1L) + "'", long58 == (-1L));
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tmlog" + "'", str67, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel77 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel77.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel78 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel78.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel86 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel86.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int14 = recovery11.getMaxRetries();
        int int15 = recovery11.getMaxRetries();
        java.lang.Object obj16 = properties1.get((java.lang.Object) recovery11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.String str35 = properties32.getProperty("");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj41 = properties29.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties38.getConsoleLogLevel();
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties17.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties17.setConsoleFileCount(5);
        atomikosProperties17.setAllowSubTransactions(true);
        boolean boolean49 = properties1.containsValue((java.lang.Object) true);
        java.util.Set<java.lang.String> strSet50 = properties1.stringPropertyNames();
        java.util.Set<java.lang.String> strSet51 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        java.lang.String str59 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties62 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties62.setCheckpointInterval((long) (byte) -1);
        atomikosProperties62.setThreadedTwoPhaseCommit(true);
        atomikosProperties62.setSerialJtaTransactions(false);
        atomikosProperties62.setOutputDir("");
        java.lang.String str71 = atomikosProperties62.getConsoleFileName();
        java.lang.String str72 = atomikosProperties62.getLogBaseName();
        atomikosProperties62.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties62.getConsoleLogLevel();
        atomikosProperties52.setConsoleLogLevel(atomikosLoggingLevel75);
        int int77 = atomikosProperties52.getMaxActives();
        atomikosProperties52.setAllowSubTransactions(true);
        int int80 = atomikosProperties52.getConsoleFileCount();
        long long81 = atomikosProperties52.getDefaultJtaTimeout();
        java.lang.Object obj82 = properties1.get((java.lang.Object) atomikosProperties52);
        atomikosProperties52.setAllowSubTransactions(true);
        atomikosProperties52.setCheckpointInterval((long) (byte) 0);
        atomikosProperties52.setThreadedTwoPhaseCommit(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "tmlog" + "'", str59, "tmlog");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "tm.out" + "'", str71, "tm.out");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "tmlog" + "'", str72, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 50 + "'", int77 == 50);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 10000L + "'", long81 == 10000L);
        org.junit.Assert.assertNull(obj82);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setConsoleFileName("");
        java.lang.String str17 = atomikosProperties12.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties24.elements();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.lang.String str30 = properties27.getProperty("");
        properties24.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj36 = properties24.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties33);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties18.setConsoleLogLevel(atomikosLoggingLevel37);
        atomikosProperties12.setConsoleLogLevel(atomikosLoggingLevel37);
        boolean boolean41 = properties1.replace((java.lang.Object) properties10, (java.lang.Object) atomikosProperties12, (java.lang.Object) 10.0d);
        java.util.Properties properties42 = new java.util.Properties(properties1);
        boolean boolean43 = properties1.isEmpty();
        int int44 = properties1.size();
        java.util.Set<java.lang.Object> objSet45 = properties1.keySet();
        java.util.Collection<java.lang.Object> objCollection46 = properties1.values();
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str49 = atomikosProperties48.getLogBaseDir();
        atomikosProperties48.setLogBaseDir("");
        java.lang.String str52 = atomikosProperties48.getTransactionManagerUniqueName();
        atomikosProperties48.setDefaultJtaTimeout((long) 5);
        atomikosProperties48.setConsoleFileLimit((int) 'a');
        atomikosProperties48.setLogBaseName("{10=#}");
        atomikosProperties48.setDefaultJtaTimeout((long) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        atomikosProperties61.setConsoleFileName("");
        java.lang.String str66 = atomikosProperties61.getService();
        atomikosProperties61.setDefaultJtaTimeout((long) 'a');
        long long69 = atomikosProperties61.getMaxTimeout();
        boolean boolean70 = atomikosProperties61.isAllowSubTransactions();
        java.util.Properties properties71 = atomikosProperties61.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties61.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel72);
        java.lang.Object obj74 = properties1.get((java.lang.Object) atomikosLoggingLevel72);
        java.io.OutputStream outputStream75 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream75, "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(objSet45);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 300000L + "'", long69 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        recovery3.setMaxRetries((int) '4');
        recovery3.setMaxRetries((int) (short) -1);
        recovery3.setRetryInterval((long) 0);
        int int12 = recovery3.getMaxRetries();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.keys();
        java.lang.Object obj11 = null;
        java.lang.Object obj12 = properties1.getOrDefault((java.lang.Object) false, obj11);
        properties1.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setSerialJtaTransactions(false);
        atomikosProperties14.setOutputDir("");
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        atomikosProperties14.setThreadedTwoPhaseCommit(false);
        atomikosProperties14.setCheckpointInterval((long) (short) 1);
        boolean boolean29 = atomikosProperties14.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties14.getConsoleLogLevel();
        int int31 = atomikosProperties14.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = atomikosProperties14.getRecovery();
        atomikosProperties14.setSerialJtaTransactions(false);
        boolean boolean35 = atomikosProperties14.isForceShutdownOnVmExit();
        atomikosProperties14.setConsoleFileCount(4);
        java.lang.String str38 = atomikosProperties14.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str40 = atomikosProperties39.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery41 = atomikosProperties39.getRecovery();
        atomikosProperties39.setEnableLogging(false);
        long long44 = atomikosProperties39.getMaxTimeout();
        atomikosProperties39.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties39.setLogBaseDir("hi!");
        boolean boolean49 = atomikosProperties39.isForceShutdownOnVmExit();
        atomikosProperties39.setDefaultJtaTimeout((long) 0);
        java.lang.String str52 = atomikosProperties39.getTransactionManagerUniqueName();
        atomikosProperties39.setSerialJtaTransactions(false);
        java.util.Properties properties55 = atomikosProperties39.asProperties();
        atomikosProperties39.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setOutputDir("");
        java.lang.String str67 = atomikosProperties58.getConsoleFileName();
        java.lang.String str68 = atomikosProperties58.getLogBaseName();
        atomikosProperties58.setCheckpointInterval((long) (short) 100);
        atomikosProperties58.setLogBaseDir("{10=#}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel73 = atomikosProperties58.getConsoleLogLevel();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean74 = properties1.replace((java.lang.Object) str38, (java.lang.Object) "", (java.lang.Object) atomikosLoggingLevel73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 50 + "'", int31 == 50);
        org.junit.Assert.assertNotNull(recovery32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(recovery41);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 300000L + "'", long44 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{10=#}" + "'", str52, "{10=#}");
        org.junit.Assert.assertNotNull(properties55);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tm.out" + "'", str67, "tm.out");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel73 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel73.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        java.lang.String str8 = properties6.getProperty("{10=#}");
        java.util.Properties properties9 = new java.util.Properties(properties6);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        boolean boolean10 = properties1.contains((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setOutputDir("");
        java.lang.String str20 = atomikosProperties11.getConsoleFileName();
        java.lang.String str21 = atomikosProperties11.getLogBaseName();
        atomikosProperties11.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties11.getConsoleLogLevel();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        boolean boolean30 = properties26.containsKey((java.lang.Object) recovery28);
        properties26.clear();
        boolean boolean33 = properties26.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj61 = properties49.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties37.setConsoleLogLevel(atomikosLoggingLevel62);
        boolean boolean66 = properties26.replace((java.lang.Object) properties35, (java.lang.Object) atomikosProperties37, (java.lang.Object) 10.0d);
        java.util.Properties properties67 = new java.util.Properties(properties26);
        boolean boolean68 = properties26.isEmpty();
        int int69 = properties26.size();
        java.lang.Object obj70 = properties1.replace((java.lang.Object) atomikosLoggingLevel24, (java.lang.Object) properties26);
        java.lang.Object obj73 = properties26.setProperty("{[]=WARN}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties26.keys();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(objEnumeration74);
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        boolean boolean3 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int5 = recovery4.getMaxRetries();
        boolean boolean6 = properties2.containsKey((java.lang.Object) recovery4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties17.getConsoleLogLevel();
        int int22 = atomikosProperties17.getConsoleFileCount();
        java.lang.Object obj23 = properties2.get((java.lang.Object) atomikosProperties17);
        long long24 = atomikosProperties17.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties17.getConsoleLogLevel();
        boolean boolean26 = atomikosProperties17.isAllowSubTransactions();
        boolean boolean27 = atomikosProperties17.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        recovery28.setForgetOrphanedLogEntriesDelay((-1L));
        long long32 = recovery28.getForgetOrphanedLogEntriesDelay();
        recovery28.setMaxRetries((int) (short) 0);
        long long35 = recovery28.getDelay();
        java.lang.Object obj36 = properties0.replace((java.lang.Object) boolean27, (java.lang.Object) recovery28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setSerialJtaTransactions(false);
        java.lang.String str44 = atomikosProperties37.getOutputDir();
        int int45 = atomikosProperties37.getConsoleFileCount();
        java.lang.String str46 = atomikosProperties37.getLogBaseDir();
        java.lang.Object obj47 = properties0.remove((java.lang.Object) atomikosProperties37);
        atomikosProperties37.setConsoleFileCount(4);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(obj47);
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.keys();
        java.util.Properties properties5 = new java.util.Properties(properties3);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setConsoleFileName("tm.out");
        atomikosProperties6.setMaxActives((-1));
        long long11 = atomikosProperties6.getDefaultJtaTimeout();
        atomikosProperties6.setMaxActives((int) (byte) 1);
        boolean boolean14 = properties3.contains((java.lang.Object) atomikosProperties6);
        java.util.Set<java.lang.String> strSet15 = properties3.stringPropertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.lang.String str22 = properties19.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet23 = properties19.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet24 = properties19.entrySet();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties29.entrySet();
        java.lang.Object obj33 = properties19.getOrDefault((java.lang.Object) properties26, (java.lang.Object) objEntrySet32);
        java.util.Set<java.lang.Object> objSet34 = properties26.keySet();
        java.lang.Object obj35 = properties1.get((java.lang.Object) objSet34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        properties37.clear();
        int int51 = properties37.size();
        java.util.Set<java.lang.Object> objSet52 = properties37.keySet();
        boolean boolean53 = properties37.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet54 = properties37.entrySet();
        boolean boolean55 = properties1.containsValue((java.lang.Object) properties37);
        java.io.Reader reader56 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties37.load(reader56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNotNull(objEntrySet24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(obj33);
// flaky:         org.junit.Assert.assertEquals(obj33.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "[]");
        org.junit.Assert.assertNotNull(objSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(objEntrySet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.lang.String str30 = properties1.getProperty("tmlog");
        java.util.Properties properties31 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties1.elements();
        java.util.Properties properties33 = new java.util.Properties();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        boolean boolean51 = properties33.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties37);
        java.lang.Object obj52 = properties33.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setSerialJtaTransactions(false);
        java.lang.String str60 = atomikosProperties53.getOutputDir();
        atomikosProperties53.setLogBaseDir("tmlog");
        atomikosProperties53.setMaxTimeout((long) 'a');
        atomikosProperties53.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties67 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str68 = atomikosProperties67.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery69 = atomikosProperties67.getRecovery();
        atomikosProperties67.setEnableLogging(false);
        long long72 = atomikosProperties67.getMaxTimeout();
        atomikosProperties67.setTransactionManagerUniqueName("{10=#}");
        java.lang.String str75 = atomikosProperties67.getConsoleFileName();
        atomikosProperties67.setConsoleFileLimit((int) '#');
        int int78 = atomikosProperties67.getConsoleFileCount();
        java.lang.String str79 = atomikosProperties67.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties67.getConsoleLogLevel();
        java.util.Properties properties81 = atomikosProperties67.asProperties();
        java.lang.Object obj82 = properties33.put((java.lang.Object) false, (java.lang.Object) atomikosProperties67);
        properties33.clear();
        java.lang.Object obj84 = null;
        java.lang.Object obj85 = properties1.getOrDefault((java.lang.Object) properties33, obj84);
        java.io.InputStream inputStream86 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(recovery69);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 300000L + "'", long72 == 300000L);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "tm.out" + "'", str75, "tm.out");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "{10=#}" + "'", str79, "{10=#}");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertNull(obj82);
        org.junit.Assert.assertNull(obj85);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = atomikosProperties0.getRecovery();
        boolean boolean14 = atomikosProperties0.isSerialJtaTransactions();
        atomikosProperties0.setConsoleFileLimit(100);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(recovery13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setConsoleFileLimit((int) '4');
        int int17 = atomikosProperties10.getConsoleFileLimit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = atomikosProperties10.getRecovery();
        recovery18.setDelay(1L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(recovery18);
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.lang.String str26 = properties25.toString();
        int int27 = properties25.size();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet28 = properties25.entrySet();
        java.util.Enumeration<?> wildcardEnumeration29 = properties25.propertyNames();
        java.lang.String str32 = properties25.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=tm.out, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=35, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=0}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str26, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 18 + "'", int27 == 18);
        org.junit.Assert.assertNotNull(objEntrySet28);
        org.junit.Assert.assertNotNull(wildcardEnumeration29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str32, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.log_base_dir=, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Set<java.lang.Object> objSet24 = properties15.keySet();
        java.lang.Object obj27 = properties15.setProperty("tm.out", "{10=#}");
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        boolean boolean31 = properties29.isEmpty();
        java.util.Set<java.lang.String> strSet32 = properties29.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        java.lang.String str38 = atomikosProperties33.getOutputDir();
        java.util.Properties properties39 = atomikosProperties33.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        atomikosProperties40.setThreadedTwoPhaseCommit(true);
        atomikosProperties40.setSerialJtaTransactions(false);
        atomikosProperties40.setOutputDir("");
        java.lang.String str49 = atomikosProperties40.getConsoleFileName();
        java.lang.String str50 = atomikosProperties40.getLogBaseName();
        atomikosProperties40.setDefaultJtaTimeout(0L);
        java.lang.Object obj53 = properties29.putIfAbsent((java.lang.Object) atomikosProperties33, (java.lang.Object) atomikosProperties40);
        java.lang.String str55 = properties29.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties29.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setConsoleFileName("tm.out");
        java.lang.Object obj60 = properties15.put((java.lang.Object) objEnumeration56, (java.lang.Object) atomikosProperties57);
        boolean boolean61 = properties15.isEmpty();
        java.io.PrintStream printStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.list(printStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objSet24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(properties39);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tm.out" + "'", str49, "tm.out");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        java.util.Collection<java.lang.Object> objCollection5 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        boolean boolean13 = atomikosProperties6.isThreadedTwoPhaseCommit();
        java.lang.Object obj14 = null;
        java.lang.Object obj15 = properties1.getOrDefault((java.lang.Object) boolean13, obj14);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        boolean boolean18 = properties17.isEmpty();
        java.util.Properties properties19 = new java.util.Properties(properties17);
        java.lang.Object obj22 = properties19.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.lang.String str23 = properties19.toString();
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties25.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet31 = properties29.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        recovery32.setForgetOrphanedLogEntriesDelay((-1L));
        recovery32.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean38 = properties25.remove((java.lang.Object) properties29, (java.lang.Object) (-1));
        boolean boolean39 = properties25.isEmpty();
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.lang.String str42 = properties25.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties1.elements();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(objCollection5);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "{10=#}" + "'", str23, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEntrySet31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(objEnumeration44);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        long long8 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setConsoleFileCount((int) '4');
        atomikosProperties0.setLogBaseDir("{{}=}");
        java.lang.String str13 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setRetryInterval((long) 100);
        int int3 = recovery0.getMaxRetries();
        recovery0.setRetryInterval((long) 50);
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setMaxRetries(5);
        recovery0.setMaxRetries((int) (byte) 100);
        recovery0.setDelay((long) 5);
        long long14 = recovery0.getDelay();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 5L + "'", long14 == 5L);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties50 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties50.setCheckpointInterval((long) (byte) -1);
        atomikosProperties50.setThreadedTwoPhaseCommit(true);
        atomikosProperties50.setSerialJtaTransactions(false);
        java.lang.String str57 = atomikosProperties50.getLogBaseName();
        atomikosProperties50.setAllowSubTransactions(false);
        java.lang.String str60 = atomikosProperties50.getService();
        atomikosProperties50.setSerialJtaTransactions(true);
        atomikosProperties50.setForceShutdownOnVmExit(false);
        atomikosProperties50.setConsoleFileName("");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery67 = atomikosProperties50.getRecovery();
        boolean boolean68 = properties1.equals((java.lang.Object) atomikosProperties50);
        java.util.Map<java.lang.Object, java.lang.Object> objMap69 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.putAll(objMap69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tmlog" + "'", str57, "tmlog");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(recovery67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.lang.String str18 = properties15.getProperty("");
        properties12.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties21 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties21.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj24 = properties12.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties21);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties21.getConsoleLogLevel();
        atomikosProperties6.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        atomikosProperties0.setConsoleFileCount(5);
        atomikosProperties0.setAllowSubTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setLogBaseDir("");
        atomikosProperties32.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj61 = properties49.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties37.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties32.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties0.setMaxTimeout((long) (short) 10);
        int int69 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean72 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str18 = atomikosProperties8.getConsoleFileName();
        boolean boolean19 = atomikosProperties8.isThreadedTwoPhaseCommit();
        java.lang.String str20 = atomikosProperties8.getConsoleFileName();
        atomikosProperties8.setOutputDir("{{}=}");
        java.lang.String str23 = atomikosProperties8.getLogBaseDir();
        long long24 = atomikosProperties8.getMaxTimeout();
        atomikosProperties8.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties8.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tm.out" + "'", str18, "tm.out");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        int int24 = properties1.size();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        boolean boolean38 = properties26.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        boolean boolean48 = properties26.contains((java.lang.Object) properties40);
        boolean boolean49 = properties40.isEmpty();
        java.util.Properties properties50 = new java.util.Properties(properties40);
        boolean boolean51 = properties1.containsKey((java.lang.Object) properties40);
        java.util.Set<java.lang.Object> objSet52 = properties40.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties40.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        int int63 = properties55.size();
        java.lang.Object obj66 = properties55.setProperty("{}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Set<java.lang.Object> objSet67 = properties55.keySet();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        java.util.Enumeration<java.lang.Object> objEnumeration70 = properties69.elements();
        java.util.Properties properties71 = null;
        java.util.Properties properties72 = new java.util.Properties(properties71);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.elements();
        java.lang.String str75 = properties72.getProperty("");
        properties69.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties78 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties78.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj81 = properties69.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties78);
        java.lang.String str82 = atomikosProperties78.getConsoleFileName();
        atomikosProperties78.setMaxTimeout(300000L);
        atomikosProperties78.setThreadedTwoPhaseCommit(false);
        java.lang.Object obj87 = properties40.replace((java.lang.Object) properties55, (java.lang.Object) atomikosProperties78);
        java.lang.Object obj88 = properties55.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objSet52);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objSet67);
        org.junit.Assert.assertNotNull(objEnumeration70);
        org.junit.Assert.assertNotNull(objEnumeration73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "tm.out" + "'", str82, "tm.out");
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertNotNull(obj88);
        org.junit.Assert.assertEquals(obj88.toString(), "{{}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj88), "{{}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj88), "{{}={com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean4 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        int int7 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setAllowSubTransactions(true);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 50 + "'", int7 == 50);
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str11 = atomikosProperties10.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties10.getRecovery();
        atomikosProperties10.setEnableLogging(false);
        atomikosProperties10.setSerialJtaTransactions(true);
        java.lang.String str17 = atomikosProperties10.getOutputDir();
        java.lang.Object obj18 = properties1.get((java.lang.Object) atomikosProperties10);
        atomikosProperties10.setLogBaseName("{}");
        java.lang.String str21 = atomikosProperties10.getTransactionManagerUniqueName();
        int int22 = atomikosProperties10.getConsoleFileCount();
        java.lang.String str23 = atomikosProperties10.getTransactionManagerUniqueName();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(recovery12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.lang.String str11 = properties1.toString();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        boolean boolean14 = properties13.isEmpty();
        java.lang.String str16 = properties13.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet17 = properties13.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties13.entrySet();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        boolean boolean24 = properties23.isEmpty();
        java.util.Properties properties25 = new java.util.Properties(properties23);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet26 = properties23.entrySet();
        java.lang.Object obj27 = properties13.getOrDefault((java.lang.Object) properties20, (java.lang.Object) objEntrySet26);
        boolean boolean28 = properties1.contains((java.lang.Object) properties20);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties30.entrySet();
        java.util.Collection<java.lang.Object> objCollection46 = properties30.values();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        boolean boolean49 = properties48.isEmpty();
        java.util.Properties properties50 = new java.util.Properties(properties48);
        java.util.Collection<java.lang.Object> objCollection51 = properties48.values();
        java.lang.Object obj52 = properties48.clone();
        java.util.Properties properties53 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties48.elements();
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int59 = recovery58.getMaxRetries();
        boolean boolean60 = properties56.containsKey((java.lang.Object) recovery58);
        properties56.clear();
        java.util.Properties properties62 = new java.util.Properties(properties56);
        boolean boolean63 = properties48.containsKey((java.lang.Object) properties56);
        boolean boolean64 = properties1.remove((java.lang.Object) objCollection46, (java.lang.Object) boolean63);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "{}" + "'", str11, "{}");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(objSet17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEntrySet26);
        org.junit.Assert.assertNotNull(obj27);
// flaky:         org.junit.Assert.assertEquals(obj27.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj27), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNotNull(objCollection46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objCollection51);
        org.junit.Assert.assertNotNull(obj52);
        org.junit.Assert.assertEquals(obj52.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj52), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj52), "{}");
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 5 + "'", int59 == 5);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 1);
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setConsoleFileLimit((int) ' ');
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long16 = atomikosProperties0.getMaxTimeout();
        java.lang.String str17 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str18 = atomikosProperties0.getService();
        atomikosProperties0.setService("tmlog");
        atomikosProperties0.setConsoleFileLimit((int) '#');
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 300000L + "'", long16 == 300000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.lang.String str11 = properties8.getProperty("");
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        java.util.Enumeration<?> wildcardEnumeration13 = properties5.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setConsoleFileName("");
        java.lang.Object obj19 = properties5.get((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setConsoleFileName("");
        java.lang.String str25 = atomikosProperties20.getLogBaseName();
        long long26 = atomikosProperties20.getCheckpointInterval();
        atomikosProperties20.setForceShutdownOnVmExit(false);
        java.util.Properties properties29 = atomikosProperties20.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        boolean boolean31 = properties5.equals((java.lang.Object) objEnumeration30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties5.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setConsoleFileName("tm.out");
        atomikosProperties33.setMaxActives((int) '4');
        java.lang.Object obj38 = properties1.putIfAbsent((java.lang.Object) objEnumeration32, (java.lang.Object) '4');
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        recovery39.setForgetOrphanedLogEntriesDelay((-1L));
        recovery39.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery39.setForgetOrphanedLogEntriesDelay(100L);
        long long47 = recovery39.getDelay();
        recovery39.setDelay((long) (short) 10);
        long long50 = recovery39.getDelay();
        recovery39.setMaxRetries((int) (short) -1);
        int int53 = recovery39.getMaxRetries();
        long long54 = recovery39.getDelay();
        recovery39.setRetryInterval((long) (short) 10);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.util.Collection<java.lang.Object> objCollection61 = properties58.values();
        java.lang.String str62 = properties58.toString();
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        boolean boolean65 = properties64.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet66 = properties64.entrySet();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Object obj69 = properties64.replace((java.lang.Object) "hi!", obj68);
        boolean boolean71 = properties64.equals((java.lang.Object) 1.0f);
        java.util.Enumeration<java.lang.Object> objEnumeration72 = properties64.keys();
        java.util.Properties properties73 = null;
        java.util.Properties properties74 = new java.util.Properties(properties73);
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties74.elements();
        java.util.Properties properties76 = null;
        java.util.Properties properties77 = new java.util.Properties(properties76);
        java.util.Enumeration<java.lang.Object> objEnumeration78 = properties77.elements();
        java.lang.String str80 = properties77.getProperty("");
        properties74.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties77);
        java.util.Properties properties83 = null;
        java.util.Properties properties84 = new java.util.Properties(properties83);
        boolean boolean85 = properties84.isEmpty();
        boolean boolean86 = properties74.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean85);
        properties74.clear();
        int int88 = properties74.size();
        java.util.Set<java.lang.Object> objSet89 = properties74.keySet();
        java.lang.Object obj90 = properties58.putIfAbsent((java.lang.Object) properties64, (java.lang.Object) properties74);
        java.util.Properties properties91 = new java.util.Properties(properties58);
        java.util.Collection<java.lang.Object> objCollection92 = properties58.values();
        java.lang.Object obj93 = properties1.putIfAbsent((java.lang.Object) recovery39, (java.lang.Object) properties58);
        int int94 = properties1.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(wildcardEnumeration13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tmlog" + "'", str25, "tmlog");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertNotNull(properties29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 10000L + "'", long47 == 10000L);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 10L + "'", long50 == 10L);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10L + "'", long54 == 10L);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objCollection61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "{}" + "'", str62, "{}");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEntrySet66);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objEnumeration72);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNotNull(objEnumeration78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(objSet89);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(objCollection92);
        org.junit.Assert.assertNull(obj93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 2 + "'", int94 == 2);
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.lang.String str24 = properties15.toString();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet25 = properties15.entrySet();
        java.io.InputStream inputStream26 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties15.loadFromXML(inputStream26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "{}" + "'", str24, "{}");
        org.junit.Assert.assertNotNull(objEntrySet25);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = new java.util.Properties(properties1);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int11 = recovery10.getMaxRetries();
        boolean boolean12 = properties8.containsKey((java.lang.Object) recovery10);
        properties8.clear();
        java.util.Properties properties14 = new java.util.Properties(properties8);
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties16.isEmpty();
        java.util.Set<java.lang.String> strSet19 = properties16.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        java.lang.String str25 = atomikosProperties20.getOutputDir();
        java.util.Properties properties26 = atomikosProperties20.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setSerialJtaTransactions(false);
        atomikosProperties27.setOutputDir("");
        java.lang.String str36 = atomikosProperties27.getConsoleFileName();
        java.lang.String str37 = atomikosProperties27.getLogBaseName();
        atomikosProperties27.setDefaultJtaTimeout(0L);
        java.lang.Object obj40 = properties16.putIfAbsent((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties27);
        java.lang.String str42 = properties16.getProperty("hi!");
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties16.keys();
        boolean boolean44 = properties8.contains((java.lang.Object) properties16);
        java.util.Properties properties45 = new java.util.Properties(properties8);
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setThreadedTwoPhaseCommit(true);
        java.lang.String str52 = atomikosProperties47.getOutputDir();
        java.lang.String str53 = atomikosProperties47.getTransactionManagerUniqueName();
        int int54 = atomikosProperties47.getConsoleFileCount();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setConsoleFileName("");
        long long60 = atomikosProperties55.getMaxTimeout();
        java.util.Properties properties61 = atomikosProperties55.asProperties();
        long long62 = atomikosProperties55.getDefaultJtaTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel63 = atomikosProperties55.getConsoleLogLevel();
        atomikosProperties47.setConsoleLogLevel(atomikosLoggingLevel63);
        int int65 = atomikosProperties47.getMaxActives();
        java.lang.Object obj66 = properties45.remove((java.lang.Object) atomikosProperties47);
        java.util.Enumeration<java.lang.Object> objEnumeration67 = properties45.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties45.elements();
        java.util.Enumeration<?> wildcardEnumeration69 = properties45.propertyNames();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(properties26);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "tm.out" + "'", str36, "tm.out");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 300000L + "'", long60 == 300000L);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 10000L + "'", long62 == 10000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel63 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel63.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 50 + "'", int65 == 50);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEnumeration67);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(wildcardEnumeration69);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties1.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        boolean boolean6 = properties5.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet7 = properties5.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int9 = recovery8.getMaxRetries();
        recovery8.setForgetOrphanedLogEntriesDelay((-1L));
        recovery8.setForgetOrphanedLogEntriesDelay((long) (-1));
        boolean boolean14 = properties1.remove((java.lang.Object) properties5, (java.lang.Object) (-1));
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        java.lang.String str17 = atomikosProperties15.getLogBaseDir();
        int int18 = atomikosProperties15.getConsoleFileCount();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties20.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet23 = properties20.entrySet();
        boolean boolean25 = properties5.replace((java.lang.Object) atomikosProperties15, (java.lang.Object) properties20, (java.lang.Object) 1);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties27.isEmpty();
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties27);
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery34 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int35 = recovery34.getMaxRetries();
        boolean boolean36 = properties32.containsKey((java.lang.Object) recovery34);
        properties32.clear();
        boolean boolean38 = properties27.contains((java.lang.Object) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.lang.String str44 = atomikosProperties39.getOutputDir();
        java.lang.String str45 = atomikosProperties39.getTransactionManagerUniqueName();
        int int46 = atomikosProperties39.getConsoleFileCount();
        java.lang.String str47 = atomikosProperties39.getLogBaseDir();
        java.lang.String str48 = atomikosProperties39.getConsoleFileName();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        java.util.Properties properties52 = null;
        java.util.Properties properties53 = new java.util.Properties(properties52);
        java.util.Enumeration<java.lang.Object> objEnumeration54 = properties53.elements();
        java.lang.String str56 = properties53.getProperty("");
        properties50.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj62 = properties50.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties59);
        java.lang.Object obj63 = properties32.putIfAbsent((java.lang.Object) str48, (java.lang.Object) properties50);
        boolean boolean64 = properties32.isEmpty();
        java.lang.Class<?> wildcardClass65 = properties32.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(objEntrySet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 5 + "'", int9 == 5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNotNull(objEntrySet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 5 + "'", int35 == 5);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNotNull(objEnumeration54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        boolean boolean5 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        java.util.Properties properties10 = new java.util.Properties(properties8);
        java.util.Collection<java.lang.Object> objCollection11 = properties8.values();
        java.lang.Object obj12 = properties8.clone();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        boolean boolean15 = properties14.isEmpty();
        boolean boolean17 = properties14.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet18 = properties14.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        atomikosProperties19.setSerialJtaTransactions(true);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.lang.String str33 = properties30.getProperty("");
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        boolean boolean39 = properties27.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean38);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.lang.String str47 = properties44.getProperty("");
        properties41.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties44);
        boolean boolean49 = properties27.contains((java.lang.Object) properties41);
        java.util.Set<java.lang.Object> objSet50 = properties41.keySet();
        java.lang.Object obj51 = properties14.getOrDefault((java.lang.Object) true, (java.lang.Object) properties41);
        properties41.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        atomikosProperties53.setSerialJtaTransactions(false);
        java.lang.String str60 = atomikosProperties53.getLogBaseName();
        atomikosProperties53.setAllowSubTransactions(false);
        java.lang.String str63 = atomikosProperties53.getService();
        atomikosProperties53.setSerialJtaTransactions(true);
        atomikosProperties53.setAllowSubTransactions(true);
        boolean boolean68 = properties8.remove((java.lang.Object) properties41, (java.lang.Object) atomikosProperties53);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setCheckpointInterval((long) (byte) -1);
        atomikosProperties69.setThreadedTwoPhaseCommit(true);
        atomikosProperties69.setForceShutdownOnVmExit(true);
        atomikosProperties69.setConsoleFileName("hi!");
        atomikosProperties69.setAllowSubTransactions(true);
        atomikosProperties69.setAllowSubTransactions(false);
        java.util.Properties properties82 = atomikosProperties69.asProperties();
        java.lang.Object obj83 = properties1.getOrDefault((java.lang.Object) atomikosProperties53, (java.lang.Object) atomikosProperties69);
        java.util.Enumeration<?> wildcardEnumeration84 = properties1.propertyNames();
        java.util.Properties properties85 = new java.util.Properties(properties1);
        java.lang.Object obj86 = properties1.clone();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objCollection11);
        org.junit.Assert.assertNotNull(obj12);
        org.junit.Assert.assertEquals(obj12.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj12), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj12), "{}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(objSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objSet50);
        org.junit.Assert.assertNotNull(obj51);
        org.junit.Assert.assertEquals(obj51.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj51), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj51), "{}");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "tmlog" + "'", str60, "tmlog");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(properties82);
        org.junit.Assert.assertNotNull(obj83);
        org.junit.Assert.assertNotNull(wildcardEnumeration84);
        org.junit.Assert.assertNotNull(obj86);
        org.junit.Assert.assertEquals(obj86.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj86), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj86), "{}");
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        boolean boolean5 = properties1.isEmpty();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        java.lang.Object obj14 = properties7.setProperty("", "");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.lang.String str19 = properties16.getProperty("hi!");
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        recovery24.setRetryInterval((long) (short) -1);
        recovery24.setRetryInterval((long) 0);
        recovery24.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass33 = recovery24.getClass();
        java.lang.Object obj34 = properties16.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        java.lang.String str39 = properties36.getProperty("hi!");
        java.util.Set<java.lang.String> strSet40 = properties36.stringPropertyNames();
        java.lang.Object obj41 = new java.lang.Object();
        boolean boolean42 = properties7.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties36, obj41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties7.keys();
        java.lang.Object obj46 = properties7.setProperty("{tm.out=hi!}", "");
        java.lang.Object obj47 = properties1.remove((java.lang.Object) properties7);
        java.lang.String str48 = properties1.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties1.elements();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "{}" + "'", str48, "{}");
        org.junit.Assert.assertNotNull(objEnumeration49);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        java.lang.Object obj37 = properties1.clone();
        boolean boolean38 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties1.keys();
        java.util.Set<java.lang.Object> objSet40 = properties1.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objSet40);
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet30 = properties28.entrySet();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Object obj33 = properties28.replace((java.lang.Object) "hi!", obj32);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        java.util.Properties properties37 = new java.util.Properties(properties35);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet38 = properties35.entrySet();
        java.lang.Object obj39 = properties25.replace((java.lang.Object) "hi!", (java.lang.Object) properties35);
        java.lang.String str40 = properties35.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties41 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties41.setCheckpointInterval((long) (byte) -1);
        atomikosProperties41.setConsoleFileName("");
        java.lang.String str46 = atomikosProperties41.getLogBaseName();
        long long47 = atomikosProperties41.getCheckpointInterval();
        java.lang.String str48 = atomikosProperties41.getLogBaseDir();
        java.lang.String str49 = atomikosProperties41.getConsoleFileName();
        java.lang.String str50 = atomikosProperties41.getLogBaseDir();
        long long51 = atomikosProperties41.getDefaultJtaTimeout();
        java.lang.Object obj52 = properties35.remove((java.lang.Object) long51);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objEntrySet30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objEntrySet38);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "{}" + "'", str40, "{}");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "tmlog" + "'", str46, "tmlog");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + (-1L) + "'", long47 == (-1L));
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 10000L + "'", long51 == 10000L);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setMaxActives(100);
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        java.lang.String str12 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setTransactionManagerUniqueName("{10=#}");
        java.lang.String str15 = atomikosProperties0.getLogBaseDir();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "tmlog" + "'", str12, "tmlog");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setMaxRetries((-1));
        long long3 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay(300000L);
        recovery0.setDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) 0);
        recovery0.setRetryInterval(100L);
        recovery0.setDelay((long) (short) 1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery2 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setSerialJtaTransactions(true);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        atomikosProperties17.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties17.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel23);
        atomikosProperties0.setDefaultJtaTimeout(86400000L);
        boolean boolean27 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties0.getRecovery();
        long long29 = atomikosProperties0.getMaxTimeout();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(recovery2);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 300000L + "'", long29 == 300000L);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "tmlog" + "'", str2, "tmlog");
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setMaxTimeout(300000L);
        atomikosProperties4.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setMaxTimeout((long) (byte) -1);
        boolean boolean25 = properties1.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties16);
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("{[]=WARN}");
        atomikosProperties16.setTransactionManagerUniqueName("{10=#}");
        boolean boolean32 = atomikosProperties16.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        long long14 = atomikosProperties10.getMaxTimeout();
        atomikosProperties10.setConsoleFileLimit(50);
        boolean boolean17 = atomikosProperties10.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 300000L + "'", long14 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        long long5 = atomikosProperties0.getDefaultJtaTimeout();
        int int6 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.util.Set<java.lang.String> strSet7 = properties1.stringPropertyNames();
        java.lang.String str8 = properties1.toString();
        java.io.PrintStream printStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{}" + "'", str8, "{}");
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties1.keys();
        java.util.Enumeration<?> wildcardEnumeration7 = properties1.propertyNames();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(outputStream8, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={10=#}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(wildcardEnumeration7);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setForceShutdownOnVmExit(true);
        atomikosProperties0.setConsoleFileName("hi!");
        atomikosProperties0.setService("{}");
        atomikosProperties0.setEnableLogging(false);
        int int13 = atomikosProperties0.getMaxActives();
        atomikosProperties0.setMaxActives(35);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.util.Set<java.lang.Object> objSet21 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setAllowSubTransactions(false);
        atomikosProperties22.setTransactionManagerUniqueName("tmlog");
        boolean boolean29 = properties1.containsKey((java.lang.Object) "tmlog");
        java.lang.String str31 = properties1.getProperty("{}");
        java.lang.String str32 = properties1.toString();
        java.lang.Object obj35 = properties1.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=-1, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=false, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name={10=#}, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet21);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "{}" + "'", str32, "{}");
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel10 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseName("{}");
        java.lang.String str13 = atomikosProperties0.getService();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel10 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel10.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        atomikosProperties16.setTransactionManagerUniqueName("tmlog");
        atomikosProperties16.setLogBaseDir("");
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        boolean boolean43 = properties1.remove((java.lang.Object) "", (java.lang.Object) boolean42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties1.elements();
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties1.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        boolean boolean49 = properties48.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery50 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int51 = recovery50.getMaxRetries();
        boolean boolean52 = properties48.containsKey((java.lang.Object) recovery50);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties63 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties63.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj66 = properties54.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties63);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties63.getConsoleLogLevel();
        int int68 = atomikosProperties63.getConsoleFileCount();
        java.lang.Object obj69 = properties48.get((java.lang.Object) atomikosProperties63);
        atomikosProperties63.setSerialJtaTransactions(true);
        java.util.Properties properties72 = atomikosProperties63.asProperties();
        java.lang.String str73 = properties72.toString();
        int int74 = properties72.size();
        java.util.Enumeration<java.lang.Object> objEnumeration75 = properties72.keys();
        java.lang.Object obj76 = properties1.get((java.lang.Object) objEnumeration75);
        java.io.Writer writer77 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.store(writer77, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 5 + "'", int51 == 5);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(properties72);
// flaky:         org.junit.Assert.assertEquals("'" + str73 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str73, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 18 + "'", int74 == 18);
        org.junit.Assert.assertNotNull(objEnumeration75);
        org.junit.Assert.assertNull(obj76);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        boolean boolean7 = properties1.isEmpty();
        java.util.Collection<java.lang.Object> objCollection8 = properties1.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery9.setRetryInterval((long) 100);
        recovery9.setDelay((long) 50);
        recovery9.setDelay(300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery16 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery16.setRetryInterval((long) 100);
        int int19 = recovery16.getMaxRetries();
        recovery16.setDelay((long) (short) 100);
        recovery16.setDelay((long) (byte) 1);
        boolean boolean24 = properties1.remove((java.lang.Object) recovery9, (java.lang.Object) recovery16);
        recovery16.setRetryInterval(0L);
        long long27 = recovery16.getRetryInterval();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objCollection8);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str11 = atomikosProperties0.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery12 = atomikosProperties0.getRecovery();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tmlog" + "'", str11, "tmlog");
        org.junit.Assert.assertNotNull(recovery12);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj14 = properties2.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties11.setConsoleFileLimit((int) '4');
        atomikosProperties11.setForceShutdownOnVmExit(true);
        int int20 = atomikosProperties11.getMaxActives();
        boolean boolean21 = properties0.contains((java.lang.Object) int20);
        int int22 = properties0.size();
        java.util.Set<java.lang.Object> objSet23 = properties0.keySet();
        java.util.Properties properties24 = new java.util.Properties(properties0);
        java.lang.Object obj27 = properties0.setProperty("{}", "{}");
        java.util.Collection<java.lang.Object> objCollection28 = properties0.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.lang.String str34 = atomikosProperties29.getOutputDir();
        boolean boolean35 = atomikosProperties29.isForceShutdownOnVmExit();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        java.lang.String str40 = properties37.getProperty("hi!");
        boolean boolean42 = properties37.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet43 = properties37.keySet();
        java.lang.Object obj44 = properties37.clone();
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.lang.String str52 = properties49.getProperty("");
        properties46.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties49);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj58 = properties46.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties55);
        atomikosProperties55.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel61 = atomikosProperties55.getConsoleLogLevel();
        boolean boolean62 = atomikosProperties55.isEnableLogging();
        boolean boolean63 = atomikosProperties55.isSerialJtaTransactions();
        atomikosProperties55.setEnableLogging(true);
        long long66 = atomikosProperties55.getMaxTimeout();
        int int67 = atomikosProperties55.getConsoleFileCount();
        java.util.Properties properties68 = null;
        java.util.Properties properties69 = new java.util.Properties(properties68);
        boolean boolean70 = properties69.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery71 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int72 = recovery71.getMaxRetries();
        boolean boolean73 = properties69.containsKey((java.lang.Object) recovery71);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties78.elements();
        java.lang.String str81 = properties78.getProperty("");
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties84 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties84.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj87 = properties75.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties84);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel88 = atomikosProperties84.getConsoleLogLevel();
        int int89 = atomikosProperties84.getConsoleFileCount();
        java.lang.Object obj90 = properties69.get((java.lang.Object) atomikosProperties84);
        long long91 = atomikosProperties84.getMaxTimeout();
        java.lang.String str92 = atomikosProperties84.getConsoleFileName();
        java.lang.Object obj93 = properties37.getOrDefault((java.lang.Object) int67, (java.lang.Object) atomikosProperties84);
        java.lang.Object obj94 = properties0.getOrDefault((java.lang.Object) atomikosProperties29, obj93);
        java.io.InputStream inputStream95 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.loadFromXML(inputStream95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(obj58);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel61 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel61.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 300000L + "'", long66 == 300000L);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 5 + "'", int72 == 5);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(obj87);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel88 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel88.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 1 + "'", int89 == 1);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 300000L + "'", long91 == 300000L);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "tm.out" + "'", str92, "tm.out");
        org.junit.Assert.assertNotNull(obj93);
        org.junit.Assert.assertNotNull(obj94);
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.util.Properties properties9 = new java.util.Properties(properties1);
        properties1.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties1.elements();
        java.util.Enumeration<?> wildcardEnumeration12 = properties1.propertyNames();
        boolean boolean13 = properties1.isEmpty();
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int18 = recovery17.getMaxRetries();
        boolean boolean19 = properties15.containsKey((java.lang.Object) recovery17);
        long long20 = recovery17.getDelay();
        recovery17.setForgetOrphanedLogEntriesDelay(10L);
        java.lang.Object obj23 = properties1.remove((java.lang.Object) recovery17);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties1.elements();
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.storeToXML(outputStream25, "{{}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(wildcardEnumeration12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(objEnumeration24);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.lang.String str37 = properties34.getProperty("");
        properties31.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties34);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties40.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj43 = properties31.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties40);
        atomikosProperties40.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel46 = atomikosProperties40.getConsoleLogLevel();
        java.lang.String str47 = atomikosProperties40.getTransactionManagerUniqueName();
        java.lang.Object obj48 = properties1.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties40);
        java.lang.String str49 = properties1.toString();
        java.util.Collection<java.lang.Object> objCollection50 = properties1.values();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.lang.String str58 = properties55.getProperty("");
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties55);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties61 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties61.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj64 = properties52.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties61);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        boolean boolean67 = properties66.isEmpty();
        properties52.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties66);
        java.lang.Object obj69 = properties52.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties70 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str71 = atomikosProperties70.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery72 = atomikosProperties70.getRecovery();
        atomikosProperties70.setEnableLogging(false);
        boolean boolean75 = properties52.equals((java.lang.Object) atomikosProperties70);
        java.lang.String str76 = atomikosProperties70.getOutputDir();
        atomikosProperties70.setLogBaseName("{}");
        atomikosProperties70.setConsoleFileLimit((int) (byte) 10);
        atomikosProperties70.setCheckpointInterval(0L);
        java.util.Properties properties83 = atomikosProperties70.asProperties();
        atomikosProperties70.setConsoleFileLimit((int) (short) 0);
        boolean boolean86 = properties1.contains((java.lang.Object) (short) 0);
        java.lang.String str88 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel46 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel46.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "{}" + "'", str49, "{}");
        org.junit.Assert.assertNotNull(objCollection50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(obj69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(recovery72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(properties83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties15.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj18 = properties6.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties15);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties15.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel19);
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Properties properties23 = atomikosProperties0.asProperties();
        atomikosProperties0.setTransactionManagerUniqueName("tm.out");
        atomikosProperties0.setConsoleFileLimit(52);
        atomikosProperties0.setConsoleFileLimit(0);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(properties23);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str20 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties19.getRecovery();
        atomikosProperties19.setEnableLogging(false);
        boolean boolean24 = properties1.equals((java.lang.Object) atomikosProperties19);
        java.lang.String str25 = atomikosProperties19.getOutputDir();
        atomikosProperties19.setSerialJtaTransactions(true);
        atomikosProperties19.setLogBaseName("{10=#}");
        atomikosProperties19.setEnableLogging(false);
        boolean boolean32 = atomikosProperties19.isThreadedTwoPhaseCommit();
        java.lang.String str33 = atomikosProperties19.getTransactionManagerUniqueName();
        atomikosProperties19.setEnableLogging(true);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setLogBaseName("");
        atomikosProperties0.setOutputDir("{tm.out=hi!}");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setMaxTimeout((long) 'a');
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        boolean boolean10 = properties1.contains((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        atomikosProperties11.setSerialJtaTransactions(false);
        atomikosProperties11.setOutputDir("");
        java.lang.String str20 = atomikosProperties11.getConsoleFileName();
        java.lang.String str21 = atomikosProperties11.getLogBaseName();
        atomikosProperties11.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel24 = atomikosProperties11.getConsoleLogLevel();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        boolean boolean30 = properties26.containsKey((java.lang.Object) recovery28);
        properties26.clear();
        boolean boolean33 = properties26.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        boolean boolean36 = properties35.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        java.lang.String str42 = atomikosProperties37.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        java.util.Enumeration<java.lang.Object> objEnumeration50 = properties49.elements();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties52.elements();
        java.lang.String str55 = properties52.getProperty("");
        properties49.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj61 = properties49.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties58);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties58.getConsoleLogLevel();
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel62);
        atomikosProperties37.setConsoleLogLevel(atomikosLoggingLevel62);
        boolean boolean66 = properties26.replace((java.lang.Object) properties35, (java.lang.Object) atomikosProperties37, (java.lang.Object) 10.0d);
        java.util.Properties properties67 = new java.util.Properties(properties26);
        boolean boolean68 = properties26.isEmpty();
        int int69 = properties26.size();
        java.lang.Object obj70 = properties1.replace((java.lang.Object) atomikosLoggingLevel24, (java.lang.Object) properties26);
        boolean boolean71 = properties1.isEmpty();
        java.util.Enumeration<?> wildcardEnumeration72 = properties1.propertyNames();
        java.util.Properties properties73 = new java.util.Properties(properties1);
        java.io.Reader reader74 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties73.load(reader74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "tm.out" + "'", str20, "tm.out");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel24 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel24.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration50);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardEnumeration72);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setConsoleFileName("");
        atomikosProperties37.setCheckpointInterval((long) 100);
        boolean boolean44 = atomikosProperties37.isAllowSubTransactions();
        java.util.Properties properties45 = atomikosProperties37.asProperties();
        java.lang.String str47 = properties45.getProperty("{}");
        java.util.Properties properties48 = new java.util.Properties(properties45);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int50 = recovery49.getMaxRetries();
        recovery49.setForgetOrphanedLogEntriesDelay((-1L));
        long long53 = recovery49.getForgetOrphanedLogEntriesDelay();
        recovery49.setMaxRetries((int) (short) 0);
        long long56 = recovery49.getRetryInterval();
        long long57 = recovery49.getForgetOrphanedLogEntriesDelay();
        long long58 = recovery49.getRetryInterval();
        int int59 = recovery49.getMaxRetries();
        long long60 = recovery49.getDelay();
        java.lang.Object obj61 = properties1.put((java.lang.Object) properties48, (java.lang.Object) long60);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        boolean boolean64 = properties63.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery65 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int66 = recovery65.getMaxRetries();
        boolean boolean67 = properties63.containsKey((java.lang.Object) recovery65);
        properties63.clear();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        boolean boolean71 = properties70.isEmpty();
        java.lang.String str73 = properties70.getProperty("hi!");
        boolean boolean75 = properties70.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet76 = properties70.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties77 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties77.setCheckpointInterval((long) (byte) -1);
        atomikosProperties77.setThreadedTwoPhaseCommit(true);
        java.lang.String str82 = atomikosProperties77.getOutputDir();
        atomikosProperties77.setConsoleFileName("tmlog");
        boolean boolean85 = properties70.contains((java.lang.Object) "tmlog");
        java.lang.Object obj86 = properties63.get((java.lang.Object) properties70);
        java.util.Set<java.lang.String> strSet87 = properties63.stringPropertyNames();
        properties63.clear();
        java.util.Enumeration<?> wildcardEnumeration89 = properties63.propertyNames();
        java.lang.Object obj90 = properties1.remove((java.lang.Object) wildcardEnumeration89);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(properties45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 5 + "'", int50 == 5);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + (-1L) + "'", long53 == (-1L));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + (-1L) + "'", long57 == (-1L));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 10000L + "'", long58 == 10000L);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 10000L + "'", long60 == 10000L);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 5 + "'", int66 == 5);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(objSet76);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(wildcardEnumeration89);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(objEntrySet5);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isEnableLogging();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        int int8 = recovery7.getMaxRetries();
        recovery7.setForgetOrphanedLogEntriesDelay((long) (short) 10);
        long long11 = recovery7.getDelay();
        long long12 = recovery7.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet13 = properties11.entrySet();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Object obj16 = properties11.replace((java.lang.Object) "hi!", obj15);
        java.lang.Object obj17 = properties11.clone();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        java.lang.String str22 = properties19.getProperty("hi!");
        java.util.Set<java.lang.String> strSet23 = properties19.stringPropertyNames();
        java.lang.Object obj24 = properties19.clone();
        boolean boolean25 = properties1.remove(obj17, obj24);
        java.util.Enumeration<?> wildcardEnumeration26 = properties1.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties1.elements();
        properties1.clear();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEntrySet13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "{}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertEquals(obj24.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj24), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj24), "{}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNotNull(objEnumeration27);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setForceShutdownOnVmExit(false);
        atomikosProperties10.setDefaultJtaTimeout((long) (byte) 10);
        boolean boolean23 = atomikosProperties10.isSerialJtaTransactions();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = new java.util.Properties(properties1);
        int int15 = properties14.size();
        java.util.Properties properties16 = new java.util.Properties();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        java.lang.String str24 = properties21.getProperty("");
        properties18.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties21);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        boolean boolean29 = properties28.isEmpty();
        boolean boolean30 = properties18.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean29);
        boolean boolean31 = properties18.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties18.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setConsoleFileName("");
        java.lang.String str38 = atomikosProperties33.getLogBaseName();
        long long39 = atomikosProperties33.getCheckpointInterval();
        java.lang.String str40 = atomikosProperties33.getLogBaseDir();
        atomikosProperties33.setEnableLogging(true);
        java.lang.Object obj43 = properties16.putIfAbsent((java.lang.Object) objEnumeration32, (java.lang.Object) atomikosProperties33);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery47 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int48 = recovery47.getMaxRetries();
        boolean boolean49 = properties45.containsKey((java.lang.Object) recovery47);
        recovery47.setRetryInterval((long) (short) -1);
        recovery47.setDelay(10L);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        boolean boolean56 = properties55.isEmpty();
        java.lang.Object obj57 = properties16.getOrDefault((java.lang.Object) recovery47, (java.lang.Object) properties55);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties16.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties16.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int61 = recovery60.getMaxRetries();
        recovery60.setForgetOrphanedLogEntriesDelay((-1L));
        recovery60.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery60.setForgetOrphanedLogEntriesDelay(100L);
        long long68 = recovery60.getDelay();
        recovery60.setDelay((long) (short) 10);
        long long71 = recovery60.getDelay();
        recovery60.setMaxRetries((int) (short) -1);
        int int74 = recovery60.getMaxRetries();
        recovery60.setRetryInterval((long) '4');
        recovery60.setDelay(52L);
        recovery60.setMaxRetries((int) (short) 0);
        recovery60.setRetryInterval(0L);
        long long83 = recovery60.getDelay();
        java.lang.Object obj84 = properties14.replace((java.lang.Object) properties16, (java.lang.Object) recovery60);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-1L) + "'", long39 == (-1L));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 5 + "'", int48 == 5);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(obj57);
        org.junit.Assert.assertEquals(obj57.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj57), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj57), "{}");
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 10000L + "'", long68 == 10000L);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 10L + "'", long71 == 10L);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 52L + "'", long83 == 52L);
        org.junit.Assert.assertNull(obj84);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        atomikosProperties0.setCheckpointInterval((long) (short) 1);
        boolean boolean15 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties0.getConsoleLogLevel();
        int int17 = atomikosProperties0.getMaxActives();
        boolean boolean18 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setMaxTimeout(86400000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 50 + "'", int17 == 50);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int18 = recovery17.getMaxRetries();
        boolean boolean19 = properties15.containsKey((java.lang.Object) recovery17);
        properties15.clear();
        java.util.Properties properties21 = new java.util.Properties(properties15);
        int int22 = properties15.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        long long29 = atomikosProperties23.getCheckpointInterval();
        atomikosProperties23.setAllowSubTransactions(false);
        long long32 = atomikosProperties23.getCheckpointInterval();
        java.lang.Object obj33 = properties15.remove((java.lang.Object) long32);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj37 = properties15.setProperty("{10=#}", "tmlog");
        java.util.Properties properties38 = new java.util.Properties(properties15);
        java.util.Enumeration<?> wildcardEnumeration39 = properties15.propertyNames();
        java.util.Set<java.lang.Object> objSet40 = properties15.keySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 5 + "'", int18 == 5);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-1L) + "'", long29 == (-1L));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNotNull(objSet40);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        long long9 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setOutputDir("tmlog");
        atomikosProperties0.setEnableLogging(false);
        atomikosProperties0.setAllowSubTransactions(true);
        atomikosProperties0.setConsoleFileName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel18 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseName("{{}=}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel18 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel18.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean3 = properties1.isEmpty();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.lang.String str11 = properties8.getProperty("");
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj17 = properties5.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties14);
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        boolean boolean20 = properties19.isEmpty();
        properties5.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties19);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        atomikosProperties22.setConsoleFileName("");
        java.lang.String str27 = atomikosProperties22.getLogBaseName();
        long long28 = atomikosProperties22.getCheckpointInterval();
        atomikosProperties22.setForceShutdownOnVmExit(false);
        java.util.Properties properties31 = atomikosProperties22.asProperties();
        boolean boolean32 = atomikosProperties22.isAllowSubTransactions();
        java.lang.Object obj33 = null;
        java.lang.Object obj34 = properties5.getOrDefault((java.lang.Object) boolean32, obj33);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery38 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int39 = recovery38.getMaxRetries();
        boolean boolean40 = properties36.containsKey((java.lang.Object) recovery38);
        properties36.clear();
        boolean boolean43 = properties36.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        boolean boolean46 = properties45.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setConsoleFileName("");
        java.lang.String str52 = atomikosProperties47.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        atomikosProperties53.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties58 = null;
        java.util.Properties properties59 = new java.util.Properties(properties58);
        java.util.Enumeration<java.lang.Object> objEnumeration60 = properties59.elements();
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.lang.String str65 = properties62.getProperty("");
        properties59.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties62);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties68.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj71 = properties59.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties68);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        atomikosProperties53.setConsoleLogLevel(atomikosLoggingLevel72);
        atomikosProperties47.setConsoleLogLevel(atomikosLoggingLevel72);
        boolean boolean76 = properties36.replace((java.lang.Object) properties45, (java.lang.Object) atomikosProperties47, (java.lang.Object) 10.0d);
        java.util.Set<java.lang.Object> objSet77 = properties45.keySet();
        boolean boolean78 = properties5.containsValue((java.lang.Object) properties45);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Collection<java.lang.Object> objCollection80 = properties5.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties81 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties81.setLogBaseDir("");
        atomikosProperties81.setForceShutdownOnVmExit(false);
        int int86 = atomikosProperties81.getConsoleFileCount();
        boolean boolean87 = atomikosProperties81.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery88 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int89 = recovery88.getMaxRetries();
        recovery88.setForgetOrphanedLogEntriesDelay((-1L));
        long long92 = recovery88.getForgetOrphanedLogEntriesDelay();
        recovery88.setRetryInterval((long) (short) 0);
        java.lang.Object obj95 = properties5.putIfAbsent((java.lang.Object) boolean87, (java.lang.Object) (short) 0);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet96 = properties5.entrySet();
        java.util.Properties properties97 = new java.util.Properties(properties5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-1L) + "'", long28 == (-1L));
        org.junit.Assert.assertNotNull(properties31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 5 + "'", int39 == 5);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tmlog" + "'", str52, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration60);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(objSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objCollection80);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + (-1L) + "'", long92 == (-1L));
        org.junit.Assert.assertNull(obj95);
        org.junit.Assert.assertNotNull(objEntrySet96);
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj14 = properties2.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties11.setConsoleFileLimit((int) '4');
        atomikosProperties11.setForceShutdownOnVmExit(true);
        int int20 = atomikosProperties11.getMaxActives();
        boolean boolean21 = properties0.contains((java.lang.Object) int20);
        int int22 = properties0.size();
        java.util.Set<java.lang.Object> objSet23 = properties0.keySet();
        java.util.Properties properties24 = new java.util.Properties(properties0);
        java.lang.Object obj27 = properties0.setProperty("{}", "{}");
        java.util.Collection<java.lang.Object> objCollection28 = properties0.values();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties0.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties30 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties30.setCheckpointInterval((long) (byte) -1);
        atomikosProperties30.setThreadedTwoPhaseCommit(true);
        atomikosProperties30.setSerialJtaTransactions(false);
        java.lang.String str37 = atomikosProperties30.getOutputDir();
        atomikosProperties30.setLogBaseDir("tmlog");
        atomikosProperties30.setForceShutdownOnVmExit(false);
        java.lang.String str42 = atomikosProperties30.getLogBaseDir();
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        java.lang.String str57 = atomikosProperties53.getConsoleFileName();
        java.lang.String str58 = atomikosProperties53.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties53.getConsoleLogLevel();
        atomikosProperties30.setConsoleLogLevel(atomikosLoggingLevel59);
        java.util.Properties properties61 = null;
        java.util.Properties properties62 = new java.util.Properties(properties61);
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties62.elements();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.lang.String str68 = properties65.getProperty("");
        properties62.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties65);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj74 = properties62.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties71);
        atomikosProperties71.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = atomikosProperties71.getConsoleLogLevel();
        atomikosProperties71.setCheckpointInterval((long) 1);
        atomikosProperties71.setAllowSubTransactions(false);
        java.lang.String str82 = atomikosProperties71.getOutputDir();
        boolean boolean83 = atomikosProperties71.isForceShutdownOnVmExit();
        atomikosProperties71.setOutputDir("{}");
        boolean boolean86 = atomikosProperties71.isForceShutdownOnVmExit();
        boolean boolean87 = atomikosProperties71.isAllowSubTransactions();
        java.lang.String str88 = atomikosProperties71.getService();
        java.util.Properties properties89 = atomikosProperties71.asProperties();
        java.lang.Object obj90 = properties0.replace((java.lang.Object) atomikosProperties30, (java.lang.Object) atomikosProperties71);
        atomikosProperties71.setLogBaseName("");
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objCollection28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "tmlog" + "'", str42, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "tm.out" + "'", str57, "tm.out");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "tmlog" + "'", str58, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel77 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel77.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(properties89);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        int int6 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setLogBaseDir("");
        boolean boolean9 = atomikosProperties0.isSerialJtaTransactions();
        long long10 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setCheckpointInterval(1L);
        int int13 = atomikosProperties0.getConsoleFileCount();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.lang.String str44 = properties41.getProperty("");
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj50 = properties38.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setConsoleFileName("");
        java.lang.Object obj53 = properties1.get((java.lang.Object) atomikosProperties47);
        boolean boolean54 = atomikosProperties47.isForceShutdownOnVmExit();
        atomikosProperties47.setConsoleFileLimit(1);
        atomikosProperties47.setMaxTimeout((long) (-1));
        int int59 = atomikosProperties47.getMaxActives();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel60 = atomikosProperties47.getConsoleLogLevel();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 50 + "'", int59 == 50);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel60 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel60.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        atomikosProperties8.setEnableLogging(false);
        boolean boolean15 = atomikosProperties8.isAllowSubTransactions();
        atomikosProperties8.setThreadedTwoPhaseCommit(true);
        atomikosProperties8.setConsoleFileCount((int) '4');
        boolean boolean20 = atomikosProperties8.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel14 = atomikosProperties10.getConsoleLogLevel();
        java.lang.String str15 = atomikosProperties10.getConsoleFileName();
        java.lang.String str16 = atomikosProperties10.getOutputDir();
        atomikosProperties10.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel14 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel14.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties3 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties3.setCheckpointInterval((long) (byte) -1);
        java.lang.String str6 = atomikosProperties3.getLogBaseDir();
        atomikosProperties3.setSerialJtaTransactions(true);
        long long9 = atomikosProperties3.getMaxTimeout();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties11.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet14 = properties11.entrySet();
        boolean boolean15 = properties1.remove((java.lang.Object) atomikosProperties3, (java.lang.Object) objEntrySet14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties1.keys();
        java.util.Properties properties17 = new java.util.Properties();
        java.util.Properties properties18 = null;
        java.util.Properties properties19 = new java.util.Properties(properties18);
        java.util.Enumeration<java.lang.Object> objEnumeration20 = properties19.elements();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties22.elements();
        java.lang.String str25 = properties22.getProperty("");
        properties19.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        boolean boolean31 = properties19.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean30);
        boolean boolean32 = properties19.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties19.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        atomikosProperties34.setEnableLogging(true);
        java.lang.Object obj44 = properties17.putIfAbsent((java.lang.Object) objEnumeration33, (java.lang.Object) atomikosProperties34);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties17.keys();
        java.lang.String str47 = properties17.getProperty("tm.out");
        java.util.Properties properties48 = null;
        java.util.Properties properties49 = new java.util.Properties(properties48);
        boolean boolean50 = properties49.isEmpty();
        java.util.Properties properties51 = new java.util.Properties(properties49);
        java.lang.Object obj52 = properties17.get((java.lang.Object) properties51);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        boolean boolean65 = properties64.isEmpty();
        boolean boolean66 = properties54.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean65);
        boolean boolean67 = properties54.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties54.keys();
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        java.util.Set<java.lang.Object> objSet70 = properties54.keySet();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties54);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setThreadedTwoPhaseCommit(true);
        atomikosProperties72.setSerialJtaTransactions(false);
        java.lang.String str79 = atomikosProperties72.getLogBaseName();
        atomikosProperties72.setDefaultJtaTimeout((long) (short) 1);
        java.lang.Class<?> wildcardClass82 = atomikosProperties72.getClass();
        java.lang.Object obj83 = properties54.get((java.lang.Object) atomikosProperties72);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 300000L + "'", long9 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNotNull(objEntrySet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration20);
        org.junit.Assert.assertNotNull(objEnumeration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(objSet70);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "tmlog" + "'", str79, "tmlog");
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNull(obj83);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties15.elements();
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        java.util.Enumeration<java.lang.Object> objEnumeration19 = properties18.elements();
        java.lang.String str21 = properties18.getProperty("");
        properties15.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties18);
        boolean boolean23 = properties1.contains((java.lang.Object) properties15);
        java.util.Properties properties24 = null;
        java.util.Properties properties25 = new java.util.Properties(properties24);
        boolean boolean26 = properties25.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties25.entrySet();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Object obj30 = properties25.replace((java.lang.Object) "hi!", obj29);
        boolean boolean32 = properties25.equals((java.lang.Object) 1.0f);
        java.util.Properties properties33 = new java.util.Properties(properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        java.lang.String str42 = atomikosProperties34.getConsoleFileName();
        java.util.Properties properties43 = atomikosProperties34.asProperties();
        java.lang.Object obj44 = properties1.replace((java.lang.Object) properties33, (java.lang.Object) properties43);
        java.lang.Object obj45 = null;
        boolean boolean46 = properties33.equals(obj45);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        atomikosProperties57.setSerialJtaTransactions(false);
        int int63 = atomikosProperties57.getConsoleFileCount();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        boolean boolean66 = properties65.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties65.entrySet();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Object obj70 = properties65.replace((java.lang.Object) "hi!", obj69);
        boolean boolean72 = properties65.equals((java.lang.Object) 1.0f);
        java.util.Properties properties73 = new java.util.Properties(properties65);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.lang.String str78 = properties75.getProperty("");
        properties73.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties75);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet80 = properties75.entrySet();
        java.lang.Object obj81 = properties33.putIfAbsent((java.lang.Object) atomikosProperties57, (java.lang.Object) properties75);
        java.util.Enumeration<java.lang.Object> objEnumeration82 = properties75.keys();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertNotNull(objEnumeration19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(properties43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertNull(obj70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(objEntrySet80);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(objEnumeration82);
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str3 = properties1.toString();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setMaxTimeout(300000L);
        atomikosProperties4.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        atomikosProperties16.setCheckpointInterval((long) 100);
        atomikosProperties16.setMaxTimeout((long) (byte) -1);
        boolean boolean25 = properties1.remove((java.lang.Object) false, (java.lang.Object) atomikosProperties16);
        java.lang.String str26 = properties1.toString();
        properties1.clear();
        java.io.InputStream inputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "{}" + "'", str3, "{}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "{}" + "'", str26, "{}");
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        atomikosProperties0.setConsoleFileLimit(1);
        atomikosProperties0.setMaxActives((int) (byte) -1);
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        long long13 = atomikosProperties0.getCheckpointInterval();
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.lang.String str44 = properties41.getProperty("");
        properties38.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties41);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj50 = properties38.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties47);
        atomikosProperties47.setConsoleFileName("");
        java.lang.Object obj53 = properties1.get((java.lang.Object) atomikosProperties47);
        boolean boolean54 = atomikosProperties47.isForceShutdownOnVmExit();
        atomikosProperties47.setConsoleFileLimit(1);
        java.lang.String str57 = atomikosProperties47.getOutputDir();
        boolean boolean58 = atomikosProperties47.isSerialJtaTransactions();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(obj50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        atomikosProperties6.setLogBaseName("");
        atomikosProperties6.setSerialJtaTransactions(true);
        atomikosProperties6.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties6.setMaxActives((int) 'a');
        boolean boolean28 = atomikosProperties6.isForceShutdownOnVmExit();
        boolean boolean29 = atomikosProperties6.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        int int16 = atomikosProperties10.getConsoleFileCount();
        boolean boolean17 = atomikosProperties10.isForceShutdownOnVmExit();
        atomikosProperties10.setAllowSubTransactions(false);
        int int20 = atomikosProperties10.getConsoleFileLimit();
        atomikosProperties10.setEnableLogging(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = atomikosProperties10.getRecovery();
        atomikosProperties10.setSerialJtaTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(recovery23);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setThreadedTwoPhaseCommit(true);
        atomikosProperties27.setForceShutdownOnVmExit(true);
        atomikosProperties27.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel36 = atomikosProperties27.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel37 = atomikosProperties27.getConsoleLogLevel();
        long long38 = atomikosProperties27.getMaxTimeout();
        java.lang.Class<?> wildcardClass39 = atomikosProperties27.getClass();
        boolean boolean40 = properties1.containsKey((java.lang.Object) wildcardClass39);
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        boolean boolean43 = properties42.isEmpty();
        java.lang.String str45 = properties42.getProperty("hi!");
        boolean boolean47 = properties42.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet48 = properties42.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int50 = atomikosProperties49.getMaxActives();
        boolean boolean51 = properties42.equals((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setSerialJtaTransactions(false);
        int int54 = atomikosProperties49.getMaxActives();
        atomikosProperties49.setConsoleFileCount(52);
        java.util.Properties properties57 = atomikosProperties49.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery58 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery58.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int61 = recovery58.getMaxRetries();
        int int62 = recovery58.getMaxRetries();
        long long63 = recovery58.getRetryInterval();
        long long64 = recovery58.getForgetOrphanedLogEntriesDelay();
        int int65 = recovery58.getMaxRetries();
        recovery58.setRetryInterval((long) 1);
        long long68 = recovery58.getForgetOrphanedLogEntriesDelay();
        boolean boolean69 = properties57.containsKey((java.lang.Object) long68);
        java.util.Properties properties70 = null;
        java.util.Properties properties71 = new java.util.Properties(properties70);
        boolean boolean72 = properties71.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery73 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int74 = recovery73.getMaxRetries();
        boolean boolean75 = properties71.containsKey((java.lang.Object) recovery73);
        recovery73.setRetryInterval((long) (short) -1);
        recovery73.setRetryInterval((long) 0);
        boolean boolean80 = properties57.containsKey((java.lang.Object) 0);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery81 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int82 = recovery81.getMaxRetries();
        recovery81.setForgetOrphanedLogEntriesDelay((-1L));
        long long85 = recovery81.getForgetOrphanedLogEntriesDelay();
        recovery81.setRetryInterval((long) 52);
        recovery81.setForgetOrphanedLogEntriesDelay((long) ' ');
        java.lang.Object obj90 = properties57.remove((java.lang.Object) recovery81);
        boolean boolean91 = properties1.equals((java.lang.Object) recovery81);
        recovery81.setRetryInterval(52L);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel36 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel36.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel37 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel37.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 300000L + "'", long38 == 300000L);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objSet48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 50 + "'", int50 == 50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 50 + "'", int54 == 50);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 5 + "'", int62 == 5);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 10000L + "'", long63 == 10000L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 5 + "'", int65 == 5);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 5 + "'", int74 == 5);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 5 + "'", int82 == 5);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + (-1L) + "'", long85 == (-1L));
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        java.lang.Object obj29 = properties25.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties25.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        boolean boolean34 = properties32.isEmpty();
        java.util.Set<java.lang.String> strSet35 = properties32.stringPropertyNames();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery39 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int40 = recovery39.getMaxRetries();
        boolean boolean41 = properties37.containsKey((java.lang.Object) recovery39);
        recovery39.setRetryInterval((long) (short) -1);
        recovery39.setRetryInterval((long) 0);
        recovery39.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass48 = recovery39.getClass();
        boolean boolean49 = properties32.contains((java.lang.Object) recovery39);
        boolean boolean50 = properties25.equals((java.lang.Object) boolean49);
        int int51 = properties25.size();
        boolean boolean52 = properties25.isEmpty();
        java.util.Set<java.lang.String> strSet53 = properties25.stringPropertyNames();
        int int54 = properties25.size();
        java.lang.Object obj57 = properties25.setProperty("{{}=tmlog}", "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 19 + "'", int51 == 19);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 19 + "'", int54 == 19);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties6.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties6.getConsoleLogLevel();
        boolean boolean17 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        int int18 = atomikosProperties6.getConsoleFileLimit();
        atomikosProperties6.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str21 = atomikosProperties6.getOutputDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}" + "'", str21, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties1.setProperty("{}", "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int8 = atomikosProperties7.getMaxActives();
        java.lang.String str9 = atomikosProperties7.getTransactionManagerUniqueName();
        atomikosProperties7.setDefaultJtaTimeout((long) (byte) 0);
        atomikosProperties7.setMaxTimeout((long) '#');
        atomikosProperties7.setLogBaseDir("tm.out");
        boolean boolean16 = properties1.equals((java.lang.Object) "tm.out");
        java.lang.String str17 = properties1.toString();
        java.util.Collection<java.lang.Object> objCollection18 = properties1.values();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj32 = properties20.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties29);
        atomikosProperties29.setSerialJtaTransactions(false);
        int int35 = atomikosProperties29.getConsoleFileCount();
        boolean boolean36 = atomikosProperties29.isForceShutdownOnVmExit();
        atomikosProperties29.setAllowSubTransactions(false);
        int int39 = atomikosProperties29.getConsoleFileLimit();
        int int40 = atomikosProperties29.getConsoleFileCount();
        int int41 = atomikosProperties29.getMaxActives();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        boolean boolean44 = properties43.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet45 = properties43.entrySet();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Object obj48 = properties43.replace((java.lang.Object) "hi!", obj47);
        boolean boolean50 = properties43.equals((java.lang.Object) 1.0f);
        java.util.Properties properties51 = new java.util.Properties(properties43);
        properties43.clear();
        java.util.Enumeration<java.lang.Object> objEnumeration53 = properties43.elements();
        java.util.Properties properties54 = new java.util.Properties(properties43);
        java.util.Properties properties55 = null;
        java.util.Properties properties56 = new java.util.Properties(properties55);
        boolean boolean57 = properties56.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet58 = properties56.entrySet();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Object obj61 = properties56.replace((java.lang.Object) "hi!", obj60);
        java.util.Set<java.lang.String> strSet62 = properties56.stringPropertyNames();
        java.lang.String str63 = properties56.toString();
        java.util.Set<java.lang.String> strSet64 = properties56.stringPropertyNames();
        boolean boolean65 = properties43.equals((java.lang.Object) properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties56.keys();
        java.lang.Object obj67 = properties1.getOrDefault((java.lang.Object) int41, (java.lang.Object) properties56);
        java.lang.String str68 = properties1.toString();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        boolean boolean71 = properties70.isEmpty();
        java.util.Properties properties72 = new java.util.Properties(properties70);
        java.util.Enumeration<java.lang.Object> objEnumeration73 = properties72.keys();
        properties72.clear();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties72);
        java.io.PrintStream printStream76 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.list(printStream76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 50 + "'", int8 == 50);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "{{}=}" + "'", str17, "{{}=}");
        org.junit.Assert.assertNotNull(objCollection18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 50 + "'", int41 == 50);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(objEntrySet45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(objEnumeration53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(objEntrySet58);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "{}" + "'", str63, "{}");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(obj67);
        org.junit.Assert.assertEquals(obj67.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj67), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj67), "{}");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "{{}=}" + "'", str68, "{{}=}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(objEnumeration73);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        int int7 = atomikosProperties0.getConsoleFileLimit();
        atomikosProperties0.setConsoleFileName("tm.out");
        java.lang.String str10 = atomikosProperties0.getService();
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.lang.Object obj27 = properties1.clone();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.String str35 = properties32.getProperty("");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj41 = properties29.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties38);
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        boolean boolean44 = properties43.isEmpty();
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.lang.Object obj46 = properties29.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str48 = atomikosProperties47.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery49 = atomikosProperties47.getRecovery();
        atomikosProperties47.setEnableLogging(false);
        boolean boolean52 = properties29.equals((java.lang.Object) atomikosProperties47);
        int int53 = atomikosProperties47.getConsoleFileCount();
        atomikosProperties47.setSerialJtaTransactions(false);
        atomikosProperties47.setSerialJtaTransactions(true);
        boolean boolean58 = atomikosProperties47.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties47.getConsoleLogLevel();
        boolean boolean60 = properties1.equals((java.lang.Object) atomikosProperties47);
        atomikosProperties47.setConsoleFileLimit(19);
        atomikosProperties47.setAllowSubTransactions(false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(recovery49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setThreadedTwoPhaseCommit(true);
        atomikosProperties4.setSerialJtaTransactions(false);
        atomikosProperties4.setOutputDir("");
        java.lang.String str13 = atomikosProperties4.getConsoleFileName();
        java.lang.String str14 = atomikosProperties4.getLogBaseName();
        atomikosProperties4.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel17 = atomikosProperties4.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel17);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel19 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setLogBaseName("{tm.out=hi!}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "tm.out" + "'", str13, "tm.out");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tmlog" + "'", str14, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel17 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel17.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel19 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel19.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.io.OutputStream outputStream4 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties3.storeToXML(outputStream4, "hi!", "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery9 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int10 = recovery9.getMaxRetries();
        boolean boolean11 = properties7.containsKey((java.lang.Object) recovery9);
        recovery9.setRetryInterval((long) (short) -1);
        recovery9.setRetryInterval((long) 0);
        recovery9.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass18 = recovery9.getClass();
        java.lang.Object obj19 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery9);
        java.util.Properties properties20 = new java.util.Properties(properties1);
        java.util.Enumeration<?> wildcardEnumeration21 = properties20.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet22 = properties20.entrySet();
        java.util.Enumeration<java.lang.Object> objEnumeration23 = properties20.keys();
        java.io.OutputStream outputStream24 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties20.store(outputStream24, "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 5 + "'", int10 == 5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(wildcardEnumeration21);
        org.junit.Assert.assertNotNull(objEntrySet22);
        org.junit.Assert.assertNotNull(objEnumeration23);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Set<java.lang.String> strSet36 = properties31.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration37 = properties31.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str39 = atomikosProperties38.getLogBaseDir();
        atomikosProperties38.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str43 = atomikosProperties42.getLogBaseDir();
        java.lang.String str44 = atomikosProperties42.getLogBaseDir();
        boolean boolean45 = atomikosProperties42.isAllowSubTransactions();
        boolean boolean46 = atomikosProperties42.isSerialJtaTransactions();
        atomikosProperties42.setService("");
        int int49 = atomikosProperties42.getConsoleFileCount();
        java.lang.String str50 = atomikosProperties42.getTransactionManagerUniqueName();
        java.lang.Object obj51 = properties31.getOrDefault((java.lang.Object) atomikosProperties38, (java.lang.Object) str50);
        java.lang.String str52 = properties31.toString();
        java.lang.Object obj53 = properties31.clone();
        boolean boolean54 = properties26.containsValue(obj53);
        java.lang.String str56 = properties26.getProperty("{[]=WARN}");
        boolean boolean57 = properties26.isEmpty();
        java.io.PrintStream printStream58 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties26.list(printStream58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(wildcardEnumeration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "{}" + "'", str52, "{}");
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertEquals(obj53.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj53), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj53), "{}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        int int24 = properties1.size();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        boolean boolean38 = properties26.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean37);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        boolean boolean48 = properties26.contains((java.lang.Object) properties40);
        boolean boolean49 = properties40.isEmpty();
        java.util.Properties properties50 = new java.util.Properties(properties40);
        boolean boolean51 = properties1.containsKey((java.lang.Object) properties40);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        java.lang.String str55 = atomikosProperties52.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery56 = atomikosProperties52.getRecovery();
        java.util.Properties properties57 = atomikosProperties52.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        atomikosProperties58.setConsoleFileName("");
        long long63 = atomikosProperties58.getMaxTimeout();
        atomikosProperties58.setConsoleFileLimit(100);
        atomikosProperties58.setConsoleFileLimit((int) ' ');
        boolean boolean68 = properties57.containsValue((java.lang.Object) ' ');
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        boolean boolean73 = properties70.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties74 = null;
        java.util.Properties properties75 = new java.util.Properties(properties74);
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties75.elements();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        java.util.Enumeration<java.lang.Object> objEnumeration79 = properties78.elements();
        java.lang.String str81 = properties78.getProperty("");
        properties75.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties78);
        java.util.Enumeration<?> wildcardEnumeration83 = properties75.propertyNames();
        boolean boolean84 = properties70.containsValue((java.lang.Object) wildcardEnumeration83);
        boolean boolean85 = properties57.contains((java.lang.Object) wildcardEnumeration83);
        boolean boolean86 = properties40.contains((java.lang.Object) properties57);
        java.util.Enumeration<?> wildcardEnumeration87 = properties40.propertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration88 = properties40.keys();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(recovery56);
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 300000L + "'", long63 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertNotNull(objEnumeration79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(wildcardEnumeration83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration87);
        org.junit.Assert.assertNotNull(objEnumeration88);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.lang.Object obj4 = properties1.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet5 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        long long11 = atomikosProperties6.getMaxTimeout();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        java.util.Properties properties17 = null;
        java.util.Properties properties18 = new java.util.Properties(properties17);
        boolean boolean19 = properties18.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet20 = properties18.entrySet();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Object obj23 = properties18.replace((java.lang.Object) "hi!", obj22);
        boolean boolean25 = properties18.equals((java.lang.Object) 1.0f);
        boolean boolean26 = properties13.containsKey((java.lang.Object) boolean25);
        java.lang.Object obj27 = properties1.put((java.lang.Object) atomikosProperties6, (java.lang.Object) properties13);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties30.isEmpty();
        java.lang.Object obj33 = properties13.replace((java.lang.Object) 100.0f, (java.lang.Object) boolean32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties34 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties34.setCheckpointInterval((long) (byte) -1);
        atomikosProperties34.setConsoleFileName("");
        java.lang.String str39 = atomikosProperties34.getLogBaseName();
        long long40 = atomikosProperties34.getCheckpointInterval();
        java.lang.String str41 = atomikosProperties34.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties42 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties42.setCheckpointInterval((long) (byte) -1);
        atomikosProperties42.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        java.util.Enumeration<java.lang.Object> objEnumeration52 = properties51.elements();
        java.lang.String str54 = properties51.getProperty("");
        properties48.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties51);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties57 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties57.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj60 = properties48.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties57);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel61 = atomikosProperties57.getConsoleLogLevel();
        atomikosProperties42.setConsoleLogLevel(atomikosLoggingLevel61);
        atomikosProperties34.setConsoleLogLevel(atomikosLoggingLevel61);
        atomikosProperties34.setCheckpointInterval(10L);
        boolean boolean66 = properties13.equals((java.lang.Object) atomikosProperties34);
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        boolean boolean69 = properties68.isEmpty();
        java.util.Properties properties70 = new java.util.Properties(properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setCheckpointInterval((long) (byte) -1);
        atomikosProperties71.setThreadedTwoPhaseCommit(true);
        atomikosProperties71.setSerialJtaTransactions(false);
        atomikosProperties71.setOutputDir("");
        java.lang.String str80 = atomikosProperties71.getConsoleFileName();
        java.lang.String str81 = atomikosProperties71.getLogBaseName();
        atomikosProperties71.setEnableLogging(false);
        atomikosProperties71.setEnableLogging(false);
        boolean boolean86 = atomikosProperties71.isAllowSubTransactions();
        atomikosProperties71.setMaxTimeout((-1L));
        long long89 = atomikosProperties71.getMaxTimeout();
        boolean boolean90 = properties70.containsKey((java.lang.Object) long89);
        properties13.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        java.util.Set<java.lang.Object> objSet92 = properties13.keySet();
        boolean boolean93 = properties13.isEmpty();
        org.junit.Assert.assertNull(obj4);
        org.junit.Assert.assertNotNull(objEntrySet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 300000L + "'", long11 == 300000L);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(objEntrySet20);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "tmlog" + "'", str39, "tmlog");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNotNull(objEnumeration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel61 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel61.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "tm.out" + "'", str80, "tm.out");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "tmlog" + "'", str81, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + (-1L) + "'", long89 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(objSet92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Set<java.lang.String> strSet5 = properties1.stringPropertyNames();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        java.lang.Object obj14 = properties7.setProperty("", "");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        java.lang.String str19 = properties16.getProperty("hi!");
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        recovery24.setRetryInterval((long) (short) -1);
        recovery24.setRetryInterval((long) 0);
        recovery24.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass33 = recovery24.getClass();
        java.lang.Object obj34 = properties16.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery24);
        java.util.Properties properties35 = null;
        java.util.Properties properties36 = new java.util.Properties(properties35);
        boolean boolean37 = properties36.isEmpty();
        java.lang.String str39 = properties36.getProperty("hi!");
        java.util.Set<java.lang.String> strSet40 = properties36.stringPropertyNames();
        java.lang.Object obj41 = new java.lang.Object();
        boolean boolean42 = properties7.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties36, obj41);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties53 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties53.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj56 = properties44.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties53);
        atomikosProperties53.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel59 = atomikosProperties53.getConsoleLogLevel();
        boolean boolean60 = properties7.containsValue((java.lang.Object) atomikosProperties53);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration62 = properties7.keys();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel59 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel59.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objEnumeration62);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.String str5 = properties3.getProperty("tmlog");
        java.util.Enumeration<?> wildcardEnumeration6 = properties3.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int8 = recovery7.getMaxRetries();
        recovery7.setForgetOrphanedLogEntriesDelay((-1L));
        long long11 = recovery7.getForgetOrphanedLogEntriesDelay();
        long long12 = recovery7.getForgetOrphanedLogEntriesDelay();
        recovery7.setRetryInterval((long) 100);
        int int15 = recovery7.getMaxRetries();
        boolean boolean16 = properties3.containsValue((java.lang.Object) int15);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(wildcardEnumeration6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 5 + "'", int8 == 5);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setTransactionManagerUniqueName("");
        atomikosProperties0.setCheckpointInterval((long) (byte) 10);
        long long14 = atomikosProperties0.getDefaultJtaTimeout();
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet16 = properties15.keySet();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertNotNull(objSet16);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        atomikosProperties4.setForceShutdownOnVmExit(false);
        java.util.Properties properties13 = atomikosProperties4.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.util.Collection<java.lang.Object> objCollection15 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        java.lang.String str23 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseName("hi!");
        boolean boolean26 = properties1.remove((java.lang.Object) properties13, (java.lang.Object) "hi!");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet27 = properties13.entrySet();
        java.lang.Object obj28 = null;
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Set<java.lang.String> strSet38 = properties33.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration39 = properties33.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getLogBaseDir();
        atomikosProperties40.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getLogBaseDir();
        java.lang.String str46 = atomikosProperties44.getLogBaseDir();
        boolean boolean47 = atomikosProperties44.isAllowSubTransactions();
        boolean boolean48 = atomikosProperties44.isSerialJtaTransactions();
        atomikosProperties44.setService("");
        int int51 = atomikosProperties44.getConsoleFileCount();
        java.lang.String str52 = atomikosProperties44.getTransactionManagerUniqueName();
        java.lang.Object obj53 = properties33.getOrDefault((java.lang.Object) atomikosProperties40, (java.lang.Object) str52);
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.util.Properties properties60 = new java.util.Properties(properties58);
        java.lang.Object obj63 = properties60.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet64 = properties60.keySet();
        java.lang.Object obj65 = properties33.putIfAbsent((java.lang.Object) objEnumeration56, (java.lang.Object) properties60);
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.util.Properties properties69 = null;
        java.util.Properties properties70 = new java.util.Properties(properties69);
        java.util.Enumeration<java.lang.Object> objEnumeration71 = properties70.elements();
        java.lang.String str73 = properties70.getProperty("");
        properties67.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties70);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties76 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties76.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj79 = properties67.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties76);
        atomikosProperties76.setSerialJtaTransactions(false);
        boolean boolean82 = atomikosProperties76.isForceShutdownOnVmExit();
        java.lang.String str83 = atomikosProperties76.getService();
        atomikosProperties76.setConsoleFileLimit(0);
        boolean boolean86 = properties60.containsKey((java.lang.Object) atomikosProperties76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj87 = properties13.putIfAbsent(obj28, (java.lang.Object) boolean86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEntrySet27);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(objSet64);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNotNull(objEnumeration71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        long long11 = atomikosProperties5.getCheckpointInterval();
        java.lang.String str12 = atomikosProperties5.getLogBaseDir();
        atomikosProperties5.setEnableLogging(true);
        long long15 = atomikosProperties5.getDefaultJtaTimeout();
        boolean boolean16 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str17 = atomikosProperties5.getOutputDir();
        atomikosProperties5.setTransactionManagerUniqueName("{}");
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        java.util.Enumeration<java.lang.Object> objEnumeration22 = properties21.elements();
        boolean boolean24 = properties21.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.lang.String str32 = properties29.getProperty("");
        properties26.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties29);
        java.util.Enumeration<?> wildcardEnumeration34 = properties26.propertyNames();
        boolean boolean35 = properties21.containsValue((java.lang.Object) wildcardEnumeration34);
        java.lang.Object obj36 = properties1.put((java.lang.Object) atomikosProperties5, (java.lang.Object) properties21);
        boolean boolean37 = atomikosProperties5.isAllowSubTransactions();
        java.lang.String str38 = atomikosProperties5.getLogBaseName();
        long long39 = atomikosProperties5.getDefaultJtaTimeout();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(objEnumeration22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(wildcardEnumeration34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setSerialJtaTransactions(false);
        atomikosProperties6.setOutputDir("");
        java.lang.String str15 = atomikosProperties6.getConsoleFileName();
        java.lang.String str16 = atomikosProperties6.getLogBaseName();
        atomikosProperties6.setEnableLogging(false);
        boolean boolean19 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        int int20 = properties1.size();
        java.lang.Object obj23 = properties1.setProperty("{10=#}", "{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties24 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties24.setCheckpointInterval((long) (byte) -1);
        atomikosProperties24.setThreadedTwoPhaseCommit(true);
        atomikosProperties24.setSerialJtaTransactions(false);
        atomikosProperties24.setOutputDir("");
        java.lang.String str33 = atomikosProperties24.getConsoleFileName();
        java.lang.String str34 = atomikosProperties24.getLogBaseName();
        atomikosProperties24.setEnableLogging(false);
        atomikosProperties24.setEnableLogging(false);
        java.lang.String str39 = atomikosProperties24.getLogBaseDir();
        long long40 = atomikosProperties24.getCheckpointInterval();
        atomikosProperties24.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        long long49 = atomikosProperties43.getCheckpointInterval();
        java.lang.String str50 = atomikosProperties43.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties51 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties51.setCheckpointInterval((long) (byte) -1);
        atomikosProperties51.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.lang.String str63 = properties60.getProperty("");
        properties57.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties60);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties66 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties66.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj69 = properties57.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties66);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel70 = atomikosProperties66.getConsoleLogLevel();
        atomikosProperties51.setConsoleLogLevel(atomikosLoggingLevel70);
        atomikosProperties43.setConsoleLogLevel(atomikosLoggingLevel70);
        atomikosProperties43.setCheckpointInterval(10L);
        boolean boolean75 = atomikosProperties43.isThreadedTwoPhaseCommit();
        boolean boolean76 = atomikosProperties43.isEnableLogging();
        java.util.Properties properties77 = null;
        java.util.Properties properties78 = new java.util.Properties(properties77);
        boolean boolean79 = properties78.isEmpty();
        java.lang.String str81 = properties78.getProperty("hi!");
        boolean boolean83 = properties78.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet84 = properties78.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties85 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int86 = atomikosProperties85.getMaxActives();
        boolean boolean87 = properties78.equals((java.lang.Object) atomikosProperties85);
        atomikosProperties85.setSerialJtaTransactions(false);
        int int90 = atomikosProperties85.getMaxActives();
        boolean boolean91 = atomikosProperties85.isEnableLogging();
        java.lang.String str92 = atomikosProperties85.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery93 = atomikosProperties85.getRecovery();
        long long94 = recovery93.getDelay();
        boolean boolean95 = properties1.replace((java.lang.Object) atomikosProperties24, (java.lang.Object) boolean76, (java.lang.Object) recovery93);
        long long96 = recovery93.getDelay();
        int int97 = recovery93.getMaxRetries();
        recovery93.setRetryInterval(1L);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "tmlog" + "'", str16, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "tm.out" + "'", str33, "tm.out");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "tmlog" + "'", str34, "tmlog");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + (-1L) + "'", long40 == (-1L));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel70 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel70.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(objSet84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 50 + "'", int86 == 50);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 50 + "'", int90 == 50);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "tmlog" + "'", str92, "tmlog");
        org.junit.Assert.assertNotNull(recovery93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 10000L + "'", long94 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + long96 + "' != '" + 10000L + "'", long96 == 10000L);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 5 + "'", int97 == 5);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean4 = properties1.containsKey((java.lang.Object) 10.0f);
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.lang.String str12 = properties9.getProperty("");
        properties6.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties9);
        java.util.Enumeration<?> wildcardEnumeration14 = properties6.propertyNames();
        boolean boolean15 = properties1.containsValue((java.lang.Object) wildcardEnumeration14);
        java.lang.String str16 = properties1.toString();
        int int17 = properties1.size();
        boolean boolean18 = properties1.isEmpty();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(wildcardEnumeration14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "{}" + "'", str16, "{}");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setMaxActives(100);
        java.util.Properties properties11 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        java.lang.String str19 = atomikosProperties12.getOutputDir();
        atomikosProperties12.setLogBaseDir("tmlog");
        java.lang.String str22 = atomikosProperties12.getOutputDir();
        java.lang.String str23 = atomikosProperties12.getOutputDir();
        boolean boolean24 = properties11.contains((java.lang.Object) atomikosProperties12);
        java.util.Enumeration<java.lang.Object> objEnumeration25 = properties11.elements();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objEnumeration25);
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setConsoleFileName("");
        java.lang.String str28 = atomikosProperties23.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties29 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties29.setCheckpointInterval((long) (byte) -1);
        atomikosProperties29.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel48 = atomikosProperties44.getConsoleLogLevel();
        atomikosProperties29.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel48);
        atomikosProperties23.setConsoleFileCount(5);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery53 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery53.setMaxRetries((-1));
        long long56 = recovery53.getRetryInterval();
        java.lang.Object obj57 = properties1.replace((java.lang.Object) 5, (java.lang.Object) long56);
        java.lang.Object obj58 = properties1.clone();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet59 = properties1.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery60.setMaxRetries((-1));
        java.lang.Object obj63 = properties1.remove((java.lang.Object) (-1));
        java.lang.String str64 = properties1.toString();
        java.util.Collection<java.lang.Object> objCollection65 = properties1.values();
        java.io.Reader reader66 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(reader66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "tmlog" + "'", str28, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel48 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel48.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 10000L + "'", long56 == 10000L);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(obj58);
        org.junit.Assert.assertEquals(obj58.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj58), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj58), "{}");
        org.junit.Assert.assertNotNull(objEntrySet59);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "{}" + "'", str64, "{}");
        org.junit.Assert.assertNotNull(objCollection65);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setConsoleFileName("");
        java.lang.String str10 = atomikosProperties5.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        atomikosProperties11.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties26.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj29 = properties17.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties26);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel30 = atomikosProperties26.getConsoleLogLevel();
        atomikosProperties11.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties5.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel30);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setCheckpointInterval((long) ' ');
        atomikosProperties0.setMaxActives((int) (byte) 0);
        java.lang.String str40 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel30 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel30.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "tmlog" + "'", str40, "tmlog");
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.lang.String str4 = properties1.getProperty("hi!");
        boolean boolean6 = properties1.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet7 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties8 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int9 = atomikosProperties8.getMaxActives();
        boolean boolean10 = properties1.equals((java.lang.Object) atomikosProperties8);
        atomikosProperties8.setSerialJtaTransactions(false);
        int int13 = atomikosProperties8.getMaxActives();
        atomikosProperties8.setConsoleFileCount(52);
        java.util.Properties properties16 = atomikosProperties8.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery17 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery17.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int20 = recovery17.getMaxRetries();
        int int21 = recovery17.getMaxRetries();
        long long22 = recovery17.getRetryInterval();
        long long23 = recovery17.getForgetOrphanedLogEntriesDelay();
        int int24 = recovery17.getMaxRetries();
        recovery17.setRetryInterval((long) 1);
        long long27 = recovery17.getForgetOrphanedLogEntriesDelay();
        boolean boolean28 = properties16.containsKey((java.lang.Object) long27);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Set<java.lang.String> strSet38 = properties33.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        atomikosProperties39.setSerialJtaTransactions(false);
        atomikosProperties39.setOutputDir("");
        java.lang.String str48 = atomikosProperties39.getConsoleFileName();
        java.lang.String str49 = atomikosProperties39.getLogBaseName();
        atomikosProperties39.setEnableLogging(false);
        atomikosProperties39.setEnableLogging(false);
        long long54 = atomikosProperties39.getDefaultJtaTimeout();
        java.lang.Object obj55 = properties16.putIfAbsent((java.lang.Object) properties33, (java.lang.Object) atomikosProperties39);
        java.lang.Object obj56 = null;
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery60 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int61 = recovery60.getMaxRetries();
        boolean boolean62 = properties58.containsKey((java.lang.Object) recovery60);
        java.util.Properties properties63 = null;
        java.util.Properties properties64 = new java.util.Properties(properties63);
        java.util.Enumeration<java.lang.Object> objEnumeration65 = properties64.elements();
        java.util.Properties properties66 = null;
        java.util.Properties properties67 = new java.util.Properties(properties66);
        java.util.Enumeration<java.lang.Object> objEnumeration68 = properties67.elements();
        java.lang.String str70 = properties67.getProperty("");
        properties64.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties67);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties73 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties73.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj76 = properties64.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties73);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel77 = atomikosProperties73.getConsoleLogLevel();
        int int78 = atomikosProperties73.getConsoleFileCount();
        java.lang.Object obj79 = properties58.get((java.lang.Object) atomikosProperties73);
        atomikosProperties73.setConsoleFileName("");
        int int82 = atomikosProperties73.getConsoleFileCount();
        atomikosProperties73.setConsoleFileName("");
        java.lang.String str85 = atomikosProperties73.getTransactionManagerUniqueName();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = properties16.remove(obj56, (java.lang.Object) atomikosProperties73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objSet7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 50 + "'", int9 == 50);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 50 + "'", int13 == 50);
        org.junit.Assert.assertNotNull(properties16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 5 + "'", int20 == 5);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 5 + "'", int21 == 5);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tm.out" + "'", str48, "tm.out");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 5 + "'", int61 == 5);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objEnumeration65);
        org.junit.Assert.assertNotNull(objEnumeration68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel77 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel77.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertNull(obj79);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        properties4.clear();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean23 = properties11.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean22);
        boolean boolean24 = properties11.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        boolean boolean29 = properties26.containsKey((java.lang.Object) 10.0f);
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.lang.String str31 = properties11.toString();
        java.lang.String str33 = properties11.getProperty("hi!");
        boolean boolean34 = properties11.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties11.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setThreadedTwoPhaseCommit(true);
        atomikosProperties36.setSerialJtaTransactions(false);
        java.lang.String str43 = atomikosProperties36.getLogBaseName();
        atomikosProperties36.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = atomikosProperties36.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties47 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties47.setCheckpointInterval((long) (byte) -1);
        atomikosProperties47.setConsoleFileName("");
        long long52 = atomikosProperties47.getMaxTimeout();
        java.util.Properties properties53 = atomikosProperties47.asProperties();
        long long54 = atomikosProperties47.getDefaultJtaTimeout();
        boolean boolean55 = properties4.replace((java.lang.Object) objEnumeration35, (java.lang.Object) recovery46, (java.lang.Object) long54);
        long long56 = recovery46.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "{}" + "'", str31, "{}");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertNotNull(recovery46);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 300000L + "'", long52 == 300000L);
        org.junit.Assert.assertNotNull(properties53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 10000L + "'", long54 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 86400000L + "'", long56 == 86400000L);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        boolean boolean30 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        java.lang.Object obj42 = properties15.putIfAbsent((java.lang.Object) objEnumeration31, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        recovery46.setRetryInterval((long) (short) -1);
        recovery46.setDelay(10L);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.Object obj56 = properties15.getOrDefault((java.lang.Object) recovery46, (java.lang.Object) properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.lang.String str61 = properties58.getProperty("hi!");
        java.util.Set<java.lang.String> strSet62 = properties58.stringPropertyNames();
        java.lang.Object obj63 = properties58.clone();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.getConsoleLogLevel();
        java.lang.String str81 = atomikosProperties74.getTransactionManagerUniqueName();
        atomikosProperties74.setOutputDir("{10=#}");
        boolean boolean84 = properties1.replace((java.lang.Object) properties54, (java.lang.Object) properties58, (java.lang.Object) "{10=#}");
        boolean boolean85 = properties58.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties58.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties87 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int88 = atomikosProperties87.getMaxActives();
        java.lang.String str89 = atomikosProperties87.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel90 = atomikosProperties87.getConsoleLogLevel();
        boolean boolean91 = atomikosProperties87.isForceShutdownOnVmExit();
        boolean boolean92 = atomikosProperties87.isEnableLogging();
        boolean boolean93 = properties58.containsValue((java.lang.Object) atomikosProperties87);
        atomikosProperties87.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery96 = atomikosProperties87.getRecovery();
        java.lang.String str97 = atomikosProperties87.getOutputDir();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 50 + "'", int88 == 50);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel90 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel90.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(recovery96);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        atomikosProperties0.setForceShutdownOnVmExit(false);
        long long5 = atomikosProperties0.getCheckpointInterval();
        boolean boolean6 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setTransactionManagerUniqueName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str11 = atomikosProperties0.getConsoleFileName();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 500L + "'", long5 == 500L);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "tm.out" + "'", str11, "tm.out");
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Properties properties2 = null;
        java.util.Properties properties3 = new java.util.Properties(properties2);
        java.util.Enumeration<java.lang.Object> objEnumeration4 = properties3.elements();
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        java.util.Enumeration<java.lang.Object> objEnumeration7 = properties6.elements();
        java.lang.String str9 = properties6.getProperty("");
        properties3.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties6);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj15 = properties3.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties12);
        atomikosProperties12.setSerialJtaTransactions(false);
        boolean boolean18 = properties1.equals((java.lang.Object) false);
        java.util.Properties properties19 = new java.util.Properties();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.lang.String str29 = properties26.getProperty("");
        properties23.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        boolean boolean34 = properties33.isEmpty();
        boolean boolean35 = properties23.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean34);
        boolean boolean36 = properties23.isEmpty();
        boolean boolean37 = properties19.replace((java.lang.Object) 100.0f, (java.lang.Object) true, (java.lang.Object) properties23);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        atomikosProperties38.setConsoleFileName("");
        java.lang.String str43 = atomikosProperties38.getLogBaseName();
        long long44 = atomikosProperties38.getCheckpointInterval();
        java.lang.String str45 = atomikosProperties38.getConsoleFileName();
        long long46 = atomikosProperties38.getCheckpointInterval();
        java.lang.Object obj47 = properties23.remove((java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int49 = atomikosProperties48.getMaxActives();
        java.lang.String str50 = atomikosProperties48.getTransactionManagerUniqueName();
        boolean boolean51 = atomikosProperties48.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties52 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties52.setCheckpointInterval((long) (byte) -1);
        atomikosProperties52.setThreadedTwoPhaseCommit(true);
        atomikosProperties52.setSerialJtaTransactions(false);
        atomikosProperties52.setOutputDir("");
        java.lang.String str61 = atomikosProperties52.getConsoleFileName();
        java.lang.String str62 = atomikosProperties52.getLogBaseName();
        atomikosProperties52.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel65 = atomikosProperties52.getConsoleLogLevel();
        atomikosProperties48.setConsoleLogLevel(atomikosLoggingLevel65);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel67 = atomikosProperties48.getConsoleLogLevel();
        int int68 = atomikosProperties48.getMaxActives();
        java.lang.Object obj69 = properties1.replace((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties48);
        java.lang.String str70 = atomikosProperties38.getLogBaseName();
        atomikosProperties38.setAllowSubTransactions(false);
        atomikosProperties38.setLogBaseDir("{[]=WARN}");
        org.junit.Assert.assertNotNull(objEnumeration4);
        org.junit.Assert.assertNotNull(objEnumeration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "tmlog" + "'", str43, "tmlog");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + (-1L) + "'", long44 == (-1L));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-1L) + "'", long46 == (-1L));
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 50 + "'", int49 == 50);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "tm.out" + "'", str61, "tm.out");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "tmlog" + "'", str62, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel65 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel65.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel67 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel67.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 50 + "'", int68 == 50);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "tmlog" + "'", str70, "tmlog");
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.lang.String str17 = properties14.getProperty("");
        properties11.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties14);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj23 = properties11.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties20);
        atomikosProperties20.setSerialJtaTransactions(false);
        atomikosProperties20.setOutputDir("");
        boolean boolean28 = properties1.containsKey((java.lang.Object) "");
        java.lang.String str30 = properties1.getProperty("tmlog");
        java.util.Enumeration<?> wildcardEnumeration31 = properties1.propertyNames();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet32 = properties1.entrySet();
        java.lang.Object obj33 = properties1.clone();
        java.util.Properties properties34 = null;
        java.util.Properties properties35 = new java.util.Properties(properties34);
        java.util.Enumeration<java.lang.Object> objEnumeration36 = properties35.elements();
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        java.lang.String str41 = properties38.getProperty("");
        properties35.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj47 = properties35.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties44);
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setMaxTimeout((long) (short) 1);
        java.lang.String str52 = atomikosProperties44.getService();
        atomikosProperties44.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean55 = properties1.contains((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setConsoleFileName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(wildcardEnumeration31);
        org.junit.Assert.assertNotNull(objEntrySet32);
        org.junit.Assert.assertNotNull(obj33);
        org.junit.Assert.assertEquals(obj33.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj33), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj33), "{}");
        org.junit.Assert.assertNotNull(objEnumeration36);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval((long) 1);
        atomikosProperties10.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties10.getRecovery();
        long long22 = recovery21.getRetryInterval();
        recovery21.setDelay((long) 19);
        long long25 = recovery21.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 86400000L + "'", long25 == 86400000L);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setAllowSubTransactions(false);
        atomikosProperties20.setLogBaseName("{10=#}");
        java.lang.Object obj32 = properties1.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) "{10=#}");
        atomikosProperties16.setConsoleFileCount((int) (byte) -1);
        atomikosProperties16.setConsoleFileCount(1);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties22);
        java.lang.Object obj25 = properties8.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties26 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str27 = atomikosProperties26.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = atomikosProperties26.getRecovery();
        atomikosProperties26.setEnableLogging(false);
        boolean boolean31 = properties8.equals((java.lang.Object) atomikosProperties26);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties8.keys();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties8.entrySet();
        java.lang.String str34 = properties8.toString();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties8);
        int int36 = properties8.size();
        properties8.clear();
        java.util.Properties properties38 = null;
        java.util.Properties properties39 = new java.util.Properties(properties38);
        java.util.Enumeration<java.lang.Object> objEnumeration40 = properties39.elements();
        java.util.Properties properties41 = null;
        java.util.Properties properties42 = new java.util.Properties(properties41);
        java.util.Enumeration<java.lang.Object> objEnumeration43 = properties42.elements();
        java.lang.String str45 = properties42.getProperty("");
        properties39.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties42);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj51 = properties39.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties48);
        java.lang.String str52 = atomikosProperties48.getConsoleFileName();
        atomikosProperties48.setMaxTimeout(300000L);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setThreadedTwoPhaseCommit(true);
        atomikosProperties55.setSerialJtaTransactions(false);
        java.lang.String str62 = atomikosProperties55.getOutputDir();
        atomikosProperties55.setLogBaseDir("tmlog");
        atomikosProperties55.setMaxActives((int) '4');
        atomikosProperties55.setConsoleFileLimit((int) (byte) 10);
        java.lang.Object obj69 = properties8.replace((java.lang.Object) 300000L, (java.lang.Object) atomikosProperties55);
        java.util.Set<java.lang.String> strSet70 = properties8.stringPropertyNames();
        java.io.PrintStream printStream71 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties8.list(printStream71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(recovery28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(objEnumeration40);
        org.junit.Assert.assertNotNull(objEnumeration43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "tm.out" + "'", str52, "tm.out");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(obj69);
        org.junit.Assert.assertNotNull(strSet70);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        long long5 = atomikosProperties0.getMaxTimeout();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        long long7 = atomikosProperties0.getDefaultJtaTimeout();
        atomikosProperties0.setLogBaseDir("tm.out");
        atomikosProperties0.setConsoleFileLimit(10);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 300000L + "'", long5 == 300000L);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        java.util.Enumeration<java.lang.Object> objEnumeration8 = properties7.elements();
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.lang.String str13 = properties10.getProperty("");
        properties7.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties10);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj19 = properties7.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties16);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel20 = atomikosProperties16.getConsoleLogLevel();
        int int21 = atomikosProperties16.getConsoleFileCount();
        java.lang.Object obj22 = properties1.get((java.lang.Object) atomikosProperties16);
        atomikosProperties16.setSerialJtaTransactions(true);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        atomikosProperties16.setOutputDir("tmlog");
        atomikosProperties16.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        boolean boolean30 = atomikosProperties16.isEnableLogging();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(objEnumeration8);
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel20 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel20.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int1 = recovery0.getMaxRetries();
        recovery0.setForgetOrphanedLogEntriesDelay((-1L));
        recovery0.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery0.setForgetOrphanedLogEntriesDelay(100L);
        long long8 = recovery0.getDelay();
        recovery0.setDelay((long) 5);
        recovery0.setMaxRetries((int) (byte) -1);
        recovery0.setMaxRetries((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 5 + "'", int1 == 5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        boolean boolean5 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties6.setCheckpointInterval((long) (byte) -1);
        atomikosProperties6.setThreadedTwoPhaseCommit(true);
        atomikosProperties6.setForceShutdownOnVmExit(true);
        atomikosProperties6.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties6.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties6.getConsoleLogLevel();
        boolean boolean17 = properties1.containsKey((java.lang.Object) atomikosProperties6);
        java.io.OutputStream outputStream18 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.save(outputStream18, "{{}=}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        java.util.Properties properties9 = atomikosProperties0.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setRetryInterval((long) 100);
        int int14 = recovery11.getMaxRetries();
        long long15 = recovery11.getDelay();
        long long16 = recovery11.getDelay();
        recovery11.setForgetOrphanedLogEntriesDelay(0L);
        long long19 = recovery11.getRetryInterval();
        java.util.Properties properties20 = null;
        java.util.Properties properties21 = new java.util.Properties(properties20);
        boolean boolean22 = properties21.isEmpty();
        boolean boolean24 = properties21.contains((java.lang.Object) 1L);
        int int25 = properties21.size();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        java.lang.String str30 = properties27.getProperty("hi!");
        boolean boolean32 = properties27.contains((java.lang.Object) 10.0f);
        boolean boolean33 = properties27.isEmpty();
        java.util.Set<java.lang.String> strSet34 = properties27.stringPropertyNames();
        java.lang.Object obj35 = properties21.get((java.lang.Object) strSet34);
        java.util.Collection<java.lang.Object> objCollection36 = properties21.values();
        java.lang.Object obj37 = properties9.getOrDefault((java.lang.Object) recovery11, (java.lang.Object) objCollection36);
        java.util.Properties properties38 = new java.util.Properties(properties9);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.util.Properties properties42 = null;
        java.util.Properties properties43 = new java.util.Properties(properties42);
        java.util.Enumeration<java.lang.Object> objEnumeration44 = properties43.elements();
        java.lang.String str46 = properties43.getProperty("");
        properties40.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties43);
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        boolean boolean51 = properties50.isEmpty();
        boolean boolean52 = properties40.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean51);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        java.util.Enumeration<java.lang.Object> objEnumeration55 = properties54.elements();
        java.util.Properties properties56 = null;
        java.util.Properties properties57 = new java.util.Properties(properties56);
        java.util.Enumeration<java.lang.Object> objEnumeration58 = properties57.elements();
        java.lang.String str60 = properties57.getProperty("");
        properties54.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties57);
        boolean boolean62 = properties40.contains((java.lang.Object) properties54);
        java.util.Set<java.lang.Object> objSet63 = properties54.keySet();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        boolean boolean80 = atomikosProperties74.isForceShutdownOnVmExit();
        java.util.Properties properties81 = atomikosProperties74.asProperties();
        boolean boolean82 = properties54.containsValue((java.lang.Object) atomikosProperties74);
        boolean boolean83 = properties9.equals((java.lang.Object) properties54);
        java.lang.String str85 = properties54.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=500, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNotNull(properties9);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objCollection36);
        org.junit.Assert.assertNotNull(obj37);
        org.junit.Assert.assertEquals(obj37.toString(), "[]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj37), "[]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj37), "[]");
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objEnumeration44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objEnumeration55);
        org.junit.Assert.assertNotNull(objEnumeration58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objSet63);
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str3 = atomikosProperties0.getLogBaseName();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setCheckpointInterval((long) 'a');
        atomikosProperties0.setTransactionManagerUniqueName("tmlog");
        boolean boolean9 = atomikosProperties0.isThreadedTwoPhaseCommit();
        int int10 = atomikosProperties0.getMaxActives();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "tmlog" + "'", str3, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 50 + "'", int10 == 50);
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties11.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj14 = properties2.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties11);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel15 = atomikosProperties11.getConsoleLogLevel();
        atomikosProperties11.setConsoleFileLimit((int) '4');
        atomikosProperties11.setForceShutdownOnVmExit(true);
        int int20 = atomikosProperties11.getMaxActives();
        boolean boolean21 = properties0.contains((java.lang.Object) int20);
        int int22 = properties0.size();
        java.util.Set<java.lang.Object> objSet23 = properties0.keySet();
        java.util.Properties properties24 = new java.util.Properties(properties0);
        java.lang.Object obj27 = properties0.setProperty("{}", "{}");
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel15 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel15.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 50 + "'", int20 == 50);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objSet23);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        long long7 = recovery0.getForgetOrphanedLogEntriesDelay();
        recovery0.setRetryInterval((long) (short) 10);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str1 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setLogBaseDir("");
        java.lang.String str4 = atomikosProperties0.getService();
        atomikosProperties0.setLogBaseName("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        java.lang.String str6 = atomikosProperties0.getConsoleFileName();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        atomikosProperties0.setDefaultJtaTimeout((long) (byte) 100);
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setMaxActives(1);
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(properties15);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setDefaultJtaTimeout(0L);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel13 = atomikosProperties0.getConsoleLogLevel();
        atomikosProperties0.setAllowSubTransactions(true);
        java.lang.String str16 = atomikosProperties0.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        long long27 = atomikosProperties17.getDefaultJtaTimeout();
        boolean boolean28 = atomikosProperties17.isSerialJtaTransactions();
        java.lang.String str29 = atomikosProperties17.getOutputDir();
        atomikosProperties17.setTransactionManagerUniqueName("{}");
        java.lang.String str32 = atomikosProperties17.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setThreadedTwoPhaseCommit(true);
        atomikosProperties33.setForceShutdownOnVmExit(true);
        atomikosProperties33.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties33.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel43 = atomikosProperties33.getConsoleLogLevel();
        atomikosProperties17.setConsoleLogLevel(atomikosLoggingLevel43);
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel43);
        atomikosProperties0.setAllowSubTransactions(false);
        long long48 = atomikosProperties0.getDefaultJtaTimeout();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel13 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel13.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 10000L + "'", long27 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel43 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel43.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties22 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties22.setCheckpointInterval((long) (byte) -1);
        java.lang.String str25 = atomikosProperties22.getLogBaseDir();
        atomikosProperties22.setSerialJtaTransactions(true);
        long long28 = atomikosProperties22.getMaxTimeout();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties30.elements();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet33 = properties30.entrySet();
        boolean boolean34 = properties20.remove((java.lang.Object) atomikosProperties22, (java.lang.Object) objEntrySet33);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        atomikosProperties36.setConsoleFileName("");
        java.lang.String str41 = atomikosProperties36.getLogBaseName();
        long long42 = atomikosProperties36.getCheckpointInterval();
        java.lang.String str43 = atomikosProperties36.getLogBaseDir();
        atomikosProperties36.setEnableLogging(true);
        atomikosProperties36.setSerialJtaTransactions(true);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties48 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties48.setCheckpointInterval((long) (byte) -1);
        atomikosProperties48.setThreadedTwoPhaseCommit(true);
        atomikosProperties48.setForceShutdownOnVmExit(true);
        atomikosProperties48.setConsoleFileName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel57 = atomikosProperties48.getConsoleLogLevel();
        atomikosProperties36.setConsoleLogLevel(atomikosLoggingLevel57);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties59 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties59.setCheckpointInterval((long) (byte) -1);
        atomikosProperties59.setConsoleFileName("");
        java.lang.String str64 = atomikosProperties59.getLogBaseName();
        long long65 = atomikosProperties59.getCheckpointInterval();
        java.lang.String str66 = atomikosProperties59.getConsoleFileName();
        atomikosProperties59.setForceShutdownOnVmExit(false);
        atomikosProperties59.setConsoleFileName("tmlog");
        boolean boolean71 = properties20.remove((java.lang.Object) atomikosLoggingLevel57, (java.lang.Object) "tmlog");
        java.lang.String str73 = properties20.getProperty("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.lang.String str75 = properties20.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 300000L + "'", long28 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNotNull(objEntrySet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "tmlog" + "'", str41, "tmlog");
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + (-1L) + "'", long42 == (-1L));
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel57 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel57.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tmlog" + "'", str64, "tmlog");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + (-1L) + "'", long65 == (-1L));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.lang.String str14 = atomikosProperties10.getConsoleFileName();
        atomikosProperties10.setDefaultJtaTimeout((long) '#');
        atomikosProperties10.setConsoleFileName("");
        java.lang.String str19 = atomikosProperties10.getTransactionManagerUniqueName();
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setOutputDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "tm.out" + "'", str14, "tm.out");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setConsoleFileName("");
        java.lang.Object obj15 = properties1.get((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        boolean boolean27 = properties1.equals((java.lang.Object) objEnumeration26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties1.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Set<java.lang.String> strSet38 = properties33.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration39 = properties33.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getLogBaseDir();
        atomikosProperties40.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getLogBaseDir();
        java.lang.String str46 = atomikosProperties44.getLogBaseDir();
        boolean boolean47 = atomikosProperties44.isAllowSubTransactions();
        boolean boolean48 = atomikosProperties44.isSerialJtaTransactions();
        atomikosProperties44.setService("");
        int int51 = atomikosProperties44.getConsoleFileCount();
        java.lang.String str52 = atomikosProperties44.getTransactionManagerUniqueName();
        java.lang.Object obj53 = properties33.getOrDefault((java.lang.Object) atomikosProperties40, (java.lang.Object) str52);
        java.lang.String str54 = properties33.toString();
        java.lang.Object obj55 = properties1.remove((java.lang.Object) str54);
        properties1.clear();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{}" + "'", str54, "{}");
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Set<java.lang.String> strSet9 = properties4.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration10 = properties4.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties11 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str12 = atomikosProperties11.getLogBaseDir();
        atomikosProperties11.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties15 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str16 = atomikosProperties15.getLogBaseDir();
        java.lang.String str17 = atomikosProperties15.getLogBaseDir();
        boolean boolean18 = atomikosProperties15.isAllowSubTransactions();
        boolean boolean19 = atomikosProperties15.isSerialJtaTransactions();
        atomikosProperties15.setService("");
        int int22 = atomikosProperties15.getConsoleFileCount();
        java.lang.String str23 = atomikosProperties15.getTransactionManagerUniqueName();
        java.lang.Object obj24 = properties4.getOrDefault((java.lang.Object) atomikosProperties11, (java.lang.Object) str23);
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration27 = properties26.elements();
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        java.lang.Object obj34 = properties31.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet35 = properties31.keySet();
        java.lang.Object obj36 = properties4.putIfAbsent((java.lang.Object) objEnumeration27, (java.lang.Object) properties31);
        java.util.Set<java.lang.Object> objSet37 = properties31.keySet();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(wildcardEnumeration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(objEnumeration27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(objSet35);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(objSet37);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery3 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int4 = recovery3.getMaxRetries();
        boolean boolean5 = properties1.containsKey((java.lang.Object) recovery3);
        properties1.clear();
        boolean boolean8 = properties1.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj9 = null;
        boolean boolean10 = properties1.equals(obj9);
        java.util.Properties properties11 = new java.util.Properties(properties1);
        java.util.Properties properties12 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery13 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery13.setRetryInterval((long) 100);
        int int16 = recovery13.getMaxRetries();
        recovery13.setRetryInterval((long) 50);
        recovery13.setForgetOrphanedLogEntriesDelay((long) (-1));
        recovery13.setMaxRetries(5);
        boolean boolean23 = properties1.containsValue((java.lang.Object) recovery13);
        long long24 = recovery13.getDelay();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 5 + "'", int16 == 5);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setEnableLogging(false);
        long long14 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setLogBaseDir("{[]=WARN}");
        atomikosProperties0.setOutputDir("{=}");
        java.util.Properties properties19 = atomikosProperties0.asProperties();
        java.util.Set<java.lang.Object> objSet20 = properties19.keySet();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertNotNull(properties19);
        org.junit.Assert.assertNotNull(objSet20);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        java.lang.String str7 = atomikosProperties0.getOutputDir();
        atomikosProperties0.setLogBaseDir("tmlog");
        java.lang.String str10 = atomikosProperties0.getOutputDir();
        java.lang.String str11 = atomikosProperties0.getOutputDir();
        boolean boolean12 = atomikosProperties0.isThreadedTwoPhaseCommit();
        atomikosProperties0.setDefaultJtaTimeout((long) ' ');
        java.util.Properties properties15 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        atomikosProperties16.setSerialJtaTransactions(false);
        atomikosProperties16.setOutputDir("");
        java.lang.String str25 = atomikosProperties16.getConsoleFileName();
        atomikosProperties16.setAllowSubTransactions(false);
        int int28 = atomikosProperties16.getMaxActives();
        boolean boolean29 = properties15.containsKey((java.lang.Object) int28);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery30 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int31 = recovery30.getMaxRetries();
        recovery30.setForgetOrphanedLogEntriesDelay((-1L));
        long long34 = recovery30.getForgetOrphanedLogEntriesDelay();
        recovery30.setMaxRetries((int) (short) 0);
        long long37 = recovery30.getRetryInterval();
        long long38 = recovery30.getForgetOrphanedLogEntriesDelay();
        long long39 = recovery30.getRetryInterval();
        java.lang.Object obj40 = properties15.remove((java.lang.Object) recovery30);
        java.util.Properties properties41 = new java.util.Properties(properties15);
        java.lang.Object obj44 = properties41.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=100, com.atomikos.icatch.checkpoint_interval=97, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{}={}}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(properties15);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 50 + "'", int28 == 50);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 5 + "'", int31 == 5);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + (-1L) + "'", long34 == (-1L));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 10000L + "'", long37 == 10000L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 10000L + "'", long39 == 10000L);
        org.junit.Assert.assertNull(obj40);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int3 = recovery0.getMaxRetries();
        int int4 = recovery0.getMaxRetries();
        long long5 = recovery0.getRetryInterval();
        long long6 = recovery0.getForgetOrphanedLogEntriesDelay();
        long long7 = recovery0.getRetryInterval();
        recovery0.setForgetOrphanedLogEntriesDelay((long) '4');
        long long10 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(86400000L);
        recovery0.setForgetOrphanedLogEntriesDelay((long) 32);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 5 + "'", int3 == 5);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 5 + "'", int4 == 5);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10000L + "'", long5 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10000L + "'", long7 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setLogBaseDir("");
        boolean boolean3 = atomikosProperties0.isForceShutdownOnVmExit();
        boolean boolean4 = atomikosProperties0.isThreadedTwoPhaseCommit();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean18 = properties1.contains((java.lang.Object) objEnumeration17);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        boolean boolean21 = properties20.isEmpty();
        java.util.Properties properties22 = new java.util.Properties(properties20);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        java.lang.String str27 = properties24.getProperty("hi!");
        java.util.Set<java.lang.Object> objSet28 = properties24.keySet();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet29 = properties24.entrySet();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        java.util.Properties properties36 = new java.util.Properties(properties34);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet37 = properties34.entrySet();
        java.lang.Object obj38 = properties24.getOrDefault((java.lang.Object) properties31, (java.lang.Object) objEntrySet37);
        boolean boolean39 = properties20.containsKey((java.lang.Object) objEntrySet37);
        java.util.Properties properties40 = null;
        java.util.Properties properties41 = new java.util.Properties(properties40);
        boolean boolean42 = properties41.isEmpty();
        java.util.Properties properties43 = new java.util.Properties(properties41);
        java.lang.Object obj46 = properties43.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        java.util.Set<java.lang.Object> objSet47 = properties43.keySet();
        java.lang.Object obj48 = properties1.put((java.lang.Object) objEntrySet37, (java.lang.Object) objSet47);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties49 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str50 = atomikosProperties49.getLogBaseDir();
        java.lang.String str51 = atomikosProperties49.getLogBaseDir();
        boolean boolean52 = atomikosProperties49.isAllowSubTransactions();
        boolean boolean53 = atomikosProperties49.isSerialJtaTransactions();
        atomikosProperties49.setService("");
        int int56 = atomikosProperties49.getConsoleFileCount();
        boolean boolean57 = atomikosProperties49.isThreadedTwoPhaseCommit();
        boolean boolean58 = properties1.containsKey((java.lang.Object) atomikosProperties49);
        atomikosProperties49.setMaxActives(10);
        java.util.Properties properties61 = atomikosProperties49.asProperties();
        int int62 = atomikosProperties49.getConsoleFileLimit();
        boolean boolean63 = atomikosProperties49.isEnableLogging();
        java.lang.String str64 = atomikosProperties49.getConsoleFileName();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(objSet28);
        org.junit.Assert.assertNotNull(objEntrySet29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(objEntrySet37);
        org.junit.Assert.assertNotNull(obj38);
// flaky:         org.junit.Assert.assertEquals(obj38.toString(), "[]");
// flaky:         org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "[]");
// flaky:         org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(objSet47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(properties61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "tm.out" + "'", str64, "tm.out");
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        java.util.Properties properties14 = null;
        java.util.Properties properties15 = new java.util.Properties(properties14);
        boolean boolean16 = properties15.isEmpty();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties15);
        java.lang.Object obj18 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        atomikosProperties19.setThreadedTwoPhaseCommit(true);
        java.lang.String str24 = atomikosProperties19.getOutputDir();
        java.util.Properties properties25 = atomikosProperties19.asProperties();
        java.lang.Object obj26 = properties1.remove((java.lang.Object) properties25);
        java.util.Properties properties27 = new java.util.Properties(properties25);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties25.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        boolean boolean41 = properties40.isEmpty();
        boolean boolean42 = properties30.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean41);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        java.util.Enumeration<java.lang.Object> objEnumeration45 = properties44.elements();
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.lang.String str50 = properties47.getProperty("");
        properties44.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties47);
        boolean boolean52 = properties30.contains((java.lang.Object) properties44);
        int int53 = properties30.size();
        java.util.Properties properties54 = null;
        java.util.Properties properties55 = new java.util.Properties(properties54);
        java.util.Enumeration<java.lang.Object> objEnumeration56 = properties55.elements();
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        java.util.Enumeration<java.lang.Object> objEnumeration59 = properties58.elements();
        java.lang.String str61 = properties58.getProperty("");
        properties55.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties58);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties64 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties64.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj67 = properties55.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties64);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel68 = atomikosProperties64.getConsoleLogLevel();
        atomikosProperties64.setConsoleFileLimit((int) '4');
        atomikosProperties64.setMaxActives((int) ' ');
        long long73 = atomikosProperties64.getDefaultJtaTimeout();
        atomikosProperties64.setAllowSubTransactions(false);
        int int76 = atomikosProperties64.getConsoleFileLimit();
        boolean boolean77 = properties30.contains((java.lang.Object) atomikosProperties64);
        boolean boolean78 = properties25.contains((java.lang.Object) boolean77);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet79 = properties25.entrySet();
        java.lang.String str81 = properties25.getProperty("");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(obj18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objEnumeration45);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(objEnumeration56);
        org.junit.Assert.assertNotNull(objEnumeration59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel68 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel68.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 10000L + "'", long73 == 10000L);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objEntrySet79);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        java.util.Enumeration<java.lang.Object> objEnumeration3 = properties2.elements();
        java.util.Properties properties4 = null;
        java.util.Properties properties5 = new java.util.Properties(properties4);
        java.util.Enumeration<java.lang.Object> objEnumeration6 = properties5.elements();
        java.lang.String str8 = properties5.getProperty("");
        properties2.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties5);
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        boolean boolean13 = properties12.isEmpty();
        boolean boolean14 = properties2.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean13);
        boolean boolean15 = properties2.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration16 = properties2.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        long long23 = atomikosProperties17.getCheckpointInterval();
        java.lang.String str24 = atomikosProperties17.getLogBaseDir();
        atomikosProperties17.setEnableLogging(true);
        java.lang.Object obj27 = properties0.putIfAbsent((java.lang.Object) objEnumeration16, (java.lang.Object) atomikosProperties17);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties0.keys();
        java.lang.String str30 = properties0.getProperty("tm.out");
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        boolean boolean33 = properties32.isEmpty();
        java.util.Properties properties34 = new java.util.Properties(properties32);
        java.lang.Object obj35 = properties0.get((java.lang.Object) properties34);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.util.Properties properties39 = null;
        java.util.Properties properties40 = new java.util.Properties(properties39);
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties40.elements();
        java.lang.String str43 = properties40.getProperty("");
        properties37.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties40);
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        boolean boolean48 = properties47.isEmpty();
        boolean boolean49 = properties37.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean48);
        boolean boolean50 = properties37.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties37.keys();
        properties0.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        java.lang.Object obj55 = properties37.setProperty("{}", "{tm.out=hi!}");
        java.lang.String str57 = properties37.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=0, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertNotNull(objEnumeration3);
        org.junit.Assert.assertNotNull(objEnumeration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objEnumeration16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj6 = properties1.setProperty("tm.out", "hi!");
        boolean boolean7 = properties1.isEmpty();
        java.lang.String str8 = properties1.toString();
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setThreadedTwoPhaseCommit(true);
        atomikosProperties10.setSerialJtaTransactions(false);
        java.lang.String str17 = atomikosProperties10.getLogBaseName();
        atomikosProperties10.setAllowSubTransactions(false);
        atomikosProperties10.setLogBaseName("{10=#}");
        boolean boolean22 = atomikosProperties10.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel23 = atomikosProperties10.getConsoleLogLevel();
        boolean boolean24 = properties1.containsKey((java.lang.Object) atomikosProperties10);
        java.io.InputStream inputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.loadFromXML(inputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "{tm.out=hi!}" + "'", str8, "{tm.out=hi!}");
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "tmlog" + "'", str17, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel23 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel23.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        java.lang.String str11 = atomikosProperties4.getLogBaseDir();
        atomikosProperties4.setEnableLogging(true);
        long long14 = atomikosProperties4.getDefaultJtaTimeout();
        boolean boolean15 = atomikosProperties4.isSerialJtaTransactions();
        java.lang.String str16 = atomikosProperties4.getOutputDir();
        java.lang.String str17 = atomikosProperties4.getOutputDir();
        java.util.Properties properties18 = atomikosProperties4.asProperties();
        boolean boolean19 = properties1.equals((java.lang.Object) atomikosProperties4);
        atomikosProperties4.setMaxActives((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(properties18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties16.elements();
        boolean boolean19 = properties16.containsKey((java.lang.Object) 10.0f);
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties16);
        java.lang.String str21 = properties1.toString();
        java.lang.String str23 = properties1.getProperty("hi!");
        boolean boolean24 = properties1.isEmpty();
        java.util.Properties properties25 = null;
        java.util.Properties properties26 = new java.util.Properties(properties25);
        boolean boolean27 = properties26.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties26.elements();
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties26.keys();
        int int30 = properties26.size();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties26);
        java.util.Enumeration<?> wildcardEnumeration32 = properties26.propertyNames();
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        boolean boolean35 = properties34.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery36 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int37 = recovery36.getMaxRetries();
        boolean boolean38 = properties34.containsKey((java.lang.Object) recovery36);
        recovery36.setRetryInterval((long) (short) -1);
        long long41 = recovery36.getDelay();
        boolean boolean42 = properties26.containsValue((java.lang.Object) recovery36);
        int int43 = properties26.size();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = atomikosProperties44.getRecovery();
        atomikosProperties44.setEnableLogging(false);
        long long49 = atomikosProperties44.getMaxTimeout();
        atomikosProperties44.setTransactionManagerUniqueName("{10=#}");
        atomikosProperties44.setLogBaseDir("hi!");
        boolean boolean54 = atomikosProperties44.isForceShutdownOnVmExit();
        atomikosProperties44.setDefaultJtaTimeout((long) 0);
        java.lang.String str57 = atomikosProperties44.getTransactionManagerUniqueName();
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setForceShutdownOnVmExit(false);
        boolean boolean62 = properties26.equals((java.lang.Object) false);
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "{}" + "'", str21, "{}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardEnumeration32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 5 + "'", int37 == 5);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(recovery46);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 300000L + "'", long49 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "{10=#}" + "'", str57, "{10=#}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        atomikosProperties0.setForceShutdownOnVmExit(false);
        int int9 = atomikosProperties0.getConsoleFileLimit();
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        java.lang.String str11 = atomikosProperties0.getTransactionManagerUniqueName();
        atomikosProperties0.setThreadedTwoPhaseCommit(false);
        boolean boolean14 = atomikosProperties0.isForceShutdownOnVmExit();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        boolean boolean3 = properties1.isEmpty();
        java.util.Set<java.lang.String> strSet4 = properties1.stringPropertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties5 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties5.setCheckpointInterval((long) (byte) -1);
        atomikosProperties5.setThreadedTwoPhaseCommit(true);
        java.lang.String str10 = atomikosProperties5.getOutputDir();
        java.util.Properties properties11 = atomikosProperties5.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties12.setCheckpointInterval((long) (byte) -1);
        atomikosProperties12.setThreadedTwoPhaseCommit(true);
        atomikosProperties12.setSerialJtaTransactions(false);
        atomikosProperties12.setOutputDir("");
        java.lang.String str21 = atomikosProperties12.getConsoleFileName();
        java.lang.String str22 = atomikosProperties12.getLogBaseName();
        atomikosProperties12.setDefaultJtaTimeout(0L);
        java.lang.Object obj25 = properties1.putIfAbsent((java.lang.Object) atomikosProperties5, (java.lang.Object) atomikosProperties12);
        long long26 = atomikosProperties5.getMaxTimeout();
        boolean boolean27 = atomikosProperties5.isSerialJtaTransactions();
        java.lang.String str28 = atomikosProperties5.getService();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel29 = atomikosProperties5.getConsoleLogLevel();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(properties11);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tm.out" + "'", str21, "tm.out");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 300000L + "'", long26 == 300000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel29 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel29.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet4 = properties1.entrySet();
        java.lang.String str6 = properties1.getProperty("tmlog");
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        boolean boolean9 = properties8.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery10 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int11 = recovery10.getMaxRetries();
        boolean boolean12 = properties8.containsKey((java.lang.Object) recovery10);
        properties8.clear();
        boolean boolean15 = properties8.containsKey((java.lang.Object) "hi!");
        java.lang.Object obj16 = null;
        boolean boolean17 = properties8.equals(obj16);
        java.util.Properties properties18 = new java.util.Properties(properties8);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery19 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery19.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int22 = recovery19.getMaxRetries();
        int int23 = recovery19.getMaxRetries();
        long long24 = recovery19.getRetryInterval();
        long long25 = recovery19.getForgetOrphanedLogEntriesDelay();
        int int26 = recovery19.getMaxRetries();
        boolean boolean27 = properties1.remove((java.lang.Object) properties18, (java.lang.Object) int26);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        boolean boolean30 = properties29.isEmpty();
        java.util.Properties properties31 = new java.util.Properties(properties29);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        atomikosProperties32.setForceShutdownOnVmExit(false);
        java.util.Properties properties41 = atomikosProperties32.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties41.elements();
        java.util.Collection<java.lang.Object> objCollection43 = properties41.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setConsoleFileName("");
        java.lang.String str49 = atomikosProperties44.getLogBaseName();
        long long50 = atomikosProperties44.getCheckpointInterval();
        java.lang.String str51 = atomikosProperties44.getLogBaseDir();
        atomikosProperties44.setLogBaseName("hi!");
        boolean boolean54 = properties29.remove((java.lang.Object) properties41, (java.lang.Object) "hi!");
        java.util.Properties properties55 = new java.util.Properties(properties29);
        boolean boolean56 = properties18.equals((java.lang.Object) properties29);
        properties29.clear();
        java.lang.Object obj60 = properties29.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{tm.out=hi!}");
        java.util.Set<java.lang.Object> objSet61 = properties29.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 5 + "'", int11 == 5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 5 + "'", int23 == 5);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 5 + "'", int26 == 5);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNotNull(properties41);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertNotNull(objCollection43);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "tmlog" + "'", str49, "tmlog");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + (-1L) + "'", long50 == (-1L));
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(objSet61);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.lang.String str4 = properties1.getProperty("");
        java.util.Properties properties5 = null;
        java.util.Properties properties6 = new java.util.Properties(properties5);
        boolean boolean7 = properties6.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet8 = properties6.entrySet();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Object obj11 = properties6.replace((java.lang.Object) "hi!", obj10);
        boolean boolean13 = properties6.equals((java.lang.Object) 1.0f);
        boolean boolean14 = properties1.containsKey((java.lang.Object) boolean13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.keys();
        java.lang.String str18 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objEntrySet8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "tmlog" + "'", str18, "tmlog");
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        properties1.clear();
        int int15 = properties1.size();
        java.util.Set<java.lang.String> strSet16 = properties1.stringPropertyNames();
        java.util.Enumeration<java.lang.Object> objEnumeration17 = properties1.keys();
        java.lang.String str19 = properties1.getProperty("{[]=WARN}");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int21 = atomikosProperties20.getMaxActives();
        atomikosProperties20.setService("");
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties26 = new java.util.Properties();
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        boolean boolean39 = properties38.isEmpty();
        boolean boolean40 = properties28.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean39);
        boolean boolean41 = properties28.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration42 = properties28.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties43 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties43.setCheckpointInterval((long) (byte) -1);
        atomikosProperties43.setConsoleFileName("");
        java.lang.String str48 = atomikosProperties43.getLogBaseName();
        long long49 = atomikosProperties43.getCheckpointInterval();
        java.lang.String str50 = atomikosProperties43.getLogBaseDir();
        atomikosProperties43.setEnableLogging(true);
        java.lang.Object obj53 = properties26.putIfAbsent((java.lang.Object) objEnumeration42, (java.lang.Object) atomikosProperties43);
        boolean boolean54 = atomikosProperties43.isSerialJtaTransactions();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel55 = atomikosProperties43.getConsoleLogLevel();
        atomikosProperties43.setMaxTimeout((long) (short) 1);
        boolean boolean58 = properties1.remove((java.lang.Object) atomikosProperties20, (java.lang.Object) atomikosProperties43);
        java.util.Properties properties59 = null;
        java.util.Properties properties60 = new java.util.Properties(properties59);
        java.util.Enumeration<java.lang.Object> objEnumeration61 = properties60.elements();
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.util.Enumeration<java.lang.Object> objEnumeration64 = properties63.elements();
        java.lang.String str66 = properties63.getProperty("");
        properties60.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties63);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties69 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties69.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj72 = properties60.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties69);
        atomikosProperties69.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel75 = atomikosProperties69.getConsoleLogLevel();
        java.lang.String str76 = atomikosProperties69.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery77 = atomikosProperties69.getRecovery();
        int int78 = atomikosProperties69.getConsoleFileCount();
        int int79 = atomikosProperties69.getMaxActives();
        java.lang.Object obj80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj81 = properties1.put((java.lang.Object) int79, obj80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(objEnumeration17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 50 + "'", int21 == 50);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objEnumeration42);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "tmlog" + "'", str48, "tmlog");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + (-1L) + "'", long49 == (-1L));
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel55 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel55.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(objEnumeration61);
        org.junit.Assert.assertNotNull(objEnumeration64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel75 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel75.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(recovery77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 50 + "'", int79 == 50);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setEnableLogging(true);
        long long10 = atomikosProperties0.getDefaultJtaTimeout();
        boolean boolean11 = atomikosProperties0.isSerialJtaTransactions();
        java.lang.String str12 = atomikosProperties0.getOutputDir();
        java.lang.String str13 = atomikosProperties0.getOutputDir();
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        boolean boolean15 = properties14.isEmpty();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Enumeration<?> wildcardEnumeration25 = properties17.propertyNames();
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties27.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.lang.String str33 = properties30.getProperty("");
        properties27.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties30);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties36 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties36.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj39 = properties27.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties36);
        atomikosProperties36.setSerialJtaTransactions(false);
        atomikosProperties36.setOutputDir("");
        boolean boolean44 = properties17.containsKey((java.lang.Object) "");
        java.util.Properties properties46 = null;
        java.util.Properties properties47 = new java.util.Properties(properties46);
        java.util.Enumeration<java.lang.Object> objEnumeration48 = properties47.elements();
        java.util.Properties properties49 = null;
        java.util.Properties properties50 = new java.util.Properties(properties49);
        java.util.Enumeration<java.lang.Object> objEnumeration51 = properties50.elements();
        java.lang.String str53 = properties50.getProperty("");
        properties47.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties50);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties56 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties56.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj59 = properties47.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties56);
        atomikosProperties56.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel62 = atomikosProperties56.getConsoleLogLevel();
        java.lang.String str63 = atomikosProperties56.getTransactionManagerUniqueName();
        java.lang.Object obj64 = properties17.replace((java.lang.Object) "hi!", (java.lang.Object) atomikosProperties56);
        java.util.Collection<java.lang.Object> objCollection65 = properties17.values();
        java.lang.Object obj66 = properties17.clone();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties72 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties72.setCheckpointInterval((long) (byte) -1);
        atomikosProperties72.setConsoleFileName("");
        java.lang.String str77 = atomikosProperties72.getLogBaseName();
        long long78 = atomikosProperties72.getCheckpointInterval();
        atomikosProperties72.setForceShutdownOnVmExit(false);
        java.util.Properties properties81 = atomikosProperties72.asProperties();
        boolean boolean82 = atomikosProperties72.isAllowSubTransactions();
        int int83 = atomikosProperties72.getConsoleFileLimit();
        boolean boolean84 = properties68.containsKey((java.lang.Object) int83);
        java.util.Enumeration<?> wildcardEnumeration85 = properties68.propertyNames();
        boolean boolean86 = properties17.containsValue((java.lang.Object) properties68);
        boolean boolean87 = properties14.contains((java.lang.Object) properties17);
        java.lang.Object obj90 = properties17.setProperty("hi!", "{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=-1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        java.util.Collection<java.lang.Object> objCollection91 = properties17.values();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10000L + "'", long10 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(properties14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(wildcardEnumeration25);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration48);
        org.junit.Assert.assertNotNull(objEnumeration51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel62 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel62.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(objCollection65);
        org.junit.Assert.assertNotNull(obj66);
        org.junit.Assert.assertEquals(obj66.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj66), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj66), "{}");
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "tmlog" + "'", str77, "tmlog");
        org.junit.Assert.assertTrue("'" + long78 + "' != '" + (-1L) + "'", long78 == (-1L));
        org.junit.Assert.assertNotNull(properties81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(objCollection91);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        int int5 = atomikosProperties0.getConsoleFileLimit();
        java.lang.String str6 = atomikosProperties0.getTransactionManagerUniqueName();
        java.lang.String str7 = atomikosProperties0.getLogBaseName();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "tmlog" + "'", str7, "tmlog");
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        boolean boolean16 = atomikosProperties10.isForceShutdownOnVmExit();
        java.util.Properties properties17 = atomikosProperties10.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties18 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties18.setCheckpointInterval((long) (byte) -1);
        atomikosProperties18.setThreadedTwoPhaseCommit(true);
        atomikosProperties18.setSerialJtaTransactions(false);
        java.lang.Object obj25 = properties17.remove((java.lang.Object) false);
        java.util.Enumeration<?> wildcardEnumeration26 = properties17.propertyNames();
        java.util.Set<java.lang.Object> objSet27 = properties17.keySet();
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties17.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery32 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int33 = recovery32.getMaxRetries();
        boolean boolean34 = properties30.containsKey((java.lang.Object) recovery32);
        recovery32.setRetryInterval((long) (short) -1);
        recovery32.setRetryInterval((long) 0);
        recovery32.setMaxRetries((int) (byte) 10);
        long long41 = recovery32.getDelay();
        recovery32.setRetryInterval((long) '4');
        boolean boolean44 = properties17.containsValue((java.lang.Object) recovery32);
        java.util.Properties properties45 = null;
        java.util.Properties properties46 = new java.util.Properties(properties45);
        java.util.Enumeration<java.lang.Object> objEnumeration47 = properties46.elements();
        java.lang.String str49 = properties46.getProperty("");
        java.util.Properties properties50 = null;
        java.util.Properties properties51 = new java.util.Properties(properties50);
        boolean boolean52 = properties51.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet53 = properties51.entrySet();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Object obj56 = properties51.replace((java.lang.Object) "hi!", obj55);
        boolean boolean58 = properties51.equals((java.lang.Object) 1.0f);
        boolean boolean59 = properties46.containsKey((java.lang.Object) boolean58);
        java.util.Properties properties60 = null;
        java.util.Properties properties61 = new java.util.Properties(properties60);
        boolean boolean62 = properties61.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration63 = properties61.elements();
        java.lang.Object obj64 = properties46.remove((java.lang.Object) objEnumeration63);
        java.util.Properties properties65 = null;
        java.util.Properties properties66 = new java.util.Properties(properties65);
        boolean boolean67 = properties66.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery68 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int69 = recovery68.getMaxRetries();
        boolean boolean70 = properties66.containsKey((java.lang.Object) recovery68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties71 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties71.setLogBaseDir("");
        java.lang.Object obj74 = properties46.put((java.lang.Object) properties66, (java.lang.Object) atomikosProperties71);
        boolean boolean75 = properties17.contains((java.lang.Object) properties66);
        java.lang.Object obj78 = properties66.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{tm.out=hi!}");
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(wildcardEnumeration26);
        org.junit.Assert.assertNotNull(objSet27);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 5 + "'", int33 == 5);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 10000L + "'", long41 == 10000L);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objEnumeration47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objEntrySet53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objEnumeration63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 5 + "'", int69 == 5);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(obj78);
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj6 = properties1.setProperty("tm.out", "hi!");
        boolean boolean7 = properties1.isEmpty();
        java.util.Properties properties8 = null;
        java.util.Properties properties9 = new java.util.Properties(properties8);
        java.util.Enumeration<java.lang.Object> objEnumeration10 = properties9.elements();
        java.util.Properties properties11 = null;
        java.util.Properties properties12 = new java.util.Properties(properties11);
        java.util.Enumeration<java.lang.Object> objEnumeration13 = properties12.elements();
        java.lang.String str15 = properties12.getProperty("");
        properties9.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties12);
        boolean boolean18 = properties9.contains((java.lang.Object) 0);
        boolean boolean19 = properties1.containsValue((java.lang.Object) boolean18);
        java.util.Set<java.lang.Object> objSet20 = properties1.keySet();
        java.util.Properties properties21 = null;
        java.util.Properties properties22 = new java.util.Properties(properties21);
        boolean boolean23 = properties22.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery24 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int25 = recovery24.getMaxRetries();
        boolean boolean26 = properties22.containsKey((java.lang.Object) recovery24);
        properties22.clear();
        boolean boolean29 = properties22.containsKey((java.lang.Object) "hi!");
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        boolean boolean32 = properties31.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties33 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties33.setCheckpointInterval((long) (byte) -1);
        atomikosProperties33.setConsoleFileName("");
        java.lang.String str38 = atomikosProperties33.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties39 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties39.setCheckpointInterval((long) (byte) -1);
        atomikosProperties39.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties44 = null;
        java.util.Properties properties45 = new java.util.Properties(properties44);
        java.util.Enumeration<java.lang.Object> objEnumeration46 = properties45.elements();
        java.util.Properties properties47 = null;
        java.util.Properties properties48 = new java.util.Properties(properties47);
        java.util.Enumeration<java.lang.Object> objEnumeration49 = properties48.elements();
        java.lang.String str51 = properties48.getProperty("");
        properties45.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties48);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties54 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties54.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj57 = properties45.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties54);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel58 = atomikosProperties54.getConsoleLogLevel();
        atomikosProperties39.setConsoleLogLevel(atomikosLoggingLevel58);
        atomikosProperties33.setConsoleLogLevel(atomikosLoggingLevel58);
        boolean boolean62 = properties22.replace((java.lang.Object) properties31, (java.lang.Object) atomikosProperties33, (java.lang.Object) 10.0d);
        java.util.Collection<java.lang.Object> objCollection63 = properties31.values();
        java.lang.Object obj64 = properties1.get((java.lang.Object) objCollection63);
        boolean boolean65 = properties1.isEmpty();
        java.util.Collection<java.lang.Object> objCollection66 = properties1.values();
        java.util.Set<java.lang.Object> objSet67 = properties1.keySet();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objEnumeration10);
        org.junit.Assert.assertNotNull(objEnumeration13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objSet20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "tmlog" + "'", str38, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration46);
        org.junit.Assert.assertNotNull(objEnumeration49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel58 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel58.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objCollection63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(objCollection66);
        org.junit.Assert.assertNotNull(objSet67);
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties14 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties14.setCheckpointInterval((long) (byte) -1);
        atomikosProperties14.setThreadedTwoPhaseCommit(true);
        java.lang.String str19 = atomikosProperties14.getOutputDir();
        java.util.Properties properties20 = atomikosProperties14.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery21 = atomikosProperties14.getRecovery();
        int int22 = recovery21.getMaxRetries();
        boolean boolean23 = properties13.containsKey((java.lang.Object) recovery21);
        int int24 = recovery21.getMaxRetries();
        recovery21.setRetryInterval(97L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(properties20);
        org.junit.Assert.assertNotNull(recovery21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 5 + "'", int22 == 5);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 5 + "'", int24 == 5);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties1.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str17 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseDir("");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties20 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties20.setCheckpointInterval((long) (byte) -1);
        atomikosProperties20.setThreadedTwoPhaseCommit(true);
        atomikosProperties20.setSerialJtaTransactions(false);
        java.lang.String str27 = atomikosProperties20.getLogBaseName();
        atomikosProperties20.setAllowSubTransactions(false);
        atomikosProperties20.setLogBaseName("{10=#}");
        java.lang.Object obj32 = properties1.putIfAbsent((java.lang.Object) atomikosProperties16, (java.lang.Object) "{10=#}");
        boolean boolean34 = properties1.containsKey((java.lang.Object) (byte) -1);
        java.lang.Object obj35 = properties1.clone();
        java.lang.Object obj36 = properties1.clone();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery37 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery37.setRetryInterval((long) 100);
        int int40 = recovery37.getMaxRetries();
        recovery37.setRetryInterval((long) 50);
        long long43 = recovery37.getForgetOrphanedLogEntriesDelay();
        recovery37.setForgetOrphanedLogEntriesDelay(100L);
        recovery37.setRetryInterval(10L);
        boolean boolean48 = properties1.containsValue((java.lang.Object) recovery37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration49 = properties1.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.springframework.boot.jta.atomikos.AtomikosProperties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "tmlog" + "'", str27, "tmlog");
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(obj35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 5 + "'", int40 == 5);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 86400000L + "'", long43 == 86400000L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        java.lang.String str9 = atomikosProperties0.getConsoleFileName();
        java.lang.String str10 = atomikosProperties0.getLogBaseName();
        atomikosProperties0.setConsoleFileCount((int) (byte) -1);
        atomikosProperties0.setLogBaseDir("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        atomikosProperties0.setMaxActives((int) (byte) 1);
        java.util.Properties properties17 = atomikosProperties0.asProperties();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet18 = properties17.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.String str22 = atomikosProperties19.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery23 = atomikosProperties19.getRecovery();
        long long24 = atomikosProperties19.getCheckpointInterval();
        boolean boolean25 = atomikosProperties19.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery26 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery26.setRetryInterval((long) 100);
        int int29 = recovery26.getMaxRetries();
        long long30 = recovery26.getDelay();
        recovery26.setRetryInterval((long) 52);
        recovery26.setForgetOrphanedLogEntriesDelay((long) '4');
        java.lang.Object obj35 = properties17.replace((java.lang.Object) boolean25, (java.lang.Object) recovery26);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tm.out" + "'", str9, "tm.out");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "tmlog" + "'", str10, "tmlog");
        org.junit.Assert.assertNotNull(properties17);
        org.junit.Assert.assertNotNull(objEntrySet18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(recovery23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + (-1L) + "'", long24 == (-1L));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 10000L + "'", long30 == 10000L);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        boolean boolean12 = properties11.isEmpty();
        boolean boolean13 = properties1.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean12);
        boolean boolean14 = properties1.isEmpty();
        java.util.Properties properties15 = new java.util.Properties();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.lang.String str23 = properties20.getProperty("");
        properties17.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties20);
        java.util.Properties properties26 = null;
        java.util.Properties properties27 = new java.util.Properties(properties26);
        boolean boolean28 = properties27.isEmpty();
        boolean boolean29 = properties17.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean28);
        boolean boolean30 = properties17.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties17.elements();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties32 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties32.setCheckpointInterval((long) (byte) -1);
        atomikosProperties32.setConsoleFileName("");
        java.lang.String str37 = atomikosProperties32.getLogBaseName();
        long long38 = atomikosProperties32.getCheckpointInterval();
        java.lang.String str39 = atomikosProperties32.getLogBaseDir();
        atomikosProperties32.setEnableLogging(true);
        java.lang.Object obj42 = properties15.putIfAbsent((java.lang.Object) objEnumeration31, (java.lang.Object) atomikosProperties32);
        java.util.Properties properties43 = null;
        java.util.Properties properties44 = new java.util.Properties(properties43);
        boolean boolean45 = properties44.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery46 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int47 = recovery46.getMaxRetries();
        boolean boolean48 = properties44.containsKey((java.lang.Object) recovery46);
        recovery46.setRetryInterval((long) (short) -1);
        recovery46.setDelay(10L);
        java.util.Properties properties53 = null;
        java.util.Properties properties54 = new java.util.Properties(properties53);
        boolean boolean55 = properties54.isEmpty();
        java.lang.Object obj56 = properties15.getOrDefault((java.lang.Object) recovery46, (java.lang.Object) properties54);
        java.util.Properties properties57 = null;
        java.util.Properties properties58 = new java.util.Properties(properties57);
        boolean boolean59 = properties58.isEmpty();
        java.lang.String str61 = properties58.getProperty("hi!");
        java.util.Set<java.lang.String> strSet62 = properties58.stringPropertyNames();
        java.lang.Object obj63 = properties58.clone();
        java.util.Properties properties64 = null;
        java.util.Properties properties65 = new java.util.Properties(properties64);
        java.util.Enumeration<java.lang.Object> objEnumeration66 = properties65.elements();
        java.util.Properties properties67 = null;
        java.util.Properties properties68 = new java.util.Properties(properties67);
        java.util.Enumeration<java.lang.Object> objEnumeration69 = properties68.elements();
        java.lang.String str71 = properties68.getProperty("");
        properties65.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties68);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties74 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties74.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj77 = properties65.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties74);
        atomikosProperties74.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel80 = atomikosProperties74.getConsoleLogLevel();
        java.lang.String str81 = atomikosProperties74.getTransactionManagerUniqueName();
        atomikosProperties74.setOutputDir("{10=#}");
        boolean boolean84 = properties1.replace((java.lang.Object) properties54, (java.lang.Object) properties58, (java.lang.Object) "{10=#}");
        java.util.Collection<java.lang.Object> objCollection85 = properties58.values();
        java.util.Enumeration<java.lang.Object> objEnumeration86 = properties58.keys();
        java.lang.Object obj87 = properties58.clone();
        java.lang.String str89 = properties58.getProperty("{=}");
        java.lang.Object obj92 = properties58.setProperty("{{}=}", "{10=#}");
        java.io.OutputStream outputStream93 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties58.storeToXML(outputStream93, "{{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}=hi!, {=}={tm.out=hi!}}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "tmlog" + "'", str37, "tmlog");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + (-1L) + "'", long38 == (-1L));
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 5 + "'", int47 == 5);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(obj63);
        org.junit.Assert.assertEquals(obj63.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj63), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj63), "{}");
        org.junit.Assert.assertNotNull(objEnumeration66);
        org.junit.Assert.assertNotNull(objEnumeration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(obj77);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel80 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel80.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(objCollection85);
        org.junit.Assert.assertNotNull(objEnumeration86);
        org.junit.Assert.assertNotNull(obj87);
        org.junit.Assert.assertEquals(obj87.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj87), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj87), "{}");
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(obj92);
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        java.util.Properties properties0 = new java.util.Properties();
        java.util.Properties properties1 = null;
        java.util.Properties properties2 = new java.util.Properties(properties1);
        boolean boolean3 = properties2.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery4 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int5 = recovery4.getMaxRetries();
        boolean boolean6 = properties2.containsKey((java.lang.Object) recovery4);
        java.util.Properties properties7 = null;
        java.util.Properties properties8 = new java.util.Properties(properties7);
        java.util.Enumeration<java.lang.Object> objEnumeration9 = properties8.elements();
        java.util.Properties properties10 = null;
        java.util.Properties properties11 = new java.util.Properties(properties10);
        java.util.Enumeration<java.lang.Object> objEnumeration12 = properties11.elements();
        java.lang.String str14 = properties11.getProperty("");
        properties8.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj20 = properties8.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties17);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel21 = atomikosProperties17.getConsoleLogLevel();
        int int22 = atomikosProperties17.getConsoleFileCount();
        java.lang.Object obj23 = properties2.get((java.lang.Object) atomikosProperties17);
        long long24 = atomikosProperties17.getMaxTimeout();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties17.getConsoleLogLevel();
        boolean boolean26 = atomikosProperties17.isAllowSubTransactions();
        boolean boolean27 = atomikosProperties17.isThreadedTwoPhaseCommit();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery28 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int29 = recovery28.getMaxRetries();
        recovery28.setForgetOrphanedLogEntriesDelay((-1L));
        long long32 = recovery28.getForgetOrphanedLogEntriesDelay();
        recovery28.setMaxRetries((int) (short) 0);
        long long35 = recovery28.getDelay();
        java.lang.Object obj36 = properties0.replace((java.lang.Object) boolean27, (java.lang.Object) recovery28);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties37 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties37.setCheckpointInterval((long) (byte) -1);
        atomikosProperties37.setThreadedTwoPhaseCommit(true);
        atomikosProperties37.setSerialJtaTransactions(false);
        java.lang.String str44 = atomikosProperties37.getOutputDir();
        atomikosProperties37.setLogBaseDir("tmlog");
        java.lang.String str47 = atomikosProperties37.getOutputDir();
        java.lang.String str48 = atomikosProperties37.getOutputDir();
        boolean boolean49 = atomikosProperties37.isThreadedTwoPhaseCommit();
        java.lang.String str50 = atomikosProperties37.getLogBaseName();
        boolean boolean51 = atomikosProperties37.isSerialJtaTransactions();
        atomikosProperties37.setLogBaseName("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, 52={}, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery54 = atomikosProperties37.getRecovery();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setLogBaseDir("");
        java.lang.String str58 = atomikosProperties55.getOutputDir();
        atomikosProperties55.setMaxActives(1);
        java.lang.Object obj61 = properties0.replace((java.lang.Object) recovery54, (java.lang.Object) 1);
        java.io.PrintStream printStream62 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties0.list(printStream62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 5 + "'", int5 == 5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objEnumeration9);
        org.junit.Assert.assertNotNull(objEnumeration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel21 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel21.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 300000L + "'", long24 == 300000L);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 5 + "'", int29 == 5);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-1L) + "'", long32 == (-1L));
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 10000L + "'", long35 == 10000L);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(recovery54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(obj61);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.util.Collection<java.lang.Object> objCollection4 = properties1.values();
        java.lang.Object obj5 = properties1.clone();
        java.util.Properties properties6 = null;
        java.util.Properties properties7 = new java.util.Properties(properties6);
        boolean boolean8 = properties7.isEmpty();
        boolean boolean10 = properties7.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet11 = properties7.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties12 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str13 = atomikosProperties12.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery14 = atomikosProperties12.getRecovery();
        atomikosProperties12.setEnableLogging(false);
        atomikosProperties12.setSerialJtaTransactions(true);
        java.util.Properties properties19 = null;
        java.util.Properties properties20 = new java.util.Properties(properties19);
        java.util.Enumeration<java.lang.Object> objEnumeration21 = properties20.elements();
        java.util.Properties properties22 = null;
        java.util.Properties properties23 = new java.util.Properties(properties22);
        java.util.Enumeration<java.lang.Object> objEnumeration24 = properties23.elements();
        java.lang.String str26 = properties23.getProperty("");
        properties20.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties23);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        boolean boolean32 = properties20.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean31);
        java.util.Properties properties33 = null;
        java.util.Properties properties34 = new java.util.Properties(properties33);
        java.util.Enumeration<java.lang.Object> objEnumeration35 = properties34.elements();
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        java.util.Enumeration<java.lang.Object> objEnumeration38 = properties37.elements();
        java.lang.String str40 = properties37.getProperty("");
        properties34.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties37);
        boolean boolean42 = properties20.contains((java.lang.Object) properties34);
        java.util.Set<java.lang.Object> objSet43 = properties34.keySet();
        java.lang.Object obj44 = properties7.getOrDefault((java.lang.Object) true, (java.lang.Object) properties34);
        properties34.clear();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties46 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties46.setCheckpointInterval((long) (byte) -1);
        atomikosProperties46.setThreadedTwoPhaseCommit(true);
        atomikosProperties46.setSerialJtaTransactions(false);
        java.lang.String str53 = atomikosProperties46.getLogBaseName();
        atomikosProperties46.setAllowSubTransactions(false);
        java.lang.String str56 = atomikosProperties46.getService();
        atomikosProperties46.setSerialJtaTransactions(true);
        atomikosProperties46.setAllowSubTransactions(true);
        boolean boolean61 = properties1.remove((java.lang.Object) properties34, (java.lang.Object) atomikosProperties46);
        java.util.Properties properties62 = null;
        java.util.Properties properties63 = new java.util.Properties(properties62);
        java.lang.Object obj66 = properties63.setProperty("{10=#}", "tm.out");
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet67 = properties63.entrySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties68 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int69 = atomikosProperties68.getMaxActives();
        java.lang.String str70 = atomikosProperties68.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel71 = atomikosProperties68.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel72 = atomikosProperties68.getConsoleLogLevel();
        boolean boolean73 = atomikosProperties68.isForceShutdownOnVmExit();
        java.lang.Object obj74 = properties1.put((java.lang.Object) properties63, (java.lang.Object) atomikosProperties68);
        java.lang.String str75 = properties1.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration<?> wildcardEnumeration76 = properties1.propertyNames();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.Properties cannot be cast to java.lang.String");
        } catch (java.lang.ClassCastException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objCollection4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertEquals(obj5.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj5), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj5), "{}");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(recovery14);
        org.junit.Assert.assertNotNull(objEnumeration21);
        org.junit.Assert.assertNotNull(objEnumeration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(objEnumeration35);
        org.junit.Assert.assertNotNull(objEnumeration38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertNotNull(obj44);
        org.junit.Assert.assertEquals(obj44.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj44), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj44), "{}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tmlog" + "'", str53, "tmlog");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(objEntrySet67);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 50 + "'", int69 == 50);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel71 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel71.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel72 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel72.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(obj74);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties4 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties4.setCheckpointInterval((long) (byte) -1);
        atomikosProperties4.setConsoleFileName("");
        java.lang.String str9 = atomikosProperties4.getLogBaseName();
        long long10 = atomikosProperties4.getCheckpointInterval();
        atomikosProperties4.setForceShutdownOnVmExit(false);
        java.util.Properties properties13 = atomikosProperties4.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.util.Collection<java.lang.Object> objCollection15 = properties13.values();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        java.lang.String str23 = atomikosProperties16.getLogBaseDir();
        atomikosProperties16.setLogBaseName("hi!");
        boolean boolean26 = properties1.remove((java.lang.Object) properties13, (java.lang.Object) "hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties27 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties27.setCheckpointInterval((long) (byte) -1);
        atomikosProperties27.setConsoleFileName("");
        java.lang.String str32 = atomikosProperties27.getLogBaseName();
        java.lang.String str33 = atomikosProperties27.getConsoleFileName();
        atomikosProperties27.setForceShutdownOnVmExit(false);
        java.util.Properties properties36 = null;
        java.util.Properties properties37 = new java.util.Properties(properties36);
        boolean boolean38 = properties37.isEmpty();
        java.lang.String str40 = properties37.getProperty("hi!");
        boolean boolean42 = properties37.contains((java.lang.Object) 10.0f);
        java.util.Set<java.lang.Object> objSet43 = properties37.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int45 = atomikosProperties44.getMaxActives();
        boolean boolean46 = properties37.equals((java.lang.Object) atomikosProperties44);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        java.lang.String str49 = atomikosProperties44.getLogBaseDir();
        java.lang.String str50 = atomikosProperties44.getLogBaseName();
        java.util.Properties properties51 = null;
        java.util.Properties properties52 = new java.util.Properties(properties51);
        boolean boolean53 = properties52.isEmpty();
        java.util.Properties properties54 = new java.util.Properties(properties52);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties55 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties55.setCheckpointInterval((long) (byte) -1);
        atomikosProperties55.setThreadedTwoPhaseCommit(false);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties60 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties60.setCheckpointInterval((long) (byte) -1);
        atomikosProperties60.setConsoleFileName("");
        java.lang.String str65 = atomikosProperties60.getLogBaseName();
        long long66 = atomikosProperties60.getCheckpointInterval();
        java.lang.String str67 = atomikosProperties60.getLogBaseDir();
        atomikosProperties60.setOutputDir("");
        atomikosProperties60.setTransactionManagerUniqueName("hi!");
        int int72 = atomikosProperties60.getConsoleFileLimit();
        java.lang.String str73 = atomikosProperties60.getTransactionManagerUniqueName();
        boolean boolean74 = properties54.remove((java.lang.Object) atomikosProperties55, (java.lang.Object) str73);
        java.util.Enumeration<?> wildcardEnumeration75 = properties54.propertyNames();
        java.util.Collection<java.lang.Object> objCollection76 = properties54.values();
        boolean boolean77 = properties1.replace((java.lang.Object) atomikosProperties27, (java.lang.Object) atomikosProperties44, (java.lang.Object) objCollection76);
        boolean boolean78 = atomikosProperties44.isAllowSubTransactions();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery79 = atomikosProperties44.getRecovery();
        java.util.Properties properties80 = atomikosProperties44.asProperties();
        java.io.OutputStream outputStream81 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties80.storeToXML(outputStream81, "{[]=WARN}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "tmlog" + "'", str9, "tmlog");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNotNull(objCollection15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "tmlog" + "'", str32, "tmlog");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 50 + "'", int45 == 50);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "tmlog" + "'", str50, "tmlog");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "tmlog" + "'", str65, "tmlog");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + (-1L) + "'", long66 == (-1L));
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(wildcardEnumeration75);
        org.junit.Assert.assertNotNull(objCollection76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(recovery79);
        org.junit.Assert.assertNotNull(properties80);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        java.lang.String str5 = atomikosProperties0.getLogBaseName();
        long long6 = atomikosProperties0.getCheckpointInterval();
        java.lang.String str7 = atomikosProperties0.getLogBaseDir();
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setTransactionManagerUniqueName("hi!");
        int int12 = atomikosProperties0.getConsoleFileLimit();
        java.util.Properties properties13 = atomikosProperties0.asProperties();
        java.lang.Object obj16 = properties13.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=true, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{10=#}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        java.util.Properties properties17 = new java.util.Properties(properties13);
        java.lang.String str20 = properties17.getProperty("", "{10=#}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "tmlog" + "'", str5, "tmlog");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-1L) + "'", long6 == (-1L));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(properties13);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "{10=#}" + "'", str20, "{10=#}");
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        java.util.Properties properties6 = atomikosProperties0.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery7 = atomikosProperties0.getRecovery();
        boolean boolean8 = atomikosProperties0.isAllowSubTransactions();
        atomikosProperties0.setLogBaseDir("tmlog");
        atomikosProperties0.setConsoleFileName("{=}");
        atomikosProperties0.setCheckpointInterval(18L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(properties6);
        org.junit.Assert.assertNotNull(recovery7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Properties properties3 = new java.util.Properties(properties1);
        java.lang.Object obj6 = properties3.putIfAbsent((java.lang.Object) 10, (java.lang.Object) '#');
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties7 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str8 = atomikosProperties7.getLogBaseDir();
        atomikosProperties7.setLogBaseDir("");
        java.lang.String str11 = atomikosProperties7.getService();
        boolean boolean12 = atomikosProperties7.isEnableLogging();
        boolean boolean13 = atomikosProperties7.isThreadedTwoPhaseCommit();
        boolean boolean14 = atomikosProperties7.isForceShutdownOnVmExit();
        java.lang.String str15 = atomikosProperties7.getConsoleFileName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setThreadedTwoPhaseCommit(true);
        java.lang.String str21 = atomikosProperties16.getOutputDir();
        java.lang.String str22 = atomikosProperties16.getTransactionManagerUniqueName();
        int int23 = atomikosProperties16.getConsoleFileCount();
        java.lang.String str24 = atomikosProperties16.getLogBaseDir();
        java.lang.String str25 = atomikosProperties16.getConsoleFileName();
        java.lang.Object obj26 = properties3.putIfAbsent((java.lang.Object) str15, (java.lang.Object) atomikosProperties16);
        java.lang.String str28 = properties3.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=false, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.tm_unique_name=tm.out, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "tm.out" + "'", str15, "tm.out");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "tm.out" + "'", str25, "tm.out");
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        java.util.Enumeration<?> wildcardEnumeration9 = properties1.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        atomikosProperties10.setConsoleFileName("");
        java.lang.Object obj15 = properties1.get((java.lang.Object) "");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties16 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties16.setCheckpointInterval((long) (byte) -1);
        atomikosProperties16.setConsoleFileName("");
        java.lang.String str21 = atomikosProperties16.getLogBaseName();
        long long22 = atomikosProperties16.getCheckpointInterval();
        atomikosProperties16.setForceShutdownOnVmExit(false);
        java.util.Properties properties25 = atomikosProperties16.asProperties();
        java.util.Enumeration<java.lang.Object> objEnumeration26 = properties25.elements();
        boolean boolean27 = properties1.equals((java.lang.Object) objEnumeration26);
        java.util.Enumeration<java.lang.Object> objEnumeration28 = properties1.elements();
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        java.util.Enumeration<java.lang.Object> objEnumeration31 = properties30.elements();
        java.util.Properties properties32 = null;
        java.util.Properties properties33 = new java.util.Properties(properties32);
        java.util.Enumeration<java.lang.Object> objEnumeration34 = properties33.elements();
        java.lang.String str36 = properties33.getProperty("");
        properties30.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties33);
        java.util.Set<java.lang.String> strSet38 = properties33.stringPropertyNames();
        java.util.Enumeration<?> wildcardEnumeration39 = properties33.propertyNames();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties40 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str41 = atomikosProperties40.getLogBaseDir();
        atomikosProperties40.setLogBaseName("hi!");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str45 = atomikosProperties44.getLogBaseDir();
        java.lang.String str46 = atomikosProperties44.getLogBaseDir();
        boolean boolean47 = atomikosProperties44.isAllowSubTransactions();
        boolean boolean48 = atomikosProperties44.isSerialJtaTransactions();
        atomikosProperties44.setService("");
        int int51 = atomikosProperties44.getConsoleFileCount();
        java.lang.String str52 = atomikosProperties44.getTransactionManagerUniqueName();
        java.lang.Object obj53 = properties33.getOrDefault((java.lang.Object) atomikosProperties40, (java.lang.Object) str52);
        java.lang.String str54 = properties33.toString();
        java.lang.Object obj55 = properties1.remove((java.lang.Object) str54);
        java.lang.Object obj56 = properties1.clone();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardEnumeration9);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "tmlog" + "'", str21, "tmlog");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertNotNull(properties25);
        org.junit.Assert.assertNotNull(objEnumeration26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(objEnumeration28);
        org.junit.Assert.assertNotNull(objEnumeration31);
        org.junit.Assert.assertNotNull(objEnumeration34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(wildcardEnumeration39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "{}" + "'", str54, "{}");
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertEquals(obj56.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj56), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj56), "{}");
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int1 = atomikosProperties0.getMaxActives();
        java.lang.String str2 = atomikosProperties0.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel3 = atomikosProperties0.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel4 = atomikosProperties0.getConsoleLogLevel();
        boolean boolean5 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setDefaultJtaTimeout((long) (short) 100);
        atomikosProperties0.setLogBaseDir("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 50 + "'", int1 == 50);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel3 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel3.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel4 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel4.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        boolean boolean8 = properties1.equals((java.lang.Object) 1.0f);
        java.lang.String str10 = properties1.getProperty("{}");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery11.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        int int14 = recovery11.getMaxRetries();
        int int15 = recovery11.getMaxRetries();
        java.lang.Object obj16 = properties1.get((java.lang.Object) recovery11);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties17 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties17.setCheckpointInterval((long) (byte) -1);
        atomikosProperties17.setConsoleFileName("");
        java.lang.String str22 = atomikosProperties17.getLogBaseName();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties23 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties23.setCheckpointInterval((long) (byte) -1);
        atomikosProperties23.setThreadedTwoPhaseCommit(true);
        java.util.Properties properties28 = null;
        java.util.Properties properties29 = new java.util.Properties(properties28);
        java.util.Enumeration<java.lang.Object> objEnumeration30 = properties29.elements();
        java.util.Properties properties31 = null;
        java.util.Properties properties32 = new java.util.Properties(properties31);
        java.util.Enumeration<java.lang.Object> objEnumeration33 = properties32.elements();
        java.lang.String str35 = properties32.getProperty("");
        properties29.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties32);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties38.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj41 = properties29.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties38);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties38.getConsoleLogLevel();
        atomikosProperties23.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties17.setConsoleLogLevel(atomikosLoggingLevel42);
        atomikosProperties17.setConsoleFileCount(5);
        atomikosProperties17.setAllowSubTransactions(true);
        boolean boolean49 = properties1.containsValue((java.lang.Object) true);
        java.lang.String str51 = properties1.getProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=52, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 5 + "'", int14 == 5);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 5 + "'", int15 == 5);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "tmlog" + "'", str22, "tmlog");
        org.junit.Assert.assertNotNull(objEnumeration30);
        org.junit.Assert.assertNotNull(objEnumeration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        atomikosProperties0.setConsoleFileName("tm.out");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        java.util.Enumeration<java.lang.Object> objEnumeration11 = properties10.elements();
        java.util.Properties properties12 = null;
        java.util.Properties properties13 = new java.util.Properties(properties12);
        java.util.Enumeration<java.lang.Object> objEnumeration14 = properties13.elements();
        java.lang.String str16 = properties13.getProperty("");
        properties10.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties13);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties19 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties19.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj22 = properties10.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties19);
        atomikosProperties19.setAllowSubTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel25 = atomikosProperties19.getConsoleLogLevel();
        atomikosProperties0.setConsoleLogLevel(atomikosLoggingLevel25);
        boolean boolean27 = atomikosProperties0.isEnableLogging();
        int int28 = atomikosProperties0.getConsoleFileCount();
        atomikosProperties0.setAllowSubTransactions(false);
        atomikosProperties0.setConsoleFileName("{10=#}");
        boolean boolean33 = atomikosProperties0.isAllowSubTransactions();
        org.junit.Assert.assertNotNull(objEnumeration11);
        org.junit.Assert.assertNotNull(objEnumeration14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel25 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel25.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        java.lang.String str5 = atomikosProperties0.getOutputDir();
        boolean boolean6 = atomikosProperties0.isForceShutdownOnVmExit();
        atomikosProperties0.setMaxActives(100);
        atomikosProperties0.setAllowSubTransactions(false);
        boolean boolean11 = atomikosProperties0.isForceShutdownOnVmExit();
        java.lang.String str12 = atomikosProperties0.getTransactionManagerUniqueName();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Enumeration<java.lang.Object> objEnumeration37 = properties1.keys();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties38 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int39 = atomikosProperties38.getMaxActives();
        java.lang.String str40 = atomikosProperties38.getTransactionManagerUniqueName();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel41 = atomikosProperties38.getConsoleLogLevel();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel42 = atomikosProperties38.getConsoleLogLevel();
        boolean boolean43 = atomikosProperties38.isForceShutdownOnVmExit();
        java.lang.String str44 = atomikosProperties38.getService();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties45 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        int int46 = atomikosProperties45.getMaxActives();
        java.lang.String str47 = atomikosProperties45.getTransactionManagerUniqueName();
        boolean boolean48 = atomikosProperties45.isForceShutdownOnVmExit();
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel49 = atomikosProperties45.getConsoleLogLevel();
        atomikosProperties45.setAllowSubTransactions(true);
        int int52 = atomikosProperties45.getConsoleFileCount();
        java.lang.Object obj53 = properties1.getOrDefault((java.lang.Object) atomikosProperties38, (java.lang.Object) atomikosProperties45);
        int int54 = properties1.size();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 50 + "'", int39 == 50);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel41 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel41.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel42 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel42.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 50 + "'", int46 == 50);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel49 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel49.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        java.util.Enumeration<java.lang.Object> objEnumeration2 = properties1.elements();
        java.util.Properties properties3 = null;
        java.util.Properties properties4 = new java.util.Properties(properties3);
        java.util.Enumeration<java.lang.Object> objEnumeration5 = properties4.elements();
        java.lang.String str7 = properties4.getProperty("");
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties4);
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties10 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties10.setCheckpointInterval((long) (byte) -1);
        java.lang.Object obj13 = properties1.putIfAbsent((java.lang.Object) 1.0d, (java.lang.Object) atomikosProperties10);
        atomikosProperties10.setSerialJtaTransactions(false);
        org.springframework.boot.jta.atomikos.AtomikosLoggingLevel atomikosLoggingLevel16 = atomikosProperties10.getConsoleLogLevel();
        atomikosProperties10.setCheckpointInterval(86400000L);
        atomikosProperties10.setLogBaseDir("{10=#}");
        atomikosProperties10.setLogBaseDir("{com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}");
        int int23 = atomikosProperties10.getConsoleFileLimit();
        org.junit.Assert.assertNotNull(objEnumeration2);
        org.junit.Assert.assertNotNull(objEnumeration5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertTrue("'" + atomikosLoggingLevel16 + "' != '" + org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN + "'", atomikosLoggingLevel16.equals(org.springframework.boot.jta.atomikos.AtomikosLoggingLevel.WARN));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery0 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        recovery0.setForgetOrphanedLogEntriesDelay((long) (byte) 0);
        long long3 = recovery0.getDelay();
        recovery0.setMaxRetries((int) (short) 0);
        long long6 = recovery0.getDelay();
        recovery0.setForgetOrphanedLogEntriesDelay(1L);
        long long9 = recovery0.getDelay();
        long long10 = recovery0.getForgetOrphanedLogEntriesDelay();
        int int11 = recovery0.getMaxRetries();
        long long12 = recovery0.getForgetOrphanedLogEntriesDelay();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 10000L + "'", long3 == 10000L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10000L + "'", long6 == 10000L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties6 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        java.lang.String str7 = atomikosProperties6.getLogBaseDir();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery8 = atomikosProperties6.getRecovery();
        atomikosProperties6.setEnableLogging(false);
        atomikosProperties6.setSerialJtaTransactions(true);
        java.util.Properties properties13 = null;
        java.util.Properties properties14 = new java.util.Properties(properties13);
        java.util.Enumeration<java.lang.Object> objEnumeration15 = properties14.elements();
        java.util.Properties properties16 = null;
        java.util.Properties properties17 = new java.util.Properties(properties16);
        java.util.Enumeration<java.lang.Object> objEnumeration18 = properties17.elements();
        java.lang.String str20 = properties17.getProperty("");
        properties14.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties17);
        java.util.Properties properties23 = null;
        java.util.Properties properties24 = new java.util.Properties(properties23);
        boolean boolean25 = properties24.isEmpty();
        boolean boolean26 = properties14.remove((java.lang.Object) 100.0d, (java.lang.Object) boolean25);
        java.util.Properties properties27 = null;
        java.util.Properties properties28 = new java.util.Properties(properties27);
        java.util.Enumeration<java.lang.Object> objEnumeration29 = properties28.elements();
        java.util.Properties properties30 = null;
        java.util.Properties properties31 = new java.util.Properties(properties30);
        java.util.Enumeration<java.lang.Object> objEnumeration32 = properties31.elements();
        java.lang.String str34 = properties31.getProperty("");
        properties28.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties31);
        boolean boolean36 = properties14.contains((java.lang.Object) properties28);
        java.util.Set<java.lang.Object> objSet37 = properties28.keySet();
        java.lang.Object obj38 = properties1.getOrDefault((java.lang.Object) true, (java.lang.Object) properties28);
        java.util.Properties properties39 = new java.util.Properties(properties28);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(recovery8);
        org.junit.Assert.assertNotNull(objEnumeration15);
        org.junit.Assert.assertNotNull(objEnumeration18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(objEnumeration29);
        org.junit.Assert.assertNotNull(objEnumeration32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objSet37);
        org.junit.Assert.assertNotNull(obj38);
        org.junit.Assert.assertEquals(obj38.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj38), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj38), "{}");
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet3 = properties1.entrySet();
        java.lang.Object obj5 = new java.lang.Object();
        java.lang.Object obj6 = properties1.replace((java.lang.Object) "hi!", obj5);
        java.lang.Object obj7 = properties1.clone();
        java.util.Properties properties8 = new java.util.Properties(properties1);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet9 = properties1.entrySet();
        java.io.InputStream inputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            properties1.load(inputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(objEntrySet3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertEquals(obj7.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj7), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj7), "{}");
        org.junit.Assert.assertNotNull(objEntrySet9);
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setThreadedTwoPhaseCommit(true);
        atomikosProperties0.setSerialJtaTransactions(false);
        atomikosProperties0.setOutputDir("");
        atomikosProperties0.setMaxActives(52);
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery11 = atomikosProperties0.getRecovery();
        atomikosProperties0.setEnableLogging(false);
        java.util.Properties properties14 = atomikosProperties0.asProperties();
        org.junit.Assert.assertNotNull(recovery11);
        org.junit.Assert.assertNotNull(properties14);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        java.util.Properties properties0 = null;
        java.util.Properties properties1 = new java.util.Properties(properties0);
        boolean boolean2 = properties1.isEmpty();
        boolean boolean4 = properties1.contains((java.lang.Object) 1L);
        java.util.Set<java.lang.Object> objSet5 = properties1.keySet();
        java.lang.Object obj8 = properties1.setProperty("", "");
        java.util.Properties properties9 = null;
        java.util.Properties properties10 = new java.util.Properties(properties9);
        boolean boolean11 = properties10.isEmpty();
        java.lang.String str13 = properties10.getProperty("hi!");
        java.util.Properties properties15 = null;
        java.util.Properties properties16 = new java.util.Properties(properties15);
        boolean boolean17 = properties16.isEmpty();
        org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery recovery18 = new org.springframework.boot.jta.atomikos.AtomikosProperties.Recovery();
        int int19 = recovery18.getMaxRetries();
        boolean boolean20 = properties16.containsKey((java.lang.Object) recovery18);
        recovery18.setRetryInterval((long) (short) -1);
        recovery18.setRetryInterval((long) 0);
        recovery18.setMaxRetries((int) (byte) 10);
        java.lang.Class<?> wildcardClass27 = recovery18.getClass();
        java.lang.Object obj28 = properties10.replace((java.lang.Object) (byte) -1, (java.lang.Object) recovery18);
        java.util.Properties properties29 = null;
        java.util.Properties properties30 = new java.util.Properties(properties29);
        boolean boolean31 = properties30.isEmpty();
        java.lang.String str33 = properties30.getProperty("hi!");
        java.util.Set<java.lang.String> strSet34 = properties30.stringPropertyNames();
        java.lang.Object obj35 = new java.lang.Object();
        boolean boolean36 = properties1.replace((java.lang.Object) (byte) -1, (java.lang.Object) properties30, obj35);
        java.util.Properties properties37 = null;
        java.util.Properties properties38 = new java.util.Properties(properties37);
        java.util.Enumeration<java.lang.Object> objEnumeration39 = properties38.elements();
        boolean boolean40 = properties38.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration41 = properties38.keys();
        properties1.putAll((java.util.Map<java.lang.Object, java.lang.Object>) properties38);
        java.util.Set<java.lang.Object> objSet43 = properties38.keySet();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties44 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties44.setCheckpointInterval((long) (byte) -1);
        atomikosProperties44.setThreadedTwoPhaseCommit(true);
        atomikosProperties44.setSerialJtaTransactions(false);
        atomikosProperties44.setOutputDir("");
        java.lang.String str53 = atomikosProperties44.getConsoleFileName();
        java.lang.String str54 = atomikosProperties44.getLogBaseName();
        atomikosProperties44.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties57 = atomikosProperties44.asProperties();
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties58 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties58.setCheckpointInterval((long) (byte) -1);
        atomikosProperties58.setThreadedTwoPhaseCommit(true);
        atomikosProperties58.setSerialJtaTransactions(false);
        atomikosProperties58.setOutputDir("");
        java.lang.String str67 = atomikosProperties58.getConsoleFileName();
        java.lang.String str68 = atomikosProperties58.getLogBaseName();
        atomikosProperties58.setConsoleFileCount((int) (byte) -1);
        java.util.Properties properties71 = atomikosProperties58.asProperties();
        java.util.Properties properties72 = null;
        java.util.Properties properties73 = new java.util.Properties(properties72);
        java.util.Enumeration<java.lang.Object> objEnumeration74 = properties73.elements();
        boolean boolean75 = properties73.isEmpty();
        java.util.Enumeration<java.lang.Object> objEnumeration76 = properties73.keys();
        boolean boolean77 = properties71.containsValue((java.lang.Object) properties73);
        java.util.Properties properties78 = null;
        java.util.Properties properties79 = new java.util.Properties(properties78);
        boolean boolean80 = properties79.isEmpty();
        java.lang.String str82 = properties79.getProperty("hi!");
        java.util.Set<java.lang.String> strSet83 = properties79.stringPropertyNames();
        java.lang.Object obj84 = properties79.clone();
        boolean boolean85 = properties73.containsKey(obj84);
        java.lang.Object obj86 = properties57.remove((java.lang.Object) properties73);
        java.util.Set<java.util.Map.Entry<java.lang.Object, java.lang.Object>> objEntrySet87 = properties57.entrySet();
        java.lang.Object obj88 = properties38.remove((java.lang.Object) properties57);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objSet5);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 5 + "'", int19 == 5);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(objEnumeration39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(objEnumeration41);
        org.junit.Assert.assertNotNull(objSet43);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "tm.out" + "'", str53, "tm.out");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "tmlog" + "'", str54, "tmlog");
        org.junit.Assert.assertNotNull(properties57);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "tm.out" + "'", str67, "tm.out");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "tmlog" + "'", str68, "tmlog");
        org.junit.Assert.assertNotNull(properties71);
        org.junit.Assert.assertNotNull(objEnumeration74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(objEnumeration76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertNotNull(obj84);
        org.junit.Assert.assertEquals(obj84.toString(), "{}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj84), "{}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj84), "{}");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(objEntrySet87);
        org.junit.Assert.assertNull(obj88);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        org.springframework.boot.jta.atomikos.AtomikosProperties atomikosProperties0 = new org.springframework.boot.jta.atomikos.AtomikosProperties();
        atomikosProperties0.setCheckpointInterval((long) (byte) -1);
        atomikosProperties0.setConsoleFileName("");
        atomikosProperties0.setCheckpointInterval((long) 100);
        boolean boolean7 = atomikosProperties0.isAllowSubTransactions();
        java.util.Properties properties8 = atomikosProperties0.asProperties();
        java.lang.String str10 = properties8.getProperty("{}");
        java.util.Properties properties11 = new java.util.Properties(properties8);
        java.lang.Object obj14 = properties11.setProperty("{com.atomikos.icatch.console_file_name=tm.out, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.output_dir=tm.out, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}", "{{}={com.atomikos.icatch.console_file_name=, com.atomikos.icatch.allow_subtransactions=true, com.atomikos.icatch.recovery_delay=10000, com.atomikos.icatch.console_file_count=1, com.atomikos.icatch.oltp_max_retries=5, com.atomikos.icatch.threaded_2pc=false, com.atomikos.icatch.serial_jta_transactions=true, com.atomikos.icatch.console_log_level=WARN, com.atomikos.icatch.max_actives=50, com.atomikos.icatch.checkpoint_interval=-1, com.atomikos.icatch.enable_logging=true, com.atomikos.icatch.log_base_name=tmlog, com.atomikos.icatch.console_file_limit=-1, com.atomikos.icatch.max_timeout=300000, com.atomikos.icatch.forget_orphaned_log_entries_delay=86400000, com.atomikos.icatch.oltp_retry_interval=10000, com.atomikos.icatch.force_shutdown_on_vm_exit=false, com.atomikos.icatch.default_jta_timeout=10000}}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(properties8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(obj14);
    }
}
